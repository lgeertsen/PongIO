var THREE = {
    REVISION: "79"
};
"function" == typeof define && define.amd ? define("three", THREE) : "undefined" != typeof exports && "undefined" != typeof module && (module.exports = THREE),
void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
void 0 === Math.sign && (Math.sign = function(e) {
    return e < 0 ? -1 : e > 0 ? 1 : +e
}
),
void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
    get: function() {
        return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
    }
}),
void 0 === Object.assign && !function() {
    Object.assign = function(e) {
        "use strict";
        if (void 0 === e || null === e)
            throw new TypeError("Cannot convert undefined or null to object");
        for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var i = arguments[n];
            if (void 0 !== i && null !== i)
                for (var r in i)
                    Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r])
        }
        return t
    }
}(),
Object.assign(THREE, {
    MOUSE: {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2
    },
    CullFaceNone: 0,
    CullFaceBack: 1,
    CullFaceFront: 2,
    CullFaceFrontBack: 3,
    FrontFaceDirectionCW: 0,
    FrontFaceDirectionCCW: 1,
    BasicShadowMap: 0,
    PCFShadowMap: 1,
    PCFSoftShadowMap: 2,
    FrontSide: 0,
    BackSide: 1,
    DoubleSide: 2,
    FlatShading: 1,
    SmoothShading: 2,
    NoColors: 0,
    FaceColors: 1,
    VertexColors: 2,
    NoBlending: 0,
    NormalBlending: 1,
    AdditiveBlending: 2,
    SubtractiveBlending: 3,
    MultiplyBlending: 4,
    CustomBlending: 5,
    AddEquation: 100,
    SubtractEquation: 101,
    ReverseSubtractEquation: 102,
    MinEquation: 103,
    MaxEquation: 104,
    ZeroFactor: 200,
    OneFactor: 201,
    SrcColorFactor: 202,
    OneMinusSrcColorFactor: 203,
    SrcAlphaFactor: 204,
    OneMinusSrcAlphaFactor: 205,
    DstAlphaFactor: 206,
    OneMinusDstAlphaFactor: 207,
    DstColorFactor: 208,
    OneMinusDstColorFactor: 209,
    SrcAlphaSaturateFactor: 210,
    NeverDepth: 0,
    AlwaysDepth: 1,
    LessDepth: 2,
    LessEqualDepth: 3,
    EqualDepth: 4,
    GreaterEqualDepth: 5,
    GreaterDepth: 6,
    NotEqualDepth: 7,
    MultiplyOperation: 0,
    MixOperation: 1,
    AddOperation: 2,
    NoToneMapping: 0,
    LinearToneMapping: 1,
    ReinhardToneMapping: 2,
    Uncharted2ToneMapping: 3,
    CineonToneMapping: 4,
    UVMapping: 300,
    CubeReflectionMapping: 301,
    CubeRefractionMapping: 302,
    EquirectangularReflectionMapping: 303,
    EquirectangularRefractionMapping: 304,
    SphericalReflectionMapping: 305,
    CubeUVReflectionMapping: 306,
    CubeUVRefractionMapping: 307,
    RepeatWrapping: 1e3,
    ClampToEdgeWrapping: 1001,
    MirroredRepeatWrapping: 1002,
    NearestFilter: 1003,
    NearestMipMapNearestFilter: 1004,
    NearestMipMapLinearFilter: 1005,
    LinearFilter: 1006,
    LinearMipMapNearestFilter: 1007,
    LinearMipMapLinearFilter: 1008,
    UnsignedByteType: 1009,
    ByteType: 1010,
    ShortType: 1011,
    UnsignedShortType: 1012,
    IntType: 1013,
    UnsignedIntType: 1014,
    FloatType: 1015,
    HalfFloatType: 1025,
    UnsignedShort4444Type: 1016,
    UnsignedShort5551Type: 1017,
    UnsignedShort565Type: 1018,
    AlphaFormat: 1019,
    RGBFormat: 1020,
    RGBAFormat: 1021,
    LuminanceFormat: 1022,
    LuminanceAlphaFormat: 1023,
    RGBEFormat: THREE.RGBAFormat,
    DepthFormat: 1026,
    RGB_S3TC_DXT1_Format: 2001,
    RGBA_S3TC_DXT1_Format: 2002,
    RGBA_S3TC_DXT3_Format: 2003,
    RGBA_S3TC_DXT5_Format: 2004,
    RGB_PVRTC_4BPPV1_Format: 2100,
    RGB_PVRTC_2BPPV1_Format: 2101,
    RGBA_PVRTC_4BPPV1_Format: 2102,
    RGBA_PVRTC_2BPPV1_Format: 2103,
    RGB_ETC1_Format: 2151,
    LoopOnce: 2200,
    LoopRepeat: 2201,
    LoopPingPong: 2202,
    InterpolateDiscrete: 2300,
    InterpolateLinear: 2301,
    InterpolateSmooth: 2302,
    ZeroCurvatureEnding: 2400,
    ZeroSlopeEnding: 2401,
    WrapAroundEnding: 2402,
    TrianglesDrawMode: 0,
    TriangleStripDrawMode: 1,
    TriangleFanDrawMode: 2,
    LinearEncoding: 3e3,
    sRGBEncoding: 3001,
    GammaEncoding: 3007,
    RGBEEncoding: 3002,
    LogLuvEncoding: 3003,
    RGBM7Encoding: 3004,
    RGBM16Encoding: 3005,
    RGBDEncoding: 3006,
    BasicDepthPacking: 3200,
    RGBADepthPacking: 3201
}),
THREE.Color = function(e, t, n) {
    return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
}
,
THREE.Color.prototype = {
    constructor: THREE.Color,
    r: 1,
    g: 1,
    b: 1,
    set: function(e) {
        return e instanceof THREE.Color ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e),
        this
    },
    setScalar: function(e) {
        this.r = e,
        this.g = e,
        this.b = e
    },
    setHex: function(e) {
        return e = Math.floor(e),
        this.r = (e >> 16 & 255) / 255,
        this.g = (e >> 8 & 255) / 255,
        this.b = (255 & e) / 255,
        this
    },
    setRGB: function(e, t, n) {
        return this.r = e,
        this.g = t,
        this.b = n,
        this
    },
    setHSL: function() {
        function e(e, t, n) {
            return n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
        }
        return function(t, n, i) {
            if (t = THREE.Math.euclideanModulo(t, 1),
            n = THREE.Math.clamp(n, 0, 1),
            i = THREE.Math.clamp(i, 0, 1),
            0 === n)
                this.r = this.g = this.b = i;
            else {
                var r = i <= .5 ? i * (1 + n) : i + n - i * n
                  , o = 2 * i - r;
                this.r = e(o, r, t + 1 / 3),
                this.g = e(o, r, t),
                this.b = e(o, r, t - 1 / 3)
            }
            return this
        }
    }(),
    setStyle: function(e) {
        function t(t) {
            void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
        }
        var n;
        if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
            var i, r = n[1], o = n[2];
            switch (r) {
            case "rgb":
            case "rgba":
                if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                    return this.r = Math.min(255, parseInt(i[1], 10)) / 255,
                    this.g = Math.min(255, parseInt(i[2], 10)) / 255,
                    this.b = Math.min(255, parseInt(i[3], 10)) / 255,
                    t(i[5]),
                    this;
                if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                    return this.r = Math.min(100, parseInt(i[1], 10)) / 100,
                    this.g = Math.min(100, parseInt(i[2], 10)) / 100,
                    this.b = Math.min(100, parseInt(i[3], 10)) / 100,
                    t(i[5]),
                    this;
                break;
            case "hsl":
            case "hsla":
                if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                    var a = parseFloat(i[1]) / 360
                      , s = parseInt(i[2], 10) / 100
                      , c = parseInt(i[3], 10) / 100;
                    return t(i[5]),
                    this.setHSL(a, s, c)
                }
            }
        } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
            var l = n[1]
              , u = l.length;
            if (3 === u)
                return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                this;
            if (6 === u)
                return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                this
        }
        if (e && e.length > 0) {
            var l = THREE.ColorKeywords[e];
            void 0 !== l ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + e)
        }
        return this
    },
    clone: function() {
        return new this.constructor(this.r,this.g,this.b)
    },
    copy: function(e) {
        return this.r = e.r,
        this.g = e.g,
        this.b = e.b,
        this
    },
    copyGammaToLinear: function(e, t) {
        return void 0 === t && (t = 2),
        this.r = Math.pow(e.r, t),
        this.g = Math.pow(e.g, t),
        this.b = Math.pow(e.b, t),
        this
    },
    copyLinearToGamma: function(e, t) {
        void 0 === t && (t = 2);
        var n = t > 0 ? 1 / t : 1;
        return this.r = Math.pow(e.r, n),
        this.g = Math.pow(e.g, n),
        this.b = Math.pow(e.b, n),
        this
    },
    convertGammaToLinear: function() {
        var e = this.r
          , t = this.g
          , n = this.b;
        return this.r = e * e,
        this.g = t * t,
        this.b = n * n,
        this
    },
    convertLinearToGamma: function() {
        return this.r = Math.sqrt(this.r),
        this.g = Math.sqrt(this.g),
        this.b = Math.sqrt(this.b),
        this
    },
    getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
    },
    getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    },
    getHSL: function(e) {
        var t, n, i = e || {
            h: 0,
            s: 0,
            l: 0
        }, r = this.r, o = this.g, a = this.b, s = Math.max(r, o, a), c = Math.min(r, o, a), l = (c + s) / 2;
        if (c === s)
            t = 0,
            n = 0;
        else {
            var u = s - c;
            switch (n = l <= .5 ? u / (s + c) : u / (2 - s - c),
            s) {
            case r:
                t = (o - a) / u + (o < a ? 6 : 0);
                break;
            case o:
                t = (a - r) / u + 2;
                break;
            case a:
                t = (r - o) / u + 4
            }
            t /= 6
        }
        return i.h = t,
        i.s = n,
        i.l = l,
        i
    },
    getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
    },
    offsetHSL: function(e, t, n) {
        var i = this.getHSL();
        return i.h += e,
        i.s += t,
        i.l += n,
        this.setHSL(i.h, i.s, i.l),
        this
    },
    add: function(e) {
        return this.r += e.r,
        this.g += e.g,
        this.b += e.b,
        this
    },
    addColors: function(e, t) {
        return this.r = e.r + t.r,
        this.g = e.g + t.g,
        this.b = e.b + t.b,
        this
    },
    addScalar: function(e) {
        return this.r += e,
        this.g += e,
        this.b += e,
        this
    },
    sub: function(e) {
        return this.r = Math.max(0, this.r - e.r),
        this.g = Math.max(0, this.g - e.g),
        this.b = Math.max(0, this.b - e.b),
        this
    },
    multiply: function(e) {
        return this.r *= e.r,
        this.g *= e.g,
        this.b *= e.b,
        this
    },
    multiplyScalar: function(e) {
        return this.r *= e,
        this.g *= e,
        this.b *= e,
        this
    },
    lerp: function(e, t) {
        return this.r += (e.r - this.r) * t,
        this.g += (e.g - this.g) * t,
        this.b += (e.b - this.b) * t,
        this
    },
    equals: function(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.r = e[t],
        this.g = e[t + 1],
        this.b = e[t + 2],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.r,
        e[t + 1] = this.g,
        e[t + 2] = this.b,
        e
    }
},
THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
},
THREE.Quaternion = function(e, t, n, i) {
    this._x = e || 0,
    this._y = t || 0,
    this._z = n || 0,
    this._w = void 0 !== i ? i : 1
}
,
THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion,
    get x() {
        return this._x
    },
    set x(e) {
        this._x = e,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(e) {
        this._y = e,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(e) {
        this._z = e,
        this.onChangeCallback()
    },
    get w() {
        return this._w
    },
    set w(e) {
        this._w = e,
        this.onChangeCallback()
    },
    set: function(e, t, n, i) {
        return this._x = e,
        this._y = t,
        this._z = n,
        this._w = i,
        this.onChangeCallback(),
        this
    },
    clone: function() {
        return new this.constructor(this._x,this._y,this._z,this._w)
    },
    copy: function(e) {
        return this._x = e.x,
        this._y = e.y,
        this._z = e.z,
        this._w = e.w,
        this.onChangeCallback(),
        this
    },
    setFromEuler: function(e, t) {
        if (e instanceof THREE.Euler == !1)
            throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var n = Math.cos(e._x / 2)
          , i = Math.cos(e._y / 2)
          , r = Math.cos(e._z / 2)
          , o = Math.sin(e._x / 2)
          , a = Math.sin(e._y / 2)
          , s = Math.sin(e._z / 2)
          , c = e.order;
        return "XYZ" === c ? (this._x = o * i * r + n * a * s,
        this._y = n * a * r - o * i * s,
        this._z = n * i * s + o * a * r,
        this._w = n * i * r - o * a * s) : "YXZ" === c ? (this._x = o * i * r + n * a * s,
        this._y = n * a * r - o * i * s,
        this._z = n * i * s - o * a * r,
        this._w = n * i * r + o * a * s) : "ZXY" === c ? (this._x = o * i * r - n * a * s,
        this._y = n * a * r + o * i * s,
        this._z = n * i * s + o * a * r,
        this._w = n * i * r - o * a * s) : "ZYX" === c ? (this._x = o * i * r - n * a * s,
        this._y = n * a * r + o * i * s,
        this._z = n * i * s - o * a * r,
        this._w = n * i * r + o * a * s) : "YZX" === c ? (this._x = o * i * r + n * a * s,
        this._y = n * a * r + o * i * s,
        this._z = n * i * s - o * a * r,
        this._w = n * i * r - o * a * s) : "XZY" === c && (this._x = o * i * r - n * a * s,
        this._y = n * a * r - o * i * s,
        this._z = n * i * s + o * a * r,
        this._w = n * i * r + o * a * s),
        t !== !1 && this.onChangeCallback(),
        this
    },
    setFromAxisAngle: function(e, t) {
        var n = t / 2
          , i = Math.sin(n);
        return this._x = e.x * i,
        this._y = e.y * i,
        this._z = e.z * i,
        this._w = Math.cos(n),
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(e) {
        var t, n = e.elements, i = n[0], r = n[4], o = n[8], a = n[1], s = n[5], c = n[9], l = n[2], u = n[6], h = n[10], d = i + s + h;
        return d > 0 ? (t = .5 / Math.sqrt(d + 1),
        this._w = .25 / t,
        this._x = (u - c) * t,
        this._y = (o - l) * t,
        this._z = (a - r) * t) : i > s && i > h ? (t = 2 * Math.sqrt(1 + i - s - h),
        this._w = (u - c) / t,
        this._x = .25 * t,
        this._y = (r + a) / t,
        this._z = (o + l) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - i - h),
        this._w = (o - l) / t,
        this._x = (r + a) / t,
        this._y = .25 * t,
        this._z = (c + u) / t) : (t = 2 * Math.sqrt(1 + h - i - s),
        this._w = (a - r) / t,
        this._x = (o + l) / t,
        this._y = (c + u) / t,
        this._z = .25 * t),
        this.onChangeCallback(),
        this
    },
    setFromUnitVectors: function() {
        var e, t, n = 1e-6;
        return function(i, r) {
            return void 0 === e && (e = new THREE.Vector3),
            t = i.dot(r) + 1,
            t < n ? (t = 0,
            Math.abs(i.x) > Math.abs(i.z) ? e.set(-i.y, i.x, 0) : e.set(0, -i.z, i.y)) : e.crossVectors(i, r),
            this._x = e.x,
            this._y = e.y,
            this._z = e.z,
            this._w = t,
            this.normalize()
        }
    }(),
    inverse: function() {
        return this.conjugate().normalize()
    },
    conjugate: function() {
        return this._x *= -1,
        this._y *= -1,
        this._z *= -1,
        this.onChangeCallback(),
        this
    },
    dot: function(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
    },
    lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    },
    length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    },
    normalize: function() {
        var e = this.length();
        return 0 === e ? (this._x = 0,
        this._y = 0,
        this._z = 0,
        this._w = 1) : (e = 1 / e,
        this._x = this._x * e,
        this._y = this._y * e,
        this._z = this._z * e,
        this._w = this._w * e),
        this.onChangeCallback(),
        this
    },
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
        this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
    },
    premultiply: function(e) {
        return this.multiplyQuaternions(e, this)
    },
    multiplyQuaternions: function(e, t) {
        var n = e._x
          , i = e._y
          , r = e._z
          , o = e._w
          , a = t._x
          , s = t._y
          , c = t._z
          , l = t._w;
        return this._x = n * l + o * a + i * c - r * s,
        this._y = i * l + o * s + r * a - n * c,
        this._z = r * l + o * c + n * s - i * a,
        this._w = o * l - n * a - i * s - r * c,
        this.onChangeCallback(),
        this
    },
    slerp: function(e, t) {
        if (0 === t)
            return this;
        if (1 === t)
            return this.copy(e);
        var n = this._x
          , i = this._y
          , r = this._z
          , o = this._w
          , a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w,
        this._x = -e._x,
        this._y = -e._y,
        this._z = -e._z,
        a = -a) : this.copy(e),
        a >= 1)
            return this._w = o,
            this._x = n,
            this._y = i,
            this._z = r,
            this;
        var s = Math.sqrt(1 - a * a);
        if (Math.abs(s) < .001)
            return this._w = .5 * (o + this._w),
            this._x = .5 * (n + this._x),
            this._y = .5 * (i + this._y),
            this._z = .5 * (r + this._z),
            this;
        var c = Math.atan2(s, a)
          , l = Math.sin((1 - t) * c) / s
          , u = Math.sin(t * c) / s;
        return this._w = o * l + this._w * u,
        this._x = n * l + this._x * u,
        this._y = i * l + this._y * u,
        this._z = r * l + this._z * u,
        this.onChangeCallback(),
        this
    },
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this._x = e[t],
        this._y = e[t + 1],
        this._z = e[t + 2],
        this._w = e[t + 3],
        this.onChangeCallback(),
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this._x,
        e[t + 1] = this._y,
        e[t + 2] = this._z,
        e[t + 3] = this._w,
        e
    },
    onChange: function(e) {
        return this.onChangeCallback = e,
        this
    },
    onChangeCallback: function() {}
},
Object.assign(THREE.Quaternion, {
    slerp: function(e, t, n, i) {
        return n.copy(e).slerp(t, i)
    },
    slerpFlat: function(e, t, n, i, r, o, a) {
        var s = n[i + 0]
          , c = n[i + 1]
          , l = n[i + 2]
          , u = n[i + 3]
          , h = r[o + 0]
          , d = r[o + 1]
          , p = r[o + 2]
          , f = r[o + 3];
        if (u !== f || s !== h || c !== d || l !== p) {
            var m = 1 - a
              , g = s * h + c * d + l * p + u * f
              , v = g >= 0 ? 1 : -1
              , E = 1 - g * g;
            if (E > Number.EPSILON) {
                var y = Math.sqrt(E)
                  , b = Math.atan2(y, g * v);
                m = Math.sin(m * b) / y,
                a = Math.sin(a * b) / y
            }
            var T = a * v;
            if (s = s * m + h * T,
            c = c * m + d * T,
            l = l * m + p * T,
            u = u * m + f * T,
            m === 1 - a) {
                var x = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
                s *= x,
                c *= x,
                l *= x,
                u *= x
            }
        }
        e[t] = s,
        e[t + 1] = c,
        e[t + 2] = l,
        e[t + 3] = u
    }
}),
THREE.Vector2 = function(e, t) {
    this.x = e || 0,
    this.y = t || 0
}
,
THREE.Vector2.prototype = {
    constructor: THREE.Vector2,
    get width() {
        return this.x
    },
    set width(e) {
        this.x = e
    },
    get height() {
        return this.y
    },
    set height(e) {
        this.y = e
    },
    set: function(e, t) {
        return this.x = e,
        this.y = t,
        this
    },
    setScalar: function(e) {
        return this.x = e,
        this.y = e,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    clone: function() {
        return new this.constructor(this.x,this.y)
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this)
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this
    },
    addScaledVector: function(e, t) {
        return this.x += e.x * t,
        this.y += e.y * t,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this)
    },
    subScalar: function(e) {
        return this.x -= e,
        this.y -= e,
        this
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this
    },
    multiply: function(e) {
        return this.x *= e.x,
        this.y *= e.y,
        this
    },
    multiplyScalar: function(e) {
        return isFinite(e) ? (this.x *= e,
        this.y *= e) : (this.x = 0,
        this.y = 0),
        this
    },
    divide: function(e) {
        return this.x /= e.x,
        this.y /= e.y,
        this
    },
    divideScalar: function(e) {
        return this.multiplyScalar(1 / e)
    },
    min: function(e) {
        return this.x = Math.min(this.x, e.x),
        this.y = Math.min(this.y, e.y),
        this
    },
    max: function(e) {
        return this.x = Math.max(this.x, e.x),
        this.y = Math.max(this.y, e.y),
        this
    },
    clamp: function(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)),
        this.y = Math.max(e.y, Math.min(t.y, this.y)),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(n, i) {
            return void 0 === e && (e = new THREE.Vector2,
            t = new THREE.Vector2),
            e.set(n, n),
            t.set(i, i),
            this.clamp(e, t)
        }
    }(),
    clampLength: function(e, t) {
        var n = this.length();
        return this.multiplyScalar(Math.max(e, Math.min(t, n)) / n)
    },
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    angle: function() {
        var e = Math.atan2(this.y, this.x);
        return e < 0 && (e += 2 * Math.PI),
        e
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x
          , n = this.y - e.y;
        return t * t + n * n
    },
    distanceToManhattan: function(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
    },
    setLength: function(e) {
        return this.multiplyScalar(e / this.length())
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this
    },
    lerpVectors: function(e, t, n) {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e
    },
    fromAttribute: function(e, t, n) {
        return void 0 === n && (n = 0),
        t = t * e.itemSize + n,
        this.x = e.array[t],
        this.y = e.array[t + 1],
        this
    },
    rotateAround: function(e, t) {
        var n = Math.cos(t)
          , i = Math.sin(t)
          , r = this.x - e.x
          , o = this.y - e.y;
        return this.x = r * n - o * i + e.x,
        this.y = r * i + o * n + e.y,
        this
    }
},
THREE.Vector3 = function(e, t, n) {
    this.x = e || 0,
    this.y = t || 0,
    this.z = n || 0
}
,
THREE.Vector3.prototype = {
    constructor: THREE.Vector3,
    set: function(e, t, n) {
        return this.x = e,
        this.y = t,
        this.z = n,
        this
    },
    setScalar: function(e) {
        return this.x = e,
        this.y = e,
        this.z = e,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setZ: function(e) {
        return this.z = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        case 2:
            this.z = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    clone: function() {
        return new this.constructor(this.x,this.y,this.z)
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this.z = e.z,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this.z += e.z,
        this)
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this.z += e,
        this
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this.z = e.z + t.z,
        this
    },
    addScaledVector: function(e, t) {
        return this.x += e.x * t,
        this.y += e.y * t,
        this.z += e.z * t,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this.z -= e.z,
        this)
    },
    subScalar: function(e) {
        return this.x -= e,
        this.y -= e,
        this.z -= e,
        this
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this.z = e.z - t.z,
        this
    },
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
        this.multiplyVectors(e, t)) : (this.x *= e.x,
        this.y *= e.y,
        this.z *= e.z,
        this)
    },
    multiplyScalar: function(e) {
        return isFinite(e) ? (this.x *= e,
        this.y *= e,
        this.z *= e) : (this.x = 0,
        this.y = 0,
        this.z = 0),
        this
    },
    multiplyVectors: function(e, t) {
        return this.x = e.x * t.x,
        this.y = e.y * t.y,
        this.z = e.z * t.z,
        this
    },
    applyEuler: function() {
        var e;
        return function(t) {
            return t instanceof THREE.Euler == !1 && console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
            void 0 === e && (e = new THREE.Quaternion),
            this.applyQuaternion(e.setFromEuler(t))
        }
    }(),
    applyAxisAngle: function() {
        var e;
        return function(t, n) {
            return void 0 === e && (e = new THREE.Quaternion),
            this.applyQuaternion(e.setFromAxisAngle(t, n))
        }
    }(),
    applyMatrix3: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i,
        this.y = r[1] * t + r[4] * n + r[7] * i,
        this.z = r[2] * t + r[5] * n + r[8] * i,
        this
    },
    applyMatrix4: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i + r[12],
        this.y = r[1] * t + r[5] * n + r[9] * i + r[13],
        this.z = r[2] * t + r[6] * n + r[10] * i + r[14],
        this
    },
    applyProjection: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = e.elements
          , o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o,
        this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o,
        this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o,
        this
    },
    applyQuaternion: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = e.x
          , o = e.y
          , a = e.z
          , s = e.w
          , c = s * t + o * i - a * n
          , l = s * n + a * t - r * i
          , u = s * i + r * n - o * t
          , h = -r * t - o * n - a * i;
        return this.x = c * s + h * -r + l * -a - u * -o,
        this.y = l * s + h * -o + u * -r - c * -a,
        this.z = u * s + h * -a + c * -o - l * -r,
        this
    },
    project: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.multiplyMatrices(t.projectionMatrix, e.getInverse(t.matrixWorld)),
            this.applyProjection(e)
        }
    }(),
    unproject: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.multiplyMatrices(t.matrixWorld, e.getInverse(t.projectionMatrix)),
            this.applyProjection(e)
        }
    }(),
    transformDirection: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i,
        this.y = r[1] * t + r[5] * n + r[9] * i,
        this.z = r[2] * t + r[6] * n + r[10] * i,
        this.normalize()
    },
    divide: function(e) {
        return this.x /= e.x,
        this.y /= e.y,
        this.z /= e.z,
        this
    },
    divideScalar: function(e) {
        return this.multiplyScalar(1 / e)
    },
    min: function(e) {
        return this.x = Math.min(this.x, e.x),
        this.y = Math.min(this.y, e.y),
        this.z = Math.min(this.z, e.z),
        this
    },
    max: function(e) {
        return this.x = Math.max(this.x, e.x),
        this.y = Math.max(this.y, e.y),
        this.z = Math.max(this.z, e.z),
        this
    },
    clamp: function(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)),
        this.y = Math.max(e.y, Math.min(t.y, this.y)),
        this.z = Math.max(e.z, Math.min(t.z, this.z)),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(n, i) {
            return void 0 === e && (e = new THREE.Vector3,
            t = new THREE.Vector3),
            e.set(n, n, n),
            t.set(i, i, i),
            this.clamp(e, t)
        }
    }(),
    clampLength: function(e, t) {
        var n = this.length();
        return this.multiplyScalar(Math.max(e, Math.min(t, n)) / n)
    },
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this.z = -this.z,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(e) {
        return this.multiplyScalar(e / this.length())
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this.z += (e.z - this.z) * t,
        this
    },
    lerpVectors: function(e, t, n) {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    cross: function(e, t) {
        if (void 0 !== t)
            return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(e, t);
        var n = this.x
          , i = this.y
          , r = this.z;
        return this.x = i * e.z - r * e.y,
        this.y = r * e.x - n * e.z,
        this.z = n * e.y - i * e.x,
        this
    },
    crossVectors: function(e, t) {
        var n = e.x
          , i = e.y
          , r = e.z
          , o = t.x
          , a = t.y
          , s = t.z;
        return this.x = i * s - r * a,
        this.y = r * o - n * s,
        this.z = n * a - i * o,
        this
    },
    projectOnVector: function(e) {
        var t = e.dot(this) / e.lengthSq();
        return this.copy(e).multiplyScalar(t)
    },
    projectOnPlane: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Vector3),
            e.copy(this).projectOnVector(t),
            this.sub(e)
        }
    }(),
    reflect: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Vector3),
            this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)))
        }
    }(),
    angleTo: function(e) {
        var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
        return Math.acos(THREE.Math.clamp(t, -1, 1))
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x
          , n = this.y - e.y
          , i = this.z - e.z;
        return t * t + n * n + i * i
    },
    distanceToManhattan: function(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    },
    setFromSpherical: function(e) {
        var t = Math.sin(e.phi) * e.radius;
        return this.x = t * Math.sin(e.theta),
        this.y = Math.cos(e.phi) * e.radius,
        this.z = t * Math.cos(e.theta),
        this
    },
    setFromMatrixPosition: function(e) {
        return this.setFromMatrixColumn(e, 3)
    },
    setFromMatrixScale: function(e) {
        var t = this.setFromMatrixColumn(e, 0).length()
          , n = this.setFromMatrixColumn(e, 1).length()
          , i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t,
        this.y = n,
        this.z = i,
        this
    },
    setFromMatrixColumn: function(e, t) {
        if ("number" == typeof e) {
            console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");
            var n = e;
            e = t,
            t = n
        }
        return this.fromArray(e.elements, 4 * t)
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this.z = e[t + 2],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e[t + 2] = this.z,
        e
    },
    fromAttribute: function(e, t, n) {
        return void 0 === n && (n = 0),
        t = t * e.itemSize + n,
        this.x = e.array[t],
        this.y = e.array[t + 1],
        this.z = e.array[t + 2],
        this
    }
},
THREE.Vector4 = function(e, t, n, i) {
    this.x = e || 0,
    this.y = t || 0,
    this.z = n || 0,
    this.w = void 0 !== i ? i : 1
}
,
THREE.Vector4.prototype = {
    constructor: THREE.Vector4,
    set: function(e, t, n, i) {
        return this.x = e,
        this.y = t,
        this.z = n,
        this.w = i,
        this
    },
    setScalar: function(e) {
        return this.x = e,
        this.y = e,
        this.z = e,
        this.w = e,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setZ: function(e) {
        return this.z = e,
        this
    },
    setW: function(e) {
        return this.w = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        case 2:
            this.z = t;
            break;
        case 3:
            this.w = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        case 3:
            return this.w;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    clone: function() {
        return new this.constructor(this.x,this.y,this.z,this.w)
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this.z = e.z,
        this.w = void 0 !== e.w ? e.w : 1,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this.z += e.z,
        this.w += e.w,
        this)
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this.z += e,
        this.w += e,
        this
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this.z = e.z + t.z,
        this.w = e.w + t.w,
        this
    },
    addScaledVector: function(e, t) {
        return this.x += e.x * t,
        this.y += e.y * t,
        this.z += e.z * t,
        this.w += e.w * t,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this.z -= e.z,
        this.w -= e.w,
        this)
    },
    subScalar: function(e) {
        return this.x -= e,
        this.y -= e,
        this.z -= e,
        this.w -= e,
        this
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this.z = e.z - t.z,
        this.w = e.w - t.w,
        this
    },
    multiplyScalar: function(e) {
        return isFinite(e) ? (this.x *= e,
        this.y *= e,
        this.z *= e,
        this.w *= e) : (this.x = 0,
        this.y = 0,
        this.z = 0,
        this.w = 0),
        this
    },
    applyMatrix4: function(e) {
        var t = this.x
          , n = this.y
          , i = this.z
          , r = this.w
          , o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r,
        this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r,
        this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r,
        this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r,
        this
    },
    divideScalar: function(e) {
        return this.multiplyScalar(1 / e)
    },
    setAxisAngleFromQuaternion: function(e) {
        this.w = 2 * Math.acos(e.w);
        var t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1,
        this.y = 0,
        this.z = 0) : (this.x = e.x / t,
        this.y = e.y / t,
        this.z = e.z / t),
        this
    },
    setAxisAngleFromRotationMatrix: function(e) {
        var t, n, i, r, o = .01, a = .1, s = e.elements, c = s[0], l = s[4], u = s[8], h = s[1], d = s[5], p = s[9], f = s[2], m = s[6], g = s[10];
        if (Math.abs(l - h) < o && Math.abs(u - f) < o && Math.abs(p - m) < o) {
            if (Math.abs(l + h) < a && Math.abs(u + f) < a && Math.abs(p + m) < a && Math.abs(c + d + g - 3) < a)
                return this.set(1, 0, 0, 0),
                this;
            t = Math.PI;
            var v = (c + 1) / 2
              , E = (d + 1) / 2
              , y = (g + 1) / 2
              , b = (l + h) / 4
              , T = (u + f) / 4
              , x = (p + m) / 4;
            return v > E && v > y ? v < o ? (n = 0,
            i = .707106781,
            r = .707106781) : (n = Math.sqrt(v),
            i = b / n,
            r = T / n) : E > y ? E < o ? (n = .707106781,
            i = 0,
            r = .707106781) : (i = Math.sqrt(E),
            n = b / i,
            r = x / i) : y < o ? (n = .707106781,
            i = .707106781,
            r = 0) : (r = Math.sqrt(y),
            n = T / r,
            i = x / r),
            this.set(n, i, r, t),
            this
        }
        var R = Math.sqrt((m - p) * (m - p) + (u - f) * (u - f) + (h - l) * (h - l));
        return Math.abs(R) < .001 && (R = 1),
        this.x = (m - p) / R,
        this.y = (u - f) / R,
        this.z = (h - l) / R,
        this.w = Math.acos((c + d + g - 1) / 2),
        this
    },
    min: function(e) {
        return this.x = Math.min(this.x, e.x),
        this.y = Math.min(this.y, e.y),
        this.z = Math.min(this.z, e.z),
        this.w = Math.min(this.w, e.w),
        this
    },
    max: function(e) {
        return this.x = Math.max(this.x, e.x),
        this.y = Math.max(this.y, e.y),
        this.z = Math.max(this.z, e.z),
        this.w = Math.max(this.w, e.w),
        this
    },
    clamp: function(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)),
        this.y = Math.max(e.y, Math.min(t.y, this.y)),
        this.z = Math.max(e.z, Math.min(t.z, this.z)),
        this.w = Math.max(e.w, Math.min(t.w, this.w)),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(n, i) {
            return void 0 === e && (e = new THREE.Vector4,
            t = new THREE.Vector4),
            e.set(n, n, n, n),
            t.set(i, i, i, i),
            this.clamp(e, t)
        }
    }(),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this.w = Math.floor(this.w),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this.w = Math.ceil(this.w),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this.w = Math.round(this.w),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
        this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this.z = -this.z,
        this.w = -this.w,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(e) {
        return this.multiplyScalar(e / this.length())
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this.z += (e.z - this.z) * t,
        this.w += (e.w - this.w) * t,
        this
    },
    lerpVectors: function(e, t, n) {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this.z = e[t + 2],
        this.w = e[t + 3],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e[t + 2] = this.z,
        e[t + 3] = this.w,
        e
    },
    fromAttribute: function(e, t, n) {
        return void 0 === n && (n = 0),
        t = t * e.itemSize + n,
        this.x = e.array[t],
        this.y = e.array[t + 1],
        this.z = e.array[t + 2],
        this.w = e.array[t + 3],
        this
    }
},
THREE.Euler = function(e, t, n, i) {
    this._x = e || 0,
    this._y = t || 0,
    this._z = n || 0,
    this._order = i || THREE.Euler.DefaultOrder
}
,
THREE.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
THREE.Euler.DefaultOrder = "XYZ",
THREE.Euler.prototype = {
    constructor: THREE.Euler,
    get x() {
        return this._x
    },
    set x(e) {
        this._x = e,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(e) {
        this._y = e,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(e) {
        this._z = e,
        this.onChangeCallback()
    },
    get order() {
        return this._order
    },
    set order(e) {
        this._order = e,
        this.onChangeCallback()
    },
    set: function(e, t, n, i) {
        return this._x = e,
        this._y = t,
        this._z = n,
        this._order = i || this._order,
        this.onChangeCallback(),
        this
    },
    clone: function() {
        return new this.constructor(this._x,this._y,this._z,this._order)
    },
    copy: function(e) {
        return this._x = e._x,
        this._y = e._y,
        this._z = e._z,
        this._order = e._order,
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(e, t, n) {
        var i = THREE.Math.clamp
          , r = e.elements
          , o = r[0]
          , a = r[4]
          , s = r[8]
          , c = r[1]
          , l = r[5]
          , u = r[9]
          , h = r[2]
          , d = r[6]
          , p = r[10];
        return t = t || this._order,
        "XYZ" === t ? (this._y = Math.asin(i(s, -1, 1)),
        Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p),
        this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(d, l),
        this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-i(u, -1, 1)),
        Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p),
        this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, o),
        this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(i(d, -1, 1)),
        Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p),
        this._z = Math.atan2(-a, l)) : (this._y = 0,
        this._z = Math.atan2(c, o))) : "ZYX" === t ? (this._y = Math.asin(-i(h, -1, 1)),
        Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p),
        this._z = Math.atan2(c, o)) : (this._x = 0,
        this._z = Math.atan2(-a, l))) : "YZX" === t ? (this._z = Math.asin(i(c, -1, 1)),
        Math.abs(c) < .99999 ? (this._x = Math.atan2(-u, l),
        this._y = Math.atan2(-h, o)) : (this._x = 0,
        this._y = Math.atan2(s, p))) : "XZY" === t ? (this._z = Math.asin(-i(a, -1, 1)),
        Math.abs(a) < .99999 ? (this._x = Math.atan2(d, l),
        this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-u, p),
        this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t),
        this._order = t,
        n !== !1 && this.onChangeCallback(),
        this
    },
    setFromQuaternion: function() {
        var e;
        return function(t, n, i) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationFromQuaternion(t),
            this.setFromRotationMatrix(e, n, i)
        }
    }(),
    setFromVector3: function(e, t) {
        return this.set(e.x, e.y, e.z, t || this._order)
    },
    reorder: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            return e.setFromEuler(this),
            this.setFromQuaternion(e, t)
        }
    }(),
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
    },
    fromArray: function(e) {
        return this._x = e[0],
        this._y = e[1],
        this._z = e[2],
        void 0 !== e[3] && (this._order = e[3]),
        this.onChangeCallback(),
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this._x,
        e[t + 1] = this._y,
        e[t + 2] = this._z,
        e[t + 3] = this._order,
        e
    },
    toVector3: function(e) {
        return e ? e.set(this._x, this._y, this._z) : new THREE.Vector3(this._x,this._y,this._z)
    },
    onChange: function(e) {
        return this.onChangeCallback = e,
        this
    },
    onChangeCallback: function() {}
},
THREE.Line3 = function(e, t) {
    this.start = void 0 !== e ? e : new THREE.Vector3,
    this.end = void 0 !== t ? t : new THREE.Vector3
}
,
THREE.Line3.prototype = {
    constructor: THREE.Line3,
    set: function(e, t) {
        return this.start.copy(e),
        this.end.copy(t),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.start.copy(e.start),
        this.end.copy(e.end),
        this
    },
    center: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.start, this.end).multiplyScalar(.5)
    },
    delta: function(e) {
        var t = e || new THREE.Vector3;
        return t.subVectors(this.end, this.start)
    },
    distanceSq: function() {
        return this.start.distanceToSquared(this.end)
    },
    distance: function() {
        return this.start.distanceTo(this.end)
    },
    at: function(e, t) {
        var n = t || new THREE.Vector3;
        return this.delta(n).multiplyScalar(e).add(this.start)
    },
    closestPointToPointParameter: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(n, i) {
            e.subVectors(n, this.start),
            t.subVectors(this.end, this.start);
            var r = t.dot(t)
              , o = t.dot(e)
              , a = o / r;
            return i && (a = THREE.Math.clamp(a, 0, 1)),
            a
        }
    }(),
    closestPointToPoint: function(e, t, n) {
        var i = this.closestPointToPointParameter(e, t)
          , r = n || new THREE.Vector3;
        return this.delta(r).multiplyScalar(i).add(this.start)
    },
    applyMatrix4: function(e) {
        return this.start.applyMatrix4(e),
        this.end.applyMatrix4(e),
        this
    },
    equals: function(e) {
        return e.start.equals(this.start) && e.end.equals(this.end)
    }
},
THREE.Box2 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector2(+(1 / 0),+(1 / 0)),
    this.max = void 0 !== t ? t : new THREE.Vector2(-(1 / 0),-(1 / 0))
}
,
THREE.Box2.prototype = {
    constructor: THREE.Box2,
    set: function(e, t) {
        return this.min.copy(e),
        this.max.copy(t),
        this
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++)
            this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector2;
        return function(t, n) {
            var i = e.copy(n).multiplyScalar(.5);
            return this.min.copy(t).sub(i),
            this.max.copy(t).add(i),
            this
        }
    }(),
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.min.copy(e.min),
        this.max.copy(e.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = +(1 / 0),
        this.max.x = this.max.y = -(1 / 0),
        this
    },
    isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y
    },
    center: function(e) {
        var t = e || new THREE.Vector2;
        return t.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(e) {
        var t = e || new THREE.Vector2;
        return t.subVectors(this.max, this.min)
    },
    expandByPoint: function(e) {
        return this.min.min(e),
        this.max.max(e),
        this
    },
    expandByVector: function(e) {
        return this.min.sub(e),
        this.max.add(e),
        this
    },
    expandByScalar: function(e) {
        return this.min.addScalar(-e),
        this.max.addScalar(e),
        this
    },
    containsPoint: function(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
    },
    getParameter: function(e, t) {
        var n = t || new THREE.Vector2;
        return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
    },
    intersectsBox: function(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
    },
    clampPoint: function(e, t) {
        var n = t || new THREE.Vector2;
        return n.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var e = new THREE.Vector2;
        return function(t) {
            var n = e.copy(t).clamp(this.min, this.max);
            return n.sub(t).length()
        }
    }(),
    intersect: function(e) {
        return this.min.max(e.min),
        this.max.min(e.max),
        this
    },
    union: function(e) {
        return this.min.min(e.min),
        this.max.max(e.max),
        this
    },
    translate: function(e) {
        return this.min.add(e),
        this.max.add(e),
        this
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max)
    }
},
THREE.Box3 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector3(+(1 / 0),+(1 / 0),+(1 / 0)),
    this.max = void 0 !== t ? t : new THREE.Vector3(-(1 / 0),-(1 / 0),-(1 / 0))
}
,
THREE.Box3.prototype = {
    constructor: THREE.Box3,
    set: function(e, t) {
        return this.min.copy(e),
        this.max.copy(t),
        this
    },
    setFromArray: function(e) {
        for (var t = +(1 / 0), n = +(1 / 0), i = +(1 / 0), r = -(1 / 0), o = -(1 / 0), a = -(1 / 0), s = 0, c = e.length; s < c; s += 3) {
            var l = e[s]
              , u = e[s + 1]
              , h = e[s + 2];
            l < t && (t = l),
            u < n && (n = u),
            h < i && (i = h),
            l > r && (r = l),
            u > o && (o = u),
            h > a && (a = h)
        }
        this.min.set(t, n, i),
        this.max.set(r, o, a)
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++)
            this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            var i = e.copy(n).multiplyScalar(.5);
            return this.min.copy(t).sub(i),
            this.max.copy(t).add(i),
            this
        }
    }(),
    setFromObject: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var n = this;
            return t.updateMatrixWorld(!0),
            this.makeEmpty(),
            t.traverse(function(t) {
                var i = t.geometry;
                if (void 0 !== i)
                    if (i instanceof THREE.Geometry)
                        for (var r = i.vertices, o = 0, a = r.length; o < a; o++)
                            e.copy(r[o]),
                            e.applyMatrix4(t.matrixWorld),
                            n.expandByPoint(e);
                    else if (i instanceof THREE.BufferGeometry) {
                        var s = i.attributes.position;
                        if (void 0 !== s) {
                            var c, l, u;
                            s instanceof THREE.InterleavedBufferAttribute ? (c = s.data.array,
                            l = s.offset,
                            u = s.data.stride) : (c = s.array,
                            l = 0,
                            u = 3);
                            for (var o = l, a = c.length; o < a; o += u)
                                e.fromArray(c, o),
                                e.applyMatrix4(t.matrixWorld),
                                n.expandByPoint(e)
                        }
                    }
            }),
            this
        }
    }(),
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.min.copy(e.min),
        this.max.copy(e.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = +(1 / 0),
        this.max.x = this.max.y = this.max.z = -(1 / 0),
        this
    },
    isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
    },
    center: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(e) {
        var t = e || new THREE.Vector3;
        return t.subVectors(this.max, this.min)
    },
    expandByPoint: function(e) {
        return this.min.min(e),
        this.max.max(e),
        this
    },
    expandByVector: function(e) {
        return this.min.sub(e),
        this.max.add(e),
        this
    },
    expandByScalar: function(e) {
        return this.min.addScalar(-e),
        this.max.addScalar(e),
        this
    },
    containsPoint: function(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
    },
    getParameter: function(e, t) {
        var n = t || new THREE.Vector3;
        return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
    },
    intersectsBox: function(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
    },
    intersectsSphere: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Vector3),
            this.clampPoint(t.center, e),
            e.distanceToSquared(t.center) <= t.radius * t.radius
        }
    }(),
    intersectsPlane: function(e) {
        var t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x,
        n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x,
        n = e.normal.x * this.min.x),
        e.normal.y > 0 ? (t += e.normal.y * this.min.y,
        n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y,
        n += e.normal.y * this.min.y),
        e.normal.z > 0 ? (t += e.normal.z * this.min.z,
        n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z,
        n += e.normal.z * this.min.z),
        t <= e.constant && n >= e.constant
    },
    clampPoint: function(e, t) {
        var n = t || new THREE.Vector3;
        return n.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var n = e.copy(t).clamp(this.min, this.max);
            return n.sub(t).length()
        }
    }(),
    getBoundingSphere: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var n = t || new THREE.Sphere;
            return n.center = this.center(),
            n.radius = .5 * this.size(e).length(),
            n
        }
    }(),
    intersect: function(e) {
        return this.min.max(e.min),
        this.max.min(e.max),
        this.isEmpty() && this.makeEmpty(),
        this
    },
    union: function(e) {
        return this.min.min(e.min),
        this.max.max(e.max),
        this
    },
    applyMatrix4: function() {
        var e = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
        return function(t) {
            return this.isEmpty() ? this : (e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
            e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
            e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
            e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
            e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
            e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
            e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
            e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
            this.setFromPoints(e),
            this)
        }
    }(),
    translate: function(e) {
        return this.min.add(e),
        this.max.add(e),
        this
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max)
    }
},
THREE.Matrix3 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),
    arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
}
,
THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3,
    set: function(e, t, n, i, r, o, a, s, c) {
        var l = this.elements;
        return l[0] = e,
        l[1] = i,
        l[2] = a,
        l[3] = t,
        l[4] = r,
        l[5] = s,
        l[6] = n,
        l[7] = o,
        l[8] = c,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
        this
    },
    clone: function() {
        return (new this.constructor).fromArray(this.elements)
    },
    copy: function(e) {
        var t = e.elements;
        return this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]),
        this
    },
    setFromMatrix4: function(e) {
        var t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
        this
    },
    applyToVector3Array: function() {
        var e;
        return function(t, n, i) {
            void 0 === e && (e = new THREE.Vector3),
            void 0 === n && (n = 0),
            void 0 === i && (i = t.length);
            for (var r = 0, o = n; r < i; r += 3,
            o += 3)
                e.fromArray(t, o),
                e.applyMatrix3(this),
                e.toArray(t, o);
            return t
        }
    }(),
    applyToBuffer: function() {
        var e;
        return function(t, n, i) {
            void 0 === e && (e = new THREE.Vector3),
            void 0 === n && (n = 0),
            void 0 === i && (i = t.length / t.itemSize);
            for (var r = 0, o = n; r < i; r++,
            o++)
                e.x = t.getX(o),
                e.y = t.getY(o),
                e.z = t.getZ(o),
                e.applyMatrix3(this),
                t.setXYZ(e.x, e.y, e.z);
            return t
        }
    }(),
    multiplyScalar: function(e) {
        var t = this.elements;
        return t[0] *= e,
        t[3] *= e,
        t[6] *= e,
        t[1] *= e,
        t[4] *= e,
        t[7] *= e,
        t[2] *= e,
        t[5] *= e,
        t[8] *= e,
        this
    },
    determinant: function() {
        var e = this.elements
          , t = e[0]
          , n = e[1]
          , i = e[2]
          , r = e[3]
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , c = e[7]
          , l = e[8];
        return t * o * l - t * a * c - n * r * l + n * a * s + i * r * c - i * o * s
    },
    getInverse: function(e, t) {
        e instanceof THREE.Matrix4 && console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");
        var n = e.elements
          , i = this.elements
          , r = n[0]
          , o = n[1]
          , a = n[2]
          , s = n[3]
          , c = n[4]
          , l = n[5]
          , u = n[6]
          , h = n[7]
          , d = n[8]
          , p = d * c - l * h
          , f = l * u - d * s
          , m = h * s - c * u
          , g = r * p + o * f + a * m;
        if (0 === g) {
            var v = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
            if (t)
                throw new Error(v);
            return console.warn(v),
            this.identity()
        }
        var E = 1 / g;
        return i[0] = p * E,
        i[1] = (a * h - d * o) * E,
        i[2] = (l * o - a * c) * E,
        i[3] = f * E,
        i[4] = (d * r - a * u) * E,
        i[5] = (a * s - l * r) * E,
        i[6] = m * E,
        i[7] = (o * u - h * r) * E,
        i[8] = (c * r - o * s) * E,
        this
    },
    transpose: function() {
        var e, t = this.elements;
        return e = t[1],
        t[1] = t[3],
        t[3] = e,
        e = t[2],
        t[2] = t[6],
        t[6] = e,
        e = t[5],
        t[5] = t[7],
        t[7] = e,
        this
    },
    flattenToArrayOffset: function(e, t) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),
        this.toArray(e, t)
    },
    getNormalMatrix: function(e) {
        return this.setFromMatrix4(e).getInverse(this).transpose()
    },
    transposeIntoArray: function(e) {
        var t = this.elements;
        return e[0] = t[0],
        e[1] = t[3],
        e[2] = t[6],
        e[3] = t[1],
        e[4] = t[4],
        e[5] = t[7],
        e[6] = t[2],
        e[7] = t[5],
        e[8] = t[8],
        this
    },
    fromArray: function(e) {
        return this.elements.set(e),
        this
    },
    toArray: function(e, t) {
        void 0 === e && (e = []),
        void 0 === t && (t = 0);
        var n = this.elements;
        return e[t] = n[0],
        e[t + 1] = n[1],
        e[t + 2] = n[2],
        e[t + 3] = n[3],
        e[t + 4] = n[4],
        e[t + 5] = n[5],
        e[t + 6] = n[6],
        e[t + 7] = n[7],
        e[t + 8] = n[8],
        e
    }
},
THREE.Matrix4 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
    arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
}
,
THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4,
    set: function(e, t, n, i, r, o, a, s, c, l, u, h, d, p, f, m) {
        var g = this.elements;
        return g[0] = e,
        g[4] = t,
        g[8] = n,
        g[12] = i,
        g[1] = r,
        g[5] = o,
        g[9] = a,
        g[13] = s,
        g[2] = c,
        g[6] = l,
        g[10] = u,
        g[14] = h,
        g[3] = d,
        g[7] = p,
        g[11] = f,
        g[15] = m,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    clone: function() {
        return (new THREE.Matrix4).fromArray(this.elements)
    },
    copy: function(e) {
        return this.elements.set(e.elements),
        this
    },
    copyPosition: function(e) {
        var t = this.elements
          , n = e.elements;
        return t[12] = n[12],
        t[13] = n[13],
        t[14] = n[14],
        this
    },
    extractBasis: function(e, t, n) {
        return e.setFromMatrixColumn(this, 0),
        t.setFromMatrixColumn(this, 1),
        n.setFromMatrixColumn(this, 2),
        this
    },
    makeBasis: function(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1),
        this
    },
    extractRotation: function() {
        var e;
        return function(t) {
            void 0 === e && (e = new THREE.Vector3);
            var n = this.elements
              , i = t.elements
              , r = 1 / e.setFromMatrixColumn(t, 0).length()
              , o = 1 / e.setFromMatrixColumn(t, 1).length()
              , a = 1 / e.setFromMatrixColumn(t, 2).length();
            return n[0] = i[0] * r,
            n[1] = i[1] * r,
            n[2] = i[2] * r,
            n[4] = i[4] * o,
            n[5] = i[5] * o,
            n[6] = i[6] * o,
            n[8] = i[8] * a,
            n[9] = i[9] * a,
            n[10] = i[10] * a,
            this
        }
    }(),
    makeRotationFromEuler: function(e) {
        e instanceof THREE.Euler == !1 && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var t = this.elements
          , n = e.x
          , i = e.y
          , r = e.z
          , o = Math.cos(n)
          , a = Math.sin(n)
          , s = Math.cos(i)
          , c = Math.sin(i)
          , l = Math.cos(r)
          , u = Math.sin(r);
        if ("XYZ" === e.order) {
            var h = o * l
              , d = o * u
              , p = a * l
              , f = a * u;
            t[0] = s * l,
            t[4] = -s * u,
            t[8] = c,
            t[1] = d + p * c,
            t[5] = h - f * c,
            t[9] = -a * s,
            t[2] = f - h * c,
            t[6] = p + d * c,
            t[10] = o * s
        } else if ("YXZ" === e.order) {
            var m = s * l
              , g = s * u
              , v = c * l
              , E = c * u;
            t[0] = m + E * a,
            t[4] = v * a - g,
            t[8] = o * c,
            t[1] = o * u,
            t[5] = o * l,
            t[9] = -a,
            t[2] = g * a - v,
            t[6] = E + m * a,
            t[10] = o * s
        } else if ("ZXY" === e.order) {
            var m = s * l
              , g = s * u
              , v = c * l
              , E = c * u;
            t[0] = m - E * a,
            t[4] = -o * u,
            t[8] = v + g * a,
            t[1] = g + v * a,
            t[5] = o * l,
            t[9] = E - m * a,
            t[2] = -o * c,
            t[6] = a,
            t[10] = o * s
        } else if ("ZYX" === e.order) {
            var h = o * l
              , d = o * u
              , p = a * l
              , f = a * u;
            t[0] = s * l,
            t[4] = p * c - d,
            t[8] = h * c + f,
            t[1] = s * u,
            t[5] = f * c + h,
            t[9] = d * c - p,
            t[2] = -c,
            t[6] = a * s,
            t[10] = o * s
        } else if ("YZX" === e.order) {
            var y = o * s
              , b = o * c
              , T = a * s
              , x = a * c;
            t[0] = s * l,
            t[4] = x - y * u,
            t[8] = T * u + b,
            t[1] = u,
            t[5] = o * l,
            t[9] = -a * l,
            t[2] = -c * l,
            t[6] = b * u + T,
            t[10] = y - x * u
        } else if ("XZY" === e.order) {
            var y = o * s
              , b = o * c
              , T = a * s
              , x = a * c;
            t[0] = s * l,
            t[4] = -u,
            t[8] = c * l,
            t[1] = y * u + x,
            t[5] = o * l,
            t[9] = b * u - T,
            t[2] = T * u - b,
            t[6] = a * l,
            t[10] = x * u + y
        }
        return t[3] = 0,
        t[7] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        this
    },
    makeRotationFromQuaternion: function(e) {
        var t = this.elements
          , n = e.x
          , i = e.y
          , r = e.z
          , o = e.w
          , a = n + n
          , s = i + i
          , c = r + r
          , l = n * a
          , u = n * s
          , h = n * c
          , d = i * s
          , p = i * c
          , f = r * c
          , m = o * a
          , g = o * s
          , v = o * c;
        return t[0] = 1 - (d + f),
        t[4] = u - v,
        t[8] = h + g,
        t[1] = u + v,
        t[5] = 1 - (l + f),
        t[9] = p - m,
        t[2] = h - g,
        t[6] = p + m,
        t[10] = 1 - (l + d),
        t[3] = 0,
        t[7] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        this
    },
    lookAt: function() {
        var e, t, n;
        return function(i, r, o) {
            void 0 === e && (e = new THREE.Vector3,
            t = new THREE.Vector3,
            n = new THREE.Vector3);
            var a = this.elements;
            return n.subVectors(i, r).normalize(),
            0 === n.lengthSq() && (n.z = 1),
            e.crossVectors(o, n).normalize(),
            0 === e.lengthSq() && (n.z += 1e-4,
            e.crossVectors(o, n).normalize()),
            t.crossVectors(n, e),
            a[0] = e.x,
            a[4] = t.x,
            a[8] = n.x,
            a[1] = e.y,
            a[5] = t.y,
            a[9] = n.y,
            a[2] = e.z,
            a[6] = t.z,
            a[10] = n.z,
            this
        }
    }(),
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
        this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
    },
    premultiply: function(e) {
        return this.multiplyMatrices(e, this)
    },
    multiplyMatrices: function(e, t) {
        var n = e.elements
          , i = t.elements
          , r = this.elements
          , o = n[0]
          , a = n[4]
          , s = n[8]
          , c = n[12]
          , l = n[1]
          , u = n[5]
          , h = n[9]
          , d = n[13]
          , p = n[2]
          , f = n[6]
          , m = n[10]
          , g = n[14]
          , v = n[3]
          , E = n[7]
          , y = n[11]
          , b = n[15]
          , T = i[0]
          , x = i[4]
          , R = i[8]
          , w = i[12]
          , H = i[1]
          , M = i[5]
          , S = i[9]
          , _ = i[13]
          , C = i[2]
          , A = i[6]
          , P = i[10]
          , L = i[14]
          , k = i[3]
          , D = i[7]
          , I = i[11]
          , O = i[15];
        return r[0] = o * T + a * H + s * C + c * k,
        r[4] = o * x + a * M + s * A + c * D,
        r[8] = o * R + a * S + s * P + c * I,
        r[12] = o * w + a * _ + s * L + c * O,
        r[1] = l * T + u * H + h * C + d * k,
        r[5] = l * x + u * M + h * A + d * D,
        r[9] = l * R + u * S + h * P + d * I,
        r[13] = l * w + u * _ + h * L + d * O,
        r[2] = p * T + f * H + m * C + g * k,
        r[6] = p * x + f * M + m * A + g * D,
        r[10] = p * R + f * S + m * P + g * I,
        r[14] = p * w + f * _ + m * L + g * O,
        r[3] = v * T + E * H + y * C + b * k,
        r[7] = v * x + E * M + y * A + b * D,
        r[11] = v * R + E * S + y * P + b * I,
        r[15] = v * w + E * _ + y * L + b * O,
        this
    },
    multiplyToArray: function(e, t, n) {
        var i = this.elements;
        return this.multiplyMatrices(e, t),
        n[0] = i[0],
        n[1] = i[1],
        n[2] = i[2],
        n[3] = i[3],
        n[4] = i[4],
        n[5] = i[5],
        n[6] = i[6],
        n[7] = i[7],
        n[8] = i[8],
        n[9] = i[9],
        n[10] = i[10],
        n[11] = i[11],
        n[12] = i[12],
        n[13] = i[13],
        n[14] = i[14],
        n[15] = i[15],
        this
    },
    multiplyScalar: function(e) {
        var t = this.elements;
        return t[0] *= e,
        t[4] *= e,
        t[8] *= e,
        t[12] *= e,
        t[1] *= e,
        t[5] *= e,
        t[9] *= e,
        t[13] *= e,
        t[2] *= e,
        t[6] *= e,
        t[10] *= e,
        t[14] *= e,
        t[3] *= e,
        t[7] *= e,
        t[11] *= e,
        t[15] *= e,
        this
    },
    applyToVector3Array: function() {
        var e;
        return function(t, n, i) {
            void 0 === e && (e = new THREE.Vector3),
            void 0 === n && (n = 0),
            void 0 === i && (i = t.length);
            for (var r = 0, o = n; r < i; r += 3,
            o += 3)
                e.fromArray(t, o),
                e.applyMatrix4(this),
                e.toArray(t, o);
            return t
        }
    }(),
    applyToBuffer: function() {
        var e;
        return function(t, n, i) {
            void 0 === e && (e = new THREE.Vector3),
            void 0 === n && (n = 0),
            void 0 === i && (i = t.length / t.itemSize);
            for (var r = 0, o = n; r < i; r++,
            o++)
                e.x = t.getX(o),
                e.y = t.getY(o),
                e.z = t.getZ(o),
                e.applyMatrix4(this),
                t.setXYZ(e.x, e.y, e.z);
            return t
        }
    }(),
    determinant: function() {
        var e = this.elements
          , t = e[0]
          , n = e[4]
          , i = e[8]
          , r = e[12]
          , o = e[1]
          , a = e[5]
          , s = e[9]
          , c = e[13]
          , l = e[2]
          , u = e[6]
          , h = e[10]
          , d = e[14]
          , p = e[3]
          , f = e[7]
          , m = e[11]
          , g = e[15];
        return p * (+r * s * u - i * c * u - r * a * h + n * c * h + i * a * d - n * s * d) + f * (+t * s * d - t * c * h + r * o * h - i * o * d + i * c * l - r * s * l) + m * (+t * c * u - t * a * d - r * o * u + n * o * d + r * a * l - n * c * l) + g * (-i * a * l - t * s * u + t * a * h + i * o * u - n * o * h + n * s * l)
    },
    transpose: function() {
        var e, t = this.elements;
        return e = t[1],
        t[1] = t[4],
        t[4] = e,
        e = t[2],
        t[2] = t[8],
        t[8] = e,
        e = t[6],
        t[6] = t[9],
        t[9] = e,
        e = t[3],
        t[3] = t[12],
        t[12] = e,
        e = t[7],
        t[7] = t[13],
        t[13] = e,
        e = t[11],
        t[11] = t[14],
        t[14] = e,
        this
    },
    flattenToArrayOffset: function(e, t) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),
        this.toArray(e, t)
    },
    getPosition: function() {
        var e;
        return function() {
            return void 0 === e && (e = new THREE.Vector3),
            console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
            e.setFromMatrixColumn(this, 3)
        }
    }(),
    setPosition: function(e) {
        var t = this.elements;
        return t[12] = e.x,
        t[13] = e.y,
        t[14] = e.z,
        this
    },
    getInverse: function(e, t) {
        var n = this.elements
          , i = e.elements
          , r = i[0]
          , o = i[1]
          , a = i[2]
          , s = i[3]
          , c = i[4]
          , l = i[5]
          , u = i[6]
          , h = i[7]
          , d = i[8]
          , p = i[9]
          , f = i[10]
          , m = i[11]
          , g = i[12]
          , v = i[13]
          , E = i[14]
          , y = i[15]
          , b = p * E * h - v * f * h + v * u * m - l * E * m - p * u * y + l * f * y
          , T = g * f * h - d * E * h - g * u * m + c * E * m + d * u * y - c * f * y
          , x = d * v * h - g * p * h + g * l * m - c * v * m - d * l * y + c * p * y
          , R = g * p * u - d * v * u - g * l * f + c * v * f + d * l * E - c * p * E
          , w = r * b + o * T + a * x + s * R;
        if (0 === w) {
            var H = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
            if (t)
                throw new Error(H);
            return console.warn(H),
            this.identity()
        }
        var M = 1 / w;
        return n[0] = b * M,
        n[1] = (v * f * s - p * E * s - v * a * m + o * E * m + p * a * y - o * f * y) * M,
        n[2] = (l * E * s - v * u * s + v * a * h - o * E * h - l * a * y + o * u * y) * M,
        n[3] = (p * u * s - l * f * s - p * a * h + o * f * h + l * a * m - o * u * m) * M,
        n[4] = T * M,
        n[5] = (d * E * s - g * f * s + g * a * m - r * E * m - d * a * y + r * f * y) * M,
        n[6] = (g * u * s - c * E * s - g * a * h + r * E * h + c * a * y - r * u * y) * M,
        n[7] = (c * f * s - d * u * s + d * a * h - r * f * h - c * a * m + r * u * m) * M,
        n[8] = x * M,
        n[9] = (g * p * s - d * v * s - g * o * m + r * v * m + d * o * y - r * p * y) * M,
        n[10] = (c * v * s - g * l * s + g * o * h - r * v * h - c * o * y + r * l * y) * M,
        n[11] = (d * l * s - c * p * s - d * o * h + r * p * h + c * o * m - r * l * m) * M,
        n[12] = R * M,
        n[13] = (d * v * a - g * p * a + g * o * f - r * v * f - d * o * E + r * p * E) * M,
        n[14] = (g * l * a - c * v * a - g * o * u + r * v * u + c * o * E - r * l * E) * M,
        n[15] = (c * p * a - d * l * a + d * o * u - r * p * u - c * o * f + r * l * f) * M,
        this
    },
    scale: function(e) {
        var t = this.elements
          , n = e.x
          , i = e.y
          , r = e.z;
        return t[0] *= n,
        t[4] *= i,
        t[8] *= r,
        t[1] *= n,
        t[5] *= i,
        t[9] *= r,
        t[2] *= n,
        t[6] *= i,
        t[10] *= r,
        t[3] *= n,
        t[7] *= i,
        t[11] *= r,
        this
    },
    getMaxScaleOnAxis: function() {
        var e = this.elements
          , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
          , n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
          , i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i))
    },
    makeTranslation: function(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
        this
    },
    makeRotationX: function(e) {
        var t = Math.cos(e)
          , n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
        this
    },
    makeRotationY: function(e) {
        var t = Math.cos(e)
          , n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
        this
    },
    makeRotationZ: function(e) {
        var t = Math.cos(e)
          , n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    makeRotationAxis: function(e, t) {
        var n = Math.cos(t)
          , i = Math.sin(t)
          , r = 1 - n
          , o = e.x
          , a = e.y
          , s = e.z
          , c = r * o
          , l = r * a;
        return this.set(c * o + n, c * a - i * s, c * s + i * a, 0, c * a + i * s, l * a + n, l * s - i * o, 0, c * s - i * a, l * s + i * o, r * s * s + n, 0, 0, 0, 0, 1),
        this
    },
    makeScale: function(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
        this
    },
    compose: function(e, t, n) {
        return this.makeRotationFromQuaternion(t),
        this.scale(n),
        this.setPosition(e),
        this
    },
    decompose: function() {
        var e, t;
        return function(n, i, r) {
            void 0 === e && (e = new THREE.Vector3,
            t = new THREE.Matrix4);
            var o = this.elements
              , a = e.set(o[0], o[1], o[2]).length()
              , s = e.set(o[4], o[5], o[6]).length()
              , c = e.set(o[8], o[9], o[10]).length()
              , l = this.determinant();
            l < 0 && (a = -a),
            n.x = o[12],
            n.y = o[13],
            n.z = o[14],
            t.elements.set(this.elements);
            var u = 1 / a
              , h = 1 / s
              , d = 1 / c;
            return t.elements[0] *= u,
            t.elements[1] *= u,
            t.elements[2] *= u,
            t.elements[4] *= h,
            t.elements[5] *= h,
            t.elements[6] *= h,
            t.elements[8] *= d,
            t.elements[9] *= d,
            t.elements[10] *= d,
            i.setFromRotationMatrix(t),
            r.x = a,
            r.y = s,
            r.z = c,
            this
        }
    }(),
    makeFrustum: function(e, t, n, i, r, o) {
        var a = this.elements
          , s = 2 * r / (t - e)
          , c = 2 * r / (i - n)
          , l = (t + e) / (t - e)
          , u = (i + n) / (i - n)
          , h = -(o + r) / (o - r)
          , d = -2 * o * r / (o - r);
        return a[0] = s,
        a[4] = 0,
        a[8] = l,
        a[12] = 0,
        a[1] = 0,
        a[5] = c,
        a[9] = u,
        a[13] = 0,
        a[2] = 0,
        a[6] = 0,
        a[10] = h,
        a[14] = d,
        a[3] = 0,
        a[7] = 0,
        a[11] = -1,
        a[15] = 0,
        this
    },
    makePerspective: function(e, t, n, i) {
        var r = n * Math.tan(THREE.Math.DEG2RAD * e * .5)
          , o = -r
          , a = o * t
          , s = r * t;
        return this.makeFrustum(a, s, o, r, n, i)
    },
    makeOrthographic: function(e, t, n, i, r, o) {
        var a = this.elements
          , s = 1 / (t - e)
          , c = 1 / (n - i)
          , l = 1 / (o - r)
          , u = (t + e) * s
          , h = (n + i) * c
          , d = (o + r) * l;
        return a[0] = 2 * s,
        a[4] = 0,
        a[8] = 0,
        a[12] = -u,
        a[1] = 0,
        a[5] = 2 * c,
        a[9] = 0,
        a[13] = -h,
        a[2] = 0,
        a[6] = 0,
        a[10] = -2 * l,
        a[14] = -d,
        a[3] = 0,
        a[7] = 0,
        a[11] = 0,
        a[15] = 1,
        this
    },
    equals: function(e) {
        for (var t = this.elements, n = e.elements, i = 0; i < 16; i++)
            if (t[i] !== n[i])
                return !1;
        return !0
    },
    fromArray: function(e) {
        return this.elements.set(e),
        this
    },
    toArray: function(e, t) {
        void 0 === e && (e = []),
        void 0 === t && (t = 0);
        var n = this.elements;
        return e[t] = n[0],
        e[t + 1] = n[1],
        e[t + 2] = n[2],
        e[t + 3] = n[3],
        e[t + 4] = n[4],
        e[t + 5] = n[5],
        e[t + 6] = n[6],
        e[t + 7] = n[7],
        e[t + 8] = n[8],
        e[t + 9] = n[9],
        e[t + 10] = n[10],
        e[t + 11] = n[11],
        e[t + 12] = n[12],
        e[t + 13] = n[13],
        e[t + 14] = n[14],
        e[t + 15] = n[15],
        e
    }
},
THREE.Ray = function(e, t) {
    this.origin = void 0 !== e ? e : new THREE.Vector3,
    this.direction = void 0 !== t ? t : new THREE.Vector3
}
,
THREE.Ray.prototype = {
    constructor: THREE.Ray,
    set: function(e, t) {
        return this.origin.copy(e),
        this.direction.copy(t),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.origin.copy(e.origin),
        this.direction.copy(e.direction),
        this
    },
    at: function(e, t) {
        var n = t || new THREE.Vector3;
        return n.copy(this.direction).multiplyScalar(e).add(this.origin)
    },
    lookAt: function(e) {
        return this.direction.copy(e).sub(this.origin).normalize(),
        this
    },
    recast: function() {
        var e = new THREE.Vector3;
        return function(t) {
            return this.origin.copy(this.at(t, e)),
            this
        }
    }(),
    closestPointToPoint: function(e, t) {
        var n = t || new THREE.Vector3;
        n.subVectors(e, this.origin);
        var i = n.dot(this.direction);
        return i < 0 ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(i).add(this.origin)
    },
    distanceToPoint: function(e) {
        return Math.sqrt(this.distanceSqToPoint(e))
    },
    distanceSqToPoint: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var n = e.subVectors(t, this.origin).dot(this.direction);
            return n < 0 ? this.origin.distanceToSquared(t) : (e.copy(this.direction).multiplyScalar(n).add(this.origin),
            e.distanceToSquared(t))
        }
    }(),
    distanceSqToSegment: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3
          , n = new THREE.Vector3;
        return function(i, r, o, a) {
            e.copy(i).add(r).multiplyScalar(.5),
            t.copy(r).sub(i).normalize(),
            n.copy(this.origin).sub(e);
            var s, c, l, u, h = .5 * i.distanceTo(r), d = -this.direction.dot(t), p = n.dot(this.direction), f = -n.dot(t), m = n.lengthSq(), g = Math.abs(1 - d * d);
            if (g > 0)
                if (s = d * f - p,
                c = d * p - f,
                u = h * g,
                s >= 0)
                    if (c >= -u)
                        if (c <= u) {
                            var v = 1 / g;
                            s *= v,
                            c *= v,
                            l = s * (s + d * c + 2 * p) + c * (d * s + c + 2 * f) + m
                        } else
                            c = h,
                            s = Math.max(0, -(d * c + p)),
                            l = -s * s + c * (c + 2 * f) + m;
                    else
                        c = -h,
                        s = Math.max(0, -(d * c + p)),
                        l = -s * s + c * (c + 2 * f) + m;
                else
                    c <= -u ? (s = Math.max(0, -(-d * h + p)),
                    c = s > 0 ? -h : Math.min(Math.max(-h, -f), h),
                    l = -s * s + c * (c + 2 * f) + m) : c <= u ? (s = 0,
                    c = Math.min(Math.max(-h, -f), h),
                    l = c * (c + 2 * f) + m) : (s = Math.max(0, -(d * h + p)),
                    c = s > 0 ? h : Math.min(Math.max(-h, -f), h),
                    l = -s * s + c * (c + 2 * f) + m);
            else
                c = d > 0 ? -h : h,
                s = Math.max(0, -(d * c + p)),
                l = -s * s + c * (c + 2 * f) + m;
            return o && o.copy(this.direction).multiplyScalar(s).add(this.origin),
            a && a.copy(t).multiplyScalar(c).add(e),
            l
        }
    }(),
    intersectSphere: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            e.subVectors(t.center, this.origin);
            var i = e.dot(this.direction)
              , r = e.dot(e) - i * i
              , o = t.radius * t.radius;
            if (r > o)
                return null;
            var a = Math.sqrt(o - r)
              , s = i - a
              , c = i + a;
            return s < 0 && c < 0 ? null : s < 0 ? this.at(c, n) : this.at(s, n)
        }
    }(),
    intersectsSphere: function(e) {
        return this.distanceToPoint(e.center) <= e.radius
    },
    distanceToPlane: function(e) {
        var t = e.normal.dot(this.direction);
        if (0 === t)
            return 0 === e.distanceToPoint(this.origin) ? 0 : null;
        var n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null
    },
    intersectPlane: function(e, t) {
        var n = this.distanceToPlane(e);
        return null === n ? null : this.at(n, t)
    },
    intersectsPlane: function(e) {
        var t = e.distanceToPoint(this.origin);
        if (0 === t)
            return !0;
        var n = e.normal.dot(this.direction);
        return n * t < 0
    },
    intersectBox: function(e, t) {
        var n, i, r, o, a, s, c = 1 / this.direction.x, l = 1 / this.direction.y, u = 1 / this.direction.z, h = this.origin;
        return c >= 0 ? (n = (e.min.x - h.x) * c,
        i = (e.max.x - h.x) * c) : (n = (e.max.x - h.x) * c,
        i = (e.min.x - h.x) * c),
        l >= 0 ? (r = (e.min.y - h.y) * l,
        o = (e.max.y - h.y) * l) : (r = (e.max.y - h.y) * l,
        o = (e.min.y - h.y) * l),
        n > o || r > i ? null : ((r > n || n !== n) && (n = r),
        (o < i || i !== i) && (i = o),
        u >= 0 ? (a = (e.min.z - h.z) * u,
        s = (e.max.z - h.z) * u) : (a = (e.max.z - h.z) * u,
        s = (e.min.z - h.z) * u),
        n > s || a > i ? null : ((a > n || n !== n) && (n = a),
        (s < i || i !== i) && (i = s),
        i < 0 ? null : this.at(n >= 0 ? n : i, t)))
    },
    intersectsBox: function() {
        var e = new THREE.Vector3;
        return function(t) {
            return null !== this.intersectBox(t, e)
        }
    }(),
    intersectTriangle: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3
          , n = new THREE.Vector3
          , i = new THREE.Vector3;
        return function(r, o, a, s, c) {
            t.subVectors(o, r),
            n.subVectors(a, r),
            i.crossVectors(t, n);
            var l, u = this.direction.dot(i);
            if (u > 0) {
                if (s)
                    return null;
                l = 1
            } else {
                if (!(u < 0))
                    return null;
                l = -1,
                u = -u
            }
            e.subVectors(this.origin, r);
            var h = l * this.direction.dot(n.crossVectors(e, n));
            if (h < 0)
                return null;
            var d = l * this.direction.dot(t.cross(e));
            if (d < 0)
                return null;
            if (h + d > u)
                return null;
            var p = -l * e.dot(i);
            return p < 0 ? null : this.at(p / u, c)
        }
    }(),
    applyMatrix4: function(e) {
        return this.direction.add(this.origin).applyMatrix4(e),
        this.origin.applyMatrix4(e),
        this.direction.sub(this.origin),
        this.direction.normalize(),
        this
    },
    equals: function(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction)
    }
},
THREE.Sphere = function(e, t) {
    this.center = void 0 !== e ? e : new THREE.Vector3,
    this.radius = void 0 !== t ? t : 0
}
,
THREE.Sphere.prototype = {
    constructor: THREE.Sphere,
    set: function(e, t) {
        return this.center.copy(e),
        this.radius = t,
        this
    },
    setFromPoints: function() {
        var e = new THREE.Box3;
        return function(t, n) {
            var i = this.center;
            void 0 !== n ? i.copy(n) : e.setFromPoints(t).center(i);
            for (var r = 0, o = 0, a = t.length; o < a; o++)
                r = Math.max(r, i.distanceToSquared(t[o]));
            return this.radius = Math.sqrt(r),
            this
        }
    }(),
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.center.copy(e.center),
        this.radius = e.radius,
        this
    },
    empty: function() {
        return this.radius <= 0
    },
    containsPoint: function(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius
    },
    distanceToPoint: function(e) {
        return e.distanceTo(this.center) - this.radius
    },
    intersectsSphere: function(e) {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t
    },
    intersectsBox: function(e) {
        return e.intersectsSphere(this)
    },
    intersectsPlane: function(e) {
        return Math.abs(this.center.dot(e.normal) - e.constant) <= this.radius
    },
    clampPoint: function(e, t) {
        var n = this.center.distanceToSquared(e)
          , i = t || new THREE.Vector3;
        return i.copy(e),
        n > this.radius * this.radius && (i.sub(this.center).normalize(),
        i.multiplyScalar(this.radius).add(this.center)),
        i
    },
    getBoundingBox: function(e) {
        var t = e || new THREE.Box3;
        return t.set(this.center, this.center),
        t.expandByScalar(this.radius),
        t
    },
    applyMatrix4: function(e) {
        return this.center.applyMatrix4(e),
        this.radius = this.radius * e.getMaxScaleOnAxis(),
        this
    },
    translate: function(e) {
        return this.center.add(e),
        this
    },
    equals: function(e) {
        return e.center.equals(this.center) && e.radius === this.radius
    }
},
THREE.Frustum = function(e, t, n, i, r, o) {
    this.planes = [void 0 !== e ? e : new THREE.Plane, void 0 !== t ? t : new THREE.Plane, void 0 !== n ? n : new THREE.Plane, void 0 !== i ? i : new THREE.Plane, void 0 !== r ? r : new THREE.Plane, void 0 !== o ? o : new THREE.Plane]
}
,
THREE.Frustum.prototype = {
    constructor: THREE.Frustum,
    set: function(e, t, n, i, r, o) {
        var a = this.planes;
        return a[0].copy(e),
        a[1].copy(t),
        a[2].copy(n),
        a[3].copy(i),
        a[4].copy(r),
        a[5].copy(o),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        for (var t = this.planes, n = 0; n < 6; n++)
            t[n].copy(e.planes[n]);
        return this
    },
    setFromMatrix: function(e) {
        var t = this.planes
          , n = e.elements
          , i = n[0]
          , r = n[1]
          , o = n[2]
          , a = n[3]
          , s = n[4]
          , c = n[5]
          , l = n[6]
          , u = n[7]
          , h = n[8]
          , d = n[9]
          , p = n[10]
          , f = n[11]
          , m = n[12]
          , g = n[13]
          , v = n[14]
          , E = n[15];
        return t[0].setComponents(a - i, u - s, f - h, E - m).normalize(),
        t[1].setComponents(a + i, u + s, f + h, E + m).normalize(),
        t[2].setComponents(a + r, u + c, f + d, E + g).normalize(),
        t[3].setComponents(a - r, u - c, f - d, E - g).normalize(),
        t[4].setComponents(a - o, u - l, f - p, E - v).normalize(),
        t[5].setComponents(a + o, u + l, f + p, E + v).normalize(),
        this
    },
    intersectsObject: function() {
        var e = new THREE.Sphere;
        return function(t) {
            var n = t.geometry;
            return null === n.boundingSphere && n.computeBoundingSphere(),
            e.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),
            this.intersectsSphere(e)
        }
    }(),
    intersectsSprite: function() {
        var e = new THREE.Sphere;
        return function(t) {
            return e.center.set(0, 0, 0),
            e.radius = .7071067811865476,
            e.applyMatrix4(t.matrixWorld),
            this.intersectsSphere(e)
        }
    }(),
    intersectsSphere: function(e) {
        for (var t = this.planes, n = e.center, i = -e.radius, r = 0; r < 6; r++) {
            var o = t[r].distanceToPoint(n);
            if (o < i)
                return !1
        }
        return !0
    },
    intersectsBox: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(n) {
            for (var i = this.planes, r = 0; r < 6; r++) {
                var o = i[r];
                e.x = o.normal.x > 0 ? n.min.x : n.max.x,
                t.x = o.normal.x > 0 ? n.max.x : n.min.x,
                e.y = o.normal.y > 0 ? n.min.y : n.max.y,
                t.y = o.normal.y > 0 ? n.max.y : n.min.y,
                e.z = o.normal.z > 0 ? n.min.z : n.max.z,
                t.z = o.normal.z > 0 ? n.max.z : n.min.z;
                var a = o.distanceToPoint(e)
                  , s = o.distanceToPoint(t);
                if (a < 0 && s < 0)
                    return !1
            }
            return !0
        }
    }(),
    containsPoint: function(e) {
        for (var t = this.planes, n = 0; n < 6; n++)
            if (t[n].distanceToPoint(e) < 0)
                return !1;
        return !0
    }
},
THREE.Plane = function(e, t) {
    this.normal = void 0 !== e ? e : new THREE.Vector3(1,0,0),
    this.constant = void 0 !== t ? t : 0
}
,
THREE.Plane.prototype = {
    constructor: THREE.Plane,
    set: function(e, t) {
        return this.normal.copy(e),
        this.constant = t,
        this
    },
    setComponents: function(e, t, n, i) {
        return this.normal.set(e, t, n),
        this.constant = i,
        this
    },
    setFromNormalAndCoplanarPoint: function(e, t) {
        return this.normal.copy(e),
        this.constant = -t.dot(this.normal),
        this
    },
    setFromCoplanarPoints: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(n, i, r) {
            var o = e.subVectors(r, i).cross(t.subVectors(n, i)).normalize();
            return this.setFromNormalAndCoplanarPoint(o, n),
            this
        }
    }(),
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.normal.copy(e.normal),
        this.constant = e.constant,
        this
    },
    normalize: function() {
        var e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e),
        this.constant *= e,
        this
    },
    negate: function() {
        return this.constant *= -1,
        this.normal.negate(),
        this
    },
    distanceToPoint: function(e) {
        return this.normal.dot(e) + this.constant
    },
    distanceToSphere: function(e) {
        return this.distanceToPoint(e.center) - e.radius
    },
    projectPoint: function(e, t) {
        return this.orthoPoint(e, t).sub(e).negate()
    },
    orthoPoint: function(e, t) {
        var n = this.distanceToPoint(e)
          , i = t || new THREE.Vector3;
        return i.copy(this.normal).multiplyScalar(n)
    },
    intersectLine: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            var i = n || new THREE.Vector3
              , r = t.delta(e)
              , o = this.normal.dot(r);
            if (0 !== o) {
                var a = -(t.start.dot(this.normal) + this.constant) / o;
                if (!(a < 0 || a > 1))
                    return i.copy(r).multiplyScalar(a).add(t.start)
            } else if (0 === this.distanceToPoint(t.start))
                return i.copy(t.start)
        }
    }(),
    intersectsLine: function(e) {
        var t = this.distanceToPoint(e.start)
          , n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0
    },
    intersectsBox: function(e) {
        return e.intersectsPlane(this)
    },
    intersectsSphere: function(e) {
        return e.intersectsPlane(this)
    },
    coplanarPoint: function(e) {
        var t = e || new THREE.Vector3;
        return t.copy(this.normal).multiplyScalar(-this.constant)
    },
    applyMatrix4: function() {
        var e = new THREE.Vector3
          , t = new THREE.Matrix3;
        return function(n, i) {
            var r = this.coplanarPoint(e).applyMatrix4(n)
              , o = i || t.getNormalMatrix(n)
              , a = this.normal.applyMatrix3(o).normalize();
            return this.constant = -r.dot(a),
            this
        }
    }(),
    translate: function(e) {
        return this.constant = this.constant - e.dot(this.normal),
        this
    },
    equals: function(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant
    }
},
THREE.Spherical = function(e, t, n) {
    return this.radius = void 0 !== e ? e : 1,
    this.phi = void 0 !== t ? t : 0,
    this.theta = void 0 !== n ? n : 0,
    this
}
,
THREE.Spherical.prototype = {
    constructor: THREE.Spherical,
    set: function(e, t, n) {
        return this.radius = e,
        this.phi = t,
        this.theta = n,
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.radius.copy(e.radius),
        this.phi.copy(e.phi),
        this.theta.copy(e.theta),
        this
    },
    makeSafe: function() {
        var e = 1e-6;
        return this.phi = Math.max(e, Math.min(Math.PI - e, this.phi)),
        this
    },
    setFromVector3: function(e) {
        return this.radius = e.length(),
        0 === this.radius ? (this.theta = 0,
        this.phi = 0) : (this.theta = Math.atan2(e.x, e.z),
        this.phi = Math.acos(THREE.Math.clamp(e.y / this.radius, -1, 1))),
        this
    }
},
THREE.Math = {
    DEG2RAD: Math.PI / 180,
    RAD2DEG: 180 / Math.PI,
    generateUUID: function() {
        var e, t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), n = new Array(36), i = 0;
        return function() {
            for (var r = 0; r < 36; r++)
                8 === r || 13 === r || 18 === r || 23 === r ? n[r] = "-" : 14 === r ? n[r] = "4" : (i <= 2 && (i = 33554432 + 16777216 * Math.random() | 0),
                e = 15 & i,
                i >>= 4,
                n[r] = t[19 === r ? 3 & e | 8 : e]);
            return n.join("")
        }
    }(),
    clamp: function(e, t, n) {
        return Math.max(t, Math.min(n, e))
    },
    euclideanModulo: function(e, t) {
        return (e % t + t) % t
    },
    mapLinear: function(e, t, n, i, r) {
        return i + (e - t) * (r - i) / (n - t)
    },
    smoothstep: function(e, t, n) {
        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t),
        e * e * (3 - 2 * e))
    },
    smootherstep: function(e, t, n) {
        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t),
        e * e * e * (e * (6 * e - 15) + 10))
    },
    random16: function() {
        return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),
        Math.random()
    },
    randInt: function(e, t) {
        return e + Math.floor(Math.random() * (t - e + 1))
    },
    randFloat: function(e, t) {
        return e + Math.random() * (t - e)
    },
    randFloatSpread: function(e) {
        return e * (.5 - Math.random())
    },
    degToRad: function(e) {
        return e * THREE.Math.DEG2RAD
    },
    radToDeg: function(e) {
        return e * THREE.Math.RAD2DEG
    },
    isPowerOfTwo: function(e) {
        return 0 === (e & e - 1) && 0 !== e
    },
    nearestPowerOfTwo: function(e) {
        return Math.pow(2, Math.round(Math.log(e) / Math.LN2))
    },
    nextPowerOfTwo: function(e) {
        return e--,
        e |= e >> 1,
        e |= e >> 2,
        e |= e >> 4,
        e |= e >> 8,
        e |= e >> 16,
        e++,
        e
    }
},
THREE.Spline = function(e) {
    function t(e, t, n, i, r, o, a) {
        var s = .5 * (n - e)
          , c = .5 * (i - t);
        return (2 * (t - n) + s + c) * a + (-3 * (t - n) - 2 * s - c) * o + s * r + t
    }
    this.points = e;
    var n, i, r, o, a, s, c, l, u, h = [], d = {
        x: 0,
        y: 0,
        z: 0
    };
    this.initFromArray = function(e) {
        this.points = [];
        for (var t = 0; t < e.length; t++)
            this.points[t] = {
                x: e[t][0],
                y: e[t][1],
                z: e[t][2]
            }
    }
    ,
    this.getPoint = function(e) {
        return n = (this.points.length - 1) * e,
        i = Math.floor(n),
        r = n - i,
        h[0] = 0 === i ? i : i - 1,
        h[1] = i,
        h[2] = i > this.points.length - 2 ? this.points.length - 1 : i + 1,
        h[3] = i > this.points.length - 3 ? this.points.length - 1 : i + 2,
        s = this.points[h[0]],
        c = this.points[h[1]],
        l = this.points[h[2]],
        u = this.points[h[3]],
        o = r * r,
        a = r * o,
        d.x = t(s.x, c.x, l.x, u.x, r, o, a),
        d.y = t(s.y, c.y, l.y, u.y, r, o, a),
        d.z = t(s.z, c.z, l.z, u.z, r, o, a),
        d
    }
    ,
    this.getControlPointsArray = function() {
        var e, t, n = this.points.length, i = [];
        for (e = 0; e < n; e++)
            t = this.points[e],
            i[e] = [t.x, t.y, t.z];
        return i
    }
    ,
    this.getLength = function(e) {
        var t, n, i, r, o = 0, a = 0, s = 0, c = new THREE.Vector3, l = new THREE.Vector3, u = [], h = 0;
        for (u[0] = 0,
        e || (e = 100),
        i = this.points.length * e,
        c.copy(this.points[0]),
        t = 1; t < i; t++)
            n = t / i,
            r = this.getPoint(n),
            l.copy(r),
            h += l.distanceTo(c),
            c.copy(r),
            o = (this.points.length - 1) * n,
            a = Math.floor(o),
            a !== s && (u[a] = h,
            s = a);
        return u[u.length] = h,
        {
            chunks: u,
            total: h
        }
    }
    ,
    this.reparametrizeByArcLength = function(e) {
        var t, n, i, r, o, a, s, c, l = [], u = new THREE.Vector3, h = this.getLength();
        for (l.push(u.copy(this.points[0]).clone()),
        t = 1; t < this.points.length; t++) {
            for (a = h.chunks[t] - h.chunks[t - 1],
            s = Math.ceil(e * a / h.total),
            r = (t - 1) / (this.points.length - 1),
            o = t / (this.points.length - 1),
            n = 1; n < s - 1; n++)
                i = r + n * (1 / s) * (o - r),
                c = this.getPoint(i),
                l.push(u.copy(c).clone());
            l.push(u.copy(this.points[t]).clone())
        }
        this.points = l
    }
}
,
THREE.Triangle = function(e, t, n) {
    this.a = void 0 !== e ? e : new THREE.Vector3,
    this.b = void 0 !== t ? t : new THREE.Vector3,
    this.c = void 0 !== n ? n : new THREE.Vector3
}
,
THREE.Triangle.normal = function() {
    var e = new THREE.Vector3;
    return function(t, n, i, r) {
        var o = r || new THREE.Vector3;
        o.subVectors(i, n),
        e.subVectors(t, n),
        o.cross(e);
        var a = o.lengthSq();
        return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0)
    }
}(),
THREE.Triangle.barycoordFromPoint = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , n = new THREE.Vector3;
    return function(i, r, o, a, s) {
        e.subVectors(a, r),
        t.subVectors(o, r),
        n.subVectors(i, r);
        var c = e.dot(e)
          , l = e.dot(t)
          , u = e.dot(n)
          , h = t.dot(t)
          , d = t.dot(n)
          , p = c * h - l * l
          , f = s || new THREE.Vector3;
        if (0 === p)
            return f.set(-2, -1, -1);
        var m = 1 / p
          , g = (h * u - l * d) * m
          , v = (c * d - l * u) * m;
        return f.set(1 - g - v, v, g)
    }
}(),
THREE.Triangle.containsPoint = function() {
    var e = new THREE.Vector3;
    return function(t, n, i, r) {
        var o = THREE.Triangle.barycoordFromPoint(t, n, i, r, e);
        return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1
    }
}(),
THREE.Triangle.prototype = {
    constructor: THREE.Triangle,
    set: function(e, t, n) {
        return this.a.copy(e),
        this.b.copy(t),
        this.c.copy(n),
        this
    },
    setFromPointsAndIndices: function(e, t, n, i) {
        return this.a.copy(e[t]),
        this.b.copy(e[n]),
        this.c.copy(e[i]),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.a.copy(e.a),
        this.b.copy(e.b),
        this.c.copy(e.c),
        this
    },
    area: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function() {
            return e.subVectors(this.c, this.b),
            t.subVectors(this.a, this.b),
            .5 * e.cross(t).length()
        }
    }(),
    midpoint: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    },
    normal: function(e) {
        return THREE.Triangle.normal(this.a, this.b, this.c, e)
    },
    plane: function(e) {
        var t = e || new THREE.Plane;
        return t.setFromCoplanarPoints(this.a, this.b, this.c)
    },
    barycoordFromPoint: function(e, t) {
        return THREE.Triangle.barycoordFromPoint(e, this.a, this.b, this.c, t)
    },
    containsPoint: function(e) {
        return THREE.Triangle.containsPoint(e, this.a, this.b, this.c)
    },
    closestPointToPoint: function() {
        var e, t, n, i;
        return function(r, o) {
            void 0 === e && (e = new THREE.Plane,
            t = [new THREE.Line3, new THREE.Line3, new THREE.Line3],
            n = new THREE.Vector3,
            i = new THREE.Vector3);
            var a = o || new THREE.Vector3
              , s = 1 / 0;
            if (e.setFromCoplanarPoints(this.a, this.b, this.c),
            e.projectPoint(r, n),
            this.containsPoint(n) === !0)
                a.copy(n);
            else {
                t[0].set(this.a, this.b),
                t[1].set(this.b, this.c),
                t[2].set(this.c, this.a);
                for (var c = 0; c < t.length; c++) {
                    t[c].closestPointToPoint(n, !0, i);
                    var l = n.distanceToSquared(i);
                    l < s && (s = l,
                    a.copy(i))
                }
            }
            return a
        }
    }(),
    equals: function(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
    }
},
THREE.Interpolant = function(e, t, n, i) {
    this.parameterPositions = e,
    this._cachedIndex = 0,
    this.resultBuffer = void 0 !== i ? i : new t.constructor(n),
    this.sampleValues = t,
    this.valueSize = n
}
,
THREE.Interpolant.prototype = {
    constructor: THREE.Interpolant,
    evaluate: function(e) {
        var t = this.parameterPositions
          , n = this._cachedIndex
          , i = t[n]
          , r = t[n - 1];
        e: {
            t: {
                var o;
                n: {
                    i: if (!(e < i)) {
                        for (var a = n + 2; ; ) {
                            if (void 0 === i) {
                                if (e < r)
                                    break i;
                                return n = t.length,
                                this._cachedIndex = n,
                                this.afterEnd_(n - 1, e, r)
                            }
                            if (n === a)
                                break;
                            if (r = i,
                            i = t[++n],
                            e < i)
                                break t
                        }
                        o = t.length;
                        break n
                    }
                    {
                        if (e >= r)
                            break e;
                        var s = t[1];
                        e < s && (n = 2,
                        r = s);
                        for (var a = n - 2; ; ) {
                            if (void 0 === r)
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, e, i);
                            if (n === a)
                                break;
                            if (i = r,
                            r = t[--n - 1],
                            e >= r)
                                break t
                        }
                        o = n,
                        n = 0
                    }
                }
                for (; n < o; ) {
                    var c = n + o >>> 1;
                    e < t[c] ? o = c : n = c + 1
                }
                if (i = t[n],
                r = t[n - 1],
                void 0 === r)
                    return this._cachedIndex = 0,
                    this.beforeStart_(0, e, i);
                if (void 0 === i)
                    return n = t.length,
                    this._cachedIndex = n,
                    this.afterEnd_(n - 1, r, e)
            }
            this._cachedIndex = n,
            this.intervalChanged_(n, r, i)
        }
        return this.interpolate_(n, r, e, i)
    },
    settings: null,
    DefaultSettings_: {},
    getSettings_: function() {
        return this.settings || this.DefaultSettings_
    },
    copySampleValue_: function(e) {
        for (var t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i, o = 0; o !== i; ++o)
            t[o] = n[r + o];
        return t
    },
    interpolate_: function(e, t, n, i) {
        throw new Error("call to abstract method")
    },
    intervalChanged_: function(e, t, n) {}
},
Object.assign(THREE.Interpolant.prototype, {
    beforeStart_: THREE.Interpolant.prototype.copySampleValue_,
    afterEnd_: THREE.Interpolant.prototype.copySampleValue_
}),
THREE.CubicInterpolant = function(e, t, n, i) {
    THREE.Interpolant.call(this, e, t, n, i),
    this._weightPrev = -0,
    this._offsetPrev = -0,
    this._weightNext = -0,
    this._offsetNext = -0
}
,
THREE.CubicInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.CubicInterpolant,
    DefaultSettings_: {
        endingStart: THREE.ZeroCurvatureEnding,
        endingEnd: THREE.ZeroCurvatureEnding
    },
    intervalChanged_: function(e, t, n) {
        var i = this.parameterPositions
          , r = e - 2
          , o = e + 1
          , a = i[r]
          , s = i[o];
        if (void 0 === a)
            switch (this.getSettings_().endingStart) {
            case THREE.ZeroSlopeEnding:
                r = e,
                a = 2 * t - n;
                break;
            case THREE.WrapAroundEnding:
                r = i.length - 2,
                a = t + i[r] - i[r + 1];
                break;
            default:
                r = e,
                a = n
            }
        if (void 0 === s)
            switch (this.getSettings_().endingEnd) {
            case THREE.ZeroSlopeEnding:
                o = e,
                s = 2 * n - t;
                break;
            case THREE.WrapAroundEnding:
                o = 1,
                s = n + i[1] - i[0];
                break;
            default:
                o = e - 1,
                s = t
            }
        var c = .5 * (n - t)
          , l = this.valueSize;
        this._weightPrev = c / (t - a),
        this._weightNext = c / (s - n),
        this._offsetPrev = r * l,
        this._offsetNext = o * l
    },
    interpolate_: function(e, t, n, i) {
        for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (n - t) / (i - t), f = p * p, m = f * p, g = -h * m + 2 * h * f - h * p, v = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, E = (-1 - d) * m + (1.5 + d) * f + .5 * p, y = d * m - d * f, b = 0; b !== a; ++b)
            r[b] = g * o[l + b] + v * o[c + b] + E * o[s + b] + y * o[u + b];
        return r
    }
}),
THREE.DiscreteInterpolant = function(e, t, n, i) {
    THREE.Interpolant.call(this, e, t, n, i)
}
,
THREE.DiscreteInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.DiscreteInterpolant,
    interpolate_: function(e, t, n, i) {
        return this.copySampleValue_(e - 1)
    }
}),
THREE.LinearInterpolant = function(e, t, n, i) {
    THREE.Interpolant.call(this, e, t, n, i)
}
,
THREE.LinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.LinearInterpolant,
    interpolate_: function(e, t, n, i) {
        for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = (n - t) / (i - t), u = 1 - l, h = 0; h !== a; ++h)
            r[h] = o[c + h] * u + o[s + h] * l;
        return r
    }
}),
THREE.QuaternionLinearInterpolant = function(e, t, n, i) {
    THREE.Interpolant.call(this, e, t, n, i)
}
,
THREE.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.QuaternionLinearInterpolant,
    interpolate_: function(e, t, n, i) {
        for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = (n - t) / (i - t), l = s + a; s !== l; s += 4)
            THREE.Quaternion.slerpFlat(r, 0, o, s - a, o, s, c);
        return r
    }
}),
THREE.Clock = function(e) {
    this.autoStart = void 0 === e || e,
    this.startTime = 0,
    this.oldTime = 0,
    this.elapsedTime = 0,
    this.running = !1
}
,
THREE.Clock.prototype = {
    constructor: THREE.Clock,
    start: function() {
        this.startTime = (performance || Date).now(),
        this.oldTime = this.startTime,
        this.running = !0
    },
    stop: function() {
        this.getElapsedTime(),
        this.running = !1
    },
    getElapsedTime: function() {
        return this.getDelta(),
        this.elapsedTime
    },
    getDelta: function() {
        var e = 0;
        if (this.autoStart && !this.running && this.start(),
        this.running) {
            var t = (performance || Date).now();
            e = (t - this.oldTime) / 1e3,
            this.oldTime = t,
            this.elapsedTime += e
        }
        return e
    }
},
THREE.EventDispatcher = function() {}
,
Object.assign(THREE.EventDispatcher.prototype, {
    addEventListener: function(e, t) {
        void 0 === this._listeners && (this._listeners = {});
        var n = this._listeners;
        void 0 === n[e] && (n[e] = []),
        n[e].indexOf(t) === -1 && n[e].push(t)
    },
    hasEventListener: function(e, t) {
        if (void 0 === this._listeners)
            return !1;
        var n = this._listeners;
        return void 0 !== n[e] && n[e].indexOf(t) !== -1
    },
    removeEventListener: function(e, t) {
        if (void 0 !== this._listeners) {
            var n = this._listeners
              , i = n[e];
            if (void 0 !== i) {
                var r = i.indexOf(t);
                r !== -1 && i.splice(r, 1)
            }
        }
    },
    dispatchEvent: function(e) {
        if (void 0 !== this._listeners) {
            var t = this._listeners
              , n = t[e.type];
            if (void 0 !== n) {
                e.target = this;
                var i = []
                  , r = 0
                  , o = n.length;
                for (r = 0; r < o; r++)
                    i[r] = n[r];
                for (r = 0; r < o; r++)
                    i[r].call(this, e)
            }
        }
    }
}),
THREE.Layers = function() {
    this.mask = 1
}
,
THREE.Layers.prototype = {
    constructor: THREE.Layers,
    set: function(e) {
        this.mask = 1 << e
    },
    enable: function(e) {
        this.mask |= 1 << e
    },
    toggle: function(e) {
        this.mask ^= 1 << e
    },
    disable: function(e) {
        this.mask &= ~(1 << e)
    },
    test: function(e) {
        return 0 !== (this.mask & e.mask)
    }
},
function(e) {
    function t(e, t) {
        return e.distance - t.distance
    }
    function n(e, t, i, r) {
        if (e.visible !== !1 && (e.raycast(t, i),
        r === !0))
            for (var o = e.children, a = 0, s = o.length; a < s; a++)
                n(o[a], t, i, !0)
    }
    e.Raycaster = function(t, n, i, r) {
        this.ray = new e.Ray(t,n),
        this.near = i || 0,
        this.far = r || 1 / 0,
        this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    ,
    e.Raycaster.prototype = {
        constructor: e.Raycaster,
        linePrecision: 1,
        set: function(e, t) {
            this.ray.set(e, t)
        },
        setFromCamera: function(t, n) {
            n instanceof e.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld),
            this.ray.direction.set(t.x, t.y, .5).unproject(n).sub(this.ray.origin).normalize()) : n instanceof e.OrthographicCamera ? (this.ray.origin.set(t.x, t.y, (n.near + n.far) / (n.near - n.far)).unproject(n),
            this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(e, i) {
            var r = [];
            return n(e, this, r, i),
            r.sort(t),
            r
        },
        intersectObjects: function(e, i) {
            var r = [];
            if (Array.isArray(e) === !1)
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var o = 0, a = e.length; o < a; o++)
                n(e[o], this, r, i);
            return r.sort(t),
            r
        }
    }
}(THREE),
THREE.Object3D = function() {
    function e() {
        r.setFromEuler(i, !1)
    }
    function t() {
        i.setFromQuaternion(r, void 0, !1)
    }
    Object.defineProperty(this, "id", {
        value: THREE.Object3DIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Object3D",
    this.parent = null,
    this.children = [],
    this.up = THREE.Object3D.DefaultUp.clone();
    var n = new THREE.Vector3
      , i = new THREE.Euler
      , r = new THREE.Quaternion
      , o = new THREE.Vector3(1,1,1);
    i.onChange(e),
    r.onChange(t),
    Object.defineProperties(this, {
        position: {
            enumerable: !0,
            value: n
        },
        rotation: {
            enumerable: !0,
            value: i
        },
        quaternion: {
            enumerable: !0,
            value: r
        },
        scale: {
            enumerable: !0,
            value: o
        },
        modelViewMatrix: {
            value: new THREE.Matrix4
        },
        normalMatrix: {
            value: new THREE.Matrix3
        }
    }),
    this.matrix = new THREE.Matrix4,
    this.matrixWorld = new THREE.Matrix4,
    this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate,
    this.matrixWorldNeedsUpdate = !1,
    this.layers = new THREE.Layers,
    this.visible = !0,
    this.castShadow = !1,
    this.receiveShadow = !1,
    this.frustumCulled = !0,
    this.renderOrder = 0,
    this.userData = {}
}
,
THREE.Object3D.DefaultUp = new THREE.Vector3(0,1,0),
THREE.Object3D.DefaultMatrixAutoUpdate = !0,
Object.assign(THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {
    applyMatrix: function(e) {
        this.matrix.multiplyMatrices(e, this.matrix),
        this.matrix.decompose(this.position, this.quaternion, this.scale)
    },
    setRotationFromAxisAngle: function(e, t) {
        this.quaternion.setFromAxisAngle(e, t)
    },
    setRotationFromEuler: function(e) {
        this.quaternion.setFromEuler(e, !0)
    },
    setRotationFromMatrix: function(e) {
        this.quaternion.setFromRotationMatrix(e)
    },
    setRotationFromQuaternion: function(e) {
        this.quaternion.copy(e)
    },
    rotateOnAxis: function() {
        var e = new THREE.Quaternion;
        return function(t, n) {
            return e.setFromAxisAngle(t, n),
            this.quaternion.multiply(e),
            this
        }
    }(),
    rotateX: function() {
        var e = new THREE.Vector3(1,0,0);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    rotateY: function() {
        var e = new THREE.Vector3(0,1,0);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    rotateZ: function() {
        var e = new THREE.Vector3(0,0,1);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    translateOnAxis: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            return e.copy(t).applyQuaternion(this.quaternion),
            this.position.add(e.multiplyScalar(n)),
            this
        }
    }(),
    translateX: function() {
        var e = new THREE.Vector3(1,0,0);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    translateY: function() {
        var e = new THREE.Vector3(0,1,0);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    translateZ: function() {
        var e = new THREE.Vector3(0,0,1);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    localToWorld: function(e) {
        return e.applyMatrix4(this.matrixWorld)
    },
    worldToLocal: function() {
        var e = new THREE.Matrix4;
        return function(t) {
            return t.applyMatrix4(e.getInverse(this.matrixWorld))
        }
    }(),
    lookAt: function() {
        var e = new THREE.Matrix4;
        return function(t) {
            e.lookAt(t, this.position, this.up),
            this.quaternion.setFromRotationMatrix(e)
        }
    }(),
    add: function(e) {
        if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++)
                this.add(arguments[t]);
            return this
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e),
        this) : (e instanceof THREE.Object3D ? (null !== e.parent && e.parent.remove(e),
        e.parent = this,
        e.dispatchEvent({
            type: "added"
        }),
        this.children.push(e)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e),
        this)
    },
    remove: function(e) {
        if (arguments.length > 1)
            for (var t = 0; t < arguments.length; t++)
                this.remove(arguments[t]);
        var n = this.children.indexOf(e);
        n !== -1 && (e.parent = null,
        e.dispatchEvent({
            type: "removed"
        }),
        this.children.splice(n, 1))
    },
    getObjectById: function(e) {
        return this.getObjectByProperty("id", e)
    },
    getObjectByName: function(e) {
        return this.getObjectByProperty("name", e)
    },
    getObjectByProperty: function(e, t) {
        if (this[e] === t)
            return this;
        for (var n = 0, i = this.children.length; n < i; n++) {
            var r = this.children[n]
              , o = r.getObjectByProperty(e, t);
            if (void 0 !== o)
                return o
        }
    },
    getWorldPosition: function(e) {
        var t = e || new THREE.Vector3;
        return this.updateMatrixWorld(!0),
        t.setFromMatrixPosition(this.matrixWorld)
    },
    getWorldQuaternion: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(n) {
            var i = n || new THREE.Quaternion;
            return this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(e, i, t),
            i
        }
    }(),
    getWorldRotation: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            var n = t || new THREE.Euler;
            return this.getWorldQuaternion(e),
            n.setFromQuaternion(e, this.rotation.order, !1)
        }
    }(),
    getWorldScale: function() {
        var e = new THREE.Vector3
          , t = new THREE.Quaternion;
        return function(n) {
            var i = n || new THREE.Vector3;
            return this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(e, t, i),
            i
        }
    }(),
    getWorldDirection: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            var n = t || new THREE.Vector3;
            return this.getWorldQuaternion(e),
            n.set(0, 0, 1).applyQuaternion(e)
        }
    }(),
    raycast: function() {},
    traverse: function(e) {
        e(this);
        for (var t = this.children, n = 0, i = t.length; n < i; n++)
            t[n].traverse(e)
    },
    traverseVisible: function(e) {
        if (this.visible !== !1) {
            e(this);
            for (var t = this.children, n = 0, i = t.length; n < i; n++)
                t[n].traverseVisible(e)
        }
    },
    traverseAncestors: function(e) {
        var t = this.parent;
        null !== t && (e(t),
        t.traverseAncestors(e))
    },
    updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale),
        this.matrixWorldNeedsUpdate = !0
    },
    updateMatrixWorld: function(e) {
        this.matrixAutoUpdate === !0 && this.updateMatrix(),
        this.matrixWorldNeedsUpdate !== !0 && e !== !0 || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
        this.matrixWorldNeedsUpdate = !1,
        e = !0);
        for (var t = 0, n = this.children.length; t < n; t++)
            this.children[t].updateMatrixWorld(e)
    },
    toJSON: function(e) {
        function t(e) {
            var t = [];
            for (var n in e) {
                var i = e[n];
                delete i.metadata,
                t.push(i)
            }
            return t
        }
        var n = void 0 === e || "" === e
          , i = {};
        n && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {}
        },
        i.metadata = {
            version: 4.4,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        var r = {};
        if (r.uuid = this.uuid,
        r.type = this.type,
        "" !== this.name && (r.name = this.name),
        "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
        this.castShadow === !0 && (r.castShadow = !0),
        this.receiveShadow === !0 && (r.receiveShadow = !0),
        this.visible === !1 && (r.visible = !1),
        r.matrix = this.matrix.toArray(),
        void 0 !== this.geometry && (void 0 === e.geometries[this.geometry.uuid] && (e.geometries[this.geometry.uuid] = this.geometry.toJSON(e)),
        r.geometry = this.geometry.uuid),
        void 0 !== this.material && (void 0 === e.materials[this.material.uuid] && (e.materials[this.material.uuid] = this.material.toJSON(e)),
        r.material = this.material.uuid),
        this.children.length > 0) {
            r.children = [];
            for (var o = 0; o < this.children.length; o++)
                r.children.push(this.children[o].toJSON(e).object)
        }
        if (n) {
            var a = t(e.geometries)
              , s = t(e.materials)
              , c = t(e.textures)
              , l = t(e.images);
            a.length > 0 && (i.geometries = a),
            s.length > 0 && (i.materials = s),
            c.length > 0 && (i.textures = c),
            l.length > 0 && (i.images = l)
        }
        return i.object = r,
        i
    },
    clone: function(e) {
        return (new this.constructor).copy(this, e)
    },
    copy: function(e, t) {
        if (void 0 === t && (t = !0),
        this.name = e.name,
        this.up.copy(e.up),
        this.position.copy(e.position),
        this.quaternion.copy(e.quaternion),
        this.scale.copy(e.scale),
        this.matrix.copy(e.matrix),
        this.matrixWorld.copy(e.matrixWorld),
        this.matrixAutoUpdate = e.matrixAutoUpdate,
        this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate,
        this.visible = e.visible,
        this.castShadow = e.castShadow,
        this.receiveShadow = e.receiveShadow,
        this.frustumCulled = e.frustumCulled,
        this.renderOrder = e.renderOrder,
        this.userData = JSON.parse(JSON.stringify(e.userData)),
        t === !0)
            for (var n = 0; n < e.children.length; n++) {
                var i = e.children[n];
                this.add(i.clone())
            }
        return this
    }
}),
THREE.Object3DIdCount = 0,
THREE.Face3 = function(e, t, n, i, r, o) {
    this.a = e,
    this.b = t,
    this.c = n,
    this.normal = i instanceof THREE.Vector3 ? i : new THREE.Vector3,
    this.vertexNormals = Array.isArray(i) ? i : [],
    this.color = r instanceof THREE.Color ? r : new THREE.Color,
    this.vertexColors = Array.isArray(r) ? r : [],
    this.materialIndex = void 0 !== o ? o : 0
}
,
THREE.Face3.prototype = {
    constructor: THREE.Face3,
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        this.a = e.a,
        this.b = e.b,
        this.c = e.c,
        this.normal.copy(e.normal),
        this.color.copy(e.color),
        this.materialIndex = e.materialIndex;
        for (var t = 0, n = e.vertexNormals.length; t < n; t++)
            this.vertexNormals[t] = e.vertexNormals[t].clone();
        for (var t = 0, n = e.vertexColors.length; t < n; t++)
            this.vertexColors[t] = e.vertexColors[t].clone();
        return this
    }
},
THREE.BufferAttribute = function(e, t, n) {
    this.uuid = THREE.Math.generateUUID(),
    this.array = e,
    this.itemSize = t,
    this.dynamic = !1,
    this.updateRange = {
        offset: 0,
        count: -1
    },
    this.version = 0,
    this.normalized = n === !0
}
,
THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute,
    get count() {
        return this.array.length / this.itemSize
    },
    set needsUpdate(e) {
        e === !0 && this.version++
    },
    setDynamic: function(e) {
        return this.dynamic = e,
        this
    },
    copy: function(e) {
        return this.array = new e.array.constructor(e.array),
        this.itemSize = e.itemSize,
        this.dynamic = e.dynamic,
        this
    },
    copyAt: function(e, t, n) {
        e *= this.itemSize,
        n *= t.itemSize;
        for (var i = 0, r = this.itemSize; i < r; i++)
            this.array[e + i] = t.array[n + i];
        return this
    },
    copyArray: function(e) {
        return this.array.set(e),
        this
    },
    copyColorsArray: function(e) {
        for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i),
            o = new THREE.Color),
            t[n++] = o.r,
            t[n++] = o.g,
            t[n++] = o.b
        }
        return this
    },
    copyIndicesArray: function(e) {
        for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            t[n++] = o.a,
            t[n++] = o.b,
            t[n++] = o.c
        }
        return this
    },
    copyVector2sArray: function(e) {
        for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i),
            o = new THREE.Vector2),
            t[n++] = o.x,
            t[n++] = o.y
        }
        return this
    },
    copyVector3sArray: function(e) {
        for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i),
            o = new THREE.Vector3),
            t[n++] = o.x,
            t[n++] = o.y,
            t[n++] = o.z
        }
        return this
    },
    copyVector4sArray: function(e) {
        for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i),
            o = new THREE.Vector4),
            t[n++] = o.x,
            t[n++] = o.y,
            t[n++] = o.z,
            t[n++] = o.w
        }
        return this
    },
    set: function(e, t) {
        return void 0 === t && (t = 0),
        this.array.set(e, t),
        this
    },
    getX: function(e) {
        return this.array[e * this.itemSize]
    },
    setX: function(e, t) {
        return this.array[e * this.itemSize] = t,
        this
    },
    getY: function(e) {
        return this.array[e * this.itemSize + 1]
    },
    setY: function(e, t) {
        return this.array[e * this.itemSize + 1] = t,
        this
    },
    getZ: function(e) {
        return this.array[e * this.itemSize + 2]
    },
    setZ: function(e, t) {
        return this.array[e * this.itemSize + 2] = t,
        this
    },
    getW: function(e) {
        return this.array[e * this.itemSize + 3]
    },
    setW: function(e, t) {
        return this.array[e * this.itemSize + 3] = t,
        this
    },
    setXY: function(e, t, n) {
        return e *= this.itemSize,
        this.array[e + 0] = t,
        this.array[e + 1] = n,
        this
    },
    setXYZ: function(e, t, n, i) {
        return e *= this.itemSize,
        this.array[e + 0] = t,
        this.array[e + 1] = n,
        this.array[e + 2] = i,
        this
    },
    setXYZW: function(e, t, n, i, r) {
        return e *= this.itemSize,
        this.array[e + 0] = t,
        this.array[e + 1] = n,
        this.array[e + 2] = i,
        this.array[e + 3] = r,
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    }
},
THREE.Int8Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Int8Array(e),t)
}
,
THREE.Uint8Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Uint8Array(e),t)
}
,
THREE.Uint8ClampedAttribute = function(e, t) {
    return new THREE.BufferAttribute(new Uint8ClampedArray(e),t)
}
,
THREE.Int16Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Int16Array(e),t)
}
,
THREE.Uint16Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Uint16Array(e),t)
}
,
THREE.Int32Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Int32Array(e),t)
}
,
THREE.Uint32Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Uint32Array(e),t)
}
,
THREE.Float32Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Float32Array(e),t)
}
,
THREE.Float64Attribute = function(e, t) {
    return new THREE.BufferAttribute(new Float64Array(e),t)
}
,
THREE.DynamicBufferAttribute = function(e, t) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
    new THREE.BufferAttribute(e,t).setDynamic(!0)
}
,
THREE.InstancedBufferAttribute = function(e, t, n) {
    THREE.BufferAttribute.call(this, e, t),
    this.meshPerAttribute = n || 1
}
,
THREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute,
THREE.InstancedBufferAttribute.prototype.copy = function(e) {
    return THREE.BufferAttribute.prototype.copy.call(this, e),
    this.meshPerAttribute = e.meshPerAttribute,
    this
}
,
THREE.InterleavedBuffer = function(e, t) {
    this.uuid = THREE.Math.generateUUID(),
    this.array = e,
    this.stride = t,
    this.dynamic = !1,
    this.updateRange = {
        offset: 0,
        count: -1
    },
    this.version = 0
}
,
THREE.InterleavedBuffer.prototype = {
    constructor: THREE.InterleavedBuffer,
    get length() {
        return this.array.length
    },
    get count() {
        return this.array.length / this.stride
    },
    set needsUpdate(e) {
        e === !0 && this.version++
    },
    setDynamic: function(e) {
        return this.dynamic = e,
        this
    },
    copy: function(e) {
        return this.array = new e.array.constructor(e.array),
        this.stride = e.stride,
        this.dynamic = e.dynamic,
        this
    },
    copyAt: function(e, t, n) {
        e *= this.stride,
        n *= t.stride;
        for (var i = 0, r = this.stride; i < r; i++)
            this.array[e + i] = t.array[n + i];
        return this
    },
    set: function(e, t) {
        return void 0 === t && (t = 0),
        this.array.set(e, t),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    }
},
THREE.InstancedInterleavedBuffer = function(e, t, n) {
    THREE.InterleavedBuffer.call(this, e, t),
    this.meshPerAttribute = n || 1
}
,
THREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype),
THREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer,
THREE.InstancedInterleavedBuffer.prototype.copy = function(e) {
    return THREE.InterleavedBuffer.prototype.copy.call(this, e),
    this.meshPerAttribute = e.meshPerAttribute,
    this
}
,
THREE.InterleavedBufferAttribute = function(e, t, n, i) {
    this.uuid = THREE.Math.generateUUID(),
    this.data = e,
    this.itemSize = t,
    this.offset = n,
    this.normalized = i === !0
}
,
THREE.InterleavedBufferAttribute.prototype = {
    constructor: THREE.InterleavedBufferAttribute,
    get length() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),
        this.array.length
    },
    get count() {
        return this.data.count
    },
    get array() {
        return this.data.array
    },
    setX: function(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t,
        this
    },
    setY: function(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t,
        this
    },
    setZ: function(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t,
        this
    },
    setW: function(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t,
        this
    },
    getX: function(e) {
        return this.data.array[e * this.data.stride + this.offset];
    },
    getY: function(e) {
        return this.data.array[e * this.data.stride + this.offset + 1]
    },
    getZ: function(e) {
        return this.data.array[e * this.data.stride + this.offset + 2]
    },
    getW: function(e) {
        return this.data.array[e * this.data.stride + this.offset + 3]
    },
    setXY: function(e, t, n) {
        return e = e * this.data.stride + this.offset,
        this.data.array[e + 0] = t,
        this.data.array[e + 1] = n,
        this
    },
    setXYZ: function(e, t, n, i) {
        return e = e * this.data.stride + this.offset,
        this.data.array[e + 0] = t,
        this.data.array[e + 1] = n,
        this.data.array[e + 2] = i,
        this
    },
    setXYZW: function(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset,
        this.data.array[e + 0] = t,
        this.data.array[e + 1] = n,
        this.data.array[e + 2] = i,
        this.data.array[e + 3] = r,
        this
    }
},
THREE.Geometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Geometry",
    this.vertices = [],
    this.colors = [],
    this.faces = [],
    this.faceVertexUvs = [[]],
    this.morphTargets = [],
    this.morphNormals = [],
    this.skinWeights = [],
    this.skinIndices = [],
    this.lineDistances = [],
    this.boundingBox = null,
    this.boundingSphere = null,
    this.elementsNeedUpdate = !1,
    this.verticesNeedUpdate = !1,
    this.uvsNeedUpdate = !1,
    this.normalsNeedUpdate = !1,
    this.colorsNeedUpdate = !1,
    this.lineDistancesNeedUpdate = !1,
    this.groupsNeedUpdate = !1
}
,
Object.assign(THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {
    applyMatrix: function(e) {
        for (var t = (new THREE.Matrix3).getNormalMatrix(e), n = 0, i = this.vertices.length; n < i; n++) {
            var r = this.vertices[n];
            r.applyMatrix4(e)
        }
        for (var n = 0, i = this.faces.length; n < i; n++) {
            var o = this.faces[n];
            o.normal.applyMatrix3(t).normalize();
            for (var a = 0, s = o.vertexNormals.length; a < s; a++)
                o.vertexNormals[a].applyMatrix3(t).normalize()
        }
        return null !== this.boundingBox && this.computeBoundingBox(),
        null !== this.boundingSphere && this.computeBoundingSphere(),
        this.verticesNeedUpdate = !0,
        this.normalsNeedUpdate = !0,
        this
    },
    rotateX: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationX(t),
            this.applyMatrix(e),
            this
        }
    }(),
    rotateY: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationY(t),
            this.applyMatrix(e),
            this
        }
    }(),
    rotateZ: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationZ(t),
            this.applyMatrix(e),
            this
        }
    }(),
    translate: function() {
        var e;
        return function(t, n, i) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeTranslation(t, n, i),
            this.applyMatrix(e),
            this
        }
    }(),
    scale: function() {
        var e;
        return function(t, n, i) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeScale(t, n, i),
            this.applyMatrix(e),
            this
        }
    }(),
    lookAt: function() {
        var e;
        return function(t) {
            void 0 === e && (e = new THREE.Object3D),
            e.lookAt(t),
            e.updateMatrix(),
            this.applyMatrix(e.matrix)
        }
    }(),
    fromBufferGeometry: function(e) {
        function t(e, t, i, r) {
            var o = void 0 !== a ? [u[e].clone(), u[t].clone(), u[i].clone()] : []
              , p = void 0 !== s ? [n.colors[e].clone(), n.colors[t].clone(), n.colors[i].clone()] : []
              , f = new THREE.Face3(e,t,i,o,p,r);
            n.faces.push(f),
            void 0 !== c && n.faceVertexUvs[0].push([h[e].clone(), h[t].clone(), h[i].clone()]),
            void 0 !== l && n.faceVertexUvs[1].push([d[e].clone(), d[t].clone(), d[i].clone()])
        }
        var n = this
          , i = null !== e.index ? e.index.array : void 0
          , r = e.attributes
          , o = r.position.array
          , a = void 0 !== r.normal ? r.normal.array : void 0
          , s = void 0 !== r.color ? r.color.array : void 0
          , c = void 0 !== r.uv ? r.uv.array : void 0
          , l = void 0 !== r.uv2 ? r.uv2.array : void 0;
        void 0 !== l && (this.faceVertexUvs[1] = []);
        for (var u = [], h = [], d = [], p = 0, f = 0; p < o.length; p += 3,
        f += 2)
            n.vertices.push(new THREE.Vector3(o[p],o[p + 1],o[p + 2])),
            void 0 !== a && u.push(new THREE.Vector3(a[p],a[p + 1],a[p + 2])),
            void 0 !== s && n.colors.push(new THREE.Color(s[p],s[p + 1],s[p + 2])),
            void 0 !== c && h.push(new THREE.Vector2(c[f],c[f + 1])),
            void 0 !== l && d.push(new THREE.Vector2(l[f],l[f + 1]));
        if (void 0 !== i) {
            var m = e.groups;
            if (m.length > 0)
                for (var p = 0; p < m.length; p++)
                    for (var g = m[p], v = g.start, E = g.count, f = v, y = v + E; f < y; f += 3)
                        t(i[f], i[f + 1], i[f + 2], g.materialIndex);
            else
                for (var p = 0; p < i.length; p += 3)
                    t(i[p], i[p + 1], i[p + 2])
        } else
            for (var p = 0; p < o.length / 3; p += 3)
                t(p, p + 1, p + 2);
        return this.computeFaceNormals(),
        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
        null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
        this
    },
    center: function() {
        this.computeBoundingBox();
        var e = this.boundingBox.center().negate();
        return this.translate(e.x, e.y, e.z),
        e
    },
    normalize: function() {
        this.computeBoundingSphere();
        var e = this.boundingSphere.center
          , t = this.boundingSphere.radius
          , n = 0 === t ? 1 : 1 / t
          , i = new THREE.Matrix4;
        return i.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1),
        this.applyMatrix(i),
        this
    },
    computeFaceNormals: function() {
        for (var e = new THREE.Vector3, t = new THREE.Vector3, n = 0, i = this.faces.length; n < i; n++) {
            var r = this.faces[n]
              , o = this.vertices[r.a]
              , a = this.vertices[r.b]
              , s = this.vertices[r.c];
            e.subVectors(s, a),
            t.subVectors(o, a),
            e.cross(t),
            e.normalize(),
            r.normal.copy(e)
        }
    },
    computeVertexNormals: function(e) {
        void 0 === e && (e = !0);
        var t, n, i, r, o, a;
        for (a = new Array(this.vertices.length),
        t = 0,
        n = this.vertices.length; t < n; t++)
            a[t] = new THREE.Vector3;
        if (e) {
            var s, c, l, u = new THREE.Vector3, h = new THREE.Vector3;
            for (i = 0,
            r = this.faces.length; i < r; i++)
                o = this.faces[i],
                s = this.vertices[o.a],
                c = this.vertices[o.b],
                l = this.vertices[o.c],
                u.subVectors(l, c),
                h.subVectors(s, c),
                u.cross(h),
                a[o.a].add(u),
                a[o.b].add(u),
                a[o.c].add(u)
        } else
            for (i = 0,
            r = this.faces.length; i < r; i++)
                o = this.faces[i],
                a[o.a].add(o.normal),
                a[o.b].add(o.normal),
                a[o.c].add(o.normal);
        for (t = 0,
        n = this.vertices.length; t < n; t++)
            a[t].normalize();
        for (i = 0,
        r = this.faces.length; i < r; i++) {
            o = this.faces[i];
            var d = o.vertexNormals;
            3 === d.length ? (d[0].copy(a[o.a]),
            d[1].copy(a[o.b]),
            d[2].copy(a[o.c])) : (d[0] = a[o.a].clone(),
            d[1] = a[o.b].clone(),
            d[2] = a[o.c].clone())
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0)
    },
    computeMorphNormals: function() {
        var e, t, n, i, r;
        for (n = 0,
        i = this.faces.length; n < i; n++)
            for (r = this.faces[n],
            r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(),
            r.__originalVertexNormals || (r.__originalVertexNormals = []),
            e = 0,
            t = r.vertexNormals.length; e < t; e++)
                r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
        var o = new THREE.Geometry;
        for (o.faces = this.faces,
        e = 0,
        t = this.morphTargets.length; e < t; e++) {
            if (!this.morphNormals[e]) {
                this.morphNormals[e] = {},
                this.morphNormals[e].faceNormals = [],
                this.morphNormals[e].vertexNormals = [];
                var a, s, c = this.morphNormals[e].faceNormals, l = this.morphNormals[e].vertexNormals;
                for (n = 0,
                i = this.faces.length; n < i; n++)
                    a = new THREE.Vector3,
                    s = {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3
                    },
                    c.push(a),
                    l.push(s)
            }
            var u = this.morphNormals[e];
            o.vertices = this.morphTargets[e].vertices,
            o.computeFaceNormals(),
            o.computeVertexNormals();
            var a, s;
            for (n = 0,
            i = this.faces.length; n < i; n++)
                r = this.faces[n],
                a = u.faceNormals[n],
                s = u.vertexNormals[n],
                a.copy(r.normal),
                s.a.copy(r.vertexNormals[0]),
                s.b.copy(r.vertexNormals[1]),
                s.c.copy(r.vertexNormals[2])
        }
        for (n = 0,
        i = this.faces.length; n < i; n++)
            r = this.faces[n],
            r.normal = r.__originalFaceNormal,
            r.vertexNormals = r.__originalVertexNormals
    },
    computeTangents: function() {
        console.warn("THREE.Geometry: .computeTangents() has been removed.")
    },
    computeLineDistances: function() {
        for (var e = 0, t = this.vertices, n = 0, i = t.length; n < i; n++)
            n > 0 && (e += t[n].distanceTo(t[n - 1])),
            this.lineDistances[n] = e
    },
    computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3),
        this.boundingBox.setFromPoints(this.vertices)
    },
    computeBoundingSphere: function() {
        null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere),
        this.boundingSphere.setFromPoints(this.vertices)
    },
    merge: function(e, t, n) {
        if (e instanceof THREE.Geometry == !1)
            return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
        var i, r = this.vertices.length, o = this.vertices, a = e.vertices, s = this.faces, c = e.faces, l = this.faceVertexUvs[0], u = e.faceVertexUvs[0];
        void 0 === n && (n = 0),
        void 0 !== t && (i = (new THREE.Matrix3).getNormalMatrix(t));
        for (var h = 0, d = a.length; h < d; h++) {
            var p = a[h]
              , f = p.clone();
            void 0 !== t && f.applyMatrix4(t),
            o.push(f)
        }
        for (h = 0,
        d = c.length; h < d; h++) {
            var m, g, v, E = c[h], y = E.vertexNormals, b = E.vertexColors;
            m = new THREE.Face3(E.a + r,E.b + r,E.c + r),
            m.normal.copy(E.normal),
            void 0 !== i && m.normal.applyMatrix3(i).normalize();
            for (var T = 0, x = y.length; T < x; T++)
                g = y[T].clone(),
                void 0 !== i && g.applyMatrix3(i).normalize(),
                m.vertexNormals.push(g);
            m.color.copy(E.color);
            for (var T = 0, x = b.length; T < x; T++)
                v = b[T],
                m.vertexColors.push(v.clone());
            m.materialIndex = E.materialIndex + n,
            s.push(m)
        }
        for (h = 0,
        d = u.length; h < d; h++) {
            var R = u[h]
              , w = [];
            if (void 0 !== R) {
                for (var T = 0, x = R.length; T < x; T++)
                    w.push(R[T].clone());
                l.push(w)
            }
        }
    },
    mergeMesh: function(e) {
        return e instanceof THREE.Mesh == !1 ? void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e) : (e.matrixAutoUpdate && e.updateMatrix(),
        void this.merge(e.geometry, e.matrix))
    },
    mergeVertices: function() {
        var e, t, n, i, r, o, a, s, c = {}, l = [], u = [], h = 4, d = Math.pow(10, h);
        for (n = 0,
        i = this.vertices.length; n < i; n++)
            e = this.vertices[n],
            t = Math.round(e.x * d) + "_" + Math.round(e.y * d) + "_" + Math.round(e.z * d),
            void 0 === c[t] ? (c[t] = n,
            l.push(this.vertices[n]),
            u[n] = l.length - 1) : u[n] = u[c[t]];
        var p = [];
        for (n = 0,
        i = this.faces.length; n < i; n++) {
            r = this.faces[n],
            r.a = u[r.a],
            r.b = u[r.b],
            r.c = u[r.c],
            o = [r.a, r.b, r.c];
            for (var f = -1, m = 0; m < 3; m++)
                if (o[m] === o[(m + 1) % 3]) {
                    f = m,
                    p.push(n);
                    break
                }
        }
        for (n = p.length - 1; n >= 0; n--) {
            var g = p[n];
            for (this.faces.splice(g, 1),
            a = 0,
            s = this.faceVertexUvs.length; a < s; a++)
                this.faceVertexUvs[a].splice(g, 1)
        }
        var v = this.vertices.length - l.length;
        return this.vertices = l,
        v
    },
    sortFacesByMaterialIndex: function() {
        function e(e, t) {
            return e.materialIndex - t.materialIndex
        }
        for (var t = this.faces, n = t.length, i = 0; i < n; i++)
            t[i]._id = i;
        t.sort(e);
        var r, o, a = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
        a && a.length === n && (r = []),
        s && s.length === n && (o = []);
        for (var i = 0; i < n; i++) {
            var c = t[i]._id;
            r && r.push(a[c]),
            o && o.push(s[c])
        }
        r && (this.faceVertexUvs[0] = r),
        o && (this.faceVertexUvs[1] = o)
    },
    toJSON: function() {
        function e(e, t, n) {
            return n ? e | 1 << t : e & ~(1 << t)
        }
        function t(e) {
            var t = e.x.toString() + e.y.toString() + e.z.toString();
            return void 0 !== d[t] ? d[t] : (d[t] = h.length / 3,
            h.push(e.x, e.y, e.z),
            d[t])
        }
        function n(e) {
            var t = e.r.toString() + e.g.toString() + e.b.toString();
            return void 0 !== f[t] ? f[t] : (f[t] = p.length,
            p.push(e.getHex()),
            f[t])
        }
        function i(e) {
            var t = e.x.toString() + e.y.toString();
            return void 0 !== g[t] ? g[t] : (g[t] = m.length / 2,
            m.push(e.x, e.y),
            g[t])
        }
        var r = {
            metadata: {
                version: 4.4,
                type: "Geometry",
                generator: "Geometry.toJSON"
            }
        };
        if (r.uuid = this.uuid,
        r.type = this.type,
        "" !== this.name && (r.name = this.name),
        void 0 !== this.parameters) {
            var o = this.parameters;
            for (var a in o)
                void 0 !== o[a] && (r[a] = o[a]);
            return r
        }
        for (var s = [], c = 0; c < this.vertices.length; c++) {
            var l = this.vertices[c];
            s.push(l.x, l.y, l.z)
        }
        for (var u = [], h = [], d = {}, p = [], f = {}, m = [], g = {}, c = 0; c < this.faces.length; c++) {
            var v = this.faces[c]
              , E = !0
              , y = !1
              , b = void 0 !== this.faceVertexUvs[0][c]
              , T = v.normal.length() > 0
              , x = v.vertexNormals.length > 0
              , R = 1 !== v.color.r || 1 !== v.color.g || 1 !== v.color.b
              , w = v.vertexColors.length > 0
              , H = 0;
            if (H = e(H, 0, 0),
            H = e(H, 1, E),
            H = e(H, 2, y),
            H = e(H, 3, b),
            H = e(H, 4, T),
            H = e(H, 5, x),
            H = e(H, 6, R),
            H = e(H, 7, w),
            u.push(H),
            u.push(v.a, v.b, v.c),
            u.push(v.materialIndex),
            b) {
                var M = this.faceVertexUvs[0][c];
                u.push(i(M[0]), i(M[1]), i(M[2]))
            }
            if (T && u.push(t(v.normal)),
            x) {
                var S = v.vertexNormals;
                u.push(t(S[0]), t(S[1]), t(S[2]))
            }
            if (R && u.push(n(v.color)),
            w) {
                var _ = v.vertexColors;
                u.push(n(_[0]), n(_[1]), n(_[2]))
            }
        }
        return r.data = {},
        r.data.vertices = s,
        r.data.normals = h,
        p.length > 0 && (r.data.colors = p),
        m.length > 0 && (r.data.uvs = [m]),
        r.data.faces = u,
        r
    },
    clone: function() {
        return (new THREE.Geometry).copy(this)
    },
    copy: function(e) {
        this.vertices = [],
        this.faces = [],
        this.faceVertexUvs = [[]];
        for (var t = e.vertices, n = 0, i = t.length; n < i; n++)
            this.vertices.push(t[n].clone());
        for (var r = e.faces, n = 0, i = r.length; n < i; n++)
            this.faces.push(r[n].clone());
        for (var n = 0, i = e.faceVertexUvs.length; n < i; n++) {
            var o = e.faceVertexUvs[n];
            void 0 === this.faceVertexUvs[n] && (this.faceVertexUvs[n] = []);
            for (var a = 0, s = o.length; a < s; a++) {
                for (var c = o[a], l = [], u = 0, h = c.length; u < h; u++) {
                    var d = c[u];
                    l.push(d.clone())
                }
                this.faceVertexUvs[n].push(l)
            }
        }
        return this
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
}),
THREE.GeometryIdCount = 0,
THREE.DirectGeometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "DirectGeometry",
    this.indices = [],
    this.vertices = [],
    this.normals = [],
    this.colors = [],
    this.uvs = [],
    this.uvs2 = [],
    this.groups = [],
    this.morphTargets = {},
    this.skinWeights = [],
    this.skinIndices = [],
    this.boundingBox = null,
    this.boundingSphere = null,
    this.verticesNeedUpdate = !1,
    this.normalsNeedUpdate = !1,
    this.colorsNeedUpdate = !1,
    this.uvsNeedUpdate = !1,
    this.groupsNeedUpdate = !1
}
,
Object.assign(THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {
    computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,
    computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,
    computeFaceNormals: function() {
        console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")
    },
    computeVertexNormals: function() {
        console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")
    },
    computeGroups: function(e) {
        for (var t, n, i = [], r = e.faces, o = 0; o < r.length; o++) {
            var a = r[o];
            a.materialIndex !== n && (n = a.materialIndex,
            void 0 !== t && (t.count = 3 * o - t.start,
            i.push(t)),
            t = {
                start: 3 * o,
                materialIndex: n
            })
        }
        void 0 !== t && (t.count = 3 * o - t.start,
        i.push(t)),
        this.groups = i
    },
    fromGeometry: function(e) {
        var t, n = e.faces, i = e.vertices, r = e.faceVertexUvs, o = r[0] && r[0].length > 0, a = r[1] && r[1].length > 0, s = e.morphTargets, c = s.length;
        if (c > 0) {
            t = [];
            for (var l = 0; l < c; l++)
                t[l] = [];
            this.morphTargets.position = t
        }
        var u, h = e.morphNormals, d = h.length;
        if (d > 0) {
            u = [];
            for (var l = 0; l < d; l++)
                u[l] = [];
            this.morphTargets.normal = u
        }
        for (var p = e.skinIndices, f = e.skinWeights, m = p.length === i.length, g = f.length === i.length, l = 0; l < n.length; l++) {
            var v = n[l];
            this.vertices.push(i[v.a], i[v.b], i[v.c]);
            var E = v.vertexNormals;
            if (3 === E.length)
                this.normals.push(E[0], E[1], E[2]);
            else {
                var y = v.normal;
                this.normals.push(y, y, y)
            }
            var b = v.vertexColors;
            if (3 === b.length)
                this.colors.push(b[0], b[1], b[2]);
            else {
                var T = v.color;
                this.colors.push(T, T, T)
            }
            if (o === !0) {
                var x = r[0][l];
                void 0 !== x ? this.uvs.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", l),
                this.uvs.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))
            }
            if (a === !0) {
                var x = r[1][l];
                void 0 !== x ? this.uvs2.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", l),
                this.uvs2.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))
            }
            for (var R = 0; R < c; R++) {
                var w = s[R].vertices;
                t[R].push(w[v.a], w[v.b], w[v.c])
            }
            for (var R = 0; R < d; R++) {
                var H = h[R].vertexNormals[l];
                u[R].push(H.a, H.b, H.c)
            }
            m && this.skinIndices.push(p[v.a], p[v.b], p[v.c]),
            g && this.skinWeights.push(f[v.a], f[v.b], f[v.c])
        }
        return this.computeGroups(e),
        this.verticesNeedUpdate = e.verticesNeedUpdate,
        this.normalsNeedUpdate = e.normalsNeedUpdate,
        this.colorsNeedUpdate = e.colorsNeedUpdate,
        this.uvsNeedUpdate = e.uvsNeedUpdate,
        this.groupsNeedUpdate = e.groupsNeedUpdate,
        this
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
}),
THREE.BufferGeometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "BufferGeometry",
    this.index = null,
    this.attributes = {},
    this.morphAttributes = {},
    this.groups = [],
    this.boundingBox = null,
    this.boundingSphere = null,
    this.drawRange = {
        start: 0,
        count: 1 / 0
    }
}
,
Object.assign(THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {
    getIndex: function() {
        return this.index
    },
    setIndex: function(e) {
        this.index = e
    },
    addAttribute: function(e, t) {
        return t instanceof THREE.BufferAttribute == !1 && t instanceof THREE.InterleavedBufferAttribute == !1 ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
        void this.addAttribute(e, new THREE.BufferAttribute(arguments[1],arguments[2]))) : "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
        void this.setIndex(t)) : (this.attributes[e] = t,
        this)
    },
    getAttribute: function(e) {
        return this.attributes[e]
    },
    removeAttribute: function(e) {
        return delete this.attributes[e],
        this
    },
    addGroup: function(e, t, n) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: void 0 !== n ? n : 0
        })
    },
    clearGroups: function() {
        this.groups = []
    },
    setDrawRange: function(e, t) {
        this.drawRange.start = e,
        this.drawRange.count = t
    },
    applyMatrix: function(e) {
        var t = this.attributes.position;
        void 0 !== t && (e.applyToVector3Array(t.array),
        t.needsUpdate = !0);
        var n = this.attributes.normal;
        if (void 0 !== n) {
            var i = (new THREE.Matrix3).getNormalMatrix(e);
            i.applyToVector3Array(n.array),
            n.needsUpdate = !0
        }
        return null !== this.boundingBox && this.computeBoundingBox(),
        null !== this.boundingSphere && this.computeBoundingSphere(),
        this
    },
    rotateX: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationX(t),
            this.applyMatrix(e),
            this
        }
    }(),
    rotateY: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationY(t),
            this.applyMatrix(e),
            this
        }
    }(),
    rotateZ: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeRotationZ(t),
            this.applyMatrix(e),
            this
        }
    }(),
    translate: function() {
        var e;
        return function(t, n, i) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeTranslation(t, n, i),
            this.applyMatrix(e),
            this
        }
    }(),
    scale: function() {
        var e;
        return function(t, n, i) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.makeScale(t, n, i),
            this.applyMatrix(e),
            this
        }
    }(),
    lookAt: function() {
        var e;
        return function(t) {
            void 0 === e && (e = new THREE.Object3D),
            e.lookAt(t),
            e.updateMatrix(),
            this.applyMatrix(e.matrix)
        }
    }(),
    center: function() {
        this.computeBoundingBox();
        var e = this.boundingBox.center().negate();
        return this.translate(e.x, e.y, e.z),
        e
    },
    setFromObject: function(e) {
        var t = e.geometry;
        if (e instanceof THREE.Points || e instanceof THREE.Line) {
            var n = new THREE.Float32Attribute(3 * t.vertices.length,3)
              , i = new THREE.Float32Attribute(3 * t.colors.length,3);
            if (this.addAttribute("position", n.copyVector3sArray(t.vertices)),
            this.addAttribute("color", i.copyColorsArray(t.colors)),
            t.lineDistances && t.lineDistances.length === t.vertices.length) {
                var r = new THREE.Float32Attribute(t.lineDistances.length,1);
                this.addAttribute("lineDistance", r.copyArray(t.lineDistances))
            }
            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
        } else
            e instanceof THREE.Mesh && t instanceof THREE.Geometry && this.fromGeometry(t);
        return this
    },
    updateFromObject: function(e) {
        var t = e.geometry;
        if (e instanceof THREE.Mesh) {
            var n = t.__directGeometry;
            if (void 0 === n || t.elementsNeedUpdate === !0)
                return this.fromGeometry(t);
            n.verticesNeedUpdate = t.verticesNeedUpdate || t.elementsNeedUpdate,
            n.normalsNeedUpdate = t.normalsNeedUpdate || t.elementsNeedUpdate,
            n.colorsNeedUpdate = t.colorsNeedUpdate || t.elementsNeedUpdate,
            n.uvsNeedUpdate = t.uvsNeedUpdate || t.elementsNeedUpdate,
            n.groupsNeedUpdate = t.groupsNeedUpdate || t.elementsNeedUpdate,
            t.elementsNeedUpdate = !1,
            t.verticesNeedUpdate = !1,
            t.normalsNeedUpdate = !1,
            t.colorsNeedUpdate = !1,
            t.uvsNeedUpdate = !1,
            t.groupsNeedUpdate = !1,
            t = n
        }
        var i;
        return t.verticesNeedUpdate === !0 && (i = this.attributes.position,
        void 0 !== i && (i.copyVector3sArray(t.vertices),
        i.needsUpdate = !0),
        t.verticesNeedUpdate = !1),
        t.normalsNeedUpdate === !0 && (i = this.attributes.normal,
        void 0 !== i && (i.copyVector3sArray(t.normals),
        i.needsUpdate = !0),
        t.normalsNeedUpdate = !1),
        t.colorsNeedUpdate === !0 && (i = this.attributes.color,
        void 0 !== i && (i.copyColorsArray(t.colors),
        i.needsUpdate = !0),
        t.colorsNeedUpdate = !1),
        t.uvsNeedUpdate && (i = this.attributes.uv,
        void 0 !== i && (i.copyVector2sArray(t.uvs),
        i.needsUpdate = !0),
        t.uvsNeedUpdate = !1),
        t.lineDistancesNeedUpdate && (i = this.attributes.lineDistance,
        void 0 !== i && (i.copyArray(t.lineDistances),
        i.needsUpdate = !0),
        t.lineDistancesNeedUpdate = !1),
        t.groupsNeedUpdate && (t.computeGroups(e.geometry),
        this.groups = t.groups,
        t.groupsNeedUpdate = !1),
        this
    },
    fromGeometry: function(e) {
        return e.__directGeometry = (new THREE.DirectGeometry).fromGeometry(e),
        this.fromDirectGeometry(e.__directGeometry)
    },
    fromDirectGeometry: function(e) {
        var t = new Float32Array(3 * e.vertices.length);
        if (this.addAttribute("position", new THREE.BufferAttribute(t,3).copyVector3sArray(e.vertices)),
        e.normals.length > 0) {
            var n = new Float32Array(3 * e.normals.length);
            this.addAttribute("normal", new THREE.BufferAttribute(n,3).copyVector3sArray(e.normals))
        }
        if (e.colors.length > 0) {
            var i = new Float32Array(3 * e.colors.length);
            this.addAttribute("color", new THREE.BufferAttribute(i,3).copyColorsArray(e.colors))
        }
        if (e.uvs.length > 0) {
            var r = new Float32Array(2 * e.uvs.length);
            this.addAttribute("uv", new THREE.BufferAttribute(r,2).copyVector2sArray(e.uvs))
        }
        if (e.uvs2.length > 0) {
            var o = new Float32Array(2 * e.uvs2.length);
            this.addAttribute("uv2", new THREE.BufferAttribute(o,2).copyVector2sArray(e.uvs2))
        }
        if (e.indices.length > 0) {
            var a = e.vertices.length > 65535 ? Uint32Array : Uint16Array
              , s = new a(3 * e.indices.length);
            this.setIndex(new THREE.BufferAttribute(s,1).copyIndicesArray(e.indices))
        }
        this.groups = e.groups;
        for (var c in e.morphTargets) {
            for (var l = [], u = e.morphTargets[c], h = 0, d = u.length; h < d; h++) {
                var p = u[h]
                  , f = new THREE.Float32Attribute(3 * p.length,3);
                l.push(f.copyVector3sArray(p))
            }
            this.morphAttributes[c] = l
        }
        if (e.skinIndices.length > 0) {
            var m = new THREE.Float32Attribute(4 * e.skinIndices.length,4);
            this.addAttribute("skinIndex", m.copyVector4sArray(e.skinIndices))
        }
        if (e.skinWeights.length > 0) {
            var g = new THREE.Float32Attribute(4 * e.skinWeights.length,4);
            this.addAttribute("skinWeight", g.copyVector4sArray(e.skinWeights))
        }
        return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
        this
    },
    computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3);
        var e = this.attributes.position.array;
        void 0 !== e ? this.boundingBox.setFromArray(e) : this.boundingBox.makeEmpty(),
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
    },
    computeBoundingSphere: function() {
        var e = new THREE.Box3
          , t = new THREE.Vector3;
        return function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
            var n = this.attributes.position;
            if (n) {
                var i = n.array
                  , r = this.boundingSphere.center;
                e.setFromArray(i),
                e.center(r);
                for (var o = 0, a = 0, s = i.length; a < s; a += 3)
                    t.fromArray(i, a),
                    o = Math.max(o, r.distanceToSquared(t));
                this.boundingSphere.radius = Math.sqrt(o),
                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
            }
        }
    }(),
    computeFaceNormals: function() {},
    computeVertexNormals: function() {
        var e = this.index
          , t = this.attributes
          , n = this.groups;
        if (t.position) {
            var i = t.position.array;
            if (void 0 === t.normal)
                this.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(i.length),3));
            else
                for (var r = t.normal.array, o = 0, a = r.length; o < a; o++)
                    r[o] = 0;
            var s, c, l, u = t.normal.array, h = new THREE.Vector3, d = new THREE.Vector3, p = new THREE.Vector3, f = new THREE.Vector3, m = new THREE.Vector3;
            if (e) {
                var g = e.array;
                0 === n.length && this.addGroup(0, g.length);
                for (var v = 0, E = n.length; v < E; ++v)
                    for (var y = n[v], b = y.start, T = y.count, o = b, a = b + T; o < a; o += 3)
                        s = 3 * g[o + 0],
                        c = 3 * g[o + 1],
                        l = 3 * g[o + 2],
                        h.fromArray(i, s),
                        d.fromArray(i, c),
                        p.fromArray(i, l),
                        f.subVectors(p, d),
                        m.subVectors(h, d),
                        f.cross(m),
                        u[s] += f.x,
                        u[s + 1] += f.y,
                        u[s + 2] += f.z,
                        u[c] += f.x,
                        u[c + 1] += f.y,
                        u[c + 2] += f.z,
                        u[l] += f.x,
                        u[l + 1] += f.y,
                        u[l + 2] += f.z
            } else
                for (var o = 0, a = i.length; o < a; o += 9)
                    h.fromArray(i, o),
                    d.fromArray(i, o + 3),
                    p.fromArray(i, o + 6),
                    f.subVectors(p, d),
                    m.subVectors(h, d),
                    f.cross(m),
                    u[o] = f.x,
                    u[o + 1] = f.y,
                    u[o + 2] = f.z,
                    u[o + 3] = f.x,
                    u[o + 4] = f.y,
                    u[o + 5] = f.z,
                    u[o + 6] = f.x,
                    u[o + 7] = f.y,
                    u[o + 8] = f.z;
            this.normalizeNormals(),
            t.normal.needsUpdate = !0
        }
    },
    merge: function(e, t) {
        if (e instanceof THREE.BufferGeometry == !1)
            return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
        void 0 === t && (t = 0);
        var n = this.attributes;
        for (var i in n)
            if (void 0 !== e.attributes[i])
                for (var r = n[i], o = r.array, a = e.attributes[i], s = a.array, c = a.itemSize, l = 0, u = c * t; l < s.length; l++,
                u++)
                    o[u] = s[l];
        return this
    },
    normalizeNormals: function() {
        for (var e, t, n, i, r = this.attributes.normal.array, o = 0, a = r.length; o < a; o += 3)
            e = r[o],
            t = r[o + 1],
            n = r[o + 2],
            i = 1 / Math.sqrt(e * e + t * t + n * n),
            r[o] *= i,
            r[o + 1] *= i,
            r[o + 2] *= i
    },
    toNonIndexed: function() {
        if (null === this.index)
            return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
            this;
        var e = new THREE.BufferGeometry
          , t = this.index.array
          , n = this.attributes;
        for (var i in n) {
            for (var r = n[i], o = r.array, a = r.itemSize, s = new o.constructor(t.length * a), c = 0, l = 0, u = 0, h = t.length; u < h; u++) {
                c = t[u] * a;
                for (var d = 0; d < a; d++)
                    s[l++] = o[c++]
            }
            e.addAttribute(i, new THREE.BufferAttribute(s,a))
        }
        return e
    },
    toJSON: function() {
        var e = {
            metadata: {
                version: 4.4,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid,
        e.type = this.type,
        "" !== this.name && (e.name = this.name),
        void 0 !== this.parameters) {
            var t = this.parameters;
            for (var n in t)
                void 0 !== t[n] && (e[n] = t[n]);
            return e
        }
        e.data = {
            attributes: {}
        };
        var i = this.index;
        if (null !== i) {
            var r = Array.prototype.slice.call(i.array);
            e.data.index = {
                type: i.array.constructor.name,
                array: r
            }
        }
        var o = this.attributes;
        for (var n in o) {
            var a = o[n]
              , r = Array.prototype.slice.call(a.array);
            e.data.attributes[n] = {
                itemSize: a.itemSize,
                type: a.array.constructor.name,
                array: r,
                normalized: a.normalized
            }
        }
        var s = this.groups;
        s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
        var c = this.boundingSphere;
        return null !== c && (e.data.boundingSphere = {
            center: c.center.toArray(),
            radius: c.radius
        }),
        e
    },
    clone: function() {
        return (new THREE.BufferGeometry).copy(this)
    },
    copy: function(e) {
        var t = e.index;
        null !== t && this.setIndex(t.clone());
        var n = e.attributes;
        for (var i in n) {
            var r = n[i];
            this.addAttribute(i, r.clone())
        }
        for (var o = e.groups, a = 0, s = o.length; a < s; a++) {
            var c = o[a];
            this.addGroup(c.start, c.count, c.materialIndex)
        }
        return this
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
}),
THREE.BufferGeometry.MaxIndex = 65535,
THREE.InstancedBufferGeometry = function() {
    THREE.BufferGeometry.call(this),
    this.type = "InstancedBufferGeometry",
    this.maxInstancedCount = void 0
}
,
THREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry,
THREE.InstancedBufferGeometry.prototype.addGroup = function(e, t, n) {
    this.groups.push({
        start: e,
        count: t,
        instances: n
    })
}
,
THREE.InstancedBufferGeometry.prototype.copy = function(e) {
    var t = e.index;
    null !== t && this.setIndex(t.clone());
    var n = e.attributes;
    for (var i in n) {
        var r = n[i];
        this.addAttribute(i, r.clone())
    }
    for (var o = e.groups, a = 0, s = o.length; a < s; a++) {
        var c = o[a];
        this.addGroup(c.start, c.count, c.instances)
    }
    return this
}
,
THREE.Uniform = function(e) {
    "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
    e = arguments[1]),
    this.value = e,
    this.dynamic = !1
}
,
THREE.Uniform.prototype = {
    constructor: THREE.Uniform,
    onUpdate: function(e) {
        return this.dynamic = !0,
        this.onUpdateCallback = e,
        this
    }
},
THREE.AnimationAction = function() {
    throw new Error("THREE.AnimationAction: Use mixer.clipAction for construction.")
}
,
THREE.AnimationAction._new = function(e, t, n) {
    this._mixer = e,
    this._clip = t,
    this._localRoot = n || null;
    for (var i = t.tracks, r = i.length, o = new Array(r), a = {
        endingStart: THREE.ZeroCurvatureEnding,
        endingEnd: THREE.ZeroCurvatureEnding
    }, s = 0; s !== r; ++s) {
        var c = i[s].createInterpolant(null);
        o[s] = c,
        c.settings = a
    }
    this._interpolantSettings = a,
    this._interpolants = o,
    this._propertyBindings = new Array(r),
    this._cacheIndex = null,
    this._byClipCacheIndex = null,
    this._timeScaleInterpolant = null,
    this._weightInterpolant = null,
    this.loop = THREE.LoopRepeat,
    this._loopCount = -1,
    this._startTime = null,
    this.time = 0,
    this.timeScale = 1,
    this._effectiveTimeScale = 1,
    this.weight = 1,
    this._effectiveWeight = 1,
    this.repetitions = 1 / 0,
    this.paused = !1,
    this.enabled = !0,
    this.clampWhenFinished = !1,
    this.zeroSlopeAtStart = !0,
    this.zeroSlopeAtEnd = !0
}
,
THREE.AnimationAction._new.prototype = {
    constructor: THREE.AnimationAction._new,
    play: function() {
        return this._mixer._activateAction(this),
        this
    },
    stop: function() {
        return this._mixer._deactivateAction(this),
        this.reset()
    },
    reset: function() {
        return this.paused = !1,
        this.enabled = !0,
        this.time = 0,
        this._loopCount = -1,
        this._startTime = null,
        this.stopFading().stopWarping()
    },
    isRunning: function() {
        this._startTime;
        return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
    },
    isScheduled: function() {
        return this._mixer._isActiveAction(this)
    },
    startAt: function(e) {
        return this._startTime = e,
        this
    },
    setLoop: function(e, t) {
        return this.loop = e,
        this.repetitions = t,
        this
    },
    setEffectiveWeight: function(e) {
        return this.weight = e,
        this._effectiveWeight = this.enabled ? e : 0,
        this.stopFading()
    },
    getEffectiveWeight: function() {
        return this._effectiveWeight
    },
    fadeIn: function(e) {
        return this._scheduleFading(e, 0, 1)
    },
    fadeOut: function(e) {
        return this._scheduleFading(e, 1, 0)
    },
    crossFadeFrom: function(e, t, n) {
        this._mixer;
        if (e.fadeOut(t),
        this.fadeIn(t),
        n) {
            var i = this._clip.duration
              , r = e._clip.duration
              , o = r / i
              , a = i / r;
            e.warp(1, o, t),
            this.warp(a, 1, t)
        }
        return this
    },
    crossFadeTo: function(e, t, n) {
        return e.crossFadeFrom(this, t, n)
    },
    stopFading: function() {
        var e = this._weightInterpolant;
        return null !== e && (this._weightInterpolant = null,
        this._mixer._takeBackControlInterpolant(e)),
        this
    },
    setEffectiveTimeScale: function(e) {
        return this.timeScale = e,
        this._effectiveTimeScale = this.paused ? 0 : e,
        this.stopWarping()
    },
    getEffectiveTimeScale: function() {
        return this._effectiveTimeScale
    },
    setDuration: function(e) {
        return this.timeScale = this._clip.duration / e,
        this.stopWarping()
    },
    syncWith: function(e) {
        return this.time = e.time,
        this.timeScale = e.timeScale,
        this.stopWarping()
    },
    halt: function(e) {
        return this.warp(this._effectiveTimeScale, 0, e)
    },
    warp: function(e, t, n) {
        var i = this._mixer
          , r = i.time
          , o = this._timeScaleInterpolant
          , a = this.timeScale;
        null === o && (o = i._lendControlInterpolant(),
        this._timeScaleInterpolant = o);
        var s = o.parameterPositions
          , c = o.sampleValues;
        return s[0] = r,
        s[1] = r + n,
        c[0] = e / a,
        c[1] = t / a,
        this
    },
    stopWarping: function() {
        var e = this._timeScaleInterpolant;
        return null !== e && (this._timeScaleInterpolant = null,
        this._mixer._takeBackControlInterpolant(e)),
        this
    },
    getMixer: function() {
        return this._mixer
    },
    getClip: function() {
        return this._clip
    },
    getRoot: function() {
        return this._localRoot || this._mixer._root
    },
    _update: function(e, t, n, i) {
        var r = this._startTime;
        if (null !== r) {
            var o = (e - r) * n;
            if (o < 0 || 0 === n)
                return;
            this._startTime = null,
            t = n * o
        }
        t *= this._updateTimeScale(e);
        var a = this._updateTime(t)
          , s = this._updateWeight(e);
        if (s > 0)
            for (var c = this._interpolants, l = this._propertyBindings, u = 0, h = c.length; u !== h; ++u)
                c[u].evaluate(a),
                l[u].accumulate(i, s)
    },
    _updateWeight: function(e) {
        var t = 0;
        if (this.enabled) {
            t = this.weight;
            var n = this._weightInterpolant;
            if (null !== n) {
                var i = n.evaluate(e)[0];
                t *= i,
                e > n.parameterPositions[1] && (this.stopFading(),
                0 === i && (this.enabled = !1))
            }
        }
        return this._effectiveWeight = t,
        t
    },
    _updateTimeScale: function(e) {
        var t = 0;
        if (!this.paused) {
            t = this.timeScale;
            var n = this._timeScaleInterpolant;
            if (null !== n) {
                var i = n.evaluate(e)[0];
                t *= i,
                e > n.parameterPositions[1] && (this.stopWarping(),
                0 === t ? this.paused = !0 : this.timeScale = t)
            }
        }
        return this._effectiveTimeScale = t,
        t
    },
    _updateTime: function(e) {
        var t = this.time + e;
        if (0 === e)
            return t;
        var n = this._clip.duration
          , i = this.loop
          , r = this._loopCount;
        if (i === THREE.LoopOnce) {
            r === -1 && (this.loopCount = 0,
            this._setEndings(!0, !0, !1));
            e: {
                if (t >= n)
                    t = n;
                else {
                    if (!(t < 0))
                        break e;
                    t = 0
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                })
            }
        } else {
            var o = i === THREE.LoopPingPong;
            if (r === -1 && (e >= 0 ? (r = 0,
            this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)),
            t >= n || t < 0) {
                var a = Math.floor(t / n);
                t -= n * a,
                r += Math.abs(a);
                var s = this.repetitions - r;
                if (s < 0)
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    t = e > 0 ? n : 0,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e > 0 ? 1 : -1
                    });
                else {
                    if (0 === s) {
                        var c = e < 0;
                        this._setEndings(c, !c, o)
                    } else
                        this._setEndings(!1, !1, o);
                    this._loopCount = r,
                    this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    })
                }
            }
            if (o && 1 === (1 & r))
                return this.time = t,
                n - t
        }
        return this.time = t,
        t
    },
    _setEndings: function(e, t, n) {
        var i = this._interpolantSettings;
        n ? (i.endingStart = THREE.ZeroSlopeEnding,
        i.endingEnd = THREE.ZeroSlopeEnding) : (e ? i.endingStart = this.zeroSlopeAtStart ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding : i.endingStart = THREE.WrapAroundEnding,
        t ? i.endingEnd = this.zeroSlopeAtEnd ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding : i.endingEnd = THREE.WrapAroundEnding)
    },
    _scheduleFading: function(e, t, n) {
        var i = this._mixer
          , r = i.time
          , o = this._weightInterpolant;
        null === o && (o = i._lendControlInterpolant(),
        this._weightInterpolant = o);
        var a = o.parameterPositions
          , s = o.sampleValues;
        return a[0] = r,
        s[0] = t,
        a[1] = r + e,
        s[1] = n,
        this
    }
},
THREE.AnimationClip = function(e, t, n) {
    this.name = e,
    this.tracks = n,
    this.duration = void 0 !== t ? t : -1,
    this.uuid = THREE.Math.generateUUID(),
    this.duration < 0 && this.resetDuration(),
    this.trim(),
    this.optimize()
}
,
THREE.AnimationClip.prototype = {
    constructor: THREE.AnimationClip,
    resetDuration: function() {
        for (var e = this.tracks, t = 0, n = 0, i = e.length; n !== i; ++n) {
            var r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1])
        }
        this.duration = t
    },
    trim: function() {
        for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
        return this
    },
    optimize: function() {
        for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].optimize();
        return this
    }
},
Object.assign(THREE.AnimationClip, {
    parse: function(e) {
        for (var t = [], n = e.tracks, i = 1 / (e.fps || 1), r = 0, o = n.length; r !== o; ++r)
            t.push(THREE.KeyframeTrack.parse(n[r]).scale(i));
        return new THREE.AnimationClip(e.name,e.duration,t)
    },
    toJSON: function(e) {
        for (var t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t
        }, r = 0, o = n.length; r !== o; ++r)
            t.push(THREE.KeyframeTrack.toJSON(n[r]));
        return i
    },
    CreateFromMorphTargetSequence: function(e, t, n, i) {
        for (var r = t.length, o = [], a = 0; a < r; a++) {
            var s = []
              , c = [];
            s.push((a + r - 1) % r, a, (a + 1) % r),
            c.push(0, 1, 0);
            var l = THREE.AnimationUtils.getKeyframeOrder(s);
            s = THREE.AnimationUtils.sortedArray(s, 1, l),
            c = THREE.AnimationUtils.sortedArray(c, 1, l),
            i || 0 !== s[0] || (s.push(r),
            c.push(c[0])),
            o.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences[" + t[a].name + "]",s,c).scale(1 / n))
        }
        return new THREE.AnimationClip(e,-1,o)
    },
    findByName: function(e, t) {
        var n = e;
        if (!Array.isArray(e)) {
            var i = e;
            n = i.geometry && i.geometry.animations || i.animations
        }
        for (var r = 0; r < n.length; r++)
            if (n[r].name === t)
                return n[r];
        return null
    },
    CreateClipsFromMorphTargetSequences: function(e, t, n) {
        for (var i = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, a = e.length; o < a; o++) {
            var s = e[o]
              , c = s.name.match(r);
            if (c && c.length > 1) {
                var l = c[1]
                  , u = i[l];
                u || (i[l] = u = []),
                u.push(s)
            }
        }
        var h = [];
        for (var l in i)
            h.push(THREE.AnimationClip.CreateFromMorphTargetSequence(l, i[l], t, n));
        return h
    },
    parseAnimation: function(e, t, n) {
        if (!e)
            return console.error("  no animation in JSONLoader data"),
            null;
        for (var i = function(e, t, n, i, r) {
            if (0 !== n.length) {
                var o = []
                  , a = [];
                THREE.AnimationUtils.flattenJSON(n, o, a, i),
                0 !== o.length && r.push(new e(t,o,a))
            }
        }, r = [], o = e.name || "default", a = e.length || -1, s = e.fps || 30, c = e.hierarchy || [], l = 0; l < c.length; l++) {
            var u = c[l].keys;
            if (u && 0 !== u.length)
                if (u[0].morphTargets) {
                    for (var h = {}, d = 0; d < u.length; d++)
                        if (u[d].morphTargets)
                            for (var p = 0; p < u[d].morphTargets.length; p++)
                                h[u[d].morphTargets[p]] = -1;
                    for (var f in h) {
                        for (var m = [], g = [], p = 0; p !== u[d].morphTargets.length; ++p) {
                            var v = u[d];
                            m.push(v.time),
                            g.push(v.morphTarget === f ? 1 : 0)
                        }
                        r.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence[" + f + "]",m,g))
                    }
                    a = h.length * (s || 1)
                } else {
                    var E = ".bones[" + t[l].name + "]";
                    i(THREE.VectorKeyframeTrack, E + ".position", u, "pos", r),
                    i(THREE.QuaternionKeyframeTrack, E + ".quaternion", u, "rot", r),
                    i(THREE.VectorKeyframeTrack, E + ".scale", u, "scl", r)
                }
        }
        if (0 === r.length)
            return null;
        var y = new THREE.AnimationClip(o,a,r);
        return y
    }
}),
THREE.AnimationMixer = function(e) {
    this._root = e,
    this._initMemoryManager(),
    this._accuIndex = 0,
    this.time = 0,
    this.timeScale = 1
}
,
Object.assign(THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {
    clipAction: function(e, t) {
        var n = t || this._root
          , i = n.uuid
          , r = "string" == typeof e ? THREE.AnimationClip.findByName(n, e) : e
          , o = null !== r ? r.uuid : e
          , a = this._actionsByClip[o]
          , s = null;
        if (void 0 !== a) {
            var c = a.actionByRoot[i];
            if (void 0 !== c)
                return c;
            s = a.knownActions[0],
            null === r && (r = s._clip)
        }
        if (null === r)
            return null;
        var l = new THREE.AnimationMixer._Action(this,r,t);
        return this._bindAction(l, s),
        this._addInactiveAction(l, o, i),
        l
    },
    existingAction: function(e, t) {
        var n = t || this._root
          , i = n.uuid
          , r = "string" == typeof e ? THREE.AnimationClip.findByName(n, e) : e
          , o = r ? r.uuid : e
          , a = this._actionsByClip[o];
        return void 0 !== a ? a.actionByRoot[i] || null : null
    },
    stopAllAction: function() {
        var e = this._actions
          , t = this._nActiveActions
          , n = this._bindings
          , i = this._nActiveBindings;
        this._nActiveActions = 0,
        this._nActiveBindings = 0;
        for (var r = 0; r !== t; ++r)
            e[r].reset();
        for (var r = 0; r !== i; ++r)
            n[r].useCount = 0;
        return this
    },
    update: function(e) {
        e *= this.timeScale;
        for (var t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
            var s = t[a];
            s.enabled && s._update(i, e, r, o)
        }
        for (var c = this._bindings, l = this._nActiveBindings, a = 0; a !== l; ++a)
            c[a].apply(o);
        return this
    },
    getRoot: function() {
        return this._root
    },
    uncacheClip: function(e) {
        var t = this._actions
          , n = e.uuid
          , i = this._actionsByClip
          , r = i[n];
        if (void 0 !== r) {
            for (var o = r.knownActions, a = 0, s = o.length; a !== s; ++a) {
                var c = o[a];
                this._deactivateAction(c);
                var l = c._cacheIndex
                  , u = t[t.length - 1];
                c._cacheIndex = null,
                c._byClipCacheIndex = null,
                u._cacheIndex = l,
                t[l] = u,
                t.pop(),
                this._removeInactiveBindingsForAction(c)
            }
            delete i[n]
        }
    },
    uncacheRoot: function(e) {
        var t = e.uuid
          , n = this._actionsByClip;
        for (var i in n) {
            var r = n[i].actionByRoot
              , o = r[t];
            void 0 !== o && (this._deactivateAction(o),
            this._removeInactiveAction(o))
        }
        var a = this._bindingsByRootAndName
          , s = a[t];
        if (void 0 !== s)
            for (var c in s) {
                var l = s[c];
                l.restoreOriginalState(),
                this._removeInactiveBinding(l)
            }
    },
    uncacheAction: function(e, t) {
        var n = this.existingAction(e, t);
        null !== n && (this._deactivateAction(n),
        this._removeInactiveAction(n))
    }
}),
THREE.AnimationMixer._Action = THREE.AnimationAction._new,
Object.assign(THREE.AnimationMixer.prototype, {
    _bindAction: function(e, t) {
        var n = e._localRoot || this._root
          , i = e._clip.tracks
          , r = i.length
          , o = e._propertyBindings
          , a = e._interpolants
          , s = n.uuid
          , c = this._bindingsByRootAndName
          , l = c[s];
        void 0 === l && (l = {},
        c[s] = l);
        for (var u = 0; u !== r; ++u) {
            var h = i[u]
              , d = h.name
              , p = l[d];
            if (void 0 !== p)
                o[u] = p;
            else {
                if (p = o[u],
                void 0 !== p) {
                    null === p._cacheIndex && (++p.referenceCount,
                    this._addInactiveBinding(p, s, d));
                    continue
                }
                var f = t && t._propertyBindings[u].binding.parsedPath;
                p = new THREE.PropertyMixer(THREE.PropertyBinding.create(n, d, f),h.ValueTypeName,h.getValueSize()),
                ++p.referenceCount,
                this._addInactiveBinding(p, s, d),
                o[u] = p
            }
            a[u].resultBuffer = p.buffer
        }
    },
    _activateAction: function(e) {
        if (!this._isActiveAction(e)) {
            if (null === e._cacheIndex) {
                var t = (e._localRoot || this._root).uuid
                  , n = e._clip.uuid
                  , i = this._actionsByClip[n];
                this._bindAction(e, i && i.knownActions[0]),
                this._addInactiveAction(e, n, t)
            }
            for (var r = e._propertyBindings, o = 0, a = r.length; o !== a; ++o) {
                var s = r[o];
                0 === s.useCount++ && (this._lendBinding(s),
                s.saveOriginalState())
            }
            this._lendAction(e)
        }
    },
    _deactivateAction: function(e) {
        if (this._isActiveAction(e)) {
            for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
                var r = t[n];
                0 === --r.useCount && (r.restoreOriginalState(),
                this._takeBackBinding(r))
            }
            this._takeBackAction(e)
        }
    },
    _initMemoryManager: function() {
        this._actions = [],
        this._nActiveActions = 0,
        this._actionsByClip = {},
        this._bindings = [],
        this._nActiveBindings = 0,
        this._bindingsByRootAndName = {},
        this._controlInterpolants = [],
        this._nActiveControlInterpolants = 0;
        var e = this;
        this.stats = {
            actions: {
                get total() {
                    return e._actions.length
                },
                get inUse() {
                    return e._nActiveActions
                }
            },
            bindings: {
                get total() {
                    return e._bindings.length
                },
                get inUse() {
                    return e._nActiveBindings
                }
            },
            controlInterpolants: {
                get total() {
                    return e._controlInterpolants.length
                },
                get inUse() {
                    return e._nActiveControlInterpolants
                }
            }
        }
    },
    _isActiveAction: function(e) {
        var t = e._cacheIndex;
        return null !== t && t < this._nActiveActions
    },
    _addInactiveAction: function(e, t, n) {
        var i = this._actions
          , r = this._actionsByClip
          , o = r[t];
        if (void 0 === o)
            o = {
                knownActions: [e],
                actionByRoot: {}
            },
            e._byClipCacheIndex = 0,
            r[t] = o;
        else {
            var a = o.knownActions;
            e._byClipCacheIndex = a.length,
            a.push(e)
        }
        e._cacheIndex = i.length,
        i.push(e),
        o.actionByRoot[n] = e
    },
    _removeInactiveAction: function(e) {
        var t = this._actions
          , n = t[t.length - 1]
          , i = e._cacheIndex;
        n._cacheIndex = i,
        t[i] = n,
        t.pop(),
        e._cacheIndex = null;
        var r = e._clip.uuid
          , o = this._actionsByClip
          , a = o[r]
          , s = a.knownActions
          , c = s[s.length - 1]
          , l = e._byClipCacheIndex;
        c._byClipCacheIndex = l,
        s[l] = c,
        s.pop(),
        e._byClipCacheIndex = null;
        var u = a.actionByRoot
          , h = (t._localRoot || this._root).uuid;
        delete u[h],
        0 === s.length && delete o[r],
        this._removeInactiveBindingsForAction(e)
    },
    _removeInactiveBindingsForAction: function(e) {
        for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
            var r = t[n];
            0 === --r.referenceCount && this._removeInactiveBinding(r)
        }
    },
    _lendAction: function(e) {
        var t = this._actions
          , n = e._cacheIndex
          , i = this._nActiveActions++
          , r = t[i];
        e._cacheIndex = i,
        t[i] = e,
        r._cacheIndex = n,
        t[n] = r
    },
    _takeBackAction: function(e) {
        var t = this._actions
          , n = e._cacheIndex
          , i = --this._nActiveActions
          , r = t[i];
        e._cacheIndex = i,
        t[i] = e,
        r._cacheIndex = n,
        t[n] = r
    },
    _addInactiveBinding: function(e, t, n) {
        var i = this._bindingsByRootAndName
          , r = i[t]
          , o = this._bindings;
        void 0 === r && (r = {},
        i[t] = r),
        r[n] = e,
        e._cacheIndex = o.length,
        o.push(e)
    },
    _removeInactiveBinding: function(e) {
        var t = this._bindings
          , n = e.binding
          , i = n.rootNode.uuid
          , r = n.path
          , o = this._bindingsByRootAndName
          , a = o[i]
          , s = t[t.length - 1]
          , c = e._cacheIndex;
        s._cacheIndex = c,
        t[c] = s,
        t.pop(),
        delete a[r];
        e: {
            for (var l in a)
                break e;
            delete o[i]
        }
    },
    _lendBinding: function(e) {
        var t = this._bindings
          , n = e._cacheIndex
          , i = this._nActiveBindings++
          , r = t[i];
        e._cacheIndex = i,
        t[i] = e,
        r._cacheIndex = n,
        t[n] = r
    },
    _takeBackBinding: function(e) {
        var t = this._bindings
          , n = e._cacheIndex
          , i = --this._nActiveBindings
          , r = t[i];
        e._cacheIndex = i,
        t[i] = e,
        r._cacheIndex = n,
        t[n] = r
    },
    _lendControlInterpolant: function() {
        var e = this._controlInterpolants
          , t = this._nActiveControlInterpolants++
          , n = e[t];
        return void 0 === n && (n = new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
        n.__cacheIndex = t,
        e[t] = n),
        n
    },
    _takeBackControlInterpolant: function(e) {
        var t = this._controlInterpolants
          , n = e.__cacheIndex
          , i = --this._nActiveControlInterpolants
          , r = t[i];
        e.__cacheIndex = i,
        t[i] = e,
        r.__cacheIndex = n,
        t[n] = r
    },
    _controlInterpolantsResultBuffer: new Float32Array(1)
}),
THREE.AnimationObjectGroup = function(e) {
    this.uuid = THREE.Math.generateUUID(),
    this._objects = Array.prototype.slice.call(arguments),
    this.nCachedObjects_ = 0;
    var t = {};
    this._indicesByUUID = t;
    for (var n = 0, i = arguments.length; n !== i; ++n)
        t[arguments[n].uuid] = n;
    this._paths = [],
    this._parsedPaths = [],
    this._bindings = [],
    this._bindingsIndicesByPath = {};
    var r = this;
    this.stats = {
        objects: {
            get total() {
                return r._objects.length
            },
            get inUse() {
                return this.total - r.nCachedObjects_
            }
        },
        get bindingsPerObject() {
            return r._bindings.length
        }
    }
}
,
THREE.AnimationObjectGroup.prototype = {
    constructor: THREE.AnimationObjectGroup,
    add: function(e) {
        for (var t = this._objects, n = t.length, i = this.nCachedObjects_, r = this._indicesByUUID, o = this._paths, a = this._parsedPaths, s = this._bindings, c = s.length, l = 0, u = arguments.length; l !== u; ++l) {
            var h = arguments[l]
              , d = h.uuid
              , p = r[d];
            if (void 0 === p) {
                p = n++,
                r[d] = p,
                t.push(h);
                for (var f = 0, m = c; f !== m; ++f)
                    s[f].push(new THREE.PropertyBinding(h,o[f],a[f]))
            } else if (p < i) {
                var g = t[p]
                  , v = --i
                  , E = t[v];
                r[E.uuid] = p,
                t[p] = E,
                r[d] = v,
                t[v] = h;
                for (var f = 0, m = c; f !== m; ++f) {
                    var y = s[f]
                      , b = y[v]
                      , T = y[p];
                    y[p] = b,
                    void 0 === T && (T = new THREE.PropertyBinding(h,o[f],a[f])),
                    y[v] = T
                }
            } else
                t[p] !== g && console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")
        }
        this.nCachedObjects_ = i
    },
    remove: function(e) {
        for (var t = this._objects, n = (t.length,
        this.nCachedObjects_), i = this._indicesByUUID, r = this._bindings, o = r.length, a = 0, s = arguments.length; a !== s; ++a) {
            var c = arguments[a]
              , l = c.uuid
              , u = i[l];
            if (void 0 !== u && u >= n) {
                var h = n++
                  , d = t[h];
                i[d.uuid] = u,
                t[u] = d,
                i[l] = h,
                t[h] = c;
                for (var p = 0, f = o; p !== f; ++p) {
                    var m = r[p]
                      , g = m[h]
                      , v = m[u];
                    m[u] = g,
                    m[h] = v
                }
            }
        }
        this.nCachedObjects_ = n
    },
    uncache: function(e) {
        for (var t = this._objects, n = t.length, i = this.nCachedObjects_, r = this._indicesByUUID, o = this._bindings, a = o.length, s = 0, c = arguments.length; s !== c; ++s) {
            var l = arguments[s]
              , u = l.uuid
              , h = r[u];
            if (void 0 !== h)
                if (delete r[u],
                h < i) {
                    var d = --i
                      , p = t[d]
                      , f = --n
                      , m = t[f];
                    r[p.uuid] = h,
                    t[h] = p,
                    r[m.uuid] = d,
                    t[d] = m,
                    t.pop();
                    for (var g = 0, v = a; g !== v; ++g) {
                        var E = o[g]
                          , y = E[d]
                          , b = E[f];
                        E[h] = y,
                        E[d] = b,
                        E.pop()
                    }
                } else {
                    var f = --n
                      , m = t[f];
                    r[m.uuid] = h,
                    t[h] = m,
                    t.pop();
                    for (var g = 0, v = a; g !== v; ++g) {
                        var E = o[g];
                        E[h] = E[f],
                        E.pop()
                    }
                }
        }
        this.nCachedObjects_ = i
    },
    subscribe_: function(e, t) {
        var n = this._bindingsIndicesByPath
          , i = n[e]
          , r = this._bindings;
        if (void 0 !== i)
            return r[i];
        var o = this._paths
          , a = this._parsedPaths
          , s = this._objects
          , c = s.length
          , l = this.nCachedObjects_
          , u = new Array(c);
        i = r.length,
        n[e] = i,
        o.push(e),
        a.push(t),
        r.push(u);
        for (var h = l, d = s.length; h !== d; ++h) {
            var p = s[h];
            u[h] = new THREE.PropertyBinding(p,e,t)
        }
        return u
    },
    unsubscribe_: function(e) {
        var t = this._bindingsIndicesByPath
          , n = t[e];
        if (void 0 !== n) {
            var i = this._paths
              , r = this._parsedPaths
              , o = this._bindings
              , a = o.length - 1
              , s = o[a]
              , c = e[a];
            t[c] = n,
            o[n] = s,
            o.pop(),
            r[n] = r[a],
            r.pop(),
            i[n] = i[a],
            i.pop()
        }
    }
},
THREE.AnimationUtils = {
    arraySlice: function(e, t, n) {
        return THREE.AnimationUtils.isTypedArray(e) ? new e.constructor(e.subarray(t, n)) : e.slice(t, n)
    },
    convertArray: function(e, t, n) {
        return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
    },
    isTypedArray: function(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView)
    },
    getKeyframeOrder: function(e) {
        function t(t, n) {
            return e[t] - e[n]
        }
        for (var n = e.length, i = new Array(n), r = 0; r !== n; ++r)
            i[r] = r;
        return i.sort(t),
        i
    },
    sortedArray: function(e, t, n) {
        for (var i = e.length, r = new e.constructor(i), o = 0, a = 0; a !== i; ++o)
            for (var s = n[o] * t, c = 0; c !== t; ++c)
                r[a++] = e[s + c];
        return r
    },
    flattenJSON: function(e, t, n, i) {
        for (var r = 1, o = e[0]; void 0 !== o && void 0 === o[i]; )
            o = e[r++];
        if (void 0 !== o) {
            var a = o[i];
            if (void 0 !== a)
                if (Array.isArray(a)) {
                    do
                        a = o[i],
                        void 0 !== a && (t.push(o.time),
                        n.push.apply(n, a)),
                        o = e[r++];
                    while (void 0 !== o)
                } else if (void 0 !== a.toArray) {
                    do
                        a = o[i],
                        void 0 !== a && (t.push(o.time),
                        a.toArray(n, n.length)),
                        o = e[r++];
                    while (void 0 !== o)
                } else
                    do
                        a = o[i],
                        void 0 !== a && (t.push(o.time),
                        n.push(a)),
                        o = e[r++];
                    while (void 0 !== o)
        }
    }
},
THREE.KeyframeTrack = function(e, t, n, i) {
    if (void 0 === e)
        throw new Error("track name is undefined");
    if (void 0 === t || 0 === t.length)
        throw new Error("no keyframes in track named " + e);
    this.name = e,
    this.times = THREE.AnimationUtils.convertArray(t, this.TimeBufferType),
    this.values = THREE.AnimationUtils.convertArray(n, this.ValueBufferType),
    this.setInterpolation(i || this.DefaultInterpolation),
    this.validate(),
    this.optimize()
}
,
THREE.KeyframeTrack.prototype = {
    constructor: THREE.KeyframeTrack,
    TimeBufferType: Float32Array,
    ValueBufferType: Float32Array,
    DefaultInterpolation: THREE.InterpolateLinear,
    InterpolantFactoryMethodDiscrete: function(e) {
        return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)
    },
    InterpolantFactoryMethodLinear: function(e) {
        return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),e)
    },
    InterpolantFactoryMethodSmooth: function(e) {
        return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),e)
    },
    setInterpolation: function(e) {
        var t;
        switch (e) {
        case THREE.InterpolateDiscrete:
            t = this.InterpolantFactoryMethodDiscrete;
            break;
        case THREE.InterpolateLinear:
            t = this.InterpolantFactoryMethodLinear;
            break;
        case THREE.InterpolateSmooth:
            t = this.InterpolantFactoryMethodSmooth
        }
        if (void 0 === t) {
            var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (void 0 === this.createInterpolant) {
                if (e === this.DefaultInterpolation)
                    throw new Error(n);
                this.setInterpolation(this.DefaultInterpolation)
            }
            return void console.warn(n)
        }
        this.createInterpolant = t
    },
    getInterpolation: function() {
        switch (this.createInterpolant) {
        case this.InterpolantFactoryMethodDiscrete:
            return THREE.InterpolateDiscrete;
        case this.InterpolantFactoryMethodLinear:
            return THREE.InterpolateLinear;
        case this.InterpolantFactoryMethodSmooth:
            return THREE.InterpolateSmooth
        }
    },
    getValueSize: function() {
        return this.values.length / this.times.length
    },
    shift: function(e) {
        if (0 !== e)
            for (var t = this.times, n = 0, i = t.length; n !== i; ++n)
                t[n] += e;
        return this
    },
    scale: function(e) {
        if (1 !== e)
            for (var t = this.times, n = 0, i = t.length; n !== i; ++n)
                t[n] *= e;
        return this
    },
    trim: function(e, t) {
        for (var n = this.times, i = n.length, r = 0, o = i - 1; r !== i && n[r] < e; )
            ++r;
        for (; o !== -1 && n[o] > t; )
            --o;
        if (++o,
        0 !== r || o !== i) {
            r >= o && (o = Math.max(o, 1),
            r = o - 1);
            var a = this.getValueSize();
            this.times = THREE.AnimationUtils.arraySlice(n, r, o),
            this.values = THREE.AnimationUtils.arraySlice(this.values, r * a, o * a)
        }
        return this
    },
    validate: function() {
        var e = !0
          , t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("invalid value size in track", this),
        e = !1);
        var n = this.times
          , i = this.values
          , r = n.length;
        0 === r && (console.error("track is empty", this),
        e = !1);
        for (var o = null, a = 0; a !== r; a++) {
            var s = n[a];
            if ("number" == typeof s && isNaN(s)) {
                console.error("time is not a valid number", this, a, s),
                e = !1;
                break
            }
            if (null !== o && o > s) {
                console.error("out of order keys", this, a, s, o),
                e = !1;
                break
            }
            o = s
        }
        if (void 0 !== i && THREE.AnimationUtils.isTypedArray(i))
            for (var a = 0, c = i.length; a !== c; ++a) {
                var l = i[a];
                if (isNaN(l)) {
                    console.error("value is not a valid number", this, a, l),
                    e = !1;
                    break
                }
            }
        return e
    },
    optimize: function() {
        for (var e = this.times, t = this.values, n = this.getValueSize(), i = 1, r = 1, o = e.length - 1; r <= o; ++r) {
            var a = !1
              , s = e[r]
              , c = e[r + 1];
            if (s !== c && (1 !== r || s !== s[0]))
                for (var l = r * n, u = l - n, h = l + n, d = 0; d !== n; ++d) {
                    var p = t[l + d];
                    if (p !== t[u + d] || p !== t[h + d]) {
                        a = !0;
                        break
                    }
                }
            if (a) {
                if (r !== i) {
                    e[i] = e[r];
                    for (var f = r * n, m = i * n, d = 0; d !== n; ++d)
                        t[m + d] = t[f + d]
                }
                ++i
            }
        }
        return i !== e.length && (this.times = THREE.AnimationUtils.arraySlice(e, 0, i),
        this.values = THREE.AnimationUtils.arraySlice(t, 0, i * n)),
        this
    }
},
Object.assign(THREE.KeyframeTrack, {
    parse: function(e) {
        if (void 0 === e.type)
            throw new Error("track type undefined, can not parse");
        var t = THREE.KeyframeTrack._getTrackTypeForValueTypeName(e.type);
        if (void 0 === e.times) {
            var n = []
              , i = [];
            THREE.AnimationUtils.flattenJSON(e.keys, n, i, "value"),
            e.times = n,
            e.values = i
        }
        return void 0 !== t.parse ? t.parse(e) : new t(e.name,e.times,e.values,e.interpolation)
    },
    toJSON: function(e) {
        var t, n = e.constructor;
        if (void 0 !== n.toJSON)
            t = n.toJSON(e);
        else {
            t = {
                name: e.name,
                times: THREE.AnimationUtils.convertArray(e.times, Array),
                values: THREE.AnimationUtils.convertArray(e.values, Array)
            };
            var i = e.getInterpolation();
            i !== e.DefaultInterpolation && (t.interpolation = i)
        }
        return t.type = e.ValueTypeName,
        t
    },
    _getTrackTypeForValueTypeName: function(e) {
        switch (e.toLowerCase()) {
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return THREE.NumberKeyframeTrack;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return THREE.VectorKeyframeTrack;
        case "color":
            return THREE.ColorKeyframeTrack;
        case "quaternion":
            return THREE.QuaternionKeyframeTrack;
        case "bool":
        case "boolean":
            return THREE.BooleanKeyframeTrack;
        case "string":
            return THREE.StringKeyframeTrack
        }
        throw new Error("Unsupported typeName: " + e)
    }
}),
THREE.PropertyBinding = function(e, t, n) {
    this.path = t,
    this.parsedPath = n || THREE.PropertyBinding.parseTrackName(t),
    this.node = THREE.PropertyBinding.findNode(e, this.parsedPath.nodeName) || e,
    this.rootNode = e
}
,
THREE.PropertyBinding.prototype = {
    constructor: THREE.PropertyBinding,
    getValue: function(e, t) {
        this.bind(),
        this.getValue(e, t)
    },
    setValue: function(e, t) {
        this.bind(),
        this.setValue(e, t)
    },
    bind: function() {
        var e = this.node
          , t = this.parsedPath
          , n = t.objectName
          , i = t.propertyName
          , r = t.propertyIndex;
        if (e || (e = THREE.PropertyBinding.findNode(this.rootNode, t.nodeName) || this.rootNode,
        this.node = e),
        this.getValue = this._getValue_unavailable,
        this.setValue = this._setValue_unavailable,
        !e)
            return void console.error("  trying to update node for track: " + this.path + " but it wasn't found.");
        if (n) {
            var o = t.objectIndex;
            switch (n) {
            case "materials":
                if (!e.material)
                    return void console.error("  can not bind to material as node does not have a material", this);
                if (!e.material.materials)
                    return void console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                e = e.material.materials;
                break;
            case "bones":
                if (!e.skeleton)
                    return void console.error("  can not bind to bones as node does not have a skeleton", this);
                e = e.skeleton.bones;
                for (var a = 0; a < e.length; a++)
                    if (e[a].name === o) {
                        o = a;
                        break
                    }
                break;
            default:
                if (void 0 === e[n])
                    return void console.error("  can not bind to objectName of node, undefined", this);
                e = e[n]
            }
            if (void 0 !== o) {
                if (void 0 === e[o])
                    return void console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, e);
                e = e[o]
            }
        }
        var s = e[i];
        if (void 0 === s) {
            var c = t.nodeName;
            return void console.error("  trying to update property for track: " + c + "." + i + " but it wasn't found.", e)
        }
        var l = this.Versioning.None;
        void 0 !== e.needsUpdate ? (l = this.Versioning.NeedsUpdate,
        this.targetObject = e) : void 0 !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate,
        this.targetObject = e);
        var u = this.BindingType.Direct;
        if (void 0 !== r) {
            if ("morphTargetInfluences" === i) {
                if (!e.geometry)
                    return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this);
                if (!e.geometry.morphTargets)
                    return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                for (var a = 0; a < this.node.geometry.morphTargets.length; a++)
                    if (e.geometry.morphTargets[a].name === r) {
                        r = a;
                        break
                    }
            }
            u = this.BindingType.ArrayElement,
            this.resolvedProperty = s,
            this.propertyIndex = r
        } else
            void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray,
            this.resolvedProperty = s) : void 0 !== s.length ? (u = this.BindingType.EntireArray,
            this.resolvedProperty = s) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[u],
        this.setValue = this.SetterByBindingTypeAndVersioning[u][l]
    },
    unbind: function() {
        this.node = null,
        this.getValue = this._getValue_unbound,
        this.setValue = this._setValue_unbound
    }
},
Object.assign(THREE.PropertyBinding.prototype, {
    _getValue_unavailable: function() {},
    _setValue_unavailable: function() {},
    _getValue_unbound: THREE.PropertyBinding.prototype.getValue,
    _setValue_unbound: THREE.PropertyBinding.prototype.setValue,
    BindingType: {
        Direct: 0,
        EntireArray: 1,
        ArrayElement: 2,
        HasFromToArray: 3
    },
    Versioning: {
        None: 0,
        NeedsUpdate: 1,
        MatrixWorldNeedsUpdate: 2
    },
    GetterByBindingType: [function(e, t) {
        e[t] = this.node[this.propertyName]
    }
    , function(e, t) {
        for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
            e[t++] = n[i]
    }
    , function(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex]
    }
    , function(e, t) {
        this.resolvedProperty.toArray(e, t)
    }
    ],
    SetterByBindingTypeAndVersioning: [[function(e, t) {
        this.node[this.propertyName] = e[t]
    }
    , function(e, t) {
        this.node[this.propertyName] = e[t],
        this.targetObject.needsUpdate = !0
    }
    , function(e, t) {
        this.node[this.propertyName] = e[t],
        this.targetObject.matrixWorldNeedsUpdate = !0
    }
    ], [function(e, t) {
        for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
            n[i] = e[t++]
    }
    , function(e, t) {
        for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
            n[i] = e[t++];
        this.targetObject.needsUpdate = !0
    }
    , function(e, t) {
        for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
            n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0
    }
    ], [function(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t]
    }
    , function(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t],
        this.targetObject.needsUpdate = !0
    }
    , function(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t],
        this.targetObject.matrixWorldNeedsUpdate = !0
    }
    ], [function(e, t) {
        this.resolvedProperty.fromArray(e, t)
    }
    , function(e, t) {
        this.resolvedProperty.fromArray(e, t),
        this.targetObject.needsUpdate = !0
    }
    , function(e, t) {
        this.resolvedProperty.fromArray(e, t),
        this.targetObject.matrixWorldNeedsUpdate = !0
    }
    ]]
}),
THREE.PropertyBinding.Composite = function(e, t, n) {
    var i = n || THREE.PropertyBinding.parseTrackName(t);
    this._targetGroup = e,
    this._bindings = e.subscribe_(t, i)
}
,
THREE.PropertyBinding.Composite.prototype = {
    constructor: THREE.PropertyBinding.Composite,
    getValue: function(e, t) {
        this.bind();
        var n = this._targetGroup.nCachedObjects_
          , i = this._bindings[n];
        void 0 !== i && i.getValue(e, t)
    },
    setValue: function(e, t) {
        for (var n = this._bindings, i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)
            n[i].setValue(e, t)
    },
    bind: function() {
        for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
            e[t].bind()
    },
    unbind: function() {
        for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
            e[t].unbind()
    }
},
THREE.PropertyBinding.create = function(e, t, n) {
    return e instanceof THREE.AnimationObjectGroup ? new THREE.PropertyBinding.Composite(e,t,n) : new THREE.PropertyBinding(e,t,n)
}
,
THREE.PropertyBinding.parseTrackName = function(e) {
    var t = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/
      , n = t.exec(e);
    if (!n)
        throw new Error("cannot parse trackName at all: " + e);
    n.index === t.lastIndex && t.lastIndex++;
    var i = {
        nodeName: n[3],
        objectName: n[5],
        objectIndex: n[7],
        propertyName: n[9],
        propertyIndex: n[11]
    };
    if (null === i.propertyName || 0 === i.propertyName.length)
        throw new Error("can not parse propertyName from trackName: " + e);
    return i
}
,
THREE.PropertyBinding.findNode = function(e, t) {
    if (!t || "" === t || "root" === t || "." === t || t === -1 || t === e.name || t === e.uuid)
        return e;
    if (e.skeleton) {
        var n = function(e) {
            for (var n = 0; n < e.bones.length; n++) {
                var i = e.bones[n];
                if (i.name === t)
                    return i
            }
            return null
        }
          , i = n(e.skeleton);
        if (i)
            return i
    }
    if (e.children) {
        var r = function(e) {
            for (var n = 0; n < e.length; n++) {
                var i = e[n];
                if (i.name === t || i.uuid === t)
                    return i;
                var o = r(i.children);
                if (o)
                    return o
            }
            return null
        }
          , o = r(e.children);
        if (o)
            return o
    }
    return null
}
,
THREE.PropertyMixer = function(e, t, n) {
    this.binding = e,
    this.valueSize = n;
    var i, r = Float64Array;
    switch (t) {
    case "quaternion":
        i = this._slerp;
        break;
    case "string":
    case "bool":
        r = Array,
        i = this._select;
        break;
    default:
        i = this._lerp
    }
    this.buffer = new r(4 * n),
    this._mixBufferRegion = i,
    this.cumulativeWeight = 0,
    this.useCount = 0,
    this.referenceCount = 0
}
,
THREE.PropertyMixer.prototype = {
    constructor: THREE.PropertyMixer,
    accumulate: function(e, t) {
        var n = this.buffer
          , i = this.valueSize
          , r = e * i + i
          , o = this.cumulativeWeight;
        if (0 === o) {
            for (var a = 0; a !== i; ++a)
                n[r + a] = n[a];
            o = t
        } else {
            o += t;
            var s = t / o;
            this._mixBufferRegion(n, r, 0, s, i)
        }
        this.cumulativeWeight = o
    },
    apply: function(e) {
        var t = this.valueSize
          , n = this.buffer
          , i = e * t + t
          , r = this.cumulativeWeight
          , o = this.binding;
        if (this.cumulativeWeight = 0,
        r < 1) {
            var a = 3 * t;
            this._mixBufferRegion(n, i, a, 1 - r, t)
        }
        for (var s = t, c = t + t; s !== c; ++s)
            if (n[s] !== n[s + t]) {
                o.setValue(n, i);
                break
            }
    },
    saveOriginalState: function() {
        var e = this.binding
          , t = this.buffer
          , n = this.valueSize
          , i = 3 * n;
        e.getValue(t, i);
        for (var r = n, o = i; r !== o; ++r)
            t[r] = t[i + r % n];
        this.cumulativeWeight = 0
    },
    restoreOriginalState: function() {
        var e = 3 * this.valueSize;
        this.binding.setValue(this.buffer, e)
    },
    _select: function(e, t, n, i, r) {
        if (i >= .5)
            for (var o = 0; o !== r; ++o)
                e[t + o] = e[n + o]
    },
    _slerp: function(e, t, n, i, r) {
        THREE.Quaternion.slerpFlat(e, t, e, t, e, n, i)
    },
    _lerp: function(e, t, n, i, r) {
        for (var o = 1 - i, a = 0; a !== r; ++a) {
            var s = t + a;
            e[s] = e[s] * o + e[n + a] * i
        }
    }
},
THREE.BooleanKeyframeTrack = function(e, t, n) {
    THREE.KeyframeTrack.call(this, e, t, n)
}
,
THREE.BooleanKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.BooleanKeyframeTrack,
    ValueTypeName: "bool",
    ValueBufferType: Array,
    DefaultInterpolation: THREE.InterpolateDiscrete,
    InterpolantFactoryMethodLinear: void 0,
    InterpolantFactoryMethodSmooth: void 0
}),
THREE.ColorKeyframeTrack = function(e, t, n, i) {
    THREE.KeyframeTrack.call(this, e, t, n, i)
}
,
THREE.ColorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.ColorKeyframeTrack,
    ValueTypeName: "color"
}),
THREE.NumberKeyframeTrack = function(e, t, n, i) {
    THREE.KeyframeTrack.call(this, e, t, n, i)
}
,
THREE.NumberKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.NumberKeyframeTrack,
    ValueTypeName: "number"
}),
THREE.QuaternionKeyframeTrack = function(e, t, n, i) {
    THREE.KeyframeTrack.call(this, e, t, n, i)
}
,
THREE.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.QuaternionKeyframeTrack,
    ValueTypeName: "quaternion",
    DefaultInterpolation: THREE.InterpolateLinear,
    InterpolantFactoryMethodLinear: function(e) {
        return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)
    },
    InterpolantFactoryMethodSmooth: void 0
}),
THREE.StringKeyframeTrack = function(e, t, n, i) {
    THREE.KeyframeTrack.call(this, e, t, n, i)
}
,
THREE.StringKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.StringKeyframeTrack,
    ValueTypeName: "string",
    ValueBufferType: Array,
    DefaultInterpolation: THREE.InterpolateDiscrete,
    InterpolantFactoryMethodLinear: void 0,
    InterpolantFactoryMethodSmooth: void 0
}),
THREE.VectorKeyframeTrack = function(e, t, n, i) {
    THREE.KeyframeTrack.call(this, e, t, n, i)
}
,
THREE.VectorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.VectorKeyframeTrack,
    ValueTypeName: "vector"
}),
THREE.Audio = function(e) {
    THREE.Object3D.call(this),
    this.type = "Audio",
    this.context = e.context,
    this.source = this.context.createBufferSource(),
    this.source.onended = this.onEnded.bind(this),
    this.gain = this.context.createGain(),
    this.gain.connect(e.getInput()),
    this.autoplay = !1,
    this.startTime = 0,
    this.playbackRate = 1,
    this.isPlaying = !1,
    this.hasPlaybackControl = !0,
    this.sourceType = "empty",
    this.filters = []
}
,
THREE.Audio.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Audio,
    getOutput: function() {
        return this.gain
    },
    setNodeSource: function(e) {
        return this.hasPlaybackControl = !1,
        this.sourceType = "audioNode",
        this.source = e,
        this.connect(),
        this
    },
    setBuffer: function(e) {
        return this.source.buffer = e,
        this.sourceType = "buffer",
        this.autoplay && this.play(),
        this
    },
    play: function() {
        if (this.isPlaying === !0)
            return void console.warn("THREE.Audio: Audio is already playing.");
        if (this.hasPlaybackControl === !1)
            return void console.warn("THREE.Audio: this Audio has no playback control.");
        var e = this.context.createBufferSource();
        return e.buffer = this.source.buffer,
        e.loop = this.source.loop,
        e.onended = this.source.onended,
        e.start(0, this.startTime),
        e.playbackRate.value = this.playbackRate,
        this.isPlaying = !0,
        this.source = e,
        this.connect()
    },
    pause: function() {
        return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
        this.startTime = this.context.currentTime,
        this.isPlaying = !1,
        this)
    },
    stop: function() {
        return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
        this.startTime = 0,
        this.isPlaying = !1,
        this)
    },
    connect: function() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
                this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput())
        } else
            this.source.connect(this.getOutput());
        return this
    },
    disconnect: function() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
                this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput())
        } else
            this.source.disconnect(this.getOutput());
        return this
    },
    getFilters: function() {
        return this.filters
    },
    setFilters: function(e) {
        return e || (e = []),
        this.isPlaying === !0 ? (this.disconnect(),
        this.filters = e,
        this.connect()) : this.filters = e,
        this
    },
    getFilter: function() {
        return this.getFilters()[0]
    },
    setFilter: function(e) {
        return this.setFilters(e ? [e] : [])
    },
    setPlaybackRate: function(e) {
        return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.playbackRate = e,
        this.isPlaying === !0 && (this.source.playbackRate.value = this.playbackRate),
        this)
    },
    getPlaybackRate: function() {
        return this.playbackRate
    },
    onEnded: function() {
        this.isPlaying = !1
    },
    getLoop: function() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."),
        !1) : this.source.loop
    },
    setLoop: function(e) {
        return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : void (this.source.loop = e)
    },
    getVolume: function() {
        return this.gain.gain.value
    },
    setVolume: function(e) {
        return this.gain.gain.value = e,
        this
    }
}),
THREE.AudioAnalyser = function(e, t) {
    this.analyser = e.context.createAnalyser(),
    this.analyser.fftSize = void 0 !== t ? t : 2048,
    this.data = new Uint8Array(this.analyser.frequencyBinCount),
    e.getOutput().connect(this.analyser)
}
,
Object.assign(THREE.AudioAnalyser.prototype, {
    getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data),
        this.data
    },
    getAverageFrequency: function() {
        for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++)
            e += t[n];
        return e / t.length
    }
}),
Object.defineProperty(THREE, "AudioContext", {
    get: function() {
        var e;
        return function() {
            return void 0 === e && (e = new (window.AudioContext || window.webkitAudioContext)),
            e
        }
    }()
}),
THREE.PositionalAudio = function(e) {
    THREE.Audio.call(this, e),
    this.panner = this.context.createPanner(),
    this.panner.connect(this.gain)
}
,
THREE.PositionalAudio.prototype = Object.assign(Object.create(THREE.Audio.prototype), {
    constructor: THREE.PositionalAudio,
    getOutput: function() {
        return this.panner
    },
    getRefDistance: function() {
        return this.panner.refDistance
    },
    setRefDistance: function(e) {
        this.panner.refDistance = e;
    },
    getRolloffFactor: function() {
        return this.panner.rolloffFactor
    },
    setRolloffFactor: function(e) {
        this.panner.rolloffFactor = e
    },
    getDistanceModel: function() {
        return this.panner.distanceModel
    },
    setDistanceModel: function(e) {
        this.panner.distanceModel = e
    },
    getMaxDistance: function() {
        return this.panner.maxDistance
    },
    setMaxDistance: function(e) {
        this.panner.maxDistance = e
    },
    updateMatrixWorld: function() {
        var e = new THREE.Vector3;
        return function(t) {
            THREE.Object3D.prototype.updateMatrixWorld.call(this, t),
            e.setFromMatrixPosition(this.matrixWorld),
            this.panner.setPosition(e.x, e.y, e.z)
        }
    }()
}),
THREE.AudioListener = function() {
    THREE.Object3D.call(this),
    this.type = "AudioListener",
    this.context = THREE.AudioContext,
    this.gain = this.context.createGain(),
    this.gain.connect(this.context.destination),
    this.filter = null
}
,
THREE.AudioListener.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.AudioListener,
    getInput: function() {
        return this.gain
    },
    removeFilter: function() {
        null !== this.filter && (this.gain.disconnect(this.filter),
        this.filter.disconnect(this.context.destination),
        this.gain.connect(this.context.destination),
        this.filter = null)
    },
    getFilter: function() {
        return this.filter
    },
    setFilter: function(e) {
        null !== this.filter ? (this.gain.disconnect(this.filter),
        this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
        this.filter = e,
        this.gain.connect(this.filter),
        this.filter.connect(this.context.destination)
    },
    getMasterVolume: function() {
        return this.gain.gain.value
    },
    setMasterVolume: function(e) {
        this.gain.gain.value = e
    },
    updateMatrixWorld: function() {
        var e = new THREE.Vector3
          , t = new THREE.Quaternion
          , n = new THREE.Vector3
          , i = new THREE.Vector3;
        return function(r) {
            THREE.Object3D.prototype.updateMatrixWorld.call(this, r);
            var o = this.context.listener
              , a = this.up;
            this.matrixWorld.decompose(e, t, n),
            i.set(0, 0, -1).applyQuaternion(t),
            o.setPosition(e.x, e.y, e.z),
            o.setOrientation(i.x, i.y, i.z, a.x, a.y, a.z)
        }
    }()
}),
THREE.Camera = function() {
    THREE.Object3D.call(this),
    this.type = "Camera",
    this.matrixWorldInverse = new THREE.Matrix4,
    this.projectionMatrix = new THREE.Matrix4
}
,
THREE.Camera.prototype = Object.create(THREE.Object3D.prototype),
THREE.Camera.prototype.constructor = THREE.Camera,
THREE.Camera.prototype.getWorldDirection = function() {
    var e = new THREE.Quaternion;
    return function(t) {
        var n = t || new THREE.Vector3;
        return this.getWorldQuaternion(e),
        n.set(0, 0, -1).applyQuaternion(e)
    }
}(),
THREE.Camera.prototype.lookAt = function() {
    var e = new THREE.Matrix4;
    return function(t) {
        e.lookAt(this.position, t, this.up),
        this.quaternion.setFromRotationMatrix(e)
    }
}(),
THREE.Camera.prototype.clone = function() {
    return (new this.constructor).copy(this)
}
,
THREE.Camera.prototype.copy = function(e) {
    return THREE.Object3D.prototype.copy.call(this, e),
    this.matrixWorldInverse.copy(e.matrixWorldInverse),
    this.projectionMatrix.copy(e.projectionMatrix),
    this
}
,
THREE.CubeCamera = function(e, t, n) {
    THREE.Object3D.call(this),
    this.type = "CubeCamera";
    var i = 90
      , r = 1
      , o = new THREE.PerspectiveCamera(i,r,e,t);
    o.up.set(0, -1, 0),
    o.lookAt(new THREE.Vector3(1,0,0)),
    this.add(o);
    var a = new THREE.PerspectiveCamera(i,r,e,t);
    a.up.set(0, -1, 0),
    a.lookAt(new THREE.Vector3(-1,0,0)),
    this.add(a);
    var s = new THREE.PerspectiveCamera(i,r,e,t);
    s.up.set(0, 0, 1),
    s.lookAt(new THREE.Vector3(0,1,0)),
    this.add(s);
    var c = new THREE.PerspectiveCamera(i,r,e,t);
    c.up.set(0, 0, -1),
    c.lookAt(new THREE.Vector3(0,-1,0)),
    this.add(c);
    var l = new THREE.PerspectiveCamera(i,r,e,t);
    l.up.set(0, -1, 0),
    l.lookAt(new THREE.Vector3(0,0,1)),
    this.add(l);
    var u = new THREE.PerspectiveCamera(i,r,e,t);
    u.up.set(0, -1, 0),
    u.lookAt(new THREE.Vector3(0,0,-1)),
    this.add(u);
    var h = {
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    };
    this.renderTarget = new THREE.WebGLRenderTargetCube(n,n,h),
    this.updateCubeMap = function(e, t) {
        null === this.parent && this.updateMatrixWorld();
        var n = this.renderTarget
          , i = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1,
        n.activeCubeFace = 0,
        e.render(t, o, n),
        n.activeCubeFace = 1,
        e.render(t, a, n),
        n.activeCubeFace = 2,
        e.render(t, s, n),
        n.activeCubeFace = 3,
        e.render(t, c, n),
        n.activeCubeFace = 4,
        e.render(t, l, n),
        n.texture.generateMipmaps = i,
        n.activeCubeFace = 5,
        e.render(t, u, n),
        e.setRenderTarget(null)
    }
}
,
THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype),
THREE.CubeCamera.prototype.constructor = THREE.CubeCamera,
THREE.OrthographicCamera = function(e, t, n, i, r, o) {
    THREE.Camera.call(this),
    this.type = "OrthographicCamera",
    this.zoom = 1,
    this.view = null,
    this.left = e,
    this.right = t,
    this.top = n,
    this.bottom = i,
    this.near = void 0 !== r ? r : .1,
    this.far = void 0 !== o ? o : 2e3,
    this.updateProjectionMatrix()
}
,
THREE.OrthographicCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {
    constructor: THREE.OrthographicCamera,
    copy: function(e) {
        return THREE.Camera.prototype.copy.call(this, e),
        this.left = e.left,
        this.right = e.right,
        this.top = e.top,
        this.bottom = e.bottom,
        this.near = e.near,
        this.far = e.far,
        this.zoom = e.zoom,
        this.view = null === e.view ? null : Object.assign({}, e.view),
        this
    },
    setViewOffset: function(e, t, n, i, r, o) {
        this.view = {
            fullWidth: e,
            fullHeight: t,
            offsetX: n,
            offsetY: i,
            width: r,
            height: o
        },
        this.updateProjectionMatrix()
    },
    clearViewOffset: function() {
        this.view = null,
        this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function() {
        var e = (this.right - this.left) / (2 * this.zoom)
          , t = (this.top - this.bottom) / (2 * this.zoom)
          , n = (this.right + this.left) / 2
          , i = (this.top + this.bottom) / 2
          , r = n - e
          , o = n + e
          , a = i + t
          , s = i - t;
        if (null !== this.view) {
            var c = this.zoom / (this.view.width / this.view.fullWidth)
              , l = this.zoom / (this.view.height / this.view.fullHeight)
              , u = (this.right - this.left) / this.view.width
              , h = (this.top - this.bottom) / this.view.height;
            r += u * (this.view.offsetX / c),
            o = r + u * (this.view.width / c),
            a -= h * (this.view.offsetY / l),
            s = a - h * (this.view.height / l)
        }
        this.projectionMatrix.makeOrthographic(r, o, a, s, this.near, this.far)
    },
    toJSON: function(e) {
        var t = THREE.Object3D.prototype.toJSON.call(this, e);
        return t.object.zoom = this.zoom,
        t.object.left = this.left,
        t.object.right = this.right,
        t.object.top = this.top,
        t.object.bottom = this.bottom,
        t.object.near = this.near,
        t.object.far = this.far,
        null !== this.view && (t.object.view = Object.assign({}, this.view)),
        t
    }
}),
THREE.PerspectiveCamera = function(e, t, n, i) {
    THREE.Camera.call(this),
    this.type = "PerspectiveCamera",
    this.fov = void 0 !== e ? e : 50,
    this.zoom = 1,
    this.near = void 0 !== n ? n : .1,
    this.far = void 0 !== i ? i : 2e3,
    this.focus = 10,
    this.aspect = void 0 !== t ? t : 1,
    this.view = null,
    this.filmGauge = 35,
    this.filmOffset = 0,
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {
    constructor: THREE.PerspectiveCamera,
    copy: function(e) {
        return THREE.Camera.prototype.copy.call(this, e),
        this.fov = e.fov,
        this.zoom = e.zoom,
        this.near = e.near,
        this.far = e.far,
        this.focus = e.focus,
        this.aspect = e.aspect,
        this.view = null === e.view ? null : Object.assign({}, e.view),
        this.filmGauge = e.filmGauge,
        this.filmOffset = e.filmOffset,
        this
    },
    setFocalLength: function(e) {
        var t = .5 * this.getFilmHeight() / e;
        this.fov = 2 * THREE.Math.RAD2DEG * Math.atan(t),
        this.updateProjectionMatrix()
    },
    getFocalLength: function() {
        var e = Math.tan(.5 * THREE.Math.DEG2RAD * this.fov);
        return .5 * this.getFilmHeight() / e
    },
    getEffectiveFOV: function() {
        return 2 * THREE.Math.RAD2DEG * Math.atan(Math.tan(.5 * THREE.Math.DEG2RAD * this.fov) / this.zoom)
    },
    getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1)
    },
    getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1)
    },
    setViewOffset: function(e, t, n, i, r, o) {
        this.aspect = e / t,
        this.view = {
            fullWidth: e,
            fullHeight: t,
            offsetX: n,
            offsetY: i,
            width: r,
            height: o
        },
        this.updateProjectionMatrix()
    },
    clearViewOffset: function() {
        this.view = null,
        this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function() {
        var e = this.near
          , t = e * Math.tan(.5 * THREE.Math.DEG2RAD * this.fov) / this.zoom
          , n = 2 * t
          , i = this.aspect * n
          , r = -.5 * i
          , o = this.view;
        if (null !== o) {
            var a = o.fullWidth
              , s = o.fullHeight;
            r += o.offsetX * i / a,
            t -= o.offsetY * n / s,
            i *= o.width / a,
            n *= o.height / s
        }
        var c = this.filmOffset;
        0 !== c && (r += e * c / this.getFilmWidth()),
        this.projectionMatrix.makeFrustum(r, r + i, t - n, t, e, this.far)
    },
    toJSON: function(e) {
        var t = THREE.Object3D.prototype.toJSON.call(this, e);
        return t.object.fov = this.fov,
        t.object.zoom = this.zoom,
        t.object.near = this.near,
        t.object.far = this.far,
        t.object.focus = this.focus,
        t.object.aspect = this.aspect,
        null !== this.view && (t.object.view = Object.assign({}, this.view)),
        t.object.filmGauge = this.filmGauge,
        t.object.filmOffset = this.filmOffset,
        t
    }
}),
THREE.StereoCamera = function() {
    this.type = "StereoCamera",
    this.aspect = 1,
    this.cameraL = new THREE.PerspectiveCamera,
    this.cameraL.layers.enable(1),
    this.cameraL.matrixAutoUpdate = !1,
    this.cameraR = new THREE.PerspectiveCamera,
    this.cameraR.layers.enable(2),
    this.cameraR.matrixAutoUpdate = !1
}
,
Object.assign(THREE.StereoCamera.prototype, {
    update: function() {
        var e, t, n, i, r, o = new THREE.Matrix4, a = new THREE.Matrix4;
        return function(s) {
            var c = e !== s.focus || t !== s.fov || n !== s.aspect * this.aspect || i !== s.near || r !== s.far;
            if (c) {
                e = s.focus,
                t = s.fov,
                n = s.aspect * this.aspect,
                i = s.near,
                r = s.far;
                var l, u, h = s.projectionMatrix.clone(), d = .032, p = d * i / e, f = i * Math.tan(THREE.Math.DEG2RAD * t * .5);
                a.elements[12] = -d,
                o.elements[12] = d,
                l = -f * n + p,
                u = f * n + p,
                h.elements[0] = 2 * i / (u - l),
                h.elements[8] = (u + l) / (u - l),
                this.cameraL.projectionMatrix.copy(h),
                l = -f * n - p,
                u = f * n - p,
                h.elements[0] = 2 * i / (u - l),
                h.elements[8] = (u + l) / (u - l),
                this.cameraR.projectionMatrix.copy(h)
            }
            this.cameraL.matrixWorld.copy(s.matrixWorld).multiply(a),
            this.cameraR.matrixWorld.copy(s.matrixWorld).multiply(o)
        }
    }()
}),
THREE.Light = function(e, t) {
    THREE.Object3D.call(this),
    this.type = "Light",
    this.color = new THREE.Color(e),
    this.intensity = void 0 !== t ? t : 1,
    this.receiveShadow = void 0
}
,
THREE.Light.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Light,
    copy: function(e) {
        return THREE.Object3D.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.intensity = e.intensity,
        this
    },
    toJSON: function(e) {
        var t = THREE.Object3D.prototype.toJSON.call(this, e);
        return t.object.color = this.color.getHex(),
        t.object.intensity = this.intensity,
        void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
        void 0 !== this.distance && (t.object.distance = this.distance),
        void 0 !== this.angle && (t.object.angle = this.angle),
        void 0 !== this.decay && (t.object.decay = this.decay),
        void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
        t
    }
}),
THREE.LightShadow = function(e) {
    this.camera = e,
    this.bias = 0,
    this.radius = 1,
    this.mapSize = new THREE.Vector2(512,512),
    this.map = null,
    this.matrix = new THREE.Matrix4
}
,
Object.assign(THREE.LightShadow.prototype, {
    copy: function(e) {
        return this.camera = e.camera.clone(),
        this.bias = e.bias,
        this.radius = e.radius,
        this.mapSize.copy(e.mapSize),
        this
    },
    clone: function() {
        return (new this.constructor).copy(this)
    }
}),
THREE.AmbientLight = function(e, t) {
    THREE.Light.call(this, e, t),
    this.type = "AmbientLight",
    this.castShadow = void 0
}
,
THREE.AmbientLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.AmbientLight
}),
THREE.DirectionalLight = function(e, t) {
    THREE.Light.call(this, e, t),
    this.type = "DirectionalLight",
    this.position.copy(THREE.Object3D.DefaultUp),
    this.updateMatrix(),
    this.target = new THREE.Object3D,
    this.shadow = new THREE.DirectionalLightShadow
}
,
THREE.DirectionalLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.DirectionalLight,
    copy: function(e) {
        return THREE.Light.prototype.copy.call(this, e),
        this.target = e.target.clone(),
        this.shadow = e.shadow.clone(),
        this
    }
}),
THREE.DirectionalLightShadow = function(e) {
    THREE.LightShadow.call(this, new THREE.OrthographicCamera(-5,5,5,-5,.5,500))
}
,
THREE.DirectionalLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {
    constructor: THREE.DirectionalLightShadow
}),
THREE.HemisphereLight = function(e, t, n) {
    THREE.Light.call(this, e, n),
    this.type = "HemisphereLight",
    this.castShadow = void 0,
    this.position.copy(THREE.Object3D.DefaultUp),
    this.updateMatrix(),
    this.groundColor = new THREE.Color(t)
}
,
THREE.HemisphereLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.HemisphereLight,
    copy: function(e) {
        return THREE.Light.prototype.copy.call(this, e),
        this.groundColor.copy(e.groundColor),
        this
    }
}),
THREE.PointLight = function(e, t, n, i) {
    THREE.Light.call(this, e, t),
    this.type = "PointLight",
    Object.defineProperty(this, "power", {
        get: function() {
            return 4 * this.intensity * Math.PI
        },
        set: function(e) {
            this.intensity = e / (4 * Math.PI)
        }
    }),
    this.distance = void 0 !== n ? n : 0,
    this.decay = void 0 !== i ? i : 1,
    this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))
}
,
THREE.PointLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.PointLight,
    copy: function(e) {
        return THREE.Light.prototype.copy.call(this, e),
        this.distance = e.distance,
        this.decay = e.decay,
        this.shadow = e.shadow.clone(),
        this
    }
}),
THREE.SpotLight = function(e, t, n, i, r, o) {
    THREE.Light.call(this, e, t),
    this.type = "SpotLight",
    this.position.copy(THREE.Object3D.DefaultUp),
    this.updateMatrix(),
    this.target = new THREE.Object3D,
    Object.defineProperty(this, "power", {
        get: function() {
            return this.intensity * Math.PI
        },
        set: function(e) {
            this.intensity = e / Math.PI
        }
    }),
    this.distance = void 0 !== n ? n : 0,
    this.angle = void 0 !== i ? i : Math.PI / 3,
    this.penumbra = void 0 !== r ? r : 0,
    this.decay = void 0 !== o ? o : 1,
    this.shadow = new THREE.SpotLightShadow
}
,
THREE.SpotLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.SpotLight,
    copy: function(e) {
        return THREE.Light.prototype.copy.call(this, e),
        this.distance = e.distance,
        this.angle = e.angle,
        this.penumbra = e.penumbra,
        this.decay = e.decay,
        this.target = e.target.clone(),
        this.shadow = e.shadow.clone(),
        this
    }
}),
THREE.SpotLightShadow = function() {
    THREE.LightShadow.call(this, new THREE.PerspectiveCamera(50,1,.5,500))
}
,
THREE.SpotLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {
    constructor: THREE.SpotLightShadow,
    update: function(e) {
        var t = 2 * THREE.Math.RAD2DEG * e.angle
          , n = this.mapSize.width / this.mapSize.height
          , i = e.distance || 500
          , r = this.camera;
        t === r.fov && n === r.aspect && i === r.far || (r.fov = t,
        r.aspect = n,
        r.far = i,
        r.updateProjectionMatrix())
    }
}),
THREE.AudioLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.AudioLoader.prototype, {
    load: function(e, t, n, i) {
        var r = new THREE.XHRLoader(this.manager);
        r.setResponseType("arraybuffer"),
        r.load(e, function(e) {
            var n = THREE.AudioContext;
            n.decodeAudioData(e, function(e) {
                t(e)
            })
        }, n, i)
    }
}),
THREE.Cache = {
    enabled: !1,
    files: {},
    add: function(e, t) {
        this.enabled !== !1 && (this.files[e] = t)
    },
    get: function(e) {
        if (this.enabled !== !1)
            return this.files[e]
    },
    remove: function(e) {
        delete this.files[e]
    },
    clear: function() {
        this.files = {}
    }
},
THREE.Loader = function() {
    this.onLoadStart = function() {}
    ,
    this.onLoadProgress = function() {}
    ,
    this.onLoadComplete = function() {}
}
,
THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: void 0,
    extractUrlBase: function(e) {
        var t = e.split("/");
        return 1 === t.length ? "./" : (t.pop(),
        t.join("/") + "/")
    },
    initMaterials: function(e, t, n) {
        for (var i = [], r = 0; r < e.length; ++r)
            i[r] = this.createMaterial(e[r], t, n);
        return i
    },
    createMaterial: function() {
        var e, t, n;
        return function(i, r, o) {
            function a(e, n, i, a, c) {
                var l, u = r + e, h = THREE.Loader.Handlers.get(u);
                null !== h ? l = h.load(u) : (t.setCrossOrigin(o),
                l = t.load(u)),
                void 0 !== n && (l.repeat.fromArray(n),
                1 !== n[0] && (l.wrapS = THREE.RepeatWrapping),
                1 !== n[1] && (l.wrapT = THREE.RepeatWrapping)),
                void 0 !== i && l.offset.fromArray(i),
                void 0 !== a && ("repeat" === a[0] && (l.wrapS = THREE.RepeatWrapping),
                "mirror" === a[0] && (l.wrapS = THREE.MirroredRepeatWrapping),
                "repeat" === a[1] && (l.wrapT = THREE.RepeatWrapping),
                "mirror" === a[1] && (l.wrapT = THREE.MirroredRepeatWrapping)),
                void 0 !== c && (l.anisotropy = c);
                var d = THREE.Math.generateUUID();
                return s[d] = l,
                d
            }
            void 0 === e && (e = new THREE.Color),
            void 0 === t && (t = new THREE.TextureLoader),
            void 0 === n && (n = new THREE.MaterialLoader);
            var s = {}
              , c = {
                uuid: THREE.Math.generateUUID(),
                type: "MeshLambertMaterial"
            };
            for (var l in i) {
                var u = i[l];
                switch (l) {
                case "DbgColor":
                case "DbgIndex":
                case "opticalDensity":
                case "illumination":
                    break;
                case "DbgName":
                    c.name = u;
                    break;
                case "blending":
                    c.blending = THREE[u];
                    break;
                case "colorAmbient":
                case "mapAmbient":
                    console.warn("THREE.Loader.createMaterial:", l, "is no longer supported.");
                    break;
                case "colorDiffuse":
                    c.color = e.fromArray(u).getHex();
                    break;
                case "colorSpecular":
                    c.specular = e.fromArray(u).getHex();
                    break;
                case "colorEmissive":
                    c.emissive = e.fromArray(u).getHex();
                    break;
                case "specularCoef":
                    c.shininess = u;
                    break;
                case "shading":
                    "basic" === u.toLowerCase() && (c.type = "MeshBasicMaterial"),
                    "phong" === u.toLowerCase() && (c.type = "MeshPhongMaterial"),
                    "standard" === u.toLowerCase() && (c.type = "MeshStandardMaterial");
                    break;
                case "mapDiffuse":
                    c.map = a(u, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                    break;
                case "mapDiffuseRepeat":
                case "mapDiffuseOffset":
                case "mapDiffuseWrap":
                case "mapDiffuseAnisotropy":
                    break;
                case "mapEmissive":
                    c.emissiveMap = a(u, i.mapEmissiveRepeat, i.mapEmissiveOffset, i.mapEmissiveWrap, i.mapEmissiveAnisotropy);
                    break;
                case "mapEmissiveRepeat":
                case "mapEmissiveOffset":
                case "mapEmissiveWrap":
                case "mapEmissiveAnisotropy":
                    break;
                case "mapLight":
                    c.lightMap = a(u, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                    break;
                case "mapLightRepeat":
                case "mapLightOffset":
                case "mapLightWrap":
                case "mapLightAnisotropy":
                    break;
                case "mapAO":
                    c.aoMap = a(u, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                    break;
                case "mapAORepeat":
                case "mapAOOffset":
                case "mapAOWrap":
                case "mapAOAnisotropy":
                    break;
                case "mapBump":
                    c.bumpMap = a(u, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                    break;
                case "mapBumpScale":
                    c.bumpScale = u;
                    break;
                case "mapBumpRepeat":
                case "mapBumpOffset":
                case "mapBumpWrap":
                case "mapBumpAnisotropy":
                    break;
                case "mapNormal":
                    c.normalMap = a(u, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                    break;
                case "mapNormalFactor":
                    c.normalScale = [u, u];
                    break;
                case "mapNormalRepeat":
                case "mapNormalOffset":
                case "mapNormalWrap":
                case "mapNormalAnisotropy":
                    break;
                case "mapSpecular":
                    c.specularMap = a(u, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                    break;
                case "mapSpecularRepeat":
                case "mapSpecularOffset":
                case "mapSpecularWrap":
                case "mapSpecularAnisotropy":
                    break;
                case "mapMetalness":
                    c.metalnessMap = a(u, i.mapMetalnessRepeat, i.mapMetalnessOffset, i.mapMetalnessWrap, i.mapMetalnessAnisotropy);
                    break;
                case "mapMetalnessRepeat":
                case "mapMetalnessOffset":
                case "mapMetalnessWrap":
                case "mapMetalnessAnisotropy":
                    break;
                case "mapRoughness":
                    c.roughnessMap = a(u, i.mapRoughnessRepeat, i.mapRoughnessOffset, i.mapRoughnessWrap, i.mapRoughnessAnisotropy);
                    break;
                case "mapRoughnessRepeat":
                case "mapRoughnessOffset":
                case "mapRoughnessWrap":
                case "mapRoughnessAnisotropy":
                    break;
                case "mapAlpha":
                    c.alphaMap = a(u, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                    break;
                case "mapAlphaRepeat":
                case "mapAlphaOffset":
                case "mapAlphaWrap":
                case "mapAlphaAnisotropy":
                    break;
                case "flipSided":
                    c.side = THREE.BackSide;
                    break;
                case "doubleSided":
                    c.side = THREE.DoubleSide;
                    break;
                case "transparency":
                    console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                    c.opacity = u;
                    break;
                case "depthTest":
                case "depthWrite":
                case "colorWrite":
                case "opacity":
                case "reflectivity":
                case "transparent":
                case "visible":
                case "wireframe":
                    c[l] = u;
                    break;
                case "vertexColors":
                    u === !0 && (c.vertexColors = THREE.VertexColors),
                    "face" === u && (c.vertexColors = THREE.FaceColors);
                    break;
                default:
                    console.error("THREE.Loader.createMaterial: Unsupported", l, u)
                }
            }
            return "MeshBasicMaterial" === c.type && delete c.emissive,
            "MeshPhongMaterial" !== c.type && delete c.specular,
            c.opacity < 1 && (c.transparent = !0),
            n.setTextures(s),
            n.parse(c)
        }
    }()
},
THREE.Loader.Handlers = {
    handlers: [],
    add: function(e, t) {
        this.handlers.push(e, t)
    },
    get: function(e) {
        for (var t = this.handlers, n = 0, i = t.length; n < i; n += 2) {
            var r = t[n]
              , o = t[n + 1];
            if (r.test(e))
                return o
        }
        return null
    }
};
THREE.XHRLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
;
Object.assign(THREE.XHRLoader.prototype, {
    load: function(e, t, n, i) {
        void 0 !== this.path && (e = this.path + e);
        var r = this
          , o = THREE.Cache.get(e);
        if (void 0 !== o)
            return r.manager.itemStart(e),
            setTimeout(function() {
                t && t(o),
                r.manager.itemEnd(e)
            }, 0),
            o;
        var a = new XMLHttpRequest;
        return a.overrideMimeType("text/plain"),
        a.open("GET", e, !0),
        a.addEventListener("load", function(n) {
            var o = n.target.response;
            THREE.Cache.add(e, o),
            200 === this.status ? (t && t(o),
            r.manager.itemEnd(e)) : 0 === this.status ? (console.warn("THREE.XHRLoader: HTTP Status 0 received."),
            t && t(o),
            r.manager.itemEnd(e)) : (i && i(n),
            r.manager.itemError(e))
        }, !1),
        void 0 !== n && a.addEventListener("progress", function(e) {
            n(e)
        }, !1),
        a.addEventListener("error", function(t) {
            i && i(t),
            r.manager.itemError(e)
        }, !1),
        void 0 !== this.responseType && (a.responseType = this.responseType),
        void 0 !== this.withCredentials && (a.withCredentials = this.withCredentials),
        a.send(null),
        r.manager.itemStart(e),
        a
    },
    setPath: function(e) {
        return this.path = e,
        this
    },
    setResponseType: function(e) {
        return this.responseType = e,
        this
    },
    setWithCredentials: function(e) {
        return this.withCredentials = e,
        this
    }
}),
THREE.FontLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.FontLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = new THREE.XHRLoader(this.manager);
        o.load(e, function(e) {
            var n;
            try {
                n = JSON.parse(e)
            } catch (t) {
                console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                n = JSON.parse(e.substring(65, e.length - 2))
            }
            var i = r.parse(n);
            t && t(i)
        }, n, i)
    },
    parse: function(e) {
        return new THREE.Font(e)
    }
}),
THREE.ImageLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.ImageLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        if (o.onload = function() {
            URL.revokeObjectURL(o.src),
            t && t(o),
            r.manager.itemEnd(e)
        }
        ,
        0 === e.indexOf("data:"))
            o.src = e;
        else {
            var a = new THREE.XHRLoader;
            a.setPath(this.path),
            a.setResponseType("blob"),
            a.load(e, function(e) {
                o.src = URL.createObjectURL(e)
            }, n, i)
        }
        return r.manager.itemStart(e),
        o
    },
    setCrossOrigin: function(e) {
        return this.crossOrigin = e,
        this
    },
    setPath: function(e) {
        return this.path = e,
        this
    }
}),
THREE.JSONLoader = function(e) {
    "boolean" == typeof e && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
    e = void 0),
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager,
    this.withCredentials = !1
}
,
Object.assign(THREE.JSONLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : THREE.Loader.prototype.extractUrlBase(e)
          , a = new THREE.XHRLoader(this.manager);
        a.setWithCredentials(this.withCredentials),
        a.load(e, function(n) {
            var i = JSON.parse(n)
              , a = i.metadata;
            if (void 0 !== a) {
                var s = a.type;
                if (void 0 !== s) {
                    if ("object" === s.toLowerCase())
                        return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.ObjectLoader instead.");
                    if ("scene" === s.toLowerCase())
                        return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.SceneLoader instead.")
                }
            }
            var c = r.parse(i, o);
            t(c.geometry, c.materials)
        }, n, i)
    },
    setTexturePath: function(e) {
        this.texturePath = e
    },
    parse: function(e, t) {
        function n(t) {
            function n(e, t) {
                return e & 1 << t
            }
            var i, r, o, s, c, l, u, h, d, p, f, m, g, v, E, y, b, T, x, R, w, H, M, S, _, C, A, P = e.faces, L = e.vertices, k = e.normals, D = e.colors, I = 0;
            if (void 0 !== e.uvs) {
                for (i = 0; i < e.uvs.length; i++)
                    e.uvs[i].length && I++;
                for (i = 0; i < I; i++)
                    a.faceVertexUvs[i] = []
            }
            for (s = 0,
            c = L.length; s < c; )
                T = new THREE.Vector3,
                T.x = L[s++] * t,
                T.y = L[s++] * t,
                T.z = L[s++] * t,
                a.vertices.push(T);
            for (s = 0,
            c = P.length; s < c; )
                if (p = P[s++],
                f = n(p, 0),
                m = n(p, 1),
                g = n(p, 3),
                v = n(p, 4),
                E = n(p, 5),
                y = n(p, 6),
                b = n(p, 7),
                f) {
                    if (R = new THREE.Face3,
                    R.a = P[s],
                    R.b = P[s + 1],
                    R.c = P[s + 3],
                    w = new THREE.Face3,
                    w.a = P[s + 1],
                    w.b = P[s + 2],
                    w.c = P[s + 3],
                    s += 4,
                    m && (d = P[s++],
                    R.materialIndex = d,
                    w.materialIndex = d),
                    o = a.faces.length,
                    g)
                        for (i = 0; i < I; i++)
                            for (S = e.uvs[i],
                            a.faceVertexUvs[i][o] = [],
                            a.faceVertexUvs[i][o + 1] = [],
                            r = 0; r < 4; r++)
                                h = P[s++],
                                C = S[2 * h],
                                A = S[2 * h + 1],
                                _ = new THREE.Vector2(C,A),
                                2 !== r && a.faceVertexUvs[i][o].push(_),
                                0 !== r && a.faceVertexUvs[i][o + 1].push(_);
                    if (v && (u = 3 * P[s++],
                    R.normal.set(k[u++], k[u++], k[u]),
                    w.normal.copy(R.normal)),
                    E)
                        for (i = 0; i < 4; i++)
                            u = 3 * P[s++],
                            M = new THREE.Vector3(k[u++],k[u++],k[u]),
                            2 !== i && R.vertexNormals.push(M),
                            0 !== i && w.vertexNormals.push(M);
                    if (y && (l = P[s++],
                    H = D[l],
                    R.color.setHex(H),
                    w.color.setHex(H)),
                    b)
                        for (i = 0; i < 4; i++)
                            l = P[s++],
                            H = D[l],
                            2 !== i && R.vertexColors.push(new THREE.Color(H)),
                            0 !== i && w.vertexColors.push(new THREE.Color(H));
                    a.faces.push(R),
                    a.faces.push(w)
                } else {
                    if (x = new THREE.Face3,
                    x.a = P[s++],
                    x.b = P[s++],
                    x.c = P[s++],
                    m && (d = P[s++],
                    x.materialIndex = d),
                    o = a.faces.length,
                    g)
                        for (i = 0; i < I; i++)
                            for (S = e.uvs[i],
                            a.faceVertexUvs[i][o] = [],
                            r = 0; r < 3; r++)
                                h = P[s++],
                                C = S[2 * h],
                                A = S[2 * h + 1],
                                _ = new THREE.Vector2(C,A),
                                a.faceVertexUvs[i][o].push(_);
                    if (v && (u = 3 * P[s++],
                    x.normal.set(k[u++], k[u++], k[u])),
                    E)
                        for (i = 0; i < 3; i++)
                            u = 3 * P[s++],
                            M = new THREE.Vector3(k[u++],k[u++],k[u]),
                            x.vertexNormals.push(M);
                    if (y && (l = P[s++],
                    x.color.setHex(D[l])),
                    b)
                        for (i = 0; i < 3; i++)
                            l = P[s++],
                            x.vertexColors.push(new THREE.Color(D[l]));
                    a.faces.push(x)
                }
        }
        function i() {
            var t = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
            if (e.skinWeights)
                for (var n = 0, i = e.skinWeights.length; n < i; n += t) {
                    var r = e.skinWeights[n]
                      , o = t > 1 ? e.skinWeights[n + 1] : 0
                      , s = t > 2 ? e.skinWeights[n + 2] : 0
                      , c = t > 3 ? e.skinWeights[n + 3] : 0;
                    a.skinWeights.push(new THREE.Vector4(r,o,s,c))
                }
            if (e.skinIndices)
                for (var n = 0, i = e.skinIndices.length; n < i; n += t) {
                    var l = e.skinIndices[n]
                      , u = t > 1 ? e.skinIndices[n + 1] : 0
                      , h = t > 2 ? e.skinIndices[n + 2] : 0
                      , d = t > 3 ? e.skinIndices[n + 3] : 0;
                    a.skinIndices.push(new THREE.Vector4(l,u,h,d))
                }
            a.bones = e.bones,
            a.bones && a.bones.length > 0 && (a.skinWeights.length !== a.skinIndices.length || a.skinIndices.length !== a.vertices.length) && console.warn("When skinning, number of vertices (" + a.vertices.length + "), skinIndices (" + a.skinIndices.length + "), and skinWeights (" + a.skinWeights.length + ") should match.")
        }
        function r(t) {
            if (void 0 !== e.morphTargets)
                for (var n = 0, i = e.morphTargets.length; n < i; n++) {
                    a.morphTargets[n] = {},
                    a.morphTargets[n].name = e.morphTargets[n].name,
                    a.morphTargets[n].vertices = [];
                    for (var r = a.morphTargets[n].vertices, o = e.morphTargets[n].vertices, s = 0, c = o.length; s < c; s += 3) {
                        var l = new THREE.Vector3;
                        l.x = o[s] * t,
                        l.y = o[s + 1] * t,
                        l.z = o[s + 2] * t,
                        r.push(l)
                    }
                }
            if (void 0 !== e.morphColors && e.morphColors.length > 0) {
                console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                for (var u = a.faces, h = e.morphColors[0].colors, n = 0, i = u.length; n < i; n++)
                    u[n].color.fromArray(h, 3 * n)
            }
        }
        function o() {
            var t = []
              , n = [];
            void 0 !== e.animation && n.push(e.animation),
            void 0 !== e.animations && (e.animations.length ? n = n.concat(e.animations) : n.push(e.animations));
            for (var i = 0; i < n.length; i++) {
                var r = THREE.AnimationClip.parseAnimation(n[i], a.bones);
                r && t.push(r)
            }
            if (a.morphTargets) {
                var o = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(a.morphTargets, 10);
                t = t.concat(o)
            }
            t.length > 0 && (a.animations = t)
        }
        var a = new THREE.Geometry
          , s = void 0 !== e.scale ? 1 / e.scale : 1;
        if (n(s),
        i(),
        r(s),
        o(),
        a.computeFaceNormals(),
        a.computeBoundingSphere(),
        void 0 === e.materials || 0 === e.materials.length)
            return {
                geometry: a
            };
        var c = THREE.Loader.prototype.initMaterials(e.materials, t, this.crossOrigin);
        return {
            geometry: a,
            materials: c
        }
    }
}),
THREE.LoadingManager = function(e, t, n) {
    var i = this
      , r = !1
      , o = 0
      , a = 0;
    this.onStart = void 0,
    this.onLoad = e,
    this.onProgress = t,
    this.onError = n,
    this.itemStart = function(e) {
        a++,
        r === !1 && void 0 !== i.onStart && i.onStart(e, o, a),
        r = !0
    }
    ,
    this.itemEnd = function(e) {
        o++,
        void 0 !== i.onProgress && i.onProgress(e, o, a),
        o === a && (r = !1,
        void 0 !== i.onLoad && i.onLoad())
    }
    ,
    this.itemError = function(e) {
        void 0 !== i.onError && i.onError(e)
    }
}
,
THREE.DefaultLoadingManager = new THREE.LoadingManager,
THREE.BufferGeometryLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.BufferGeometryLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = new THREE.XHRLoader(r.manager);
        o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, n, i)
    },
    parse: function(e) {
        var t = new THREE.BufferGeometry
          , n = e.data.index
          , i = {
            Int8Array: Int8Array,
            Uint8Array: Uint8Array,
            Uint8ClampedArray: Uint8ClampedArray,
            Int16Array: Int16Array,
            Uint16Array: Uint16Array,
            Int32Array: Int32Array,
            Uint32Array: Uint32Array,
            Float32Array: Float32Array,
            Float64Array: Float64Array
        };
        if (void 0 !== n) {
            var r = new i[n.type](n.array);
            t.setIndex(new THREE.BufferAttribute(r,1))
        }
        var o = e.data.attributes;
        for (var a in o) {
            var s = o[a]
              , r = new i[s.type](s.array);
            t.addAttribute(a, new THREE.BufferAttribute(r,s.itemSize,s.normalized))
        }
        var c = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (void 0 !== c)
            for (var l = 0, u = c.length; l !== u; ++l) {
                var h = c[l];
                t.addGroup(h.start, h.count, h.materialIndex)
            }
        var d = e.data.boundingSphere;
        if (void 0 !== d) {
            var p = new THREE.Vector3;
            void 0 !== d.center && p.fromArray(d.center),
            t.boundingSphere = new THREE.Sphere(p,d.radius)
        }
        return t
    }
}),
THREE.MaterialLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager,
    this.textures = {}
}
,
Object.assign(THREE.MaterialLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = new THREE.XHRLoader(r.manager);
        o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, n, i)
    },
    setTextures: function(e) {
        this.textures = e
    },
    getTexture: function(e) {
        var t = this.textures;
        return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e),
        t[e]
    },
    parse: function(e) {
        var t = new THREE[e.type];
        if (void 0 !== e.uuid && (t.uuid = e.uuid),
        void 0 !== e.name && (t.name = e.name),
        void 0 !== e.color && t.color.setHex(e.color),
        void 0 !== e.roughness && (t.roughness = e.roughness),
        void 0 !== e.metalness && (t.metalness = e.metalness),
        void 0 !== e.emissive && t.emissive.setHex(e.emissive),
        void 0 !== e.specular && t.specular.setHex(e.specular),
        void 0 !== e.shininess && (t.shininess = e.shininess),
        void 0 !== e.uniforms && (t.uniforms = e.uniforms),
        void 0 !== e.vertexShader && (t.vertexShader = e.vertexShader),
        void 0 !== e.fragmentShader && (t.fragmentShader = e.fragmentShader),
        void 0 !== e.vertexColors && (t.vertexColors = e.vertexColors),
        void 0 !== e.shading && (t.shading = e.shading),
        void 0 !== e.blending && (t.blending = e.blending),
        void 0 !== e.side && (t.side = e.side),
        void 0 !== e.opacity && (t.opacity = e.opacity),
        void 0 !== e.transparent && (t.transparent = e.transparent),
        void 0 !== e.alphaTest && (t.alphaTest = e.alphaTest),
        void 0 !== e.depthTest && (t.depthTest = e.depthTest),
        void 0 !== e.depthWrite && (t.depthWrite = e.depthWrite),
        void 0 !== e.colorWrite && (t.colorWrite = e.colorWrite),
        void 0 !== e.wireframe && (t.wireframe = e.wireframe),
        void 0 !== e.wireframeLinewidth && (t.wireframeLinewidth = e.wireframeLinewidth),
        void 0 !== e.size && (t.size = e.size),
        void 0 !== e.sizeAttenuation && (t.sizeAttenuation = e.sizeAttenuation),
        void 0 !== e.map && (t.map = this.getTexture(e.map)),
        void 0 !== e.alphaMap && (t.alphaMap = this.getTexture(e.alphaMap),
        t.transparent = !0),
        void 0 !== e.bumpMap && (t.bumpMap = this.getTexture(e.bumpMap)),
        void 0 !== e.bumpScale && (t.bumpScale = e.bumpScale),
        void 0 !== e.normalMap && (t.normalMap = this.getTexture(e.normalMap)),
        void 0 !== e.normalScale) {
            var n = e.normalScale;
            Array.isArray(n) === !1 && (n = [n, n]),
            t.normalScale = (new THREE.Vector2).fromArray(n)
        }
        if (void 0 !== e.displacementMap && (t.displacementMap = this.getTexture(e.displacementMap)),
        void 0 !== e.displacementScale && (t.displacementScale = e.displacementScale),
        void 0 !== e.displacementBias && (t.displacementBias = e.displacementBias),
        void 0 !== e.roughnessMap && (t.roughnessMap = this.getTexture(e.roughnessMap)),
        void 0 !== e.metalnessMap && (t.metalnessMap = this.getTexture(e.metalnessMap)),
        void 0 !== e.emissiveMap && (t.emissiveMap = this.getTexture(e.emissiveMap)),
        void 0 !== e.emissiveIntensity && (t.emissiveIntensity = e.emissiveIntensity),
        void 0 !== e.specularMap && (t.specularMap = this.getTexture(e.specularMap)),
        void 0 !== e.envMap && (t.envMap = this.getTexture(e.envMap),
        t.combine = THREE.MultiplyOperation),
        void 0 !== e.reflectivity && (t.reflectivity = e.reflectivity),
        void 0 !== e.lightMap && (t.lightMap = this.getTexture(e.lightMap)),
        void 0 !== e.lightMapIntensity && (t.lightMapIntensity = e.lightMapIntensity),
        void 0 !== e.aoMap && (t.aoMap = this.getTexture(e.aoMap)),
        void 0 !== e.aoMapIntensity && (t.aoMapIntensity = e.aoMapIntensity),
        void 0 !== e.materials)
            for (var i = 0, r = e.materials.length; i < r; i++)
                t.materials.push(this.parse(e.materials[i]));
        return t
    }
}),
THREE.ObjectLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager,
    this.texturePath = ""
}
,
Object.assign(THREE.ObjectLoader.prototype, {
    load: function(e, t, n, i) {
        "" === this.texturePath && (this.texturePath = e.substring(0, e.lastIndexOf("/") + 1));
        var r = this
          , o = new THREE.XHRLoader(r.manager);
        o.load(e, function(e) {
            r.parse(JSON.parse(e), t)
        }, n, i)
    },
    setTexturePath: function(e) {
        this.texturePath = e
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e, t) {
        var n = this.parseGeometries(e.geometries)
          , i = this.parseImages(e.images, function() {
            void 0 !== t && t(a)
        })
          , r = this.parseTextures(e.textures, i)
          , o = this.parseMaterials(e.materials, r)
          , a = this.parseObject(e.object, n, o);
        return e.animations && (a.animations = this.parseAnimations(e.animations)),
        void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(a),
        a
    },
    parseGeometries: function(e) {
        var t = {};
        if (void 0 !== e)
            for (var n = new THREE.JSONLoader, i = new THREE.BufferGeometryLoader, r = 0, o = e.length; r < o; r++) {
                var a, s = e[r];
                switch (s.type) {
                case "PlaneGeometry":
                case "PlaneBufferGeometry":
                    a = new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);
                    break;
                case "BoxGeometry":
                case "BoxBufferGeometry":
                case "CubeGeometry":
                    a = new THREE[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                    break;
                case "CircleGeometry":
                case "CircleBufferGeometry":
                    a = new THREE[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);
                    break;
                case "CylinderGeometry":
                case "CylinderBufferGeometry":
                    a = new THREE[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                    break;
                case "ConeGeometry":
                case "ConeBufferGeometry":
                    a = new THREE[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                    break;
                case "SphereGeometry":
                case "SphereBufferGeometry":
                    a = new THREE[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                    break;
                case "DodecahedronGeometry":
                case "IcosahedronGeometry":
                case "OctahedronGeometry":
                case "TetrahedronGeometry":
                    a = new THREE[s.type](s.radius,s.detail);
                    break;
                case "RingGeometry":
                case "RingBufferGeometry":
                    a = new THREE[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);
                    break;
                case "TorusGeometry":
                case "TorusBufferGeometry":
                    a = new THREE[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                    break;
                case "TorusKnotGeometry":
                case "TorusKnotBufferGeometry":
                    a = new THREE[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);
                    break;
                case "LatheGeometry":
                case "LatheBufferGeometry":
                    a = new THREE[s.type](s.points,s.segments,s.phiStart,s.phiLength);
                    break;
                case "BufferGeometry":
                    a = i.parse(s);
                    break;
                case "Geometry":
                    a = n.parse(s.data, this.texturePath).geometry;
                    break;
                default:
                    console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                    continue
                }
                a.uuid = s.uuid,
                void 0 !== s.name && (a.name = s.name),
                t[s.uuid] = a
            }
        return t
    },
    parseMaterials: function(e, t) {
        var n = {};
        if (void 0 !== e) {
            var i = new THREE.MaterialLoader;
            i.setTextures(t);
            for (var r = 0, o = e.length; r < o; r++) {
                var a = i.parse(e[r]);
                n[a.uuid] = a
            }
        }
        return n
    },
    parseAnimations: function(e) {
        for (var t = [], n = 0; n < e.length; n++) {
            var i = THREE.AnimationClip.parse(e[n]);
            t.push(i)
        }
        return t
    },
    parseImages: function(e, t) {
        function n(e) {
            return i.manager.itemStart(e),
            a.load(e, function() {
                i.manager.itemEnd(e)
            })
        }
        var i = this
          , r = {};
        if (void 0 !== e && e.length > 0) {
            var o = new THREE.LoadingManager(t)
              , a = new THREE.ImageLoader(o);
            a.setCrossOrigin(this.crossOrigin);
            for (var s = 0, c = e.length; s < c; s++) {
                var l = e[s]
                  , u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : i.texturePath + l.url;
                r[l.uuid] = n(u)
            }
        }
        return r
    },
    parseTextures: function(e, t) {
        function n(e) {
            return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e),
            THREE[e])
        }
        var i = {};
        if (void 0 !== e)
            for (var r = 0, o = e.length; r < o; r++) {
                var a = e[r];
                void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid),
                void 0 === t[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                var s = new THREE.Texture(t[a.image]);
                s.needsUpdate = !0,
                s.uuid = a.uuid,
                void 0 !== a.name && (s.name = a.name),
                void 0 !== a.mapping && (s.mapping = n(a.mapping)),
                void 0 !== a.offset && s.offset.fromArray(a.offset),
                void 0 !== a.repeat && s.repeat.fromArray(a.repeat),
                void 0 !== a.wrap && (s.wrapS = n(a.wrap[0]),
                s.wrapT = n(a.wrap[1])),
                void 0 !== a.minFilter && (s.minFilter = n(a.minFilter)),
                void 0 !== a.magFilter && (s.magFilter = n(a.magFilter)),
                void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy),
                void 0 !== a.flipY && (s.flipY = a.flipY),
                i[a.uuid] = s
            }
        return i
    },
    parseObject: function() {
        var e = new THREE.Matrix4;
        return function(t, n, i) {
            function r(e) {
                return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e),
                n[e]
            }
            function o(e) {
                if (void 0 !== e)
                    return void 0 === i[e] && console.warn("THREE.ObjectLoader: Undefined material", e),
                    i[e]
            }
            var a;
            switch (t.type) {
            case "Scene":
                a = new THREE.Scene;
                break;
            case "PerspectiveCamera":
                a = new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far),
                void 0 !== t.focus && (a.focus = t.focus),
                void 0 !== t.zoom && (a.zoom = t.zoom),
                void 0 !== t.filmGauge && (a.filmGauge = t.filmGauge),
                void 0 !== t.filmOffset && (a.filmOffset = t.filmOffset),
                void 0 !== t.view && (a.view = Object.assign({}, t.view));
                break;
            case "OrthographicCamera":
                a = new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);
                break;
            case "AmbientLight":
                a = new THREE.AmbientLight(t.color,t.intensity);
                break;
            case "DirectionalLight":
                a = new THREE.DirectionalLight(t.color,t.intensity);
                break;
            case "PointLight":
                a = new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);
                break;
            case "SpotLight":
                a = new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                break;
            case "HemisphereLight":
                a = new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);
                break;
            case "Mesh":
                var s = r(t.geometry)
                  , c = o(t.material);
                a = s.bones && s.bones.length > 0 ? new THREE.SkinnedMesh(s,c) : new THREE.Mesh(s,c);
                break;
            case "LOD":
                a = new THREE.LOD;
                break;
            case "Line":
                a = new THREE.Line(r(t.geometry),o(t.material),t.mode);
                break;
            case "PointCloud":
            case "Points":
                a = new THREE.Points(r(t.geometry),o(t.material));
                break;
            case "Sprite":
                a = new THREE.Sprite(o(t.material));
                break;
            case "Group":
                a = new THREE.Group;
                break;
            default:
                a = new THREE.Object3D
            }
            if (a.uuid = t.uuid,
            void 0 !== t.name && (a.name = t.name),
            void 0 !== t.matrix ? (e.fromArray(t.matrix),
            e.decompose(a.position, a.quaternion, a.scale)) : (void 0 !== t.position && a.position.fromArray(t.position),
            void 0 !== t.rotation && a.rotation.fromArray(t.rotation),
            void 0 !== t.scale && a.scale.fromArray(t.scale)),
            void 0 !== t.castShadow && (a.castShadow = t.castShadow),
            void 0 !== t.receiveShadow && (a.receiveShadow = t.receiveShadow),
            void 0 !== t.visible && (a.visible = t.visible),
            void 0 !== t.userData && (a.userData = t.userData),
            void 0 !== t.children)
                for (var l in t.children)
                    a.add(this.parseObject(t.children[l], n, i));
            if ("LOD" === t.type)
                for (var u = t.levels, h = 0; h < u.length; h++) {
                    var d = u[h]
                      , l = a.getObjectByProperty("uuid", d.object);
                    void 0 !== l && a.addLevel(l, d.distance)
                }
            return a
        }
    }()
}),
THREE.TextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.TextureLoader.prototype, {
    load: function(e, t, n, i) {
        var r = new THREE.Texture
          , o = new THREE.ImageLoader(this.manager);
        return o.setCrossOrigin(this.crossOrigin),
        o.setPath(this.path),
        o.load(e, function(n) {
            var i = e.search(/\.(jpg|jpeg)$/) > 0 || 0 === e.search(/^data\:image\/jpeg/);
            r.format = i ? THREE.RGBFormat : THREE.RGBAFormat,
            r.image = n,
            r.needsUpdate = !0,
            void 0 !== t && t(r)
        }, n, i),
        r
    },
    setCrossOrigin: function(e) {
        return this.crossOrigin = e,
        this
    },
    setPath: function(e) {
        return this.path = e,
        this
    }
}),
THREE.CubeTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
Object.assign(THREE.CubeTextureLoader.prototype, {
    load: function(e, t, n, i) {
        function r(n) {
            a.load(e[n], function(e) {
                o.images[n] = e,
                s++,
                6 === s && (o.needsUpdate = !0,
                t && t(o))
            }, void 0, i)
        }
        var o = new THREE.CubeTexture
          , a = new THREE.ImageLoader(this.manager);
        a.setCrossOrigin(this.crossOrigin),
        a.setPath(this.path);
        for (var s = 0, c = 0; c < e.length; ++c)
            r(c);
        return o
    },
    setCrossOrigin: function(e) {
        return this.crossOrigin = e,
        this
    },
    setPath: function(e) {
        return this.path = e,
        this
    }
}),
THREE.DataTextureLoader = THREE.BinaryTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager,
    this._parser = null
}
,
Object.assign(THREE.BinaryTextureLoader.prototype, {
    load: function(e, t, n, i) {
        var r = this
          , o = new THREE.DataTexture
          , a = new THREE.XHRLoader(this.manager);
        return a.setResponseType("arraybuffer"),
        a.load(e, function(e) {
            var n = r._parser(e);
            n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width,
            o.image.height = n.height,
            o.image.data = n.data),
            o.wrapS = void 0 !== n.wrapS ? n.wrapS : THREE.ClampToEdgeWrapping,
            o.wrapT = void 0 !== n.wrapT ? n.wrapT : THREE.ClampToEdgeWrapping,
            o.magFilter = void 0 !== n.magFilter ? n.magFilter : THREE.LinearFilter,
            o.minFilter = void 0 !== n.minFilter ? n.minFilter : THREE.LinearMipMapLinearFilter,
            o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
            void 0 !== n.format && (o.format = n.format),
            void 0 !== n.type && (o.type = n.type),
            void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps),
            1 === n.mipmapCount && (o.minFilter = THREE.LinearFilter),
            o.needsUpdate = !0,
            t && t(o, n))
        }, n, i),
        o
    }
}),
THREE.CompressedTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager,
    this._parser = null
}
,
Object.assign(THREE.CompressedTextureLoader.prototype, {
    load: function(e, t, n, i) {
        function r(r) {
            c.load(e[r], function(e) {
                var n = o._parser(e, !0);
                a[r] = {
                    width: n.width,
                    height: n.height,
                    format: n.format,
                    mipmaps: n.mipmaps
                },
                l += 1,
                6 === l && (1 === n.mipmapCount && (s.minFilter = THREE.LinearFilter),
                s.format = n.format,
                s.needsUpdate = !0,
                t && t(s))
            }, n, i)
        }
        var o = this
          , a = []
          , s = new THREE.CompressedTexture;
        s.image = a;
        var c = new THREE.XHRLoader(this.manager);
        if (c.setPath(this.path),
        c.setResponseType("arraybuffer"),
        Array.isArray(e))
            for (var l = 0, u = 0, h = e.length; u < h; ++u)
                r(u);
        else
            c.load(e, function(e) {
                var n = o._parser(e, !0);
                if (n.isCubemap)
                    for (var i = n.mipmaps.length / n.mipmapCount, r = 0; r < i; r++) {
                        a[r] = {
                            mipmaps: []
                        };
                        for (var c = 0; c < n.mipmapCount; c++)
                            a[r].mipmaps.push(n.mipmaps[r * n.mipmapCount + c]),
                            a[r].format = n.format,
                            a[r].width = n.width,
                            a[r].height = n.height
                    }
                else
                    s.image.width = n.width,
                    s.image.height = n.height,
                    s.mipmaps = n.mipmaps;
                1 === n.mipmapCount && (s.minFilter = THREE.LinearFilter),
                s.format = n.format,
                s.needsUpdate = !0,
                t && t(s)
            }, n, i);
        return s
    },
    setPath: function(e) {
        return this.path = e,
        this
    }
}),
THREE.Material = function() {
    Object.defineProperty(this, "id", {
        value: THREE.MaterialIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Material",
    this.fog = !0,
    this.lights = !0,
    this.blending = THREE.NormalBlending,
    this.side = THREE.FrontSide,
    this.shading = THREE.SmoothShading,
    this.vertexColors = THREE.NoColors,
    this.opacity = 1,
    this.transparent = !1,
    this.blendSrc = THREE.SrcAlphaFactor,
    this.blendDst = THREE.OneMinusSrcAlphaFactor,
    this.blendEquation = THREE.AddEquation,
    this.blendSrcAlpha = null,
    this.blendDstAlpha = null,
    this.blendEquationAlpha = null,
    this.depthFunc = THREE.LessEqualDepth,
    this.depthTest = !0,
    this.depthWrite = !0,
    this.clippingPlanes = null,
    this.clipShadows = !1,
    this.colorWrite = !0,
    this.precision = null,
    this.polygonOffset = !1,
    this.polygonOffsetFactor = 0,
    this.polygonOffsetUnits = 0,
    this.alphaTest = 0,
    this.premultipliedAlpha = !1,
    this.overdraw = 0,
    this.visible = !0,
    this._needsUpdate = !0
}
,
THREE.Material.prototype = {
    constructor: THREE.Material,
    get needsUpdate() {
        return this._needsUpdate
    },
    set needsUpdate(e) {
        e === !0 && this.update(),
        this._needsUpdate = e
    },
    setValues: function(e) {
        if (void 0 !== e)
            for (var t in e) {
                var n = e[t];
                if (void 0 !== n) {
                    var i = this[t];
                    void 0 !== i ? i instanceof THREE.Color ? i.set(n) : i instanceof THREE.Vector3 && n instanceof THREE.Vector3 ? i.copy(n) : "overdraw" === t ? this[t] = Number(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                } else
                    console.warn("THREE.Material: '" + t + "' parameter is undefined.")
            }
    },
    toJSON: function(e) {
        function t(e) {
            var t = [];
            for (var n in e) {
                var i = e[n];
                delete i.metadata,
                t.push(i)
            }
            return t
        }
        var n = void 0 === e;
        n && (e = {
            textures: {},
            images: {}
        });
        var i = {
            metadata: {
                version: 4.4,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        if (i.uuid = this.uuid,
        i.type = this.type,
        "" !== this.name && (i.name = this.name),
        this.color instanceof THREE.Color && (i.color = this.color.getHex()),
        void 0 !== this.roughness && (i.roughness = this.roughness),
        void 0 !== this.metalness && (i.metalness = this.metalness),
        this.emissive instanceof THREE.Color && (i.emissive = this.emissive.getHex()),
        this.specular instanceof THREE.Color && (i.specular = this.specular.getHex()),
        void 0 !== this.shininess && (i.shininess = this.shininess),
        this.map instanceof THREE.Texture && (i.map = this.map.toJSON(e).uuid),
        this.alphaMap instanceof THREE.Texture && (i.alphaMap = this.alphaMap.toJSON(e).uuid),
        this.lightMap instanceof THREE.Texture && (i.lightMap = this.lightMap.toJSON(e).uuid),
        this.bumpMap instanceof THREE.Texture && (i.bumpMap = this.bumpMap.toJSON(e).uuid,
        i.bumpScale = this.bumpScale),
        this.normalMap instanceof THREE.Texture && (i.normalMap = this.normalMap.toJSON(e).uuid,
        i.normalScale = this.normalScale.toArray()),
        this.displacementMap instanceof THREE.Texture && (i.displacementMap = this.displacementMap.toJSON(e).uuid,
        i.displacementScale = this.displacementScale,
        i.displacementBias = this.displacementBias),
        this.roughnessMap instanceof THREE.Texture && (i.roughnessMap = this.roughnessMap.toJSON(e).uuid),
        this.metalnessMap instanceof THREE.Texture && (i.metalnessMap = this.metalnessMap.toJSON(e).uuid),
        this.emissiveMap instanceof THREE.Texture && (i.emissiveMap = this.emissiveMap.toJSON(e).uuid),
        this.specularMap instanceof THREE.Texture && (i.specularMap = this.specularMap.toJSON(e).uuid),
        this.envMap instanceof THREE.Texture && (i.envMap = this.envMap.toJSON(e).uuid,
        i.reflectivity = this.reflectivity),
        void 0 !== this.size && (i.size = this.size),
        void 0 !== this.sizeAttenuation && (i.sizeAttenuation = this.sizeAttenuation),
        this.blending !== THREE.NormalBlending && (i.blending = this.blending),
        this.shading !== THREE.SmoothShading && (i.shading = this.shading),
        this.side !== THREE.FrontSide && (i.side = this.side),
        this.vertexColors !== THREE.NoColors && (i.vertexColors = this.vertexColors),
        this.opacity < 1 && (i.opacity = this.opacity),
        this.transparent === !0 && (i.transparent = this.transparent),
        this.alphaTest > 0 && (i.alphaTest = this.alphaTest),
        this.premultipliedAlpha === !0 && (i.premultipliedAlpha = this.premultipliedAlpha),
        this.wireframe === !0 && (i.wireframe = this.wireframe),
        this.wireframeLinewidth > 1 && (i.wireframeLinewidth = this.wireframeLinewidth),
        n) {
            var r = t(e.textures)
              , o = t(e.images);
            r.length > 0 && (i.textures = r),
            o.length > 0 && (i.images = o)
        }
        return i
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        this.name = e.name,
        this.fog = e.fog,
        this.lights = e.lights,
        this.blending = e.blending,
        this.side = e.side,
        this.shading = e.shading,
        this.vertexColors = e.vertexColors,
        this.opacity = e.opacity,
        this.transparent = e.transparent,
        this.blendSrc = e.blendSrc,
        this.blendDst = e.blendDst,
        this.blendEquation = e.blendEquation,
        this.blendSrcAlpha = e.blendSrcAlpha,
        this.blendDstAlpha = e.blendDstAlpha,
        this.blendEquationAlpha = e.blendEquationAlpha,
        this.depthFunc = e.depthFunc,
        this.depthTest = e.depthTest,
        this.depthWrite = e.depthWrite,
        this.colorWrite = e.colorWrite,
        this.precision = e.precision,
        this.polygonOffset = e.polygonOffset,
        this.polygonOffsetFactor = e.polygonOffsetFactor,
        this.polygonOffsetUnits = e.polygonOffsetUnits,
        this.alphaTest = e.alphaTest,
        this.premultipliedAlpha = e.premultipliedAlpha,
        this.overdraw = e.overdraw,
        this.visible = e.visible,
        this.clipShadows = e.clipShadows;
        var t = e.clippingPlanes
          , n = null;
        if (null !== t) {
            var i = t.length;
            n = new Array(i);
            for (var r = 0; r !== i; ++r)
                n[r] = t[r].clone()
        }
        return this.clippingPlanes = n,
        this
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        })
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
Object.assign(THREE.Material.prototype, THREE.EventDispatcher.prototype),
THREE.MaterialIdCount = 0,
THREE.LineBasicMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "LineBasicMaterial",
    this.color = new THREE.Color(16777215),
    this.linewidth = 1,
    this.linecap = "round",
    this.linejoin = "round",
    this.lights = !1,
    this.setValues(e)
}
,
THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial,
THREE.LineBasicMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.linewidth = e.linewidth,
    this.linecap = e.linecap,
    this.linejoin = e.linejoin,
    this
}
,
THREE.LineDashedMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "LineDashedMaterial",
    this.color = new THREE.Color(16777215),
    this.linewidth = 1,
    this.scale = 1,
    this.dashSize = 3,
    this.gapSize = 1,
    this.lights = !1,
    this.setValues(e)
}
,
THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial,
THREE.LineDashedMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.linewidth = e.linewidth,
    this.scale = e.scale,
    this.dashSize = e.dashSize,
    this.gapSize = e.gapSize,
    this
}
,
THREE.MeshBasicMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshBasicMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null,
    this.aoMap = null,
    this.aoMapIntensity = 1,
    this.specularMap = null,
    this.alphaMap = null,
    this.envMap = null,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.skinning = !1,
    this.morphTargets = !1,
    this.lights = !1,
    this.setValues(e)
}
,
THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial,
THREE.MeshBasicMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.map = e.map,
    this.aoMap = e.aoMap,
    this.aoMapIntensity = e.aoMapIntensity,
    this.specularMap = e.specularMap,
    this.alphaMap = e.alphaMap,
    this.envMap = e.envMap,
    this.combine = e.combine,
    this.reflectivity = e.reflectivity,
    this.refractionRatio = e.refractionRatio,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this.wireframeLinecap = e.wireframeLinecap,
    this.wireframeLinejoin = e.wireframeLinejoin,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this
}
,
THREE.MeshDepthMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshDepthMaterial",
    this.depthPacking = THREE.BasicDepthPacking,
    this.skinning = !1,
    this.morphTargets = !1,
    this.map = null,
    this.alphaMap = null,
    this.displacementMap = null,
    this.displacementScale = 1,
    this.displacementBias = 0,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.fog = !1,
    this.lights = !1,
    this.setValues(e)
}
,
THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial,
THREE.MeshDepthMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.depthPacking = e.depthPacking,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this.map = e.map,
    this.alphaMap = e.alphaMap,
    this.displacementMap = e.displacementMap,
    this.displacementScale = e.displacementScale,
    this.displacementBias = e.displacementBias,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this
}
,
THREE.MeshLambertMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshLambertMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null,
    this.lightMap = null,
    this.lightMapIntensity = 1,
    this.aoMap = null,
    this.aoMapIntensity = 1,
    this.emissive = new THREE.Color(0),
    this.emissiveIntensity = 1,
    this.emissiveMap = null,
    this.specularMap = null,
    this.alphaMap = null,
    this.envMap = null,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.setValues(e)
}
,
THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial,
THREE.MeshLambertMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.map = e.map,
    this.lightMap = e.lightMap,
    this.lightMapIntensity = e.lightMapIntensity,
    this.aoMap = e.aoMap,
    this.aoMapIntensity = e.aoMapIntensity,
    this.emissive.copy(e.emissive),
    this.emissiveMap = e.emissiveMap,
    this.emissiveIntensity = e.emissiveIntensity,
    this.specularMap = e.specularMap,
    this.alphaMap = e.alphaMap,
    this.envMap = e.envMap,
    this.combine = e.combine,
    this.reflectivity = e.reflectivity,
    this.refractionRatio = e.refractionRatio,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this.wireframeLinecap = e.wireframeLinecap,
    this.wireframeLinejoin = e.wireframeLinejoin,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this.morphNormals = e.morphNormals,
    this
}
,
THREE.MeshNormalMaterial = function(e) {
    THREE.Material.call(this, e),
    this.type = "MeshNormalMaterial",
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.fog = !1,
    this.lights = !1,
    this.morphTargets = !1,
    this.setValues(e)
}
,
THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial,
THREE.MeshNormalMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this
}
,
THREE.MeshPhongMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshPhongMaterial",
    this.color = new THREE.Color(16777215),
    this.specular = new THREE.Color(1118481),
    this.shininess = 30,
    this.map = null,
    this.lightMap = null,
    this.lightMapIntensity = 1,
    this.aoMap = null,
    this.aoMapIntensity = 1,
    this.emissive = new THREE.Color(0),
    this.emissiveIntensity = 1,
    this.emissiveMap = null,
    this.bumpMap = null,
    this.bumpScale = 1,
    this.normalMap = null,
    this.normalScale = new THREE.Vector2(1,1),
    this.displacementMap = null,
    this.displacementScale = 1,
    this.displacementBias = 0,
    this.specularMap = null,
    this.alphaMap = null,
    this.envMap = null,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.setValues(e)
}
,
THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial,
THREE.MeshPhongMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.specular.copy(e.specular),
    this.shininess = e.shininess,
    this.map = e.map,
    this.lightMap = e.lightMap,
    this.lightMapIntensity = e.lightMapIntensity,
    this.aoMap = e.aoMap,
    this.aoMapIntensity = e.aoMapIntensity,
    this.emissive.copy(e.emissive),
    this.emissiveMap = e.emissiveMap,
    this.emissiveIntensity = e.emissiveIntensity,
    this.bumpMap = e.bumpMap,
    this.bumpScale = e.bumpScale,
    this.normalMap = e.normalMap,
    this.normalScale.copy(e.normalScale),
    this.displacementMap = e.displacementMap,
    this.displacementScale = e.displacementScale,
    this.displacementBias = e.displacementBias,
    this.specularMap = e.specularMap,
    this.alphaMap = e.alphaMap,
    this.envMap = e.envMap,
    this.combine = e.combine,
    this.reflectivity = e.reflectivity,
    this.refractionRatio = e.refractionRatio,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this.wireframeLinecap = e.wireframeLinecap,
    this.wireframeLinejoin = e.wireframeLinejoin,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this.morphNormals = e.morphNormals,
    this
}
,
THREE.MeshStandardMaterial = function(e) {
    THREE.Material.call(this),
    this.defines = {
        STANDARD: ""
    },
    this.type = "MeshStandardMaterial",
    this.color = new THREE.Color(16777215),
    this.roughness = .5,
    this.metalness = .5,
    this.map = null,
    this.lightMap = null,
    this.lightMapIntensity = 1,
    this.aoMap = null,
    this.aoMapIntensity = 1,
    this.emissive = new THREE.Color(0),
    this.emissiveIntensity = 1,
    this.emissiveMap = null,
    this.bumpMap = null,
    this.bumpScale = 1,
    this.normalMap = null,
    this.normalScale = new THREE.Vector2(1,1),
    this.displacementMap = null,
    this.displacementScale = 1,
    this.displacementBias = 0,
    this.roughnessMap = null,
    this.metalnessMap = null,
    this.alphaMap = null,
    this.envMap = null,
    this.envMapIntensity = 1,
    this.refractionRatio = .98,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.setValues(e)
}
,
THREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial,
THREE.MeshStandardMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.defines = {
        STANDARD: ""
    },
    this.color.copy(e.color),
    this.roughness = e.roughness,
    this.metalness = e.metalness,
    this.map = e.map,
    this.lightMap = e.lightMap,
    this.lightMapIntensity = e.lightMapIntensity,
    this.aoMap = e.aoMap,
    this.aoMapIntensity = e.aoMapIntensity,
    this.emissive.copy(e.emissive),
    this.emissiveMap = e.emissiveMap,
    this.emissiveIntensity = e.emissiveIntensity,
    this.bumpMap = e.bumpMap,
    this.bumpScale = e.bumpScale,
    this.normalMap = e.normalMap,
    this.normalScale.copy(e.normalScale),
    this.displacementMap = e.displacementMap,
    this.displacementScale = e.displacementScale,
    this.displacementBias = e.displacementBias,
    this.roughnessMap = e.roughnessMap,
    this.metalnessMap = e.metalnessMap,
    this.alphaMap = e.alphaMap,
    this.envMap = e.envMap,
    this.envMapIntensity = e.envMapIntensity,
    this.refractionRatio = e.refractionRatio,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this.wireframeLinecap = e.wireframeLinecap,
    this.wireframeLinejoin = e.wireframeLinejoin,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this.morphNormals = e.morphNormals,
    this
}
,
THREE.MeshPhysicalMaterial = function(e) {
    THREE.MeshStandardMaterial.call(this),
    this.defines = {
        PHYSICAL: ""
    },
    this.type = "MeshPhysicalMaterial",
    this.reflectivity = .5,
    this.clearCoat = 0,
    this.clearCoatRoughness = 0,
    this.setValues(e)
}
,
THREE.MeshPhysicalMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype),
THREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial,
THREE.MeshPhysicalMaterial.prototype.copy = function(e) {
    return THREE.MeshStandardMaterial.prototype.copy.call(this, e),
    this.defines = {
        PHYSICAL: ""
    },
    this.reflectivity = e.reflectivity,
    this.clearCoat = e.clearCoat,
    this.clearCoatRoughness = e.clearCoatRoughness,
    this
}
,
THREE.MultiMaterial = function(e) {
    this.uuid = THREE.Math.generateUUID(),
    this.type = "MultiMaterial",
    this.materials = e instanceof Array ? e : [],
    this.visible = !0
}
,
THREE.MultiMaterial.prototype = {
    constructor: THREE.MultiMaterial,
    toJSON: function(e) {
        for (var t = {
            metadata: {
                version: 4.2,
                type: "material",
                generator: "MaterialExporter"
            },
            uuid: this.uuid,
            type: this.type,
            materials: []
        }, n = this.materials, i = 0, r = n.length; i < r; i++) {
            var o = n[i].toJSON(e);
            delete o.metadata,
            t.materials.push(o)
        }
        return t.visible = this.visible,
        t
    },
    clone: function() {
        for (var e = new this.constructor, t = 0; t < this.materials.length; t++)
            e.materials.push(this.materials[t].clone());
        return e.visible = this.visible,
        e
    }
},
THREE.PointsMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "PointsMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null,
    this.size = 1,
    this.sizeAttenuation = !0,
    this.lights = !1,
    this.setValues(e)
}
,
THREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial,
THREE.PointsMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.map = e.map,
    this.size = e.size,
    this.sizeAttenuation = e.sizeAttenuation,
    this
}
,
THREE.ShaderMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "ShaderMaterial",
    this.defines = {},
    this.uniforms = {},
    this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
    this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
    this.linewidth = 1,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.fog = !1,
    this.lights = !1,
    this.clipping = !1,
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1
    },
    this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    },
    this.index0AttributeName = void 0,
    void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
    this.setValues(e))
}
,
THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial,
THREE.ShaderMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.fragmentShader = e.fragmentShader,
    this.vertexShader = e.vertexShader,
    this.uniforms = THREE.UniformsUtils.clone(e.uniforms),
    this.defines = e.defines,
    this.wireframe = e.wireframe,
    this.wireframeLinewidth = e.wireframeLinewidth,
    this.lights = e.lights,
    this.clipping = e.clipping,
    this.skinning = e.skinning,
    this.morphTargets = e.morphTargets,
    this.morphNormals = e.morphNormals,
    this.extensions = e.extensions,
    this
}
,
THREE.ShaderMaterial.prototype.toJSON = function(e) {
    var t = THREE.Material.prototype.toJSON.call(this, e);
    return t.uniforms = this.uniforms,
    t.vertexShader = this.vertexShader,
    t.fragmentShader = this.fragmentShader,
    t
}
,
THREE.RawShaderMaterial = function(e) {
    THREE.ShaderMaterial.call(this, e),
    this.type = "RawShaderMaterial"
}
,
THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),
THREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial,
THREE.SpriteMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "SpriteMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null,
    this.rotation = 0,
    this.fog = !1,
    this.lights = !1,
    this.setValues(e)
}
,
THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial,
THREE.SpriteMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e),
    this.color.copy(e.color),
    this.map = e.map,
    this.rotation = e.rotation,
    this
}
,
THREE.ShadowMaterial = function() {
    THREE.ShaderMaterial.call(this, {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.lights, {
            opacity: {
                value: 1
            }
        }]),
        vertexShader: THREE.ShaderChunk.shadow_vert,
        fragmentShader: THREE.ShaderChunk.shadow_frag
    }),
    this.lights = !0,
    this.transparent = !0,
    Object.defineProperties(this, {
        opacity: {
            enumerable: !0,
            get: function() {
                return this.uniforms.opacity.value
            },
            set: function(e) {
                this.uniforms.opacity.value = e
            }
        }
    })
}
,
THREE.ShadowMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),
THREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial,
THREE.Texture = function(e, t, n, i, r, o, a, s, c, l) {
    Object.defineProperty(this, "id", {
        value: THREE.TextureIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.sourceFile = "",
    this.image = void 0 !== e ? e : THREE.Texture.DEFAULT_IMAGE,
    this.mipmaps = [],
    this.mapping = void 0 !== t ? t : THREE.Texture.DEFAULT_MAPPING,
    this.wrapS = void 0 !== n ? n : THREE.ClampToEdgeWrapping,
    this.wrapT = void 0 !== i ? i : THREE.ClampToEdgeWrapping,
    this.magFilter = void 0 !== r ? r : THREE.LinearFilter,
    this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter,
    this.anisotropy = void 0 !== c ? c : 1,
    this.format = void 0 !== a ? a : THREE.RGBAFormat,
    this.type = void 0 !== s ? s : THREE.UnsignedByteType,
    this.offset = new THREE.Vector2(0,0),
    this.repeat = new THREE.Vector2(1,1),
    this.generateMipmaps = !0,
    this.premultiplyAlpha = !1,
    this.flipY = !0,
    this.unpackAlignment = 4,
    this.encoding = void 0 !== l ? l : THREE.LinearEncoding,
    this.version = 0,
    this.onUpdate = null
}
,
THREE.Texture.DEFAULT_IMAGE = void 0,
THREE.Texture.DEFAULT_MAPPING = THREE.UVMapping,
THREE.Texture.prototype = {
    constructor: THREE.Texture,
    set needsUpdate(e) {
        e === !0 && this.version++
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.image = e.image,
        this.mipmaps = e.mipmaps.slice(0),
        this.mapping = e.mapping,
        this.wrapS = e.wrapS,
        this.wrapT = e.wrapT,
        this.magFilter = e.magFilter,
        this.minFilter = e.minFilter,
        this.anisotropy = e.anisotropy,
        this.format = e.format,
        this.type = e.type,
        this.offset.copy(e.offset),
        this.repeat.copy(e.repeat),
        this.generateMipmaps = e.generateMipmaps,
        this.premultiplyAlpha = e.premultiplyAlpha,
        this.flipY = e.flipY,
        this.unpackAlignment = e.unpackAlignment,
        this.encoding = e.encoding,
        this
    },
    toJSON: function(e) {
        function t(e) {
            var t;
            return void 0 !== e.toDataURL ? t = e : (t = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
            t.width = e.width,
            t.height = e.height,
            t.getContext("2d").drawImage(e, 0, 0, e.width, e.height)),
            t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
        }
        if (void 0 !== e.textures[this.uuid])
            return e.textures[this.uuid];
        var n = {
            metadata: {
                version: 4.4,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            wrap: [this.wrapS, this.wrapT],
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY
        };
        if (void 0 !== this.image) {
            var i = this.image;
            void 0 === i.uuid && (i.uuid = THREE.Math.generateUUID()),
            void 0 === e.images[i.uuid] && (e.images[i.uuid] = {
                uuid: i.uuid,
                url: t(i)
            }),
            n.image = i.uuid
        }
        return e.textures[this.uuid] = n,
        n
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    },
    transformUv: function(e) {
        if (this.mapping === THREE.UVMapping) {
            if (e.multiply(this.repeat),
            e.add(this.offset),
            e.x < 0 || e.x > 1)
                switch (this.wrapS) {
                case THREE.RepeatWrapping:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case THREE.ClampToEdgeWrapping:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                }
            if (e.y < 0 || e.y > 1)
                switch (this.wrapT) {
                case THREE.RepeatWrapping:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case THREE.ClampToEdgeWrapping:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                }
            this.flipY && (e.y = 1 - e.y)
        }
    }
},
Object.assign(THREE.Texture.prototype, THREE.EventDispatcher.prototype),
THREE.TextureIdCount = 0,
THREE.DepthTexture = function(e, t, n, i, r, o, a, s, c) {
    THREE.Texture.call(this, null, i, r, o, a, s, THREE.DepthFormat, n, c),
    this.image = {
        width: e,
        height: t
    },
    this.type = void 0 !== n ? n : THREE.UnsignedShortType,
    this.magFilter = void 0 !== a ? a : THREE.NearestFilter,
    this.minFilter = void 0 !== s ? s : THREE.NearestFilter,
    this.flipY = !1,
    this.generateMipmaps = !1
}
,
THREE.DepthTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.DepthTexture.prototype.constructor = THREE.DepthTexture,
THREE.CanvasTexture = function(e, t, n, i, r, o, a, s, c) {
    THREE.Texture.call(this, e, t, n, i, r, o, a, s, c),
    this.needsUpdate = !0
}
,
THREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture,
THREE.CubeTexture = function(e, t, n, i, r, o, a, s, c, l) {
    e = void 0 !== e ? e : [],
    t = void 0 !== t ? t : THREE.CubeReflectionMapping,
    THREE.Texture.call(this, e, t, n, i, r, o, a, s, c, l),
    this.flipY = !1
}
,
THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CubeTexture.prototype.constructor = THREE.CubeTexture,
Object.defineProperty(THREE.CubeTexture.prototype, "images", {
    get: function() {
        return this.image
    },
    set: function(e) {
        this.image = e
    }
}),
THREE.CompressedTexture = function(e, t, n, i, r, o, a, s, c, l, u, h) {
    THREE.Texture.call(this, null, o, a, s, c, l, i, r, u, h),
    this.image = {
        width: t,
        height: n
    },
    this.mipmaps = e,
    this.flipY = !1,
    this.generateMipmaps = !1
}
,
THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture,
THREE.DataTexture = function(e, t, n, i, r, o, a, s, c, l, u, h) {
    THREE.Texture.call(this, null, o, a, s, c, l, i, r, u, h),
    this.image = {
        data: e,
        width: t,
        height: n
    },
    this.magFilter = void 0 !== c ? c : THREE.NearestFilter,
    this.minFilter = void 0 !== l ? l : THREE.NearestFilter,
    this.flipY = !1,
    this.generateMipmaps = !1
}
,
THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.DataTexture.prototype.constructor = THREE.DataTexture,
THREE.VideoTexture = function(e, t, n, i, r, o, a, s, c) {
    function l() {
        requestAnimationFrame(l),
        e.readyState >= e.HAVE_CURRENT_DATA && (u.needsUpdate = !0)
    }
    THREE.Texture.call(this, e, t, n, i, r, o, a, s, c),
    this.generateMipmaps = !1;
    var u = this;
    l()
}
,
THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.VideoTexture.prototype.constructor = THREE.VideoTexture,
THREE.Group = function() {
    THREE.Object3D.call(this),
    this.type = "Group"
}
,
THREE.Group.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Group
}),
THREE.Points = function(e, t) {
    THREE.Object3D.call(this),
    this.type = "Points",
    this.geometry = void 0 !== e ? e : new THREE.BufferGeometry,
    this.material = void 0 !== t ? t : new THREE.PointsMaterial({
        color: 16777215 * Math.random()
    })
}
,
THREE.Points.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Points,
    raycast: function() {
        var e = new THREE.Matrix4
          , t = new THREE.Ray
          , n = new THREE.Sphere;
        return function(i, r) {
            function o(e, n) {
                var o = t.distanceSqToPoint(e);
                if (o < h) {
                    var s = t.closestPointToPoint(e);
                    s.applyMatrix4(c);
                    var l = i.ray.origin.distanceTo(s);
                    if (l < i.near || l > i.far)
                        return;
                    r.push({
                        distance: l,
                        distanceToRay: Math.sqrt(o),
                        point: s.clone(),
                        index: n,
                        face: null,
                        object: a
                    })
                }
            }
            var a = this
              , s = this.geometry
              , c = this.matrixWorld
              , l = i.params.Points.threshold;
            if (null === s.boundingSphere && s.computeBoundingSphere(),
            n.copy(s.boundingSphere),
            n.applyMatrix4(c),
            i.ray.intersectsSphere(n) !== !1) {
                e.getInverse(c),
                t.copy(i.ray).applyMatrix4(e);
                var u = l / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                  , h = u * u
                  , d = new THREE.Vector3;
                if (s instanceof THREE.BufferGeometry) {
                    var p = s.index
                      , f = s.attributes
                      , m = f.position.array;
                    if (null !== p)
                        for (var g = p.array, v = 0, E = g.length; v < E; v++) {
                            var y = g[v];
                            d.fromArray(m, 3 * y),
                            o(d, y)
                        }
                    else
                        for (var v = 0, b = m.length / 3; v < b; v++)
                            d.fromArray(m, 3 * v),
                            o(d, v)
                } else
                    for (var T = s.vertices, v = 0, b = T.length; v < b; v++)
                        o(T[v], v)
            }
        }
    }(),
    clone: function() {
        return new this.constructor(this.geometry,this.material).copy(this)
    }
}),
THREE.Line = function(e, t, n) {
    return 1 === n ? (console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
    new THREE.LineSegments(e,t)) : (THREE.Object3D.call(this),
    this.type = "Line",
    this.geometry = void 0 !== e ? e : new THREE.BufferGeometry,
    void (this.material = void 0 !== t ? t : new THREE.LineBasicMaterial({
        color: 16777215 * Math.random()
    })))
}
,
THREE.Line.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Line,
    raycast: function() {
        var e = new THREE.Matrix4
          , t = new THREE.Ray
          , n = new THREE.Sphere;
        return function(i, r) {
            var o = i.linePrecision
              , a = o * o
              , s = this.geometry
              , c = this.matrixWorld;
            if (null === s.boundingSphere && s.computeBoundingSphere(),
            n.copy(s.boundingSphere),
            n.applyMatrix4(c),
            i.ray.intersectsSphere(n) !== !1) {
                e.getInverse(c),
                t.copy(i.ray).applyMatrix4(e);
                var l = new THREE.Vector3
                  , u = new THREE.Vector3
                  , h = new THREE.Vector3
                  , d = new THREE.Vector3
                  , p = this instanceof THREE.LineSegments ? 2 : 1;
                if (s instanceof THREE.BufferGeometry) {
                    var f = s.index
                      , m = s.attributes
                      , g = m.position.array;
                    if (null !== f)
                        for (var v = f.array, E = 0, y = v.length - 1; E < y; E += p) {
                            var b = v[E]
                              , T = v[E + 1];
                            l.fromArray(g, 3 * b),
                            u.fromArray(g, 3 * T);
                            var x = t.distanceSqToSegment(l, u, d, h);
                            if (!(x > a)) {
                                d.applyMatrix4(this.matrixWorld);
                                var R = i.ray.origin.distanceTo(d);
                                R < i.near || R > i.far || r.push({
                                    distance: R,
                                    point: h.clone().applyMatrix4(this.matrixWorld),
                                    index: E,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                    else
                        for (var E = 0, y = g.length / 3 - 1; E < y; E += p) {
                            l.fromArray(g, 3 * E),
                            u.fromArray(g, 3 * E + 3);
                            var x = t.distanceSqToSegment(l, u, d, h);
                            if (!(x > a)) {
                                d.applyMatrix4(this.matrixWorld);
                                var R = i.ray.origin.distanceTo(d);
                                R < i.near || R > i.far || r.push({
                                    distance: R,
                                    point: h.clone().applyMatrix4(this.matrixWorld),
                                    index: E,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                } else if (s instanceof THREE.Geometry)
                    for (var w = s.vertices, H = w.length, E = 0; E < H - 1; E += p) {
                        var x = t.distanceSqToSegment(w[E], w[E + 1], d, h);
                        if (!(x > a)) {
                            d.applyMatrix4(this.matrixWorld);
                            var R = i.ray.origin.distanceTo(d);
                            R < i.near || R > i.far || r.push({
                                distance: R,
                                point: h.clone().applyMatrix4(this.matrixWorld),
                                index: E,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                        }
                    }
            }
        }
    }(),
    clone: function() {
        return new this.constructor(this.geometry,this.material).copy(this)
    }
}),
THREE.LineSegments = function(e, t) {
    THREE.Line.call(this, e, t),
    this.type = "LineSegments"
}
,
THREE.LineSegments.prototype = Object.assign(Object.create(THREE.Line.prototype), {
    constructor: THREE.LineSegments
}),
THREE.Mesh = function(e, t) {
    THREE.Object3D.call(this),
    this.type = "Mesh",
    this.geometry = void 0 !== e ? e : new THREE.BufferGeometry,
    this.material = void 0 !== t ? t : new THREE.MeshBasicMaterial({
        color: 16777215 * Math.random()
    }),
    this.drawMode = THREE.TrianglesDrawMode,
    this.updateMorphTargets()
}
,
THREE.Mesh.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Mesh,
    setDrawMode: function(e) {
        this.drawMode = e
    },
    copy: function(e) {
        return THREE.Object3D.prototype.copy.call(this, e),
        this.drawMode = e.drawMode,
        this
    },
    updateMorphTargets: function() {
        if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
            this.morphTargetBase = -1,
            this.morphTargetInfluences = [],
            this.morphTargetDictionary = {};
            for (var e = 0, t = this.geometry.morphTargets.length; e < t; e++)
                this.morphTargetInfluences.push(0),
                this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e
        }
    },
    getMorphTargetIndexByName: function(e) {
        return void 0 !== this.morphTargetDictionary[e] ? this.morphTargetDictionary[e] : (console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + e + " does not exist. Returning 0."),
        0)
    },
    raycast: function() {
        function e(e, t, n, i, r, o, a) {
            return THREE.Triangle.barycoordFromPoint(e, t, n, i, m),
            r.multiplyScalar(m.x),
            o.multiplyScalar(m.y),
            a.multiplyScalar(m.z),
            r.add(o).add(a),
            r.clone()
        }
        function t(e, t, n, i, r, o, a) {
            var s, c = e.material;
            if (s = c.side === THREE.BackSide ? n.intersectTriangle(o, r, i, !0, a) : n.intersectTriangle(i, r, o, c.side !== THREE.DoubleSide, a),
            null === s)
                return null;
            v.copy(a),
            v.applyMatrix4(e.matrixWorld);
            var l = t.ray.origin.distanceTo(v);
            return l < t.near || l > t.far ? null : {
                distance: l,
                point: v.clone(),
                object: e
            }
        }
        function n(n, i, r, o, l, u, h, m) {
            a.fromArray(o, 3 * u),
            s.fromArray(o, 3 * h),
            c.fromArray(o, 3 * m);
            var v = t(n, i, r, a, s, c, g);
            return v && (l && (d.fromArray(l, 2 * u),
            p.fromArray(l, 2 * h),
            f.fromArray(l, 2 * m),
            v.uv = e(g, a, s, c, d, p, f)),
            v.face = new THREE.Face3(u,h,m,THREE.Triangle.normal(a, s, c)),
            v.faceIndex = u),
            v
        }
        var i = new THREE.Matrix4
          , r = new THREE.Ray
          , o = new THREE.Sphere
          , a = new THREE.Vector3
          , s = new THREE.Vector3
          , c = new THREE.Vector3
          , l = new THREE.Vector3
          , u = new THREE.Vector3
          , h = new THREE.Vector3
          , d = new THREE.Vector2
          , p = new THREE.Vector2
          , f = new THREE.Vector2
          , m = new THREE.Vector3
          , g = new THREE.Vector3
          , v = new THREE.Vector3;
        return function(m, v) {
            var E = this.geometry
              , y = this.material
              , b = this.matrixWorld;
            if (void 0 !== y && (null === E.boundingSphere && E.computeBoundingSphere(),
            o.copy(E.boundingSphere),
            o.applyMatrix4(b),
            m.ray.intersectsSphere(o) !== !1 && (i.getInverse(b),
            r.copy(m.ray).applyMatrix4(i),
            null === E.boundingBox || r.intersectsBox(E.boundingBox) !== !1))) {
                var T, x;
                if (E instanceof THREE.BufferGeometry) {
                    var R, w, H, M = E.index, S = E.attributes, _ = S.position.array;
                    if (void 0 !== S.uv && (T = S.uv.array),
                    null !== M)
                        for (var C = M.array, A = 0, P = C.length; A < P; A += 3)
                            R = C[A],
                            w = C[A + 1],
                            H = C[A + 2],
                            x = n(this, m, r, _, T, R, w, H),
                            x && (x.faceIndex = Math.floor(A / 3),
                            v.push(x));
                    else
                        for (var A = 0, P = _.length; A < P; A += 9)
                            R = A / 3,
                            w = R + 1,
                            H = R + 2,
                            x = n(this, m, r, _, T, R, w, H),
                            x && (x.index = R,
                            v.push(x))
                } else if (E instanceof THREE.Geometry) {
                    var L, k, D, I = y instanceof THREE.MultiMaterial, O = I === !0 ? y.materials : null, B = E.vertices, F = E.faces, N = E.faceVertexUvs[0];
                    N.length > 0 && (T = N);
                    for (var U = 0, z = F.length; U < z; U++) {
                        var j = F[U]
                          , V = I === !0 ? O[j.materialIndex] : y;
                        if (void 0 !== V) {
                            if (L = B[j.a],
                            k = B[j.b],
                            D = B[j.c],
                            V.morphTargets === !0) {
                                var G = E.morphTargets
                                  , W = this.morphTargetInfluences;
                                a.set(0, 0, 0),
                                s.set(0, 0, 0),
                                c.set(0, 0, 0);
                                for (var q = 0, X = G.length; q < X; q++) {
                                    var Y = W[q];
                                    if (0 !== Y) {
                                        var K = G[q].vertices;
                                        a.addScaledVector(l.subVectors(K[j.a], L), Y),
                                        s.addScaledVector(u.subVectors(K[j.b], k), Y),
                                        c.addScaledVector(h.subVectors(K[j.c], D), Y)
                                    }
                                }
                                a.add(L),
                                s.add(k),
                                c.add(D),
                                L = a,
                                k = s,
                                D = c
                            }
                            if (x = t(this, m, r, L, k, D, g)) {
                                if (T) {
                                    var Z = T[U];
                                    d.copy(Z[0]),
                                    p.copy(Z[1]),
                                    f.copy(Z[2]),
                                    x.uv = e(g, L, k, D, d, p, f)
                                }
                                x.face = j,
                                x.faceIndex = U,
                                v.push(x)
                            }
                        }
                    }
                }
            }
        }
    }(),
    clone: function() {
        return new this.constructor(this.geometry,this.material).copy(this)
    }
}),
THREE.Bone = function(e) {
    THREE.Object3D.call(this),
    this.type = "Bone",
    this.skin = e
}
,
THREE.Bone.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Bone,
    copy: function(e) {
        return THREE.Object3D.prototype.copy.call(this, e),
        this.skin = e.skin,
        this
    }
}),
THREE.Skeleton = function(e, t, n) {
    if (this.useVertexTexture = void 0 === n || n,
    this.identityMatrix = new THREE.Matrix4,
    e = e || [],
    this.bones = e.slice(0),
    this.useVertexTexture) {
        var i = Math.sqrt(4 * this.bones.length);
        i = THREE.Math.nextPowerOfTwo(Math.ceil(i)),
        i = Math.max(i, 4),
        this.boneTextureWidth = i,
        this.boneTextureHeight = i,
        this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
        this.boneTexture = new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)
    } else
        this.boneMatrices = new Float32Array(16 * this.bones.length);
    if (void 0 === t)
        this.calculateInverses();
    else if (this.bones.length === t.length)
        this.boneInverses = t.slice(0);
    else {
        console.warn("THREE.Skeleton bonInverses is the wrong length."),
        this.boneInverses = [];
        for (var r = 0, o = this.bones.length; r < o; r++)
            this.boneInverses.push(new THREE.Matrix4)
    }
}
,
Object.assign(THREE.Skeleton.prototype, {
    calculateInverses: function() {
        this.boneInverses = [];
        for (var e = 0, t = this.bones.length; e < t; e++) {
            var n = new THREE.Matrix4;
            this.bones[e] && n.getInverse(this.bones[e].matrixWorld),
            this.boneInverses.push(n)
        }
    },
    pose: function() {
        for (var e, t = 0, n = this.bones.length; t < n; t++)
            e = this.bones[t],
            e && e.matrixWorld.getInverse(this.boneInverses[t]);
        for (var t = 0, n = this.bones.length; t < n; t++)
            e = this.bones[t],
            e && (e.parent instanceof THREE.Bone ? (e.matrix.getInverse(e.parent.matrixWorld),
            e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld),
            e.matrix.decompose(e.position, e.quaternion, e.scale))
    },
    update: function() {
        var e = new THREE.Matrix4;
        return function() {
            for (var t = 0, n = this.bones.length; t < n; t++) {
                var i = this.bones[t] ? this.bones[t].matrixWorld : this.identityMatrix;
                e.multiplyMatrices(i, this.boneInverses[t]),
                e.toArray(this.boneMatrices, 16 * t)
            }
            this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
        }
    }(),
    clone: function() {
        return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)
    }
}),
THREE.SkinnedMesh = function(e, t, n) {
    THREE.Mesh.call(this, e, t),
    this.type = "SkinnedMesh",
    this.bindMode = "attached",
    this.bindMatrix = new THREE.Matrix4,
    this.bindMatrixInverse = new THREE.Matrix4;
    var i = [];
    if (this.geometry && void 0 !== this.geometry.bones) {
        for (var r, o, a = 0, s = this.geometry.bones.length; a < s; ++a)
            o = this.geometry.bones[a],
            r = new THREE.Bone(this),
            i.push(r),
            r.name = o.name,
            r.position.fromArray(o.pos),
            r.quaternion.fromArray(o.rotq),
            void 0 !== o.scl && r.scale.fromArray(o.scl);
        for (var a = 0, s = this.geometry.bones.length; a < s; ++a)
            o = this.geometry.bones[a],
            o.parent !== -1 && null !== o.parent && void 0 !== i[o.parent] ? i[o.parent].add(i[a]) : this.add(i[a])
    }
    this.normalizeSkinWeights(),
    this.updateMatrixWorld(!0),
    this.bind(new THREE.Skeleton(i,void 0,n), this.matrixWorld)
}
,
THREE.SkinnedMesh.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {
    constructor: THREE.SkinnedMesh,
    bind: function(e, t) {
        this.skeleton = e,
        void 0 === t && (this.updateMatrixWorld(!0),
        this.skeleton.calculateInverses(),
        t = this.matrixWorld),
        this.bindMatrix.copy(t),
        this.bindMatrixInverse.getInverse(t)
    },
    pose: function() {
        this.skeleton.pose()
    },
    normalizeSkinWeights: function() {
        if (this.geometry instanceof THREE.Geometry)
            for (var e = 0; e < this.geometry.skinWeights.length; e++) {
                var t = this.geometry.skinWeights[e]
                  , n = 1 / t.lengthManhattan();
                n !== 1 / 0 ? t.multiplyScalar(n) : t.set(1, 0, 0, 0)
            }
        else if (this.geometry instanceof THREE.BufferGeometry)
            for (var i = new THREE.Vector4, r = this.geometry.attributes.skinWeight, e = 0; e < r.count; e++) {
                i.x = r.getX(e),
                i.y = r.getY(e),
                i.z = r.getZ(e),
                i.w = r.getW(e);
                var n = 1 / i.lengthManhattan();
                n !== 1 / 0 ? i.multiplyScalar(n) : i.set(1, 0, 0, 0),
                r.setXYZW(e, i.x, i.y, i.z, i.w)
            }
    },
    updateMatrixWorld: function(e) {
        THREE.Mesh.prototype.updateMatrixWorld.call(this, !0),
        "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.bindMode)
    },
    clone: function() {
        return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)
    }
}),
THREE.LOD = function() {
    THREE.Object3D.call(this),
    this.type = "LOD",
    Object.defineProperties(this, {
        levels: {
            enumerable: !0,
            value: []
        }
    })
}
,
THREE.LOD.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.LOD,
    copy: function(e) {
        THREE.Object3D.prototype.copy.call(this, e, !1);
        for (var t = e.levels, n = 0, i = t.length; n < i; n++) {
            var r = t[n];
            this.addLevel(r.object.clone(), r.distance)
        }
        return this
    },
    addLevel: function(e, t) {
        void 0 === t && (t = 0),
        t = Math.abs(t);
        for (var n = this.levels, i = 0; i < n.length && !(t < n[i].distance); i++)
            ;
        n.splice(i, 0, {
            distance: t,
            object: e
        }),
        this.add(e)
    },
    getObjectForDistance: function(e) {
        for (var t = this.levels, n = 1, i = t.length; n < i && !(e < t[n].distance); n++)
            ;
        return t[n - 1].object
    },
    raycast: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            e.setFromMatrixPosition(this.matrixWorld);
            var i = t.ray.origin.distanceTo(e);
            this.getObjectForDistance(i).raycast(t, n)
        }
    }(),
    update: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(n) {
            var i = this.levels;
            if (i.length > 1) {
                e.setFromMatrixPosition(n.matrixWorld),
                t.setFromMatrixPosition(this.matrixWorld);
                var r = e.distanceTo(t);
                i[0].object.visible = !0;
                for (var o = 1, a = i.length; o < a && r >= i[o].distance; o++)
                    i[o - 1].object.visible = !1,
                    i[o].object.visible = !0;
                for (; o < a; o++)
                    i[o].object.visible = !1
            }
        }
    }(),
    toJSON: function(e) {
        var t = THREE.Object3D.prototype.toJSON.call(this, e);
        t.object.levels = [];
        for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
            var o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            })
        }
        return t
    }
}),
THREE.Sprite = function(e) {
    THREE.Object3D.call(this),
    this.type = "Sprite",
    this.material = void 0 !== e ? e : new THREE.SpriteMaterial
}
,
THREE.Sprite.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Sprite,
    raycast: function() {
        var e = new THREE.Vector3;
        return function(t, n) {
            e.setFromMatrixPosition(this.matrixWorld);
            var i = t.ray.distanceSqToPoint(e)
              , r = this.scale.x * this.scale.y / 4;
            i > r || n.push({
                distance: Math.sqrt(i),
                point: this.position,
                face: null,
                object: this
            })
        }
    }(),
    clone: function() {
        return new this.constructor(this.material).copy(this)
    }
}),
THREE.LensFlare = function(e, t, n, i, r) {
    THREE.Object3D.call(this),
    this.lensFlares = [],
    this.positionScreen = new THREE.Vector3,
    this.customUpdateCallback = void 0,
    void 0 !== e && this.add(e, t, n, i, r)
}
,
THREE.LensFlare.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.LensFlare,
    copy: function(e) {
        THREE.Object3D.prototype.copy.call(this, e),
        this.positionScreen.copy(e.positionScreen),
        this.customUpdateCallback = e.customUpdateCallback;
        for (var t = 0, n = e.lensFlares.length; t < n; t++)
            this.lensFlares.push(e.lensFlares[t]);
        return this
    },
    add: function(e, t, n, i, r, o) {
        void 0 === t && (t = -1),
        void 0 === n && (n = 0),
        void 0 === o && (o = 1),
        void 0 === r && (r = new THREE.Color(16777215)),
        void 0 === i && (i = THREE.NormalBlending),
        n = Math.min(n, Math.max(0, n)),
        this.lensFlares.push({
            texture: e,
            size: t,
            distance: n,
            x: 0,
            y: 0,
            z: 0,
            scale: 1,
            rotation: 0,
            opacity: o,
            color: r,
            blending: i
        })
    },
    updateLensFlares: function() {
        var e, t, n = this.lensFlares.length, i = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
        for (e = 0; e < n; e++)
            t = this.lensFlares[e],
            t.x = this.positionScreen.x + i * t.distance,
            t.y = this.positionScreen.y + r * t.distance,
            t.wantedRotation = t.x * Math.PI * .25,
            t.rotation += .25 * (t.wantedRotation - t.rotation)
    }
}),
THREE.Scene = function() {
    THREE.Object3D.call(this),
    this.type = "Scene",
    this.background = null,
    this.fog = null,
    this.overrideMaterial = null,
    this.autoUpdate = !0
}
,
THREE.Scene.prototype = Object.create(THREE.Object3D.prototype),
THREE.Scene.prototype.constructor = THREE.Scene,
THREE.Scene.prototype.copy = function(e, t) {
    return THREE.Object3D.prototype.copy.call(this, e, t),
    null !== e.background && (this.background = e.background.clone()),
    null !== e.fog && (this.fog = e.fog.clone()),
    null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
    this.autoUpdate = e.autoUpdate,
    this.matrixAutoUpdate = e.matrixAutoUpdate,
    this
}
,
THREE.Fog = function(e, t, n) {
    this.name = "",
    this.color = new THREE.Color(e),
    this.near = void 0 !== t ? t : 1,
    this.far = void 0 !== n ? n : 1e3
}
,
THREE.Fog.prototype.clone = function() {
    return new THREE.Fog(this.color.getHex(),this.near,this.far)
}
,
THREE.FogExp2 = function(e, t) {
    this.name = "",
    this.color = new THREE.Color(e),
    this.density = void 0 !== t ? t : 25e-5
}
,
THREE.FogExp2.prototype.clone = function() {
    return new THREE.FogExp2(this.color.getHex(),this.density)
}
,
THREE.ShaderChunk = {},
THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n   diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n  uniform sampler2D alphaMap;\n#endif\n",
THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
THREE.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n reflectedLight.indirectDiffuse *= ambientOcclusion;\n   #if defined( USE_ENVMAP ) && defined( PHYSICAL )\n      float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n       reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n   #endif\n#endif\n",
THREE.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n    uniform sampler2D aoMap;\n  uniform float aoMapIntensity;\n#endif",
THREE.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n",
THREE.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n",
THREE.ShaderChunk.bsdfs = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n    return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n       if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n            float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n           float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n         return distanceFalloff * maxDistanceCutoffFactor;\n#else\n          return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n       }\n     return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n    float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n   return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n float a2 = pow2( alpha );\n float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n   float a2 = pow2( alpha );\n float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n float a2 = pow2( alpha );\n float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n    float alpha = pow2( roughness );\n  vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n   float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n    float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n   float dotNH = saturate( dot( geometry.normal, halfDir ) );\n    float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n    vec3 F = F_Schlick( specularColor, dotLH );\n   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n   float D = D_GGX( alpha, dotNH );\n  return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n   float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n   const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n    const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n  vec4 r = roughness * c0 + c1;\n float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n    vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n  return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n   return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n    vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n   float dotNH = saturate( dot( geometry.normal, halfDir ) );\n    float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n    vec3 F = F_Schlick( specularColor, dotLH );\n   float G = G_BlinnPhong_Implicit( );\n   float D = D_BlinnPhong( shininess, dotNH );\n   return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n  return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n    uniform sampler2D bumpMap;\n    uniform float bumpScale;\n  vec2 dHdxy_fwd() {\n        vec2 dSTdx = dFdx( vUv );\n     vec2 dSTdy = dFdy( vUv );\n     float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n      float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n        float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n        return vec2( dBx, dBy );\n  }\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n      vec3 vSigmaX = dFdx( surf_pos );\n      vec3 vSigmaY = dFdy( surf_pos );\n      vec3 vN = surf_norm;\n      vec3 R1 = cross( vSigmaY, vN );\n       vec3 R2 = cross( vN, vSigmaX );\n       float fDet = dot( vSigmaX, R1 );\n      vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n      return normalize( abs( fDet ) * surf_norm - vGrad );\n  }\n#endif\n",
THREE.ShaderChunk.clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n        vec4 plane = clippingPlanes[ i ];\n     if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n }\n#endif\n",
THREE.ShaderChunk.clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n   #if ! defined( PHYSICAL ) && ! defined( PHONG )\n       varying vec3 vViewPosition;\n   #endif\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
THREE.ShaderChunk.clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n  varying vec3 vViewPosition;\n#endif\n",
THREE.ShaderChunk.clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n   vViewPosition = - mvPosition.xyz;\n#endif\n",
THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n diffuseColor.rgb *= vColor;\n#endif",
THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n    varying vec3 vColor;\n#endif\n",
THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n  varying vec3 vColor;\n#endif",
THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n   vColor.xyz = color.xyz;\n#endif",
THREE.ShaderChunk.common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n   return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n vec3 color;\n   vec3 direction;\n   bool visible;\n};\nstruct ReflectedLight {\n    vec3 directDiffuse;\n   vec3 directSpecular;\n  vec3 indirectDiffuse;\n vec3 indirectSpecular;\n};\nstruct GeometricContext {\n vec3 position;\n    vec3 normal;\n  vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n   return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n    return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n   float distance = dot( planeNormal, point - pointOnPlane );\n    return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n  return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n   return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",
THREE.ShaderChunk.cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n vec3 absDirection = abs(direction);\n   int face = -1;\n    if( absDirection.x > absDirection.z ) {\n       if(absDirection.x > absDirection.y )\n          face = direction.x > 0.0 ? 0 : 3;\n     else\n          face = direction.y > 0.0 ? 1 : 4;\n }\n else {\n        if(absDirection.z > absDirection.y )\n          face = direction.z > 0.0 ? 2 : 5;\n     else\n          face = direction.y > 0.0 ? 1 : 4;\n }\n return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n  float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n float dxRoughness = dFdx(roughness);\n  float dyRoughness = dFdy(roughness);\n  vec3 dx = dFdx( vec * scale * dxRoughness );\n  vec3 dy = dFdy( vec * scale * dyRoughness );\n  float d = max( dot( dx, dx ), dot( dy, dy ) );\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\n float mipLevel = 0.5 * log2(d);\n   return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n   float a = 16.0 * cubeUV_rcpTextureSize;\n   vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n  vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n float powScale = exp2_packed.x * exp2_packed.y;\n   float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n   float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n bool bRes = mipLevel == 0.0;\n  scale =  bRes && (scale < a) ? a : scale;\n vec3 r;\n   vec2 offset;\n  int face = getFaceFromDirection(direction);\n   float rcpPowScale = 1.0 / powScale;\n   if( face == 0) {\n      r = vec3(direction.x, -direction.z, direction.y);\n     offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n      offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n else if( face == 1) {\n     r = vec3(direction.y, direction.x, direction.z);\n      offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n       offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n else if( face == 2) {\n     r = vec3(direction.z, direction.x, direction.y);\n      offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n       offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n else if( face == 3) {\n     r = vec3(direction.x, direction.z, direction.y);\n      offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n       offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n  }\n else if( face == 4) {\n     r = vec3(direction.y, direction.x, -direction.z);\n     offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n  }\n else {\n        r = vec3(direction.z, -direction.x, direction.y);\n     offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n  }\n r = normalize(r);\n float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n  vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n   vec2 base = offset + vec2( texelOffset );\n return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n   float roughnessVal = roughness* cubeUV_maxLods3;\n  float r1 = floor(roughnessVal);\n   float r2 = r1 + 1.0;\n  float t = fract(roughnessVal);\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n   float s = mipInfo.y;\n  float level0 = mipInfo.x;\n float level1 = level0 + 1.0;\n  level1 = level1 > 5.0 ? 5.0 : level1;\n level0 += min( floor( s + 0.5 ), 5.0 );\n   vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n   vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n   vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n vec4 result = mix(color10, color20, t);\n   return vec4(result.rgb, 1.0);\n}\n#endif\n",
THREE.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n  objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
THREE.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n   transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
THREE.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n  uniform sampler2D displacementMap;\n    uniform float displacementScale;\n  uniform float displacementBias;\n#endif\n",
THREE.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n vec4 emissiveColor = texture2D( emissiveMap, vUv );\n   emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n    totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
THREE.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n    uniform sampler2D emissiveMap;\n#endif\n",
THREE.ShaderChunk.encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",
THREE.ShaderChunk.encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n   #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n        vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n       vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n       #ifdef ENVMAP_MODE_REFLECTION\n         vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n     #else\n         vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n        #endif\n    #else\n     vec3 reflectVec = vReflect;\n   #endif\n    #ifdef ENVMAP_TYPE_CUBE\n       vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n #elif defined( ENVMAP_TYPE_EQUIREC )\n      vec2 sampleUV;\n        sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n       sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n     vec4 envColor = texture2D( envMap, sampleUV );\n    #elif defined( ENVMAP_TYPE_SPHERE )\n       vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n        vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n  #endif\n    envColor = envMapTexelToLinear( envColor );\n   #ifdef ENVMAP_BLENDING_MULTIPLY\n       outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n  #elif defined( ENVMAP_BLENDING_MIX )\n      outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n  #elif defined( ENVMAP_BLENDING_ADD )\n      outgoingLight += envColor.xyz * specularStrength * reflectivity;\n  #endif\n#endif\n",
THREE.ShaderChunk.envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n   uniform float reflectivity;\n   uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n #if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n       varying vec3 vWorldPosition;\n  #endif\n    #ifdef ENVMAP_TYPE_CUBE\n       uniform samplerCube envMap;\n   #else\n     uniform sampler2D envMap;\n #endif\n    uniform float flipEnvMap;\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n     uniform float refractionRatio;\n    #else\n     varying vec3 vReflect;\n    #endif\n#endif\n",
THREE.ShaderChunk.envmap_pars_vertex = "#ifdef USE_ENVMAP\n    #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n        varying vec3 vWorldPosition;\n  #else\n     varying vec3 vReflect;\n        uniform float refractionRatio;\n    #endif\n#endif\n",
THREE.ShaderChunk.envmap_vertex = "#ifdef USE_ENVMAP\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n        vWorldPosition = worldPosition.xyz;\n   #else\n     vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n        vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n        #ifdef ENVMAP_MODE_REFLECTION\n         vReflect = reflect( cameraToVertex, worldNormal );\n        #else\n         vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n       #endif\n    #endif\n#endif\n",
THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n #ifdef USE_LOGDEPTHBUF_EXT\n        float depth = gl_FragDepthEXT / gl_FragCoord.w;\n   #else\n     float depth = gl_FragCoord.z / gl_FragCoord.w;\n    #endif\n    #ifdef FOG_EXP2\n       float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n    #else\n     float fogFactor = smoothstep( fogNear, fogFar, depth );\n   #endif\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n    uniform vec3 fogColor;\n    #ifdef FOG_EXP2\n       uniform float fogDensity;\n #else\n     uniform float fogNear;\n        uniform float fogFar;\n #endif\n#endif",
THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n   reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n  uniform sampler2D lightMap;\n   uniform float lightMapIntensity;\n#endif",
THREE.ShaderChunk.lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n       getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n     dotNL = dot( geometry.normal, directLight.direction );\n        directLightColor_Diffuse = PI * directLight.color;\n        vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n      #ifdef DOUBLE_SIDED\n           vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n      #endif\n    }\n#endif\n#if NUM_SPOT_LIGHTS > 0\n    for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n        getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n       dotNL = dot( geometry.normal, directLight.direction );\n        directLightColor_Diffuse = PI * directLight.color;\n        vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n      #ifdef DOUBLE_SIDED\n           vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n      #endif\n    }\n#endif\n#if NUM_DIR_LIGHTS > 0\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n     getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n     dotNL = dot( geometry.normal, directLight.direction );\n        directLightColor_Diffuse = PI * directLight.color;\n        vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n      #ifdef DOUBLE_SIDED\n           vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n      #endif\n    }\n#endif\n#if NUM_HEMI_LIGHTS > 0\n    for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n        vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n       #ifdef DOUBLE_SIDED\n           vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n        #endif\n    }\n#endif\n",
THREE.ShaderChunk.lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n    vec3 irradiance = ambientLightColor;\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n     irradiance *= PI;\n #endif\n    return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n struct DirectionalLight {\n     vec3 direction;\n       vec3 color;\n       int shadow;\n       float shadowBias;\n     float shadowRadius;\n       vec2 shadowMapSize;\n   };\n    uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n       directLight.color = directionalLight.color;\n       directLight.direction = directionalLight.direction;\n       directLight.visible = true;\n   }\n#endif\n#if NUM_POINT_LIGHTS > 0\n   struct PointLight {\n       vec3 position;\n        vec3 color;\n       float distance;\n       float decay;\n      int shadow;\n       float shadowBias;\n     float shadowRadius;\n       vec2 shadowMapSize;\n   };\n    uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n   void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n     vec3 lVector = pointLight.position - geometry.position;\n       directLight.direction = normalize( lVector );\n     float lightDistance = length( lVector );\n      if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n           directLight.color = pointLight.color;\n         directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n            directLight.visible = true;\n       } else {\n          directLight.color = vec3( 0.0 );\n          directLight.visible = false;\n      }\n }\n#endif\n#if NUM_SPOT_LIGHTS > 0\n    struct SpotLight {\n        vec3 position;\n        vec3 direction;\n       vec3 color;\n       float distance;\n       float decay;\n      float coneCos;\n        float penumbraCos;\n        int shadow;\n       float shadowBias;\n     float shadowRadius;\n       vec2 shadowMapSize;\n   };\n    uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n  void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n       vec3 lVector = spotLight.position - geometry.position;\n        directLight.direction = normalize( lVector );\n     float lightDistance = length( lVector );\n      float angleCos = dot( directLight.direction, spotLight.direction );\n       if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n          float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n          directLight.color = spotLight.color;\n          directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n         directLight.visible = true;\n       } else {\n          directLight.color = vec3( 0.0 );\n          directLight.visible = false;\n      }\n }\n#endif\n#if NUM_HEMI_LIGHTS > 0\n    struct HemisphereLight {\n      vec3 direction;\n       vec3 skyColor;\n        vec3 groundColor;\n };\n    uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n  vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n     float dotNL = dot( geometry.normal, hemiLight.direction );\n        float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n      vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n        #ifndef PHYSICALLY_CORRECT_LIGHTS\n         irradiance *= PI;\n     #endif\n        return irradiance;\n    }\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n   vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n        #include <normal_flip>\n        vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n      #ifdef ENVMAP_TYPE_CUBE\n           vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n          #ifdef TEXTURE_LOD_EXT\n                vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n           #else\n             vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n         #endif\n            envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n     #elif defined( ENVMAP_TYPE_CUBE_UV )\n          vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n          vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n        #else\n         vec4 envMapColor = vec4( 0.0 );\n       #endif\n        return PI * envMapColor.rgb * envMapIntensity;\n    }\n float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n        float maxMIPLevelScalar = float( maxMIPLevel );\n       float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n     return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n  }\n vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n       #ifdef ENVMAP_MODE_REFLECTION\n         vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n      #else\n         vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n     #endif\n        #include <normal_flip>\n        reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n     float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n      #ifdef ENVMAP_TYPE_CUBE\n           vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n         #ifdef TEXTURE_LOD_EXT\n                vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n            #else\n             vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n          #endif\n            envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n     #elif defined( ENVMAP_TYPE_CUBE_UV )\n          vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n         vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n       #elif defined( ENVMAP_TYPE_EQUIREC )\n          vec2 sampleUV;\n            sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n           sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n         #ifdef TEXTURE_LOD_EXT\n                vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n         #else\n             vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n           #endif\n            envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n     #elif defined( ENVMAP_TYPE_SPHERE )\n           vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n          #ifdef TEXTURE_LOD_EXT\n                vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n           #else\n             vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n         #endif\n            envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n     #endif\n        return envMapColor.rgb * envMapIntensity;\n }\n#endif\n",
THREE.ShaderChunk.lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
THREE.ShaderChunk.lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n    vec3    diffuseColor;\n vec3    specularColor;\n    float   specularShininess;\n    float   specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n   float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n  vec3 irradiance = dotNL * directLight.color;\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n     irradiance *= PI;\n #endif\n    reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n   reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n  reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct             RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse        RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )   (0)\n",
THREE.ShaderChunk.lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n  material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n   material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n   material.clearCoat = saturate( clearCoat ); material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
THREE.ShaderChunk.lights_physical_pars_fragment = "struct PhysicalMaterial {\n vec3    diffuseColor;\n float   specularRoughness;\n    vec3    specularColor;\n    #ifndef STANDARD\n      float clearCoat;\n      float clearCoatRoughness;\n #endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n    return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n    float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n  vec3 irradiance = dotNL * directLight.color;\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n     irradiance *= PI;\n #endif\n    #ifndef STANDARD\n      float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n   #else\n     float clearCoatDHR = 0.0;\n #endif\n    reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n    reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n  #ifndef STANDARD\n      reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n #endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n    reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n #ifndef STANDARD\n      float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n       float dotNL = dotNV;\n      float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n   #else\n     float clearCoatDHR = 0.0;\n #endif\n    reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n #ifndef STANDARD\n      reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n #endif\n}\n#define RE_Direct                RE_Direct_Physical\n#define RE_IndirectDiffuse      RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular        RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n    return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
THREE.ShaderChunk.lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n PointLight pointLight;\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n       pointLight = pointLights[ i ];\n        getPointDirectLightIrradiance( pointLight, geometry, directLight );\n       #ifdef USE_SHADOWMAP\n      directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n      #endif\n        RE_Direct( directLight, geometry, material, reflectedLight );\n }\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n    SpotLight spotLight;\n  for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n        spotLight = spotLights[ i ];\n      getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n     #ifdef USE_SHADOWMAP\n      directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n     #endif\n        RE_Direct( directLight, geometry, material, reflectedLight );\n }\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n DirectionalLight directionalLight;\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n     directionalLight = directionalLights[ i ];\n        getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n       #ifdef USE_SHADOWMAP\n      directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n       #endif\n        RE_Direct( directLight, geometry, material, reflectedLight );\n }\n#endif\n#if defined( RE_IndirectDiffuse )\n  vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n #ifdef USE_LIGHTMAP\n       vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n        #ifndef PHYSICALLY_CORRECT_LIGHTS\n         lightMapIrradiance *= PI;\n     #endif\n        irradiance += lightMapIrradiance;\n #endif\n    #if ( NUM_HEMI_LIGHTS > 0 )\n       for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n            irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n        }\n #endif\n    #if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n        irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n #endif\n    RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n    vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n    #ifndef STANDARD\n      vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n #else\n     vec3 clearCoatRadiance = vec3( 0.0 );\n #endif\n        \n  RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n   gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n    uniform float logDepthBufFC;\n  #ifdef USE_LOGDEPTHBUF_EXT\n        varying float vFragDepth;\n #endif\n#endif\n",
THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n  #ifdef USE_LOGDEPTHBUF_EXT\n        varying float vFragDepth;\n #endif\n    uniform float logDepthBufFC;\n#endif",
THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n   gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n    #ifdef USE_LOGDEPTHBUF_EXT\n        vFragDepth = 1.0 + gl_Position.w;\n #else\n     gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n    #endif\n#endif\n",
THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n vec4 texelColor = texture2D( map, vUv );\n  texelColor = mapTexelToLinear( texelColor );\n  diffuseColor *= texelColor;\n#endif\n",
THREE.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n    uniform sampler2D map;\n#endif\n",
THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n    vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n   uniform vec4 offsetRepeat;\n    uniform sampler2D map;\n#endif\n",
THREE.ShaderChunk.metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n   vec4 texelMetalness = texture2D( metalnessMap, vUv );\n metalnessFactor *= texelMetalness.r;\n#endif\n",
THREE.ShaderChunk.metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n  uniform sampler2D metalnessMap;\n#endif",
THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n  objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n   objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n   objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n   objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n #ifndef USE_MORPHNORMALS\n  uniform float morphTargetInfluences[ 8 ];\n #else\n uniform float morphTargetInfluences[ 4 ];\n #endif\n#endif",
THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n  transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n  transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n  transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n  transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n  #ifndef USE_MORPHNORMALS\n  transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n  transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n  transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n  transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n  #endif\n#endif\n",
THREE.ShaderChunk.normal_flip = "#ifdef DOUBLE_SIDED\n float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n    float flipNormal = 1.0;\n#endif\n",
THREE.ShaderChunk.normal_fragment = "#ifdef FLAT_SHADED\n  vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n  vec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n    normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n   normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n    uniform sampler2D normalMap;\n  uniform vec2 normalScale;\n vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n      vec3 q0 = dFdx( eye_pos.xyz );\n        vec3 q1 = dFdy( eye_pos.xyz );\n        vec2 st0 = dFdx( vUv.st );\n        vec2 st1 = dFdy( vUv.st );\n        vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n        vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n       vec3 N = normalize( surf_norm );\n      vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n      mapN.xy = normalScale * mapN.xy;\n      mat3 tsn = mat3( S, T, N );\n       return normalize( tsn * mapN );\n   }\n#endif\n",
THREE.ShaderChunk.packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n  vec4 r = vec4( fract( v * PackFactors ), v );\n r.yzw -= r.xyz * ShiftRight8;   return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n  return dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
THREE.ShaderChunk.premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
THREE.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n  vec4 mvPosition = modelViewMatrix * skinned;\n#else\n   vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n";
THREE.ShaderChunk.roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n   vec4 texelRoughness = texture2D( roughnessMap, vUv );\n roughnessFactor *= texelRoughness.r;\n#endif\n";
THREE.ShaderChunk.roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n  uniform sampler2D roughnessMap;\n#endif",
THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n    #if NUM_DIR_LIGHTS > 0\n        uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n     varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n   #endif\n    #if NUM_SPOT_LIGHTS > 0\n       uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n       varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n #endif\n    #if NUM_POINT_LIGHTS > 0\n      uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n     varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n   #endif\n    float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n      return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n }\n float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n        const vec2 offset = vec2( 0.0, 1.0 );\n     vec2 texelSize = vec2( 1.0 ) / size;\n      vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n        float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n       float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n       float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n       float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n       vec2 f = fract( uv * size + 0.5 );\n        float a = mix( lb, lt, f.y );\n     float b = mix( rb, rt, f.y );\n     float c = mix( a, b, f.x );\n       return c;\n }\n float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n      shadowCoord.xyz /= shadowCoord.w;\n     shadowCoord.z += shadowBias;\n      bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n        bool inFrustum = all( inFrustumVec );\n     bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n      bool frustumTest = all( frustumTestVec );\n     if ( frustumTest ) {\n      #if defined( SHADOWMAP_TYPE_PCF )\n         vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n         float dx0 = - texelSize.x * shadowRadius;\n         float dy0 = - texelSize.y * shadowRadius;\n         float dx1 = + texelSize.x * shadowRadius;\n         float dy1 = + texelSize.y * shadowRadius;\n         return (\n              texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n                texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n             texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n           ) * ( 1.0 / 9.0 );\n        #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n          vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n         float dx0 = - texelSize.x * shadowRadius;\n         float dy0 = - texelSize.y * shadowRadius;\n         float dx1 = + texelSize.x * shadowRadius;\n         float dy1 = + texelSize.y * shadowRadius;\n         return (\n              texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n              texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n               texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n         ) * ( 1.0 / 9.0 );\n        #else\n         return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n      #endif\n        }\n     return 1.0;\n   }\n vec2 cubeToUV( vec3 v, float texelSizeY ) {\n       vec3 absV = abs( v );\n     float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n       absV *= scaleToCube;\n      v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n        vec2 planar = v.xy;\n       float almostATexel = 1.5 * texelSizeY;\n        float almostOne = 1.0 - almostATexel;\n     if ( absV.z >= almostOne ) {\n          if ( v.z > 0.0 )\n              planar.x = 4.0 - v.x;\n     } else if ( absV.x >= almostOne ) {\n           float signX = sign( v.x );\n            planar.x = v.z * signX + 2.0 * signX;\n     } else if ( absV.y >= almostOne ) {\n           float signY = sign( v.y );\n            planar.x = v.x + 2.0 * signY + 2.0;\n           planar.y = v.z * signY - 2.0;\n     }\n     return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n    }\n float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n     vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n      vec3 lightToPosition = shadowCoord.xyz;\n       vec3 bd3D = normalize( lightToPosition );\n     float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n       #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n           vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n            return (\n              texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n               texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n         ) * ( 1.0 / 9.0 );\n        #else\n         return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n      #endif\n    }\n#endif\n",
THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n  #if NUM_DIR_LIGHTS > 0\n        uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n       varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n   #endif\n    #if NUM_SPOT_LIGHTS > 0\n       uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n     varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n #endif\n    #if NUM_POINT_LIGHTS > 0\n      uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n       varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n   #endif\n#endif\n",
THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n   #if NUM_DIR_LIGHTS > 0\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n     vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n  }\n #endif\n    #if NUM_SPOT_LIGHTS > 0\n   for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n        vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n    }\n #endif\n    #if NUM_POINT_LIGHTS > 0\n  for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n       vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n  }\n #endif\n#endif\n",
THREE.ShaderChunk.shadowmask_pars_fragment = "float getShadowMask() {\n    float shadow = 1.0;\n   #ifdef USE_SHADOWMAP\n  #if NUM_DIR_LIGHTS > 0\n    DirectionalLight directionalLight;\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n     directionalLight = directionalLights[ i ];\n        shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n   }\n #endif\n    #if NUM_SPOT_LIGHTS > 0\n   SpotLight spotLight;\n  for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n        spotLight = spotLights[ i ];\n      shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n }\n #endif\n    #if NUM_POINT_LIGHTS > 0\n  PointLight pointLight;\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n       pointLight = pointLights[ i ];\n        shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n  }\n #endif\n    #endif\n    return shadow;\n}\n",
THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n mat4 boneMatX = getBoneMatrix( skinIndex.x );\n mat4 boneMatY = getBoneMatrix( skinIndex.y );\n mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n    uniform mat4 bindMatrix;\n  uniform mat4 bindMatrixInverse;\n   #ifdef BONE_TEXTURE\n       uniform sampler2D boneTexture;\n        uniform int boneTextureWidth;\n     uniform int boneTextureHeight;\n        mat4 getBoneMatrix( const in float i ) {\n          float j = i * 4.0;\n            float x = mod( j, float( boneTextureWidth ) );\n            float y = floor( j / float( boneTextureWidth ) );\n         float dx = 1.0 / float( boneTextureWidth );\n           float dy = 1.0 / float( boneTextureHeight );\n          y = dy * ( y + 0.5 );\n         vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n          vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n          vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n          vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n          mat4 bone = mat4( v1, v2, v3, v4 );\n           return bone;\n      }\n #else\n     uniform mat4 boneMatrices[ MAX_BONES ];\n       mat4 getBoneMatrix( const in float i ) {\n          mat4 bone = boneMatrices[ int(i) ];\n           return bone;\n      }\n #endif\n#endif\n",
THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n  vec4 skinned = vec4( 0.0 );\n   skinned += boneMatX * skinVertex * skinWeight.x;\n  skinned += boneMatY * skinVertex * skinWeight.y;\n  skinned += boneMatZ * skinVertex * skinWeight.z;\n  skinned += boneMatW * skinVertex * skinWeight.w;\n  skinned  = bindMatrixInverse * skinned;\n#endif\n",
THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n   mat4 skinMatrix = mat4( 0.0 );\n    skinMatrix += skinWeight.x * boneMatX;\n    skinMatrix += skinWeight.y * boneMatY;\n    skinMatrix += skinWeight.z * boneMatZ;\n    skinMatrix += skinWeight.w * boneMatW;\n    skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n    objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n    vec4 texelSpecular = texture2D( specularMap, vUv );\n   specularStrength = texelSpecular.r;\n#else\n    specularStrength = 1.0;\n#endif",
THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n    uniform sampler2D specularMap;\n#endif",
THREE.ShaderChunk.tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
THREE.ShaderChunk.tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
THREE.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n   varying vec2 vUv2;\n#endif",
THREE.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n attribute vec2 uv2;\n   varying vec2 vUv2;\n#endif",
THREE.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n  vUv2 = uv2;\n#endif",
THREE.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n  varying vec2 vUv;\n#endif",
THREE.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n    varying vec2 vUv;\n uniform vec4 offsetRepeat;\n#endif\n",
THREE.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n #ifdef USE_SKINNING\n       vec4 worldPosition = modelMatrix * skinned;\n   #else\n     vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n  #endif\n#endif\n",
THREE.UniformsUtils = {
    merge: function(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
            var i = this.clone(e[n]);
            for (var r in i)
                t[r] = i[r]
        }
        return t
    },
    clone: function(e) {
        var t = {};
        for (var n in e) {
            t[n] = {};
            for (var i in e[n]) {
                var r = e[n][i];
                r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix3 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? t[n][i] = r.clone() : Array.isArray(r) ? t[n][i] = r.slice() : t[n][i] = r
            }
        }
        return t
    }
},
THREE.UniformsLib = {
    common: {
        diffuse: {
            value: new THREE.Color(15658734)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        offsetRepeat: {
            value: new THREE.Vector4(0,0,1,1)
        },
        specularMap: {
            value: null
        },
        alphaMap: {
            value: null
        },
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new THREE.Vector2(1,1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new THREE.Color(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        }
    },
    points: {
        diffuse: {
            value: new THREE.Color(15658734)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        offsetRepeat: {
            value: new THREE.Vector4(0,0,1,1)
        }
    }
},
THREE.ShaderChunk.cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n  gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n gl_FragColor.a *= opacity;\n}\n",
THREE.ShaderChunk.cube_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n    vWorldPosition = transformDirection( position, modelMatrix );\n #include <begin_vertex>\n   #include <project_vertex>\n}\n",
THREE.ShaderChunk.depth_frag = "#if DEPTH_PACKING == 3200\n    uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n    #include <clipping_planes_fragment>\n   vec4 diffuseColor = vec4( 1.0 );\n  #if DEPTH_PACKING == 3200\n     diffuseColor.a = opacity;\n #endif\n    #include <map_fragment>\n   #include <alphamap_fragment>\n  #include <alphatest_fragment>\n #include <logdepthbuf_fragment>\n   #if DEPTH_PACKING == 3200\n     gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n   #elif DEPTH_PACKING == 3201\n       gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n #endif\n}\n",
THREE.ShaderChunk.depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n #include <uv_vertex>\n  #include <skinbase_vertex>\n    #include <begin_vertex>\n   #include <displacementmap_vertex>\n #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n}\n",
THREE.ShaderChunk.distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n #include <clipping_planes_fragment>\n   gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",
THREE.ShaderChunk.distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n   #include <skinbase_vertex>\n    #include <begin_vertex>\n   #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <worldpos_vertex>\n    #include <clipping_planes_vertex>\n vWorldPosition = worldPosition;\n}\n",
THREE.ShaderChunk.equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n    vec3 direction = normalize( vWorldPosition );\n vec2 sampleUV;\n    sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n    sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n gl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
THREE.ShaderChunk.equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n    vWorldPosition = transformDirection( position, modelMatrix );\n #include <begin_vertex>\n   #include <project_vertex>\n}\n",
THREE.ShaderChunk.linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n  #include <clipping_planes_fragment>\n   if ( mod( vLineDistance, totalSize ) > dashSize ) {\n       discard;\n  }\n vec3 outgoingLight = vec3( 0.0 );\n vec4 diffuseColor = vec4( diffuse, opacity );\n #include <logdepthbuf_fragment>\n   #include <color_fragment>\n outgoingLight = diffuseColor.rgb;\n gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n   #include <color_vertex>\n   vLineDistance = scale * lineDistance;\n vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n  #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n}\n",
THREE.ShaderChunk.meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n   varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n  #include <clipping_planes_fragment>\n   vec4 diffuseColor = vec4( diffuse, opacity );\n #include <logdepthbuf_fragment>\n   #include <map_fragment>\n   #include <color_fragment>\n #include <alphamap_fragment>\n  #include <alphatest_fragment>\n #include <specularmap_fragment>\n   ReflectedLight reflectedLight;\n    reflectedLight.directDiffuse = vec3( 0.0 );\n   reflectedLight.directSpecular = vec3( 0.0 );\n  reflectedLight.indirectDiffuse = diffuseColor.rgb;\n    reflectedLight.indirectSpecular = vec3( 0.0 );\n    #include <aomap_fragment>\n vec3 outgoingLight = reflectedLight.indirectDiffuse;\n  #include <normal_flip>\n    #include <envmap_fragment>\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n    #include <uv_vertex>\n  #include <uv2_vertex>\n #include <color_vertex>\n   #include <skinbase_vertex>\n    #ifdef USE_ENVMAP\n #include <beginnormal_vertex>\n #include <morphnormal_vertex>\n #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n   #endif\n    #include <begin_vertex>\n   #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <worldpos_vertex>\n    #include <clipping_planes_vertex>\n #include <envmap_vertex>\n}\n",
THREE.ShaderChunk.meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n  varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n   #include <clipping_planes_fragment>\n   vec4 diffuseColor = vec4( diffuse, opacity );\n ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n vec3 totalEmissiveRadiance = emissive;\n    #include <logdepthbuf_fragment>\n   #include <map_fragment>\n   #include <color_fragment>\n #include <alphamap_fragment>\n  #include <alphatest_fragment>\n #include <specularmap_fragment>\n   #include <emissivemap_fragment>\n   reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n  #include <lightmap_fragment>\n  reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n   #ifdef DOUBLE_SIDED\n       reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n #else\n     reflectedLight.directDiffuse = vLightFront;\n   #endif\n    reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n   #include <aomap_fragment>\n vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n   #include <normal_flip>\n    #include <envmap_fragment>\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n    varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n   #include <uv_vertex>\n  #include <uv2_vertex>\n #include <color_vertex>\n   #include <beginnormal_vertex>\n #include <morphnormal_vertex>\n #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n   #include <begin_vertex>\n   #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n #include <worldpos_vertex>\n    #include <envmap_vertex>\n  #include <lights_lambert_vertex>\n  #include <shadowmap_vertex>\n}\n",
THREE.ShaderChunk.meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n    #include <clipping_planes_fragment>\n   vec4 diffuseColor = vec4( diffuse, opacity );\n ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n vec3 totalEmissiveRadiance = emissive;\n    #include <logdepthbuf_fragment>\n   #include <map_fragment>\n   #include <color_fragment>\n #include <alphamap_fragment>\n  #include <alphatest_fragment>\n #include <specularmap_fragment>\n   #include <normal_flip>\n    #include <normal_fragment>\n    #include <emissivemap_fragment>\n   #include <lights_phong_fragment>\n  #include <lights_template>\n    #include <aomap_fragment>\n vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n #include <envmap_fragment>\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n  varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n    #include <uv_vertex>\n  #include <uv2_vertex>\n #include <color_vertex>\n   #include <beginnormal_vertex>\n #include <morphnormal_vertex>\n #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n  vNormal = normalize( transformedNormal );\n#endif\n #include <begin_vertex>\n   #include <displacementmap_vertex>\n #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n vViewPosition = - mvPosition.xyz;\n #include <worldpos_vertex>\n    #include <envmap_vertex>\n  #include <shadowmap_vertex>\n}\n",
THREE.ShaderChunk.meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n uniform float clearCoat;\n  uniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n   varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n   #include <clipping_planes_fragment>\n   vec4 diffuseColor = vec4( diffuse, opacity );\n ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n vec3 totalEmissiveRadiance = emissive;\n    #include <logdepthbuf_fragment>\n   #include <map_fragment>\n   #include <color_fragment>\n #include <alphamap_fragment>\n  #include <alphatest_fragment>\n #include <specularmap_fragment>\n   #include <roughnessmap_fragment>\n  #include <metalnessmap_fragment>\n  #include <normal_flip>\n    #include <normal_fragment>\n    #include <emissivemap_fragment>\n   #include <lights_physical_fragment>\n   #include <lights_template>\n    #include <aomap_fragment>\n vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n    varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n #include <uv_vertex>\n  #include <uv2_vertex>\n #include <color_vertex>\n   #include <beginnormal_vertex>\n #include <morphnormal_vertex>\n #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n  vNormal = normalize( transformedNormal );\n#endif\n #include <begin_vertex>\n   #include <displacementmap_vertex>\n #include <morphtarget_vertex>\n #include <skinning_vertex>\n    #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n vViewPosition = - mvPosition.xyz;\n #include <worldpos_vertex>\n    #include <shadowmap_vertex>\n}\n",
THREE.ShaderChunk.normal_frag = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n #include <clipping_planes_fragment>\n   gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n   #include <logdepthbuf_fragment>\n}\n",
THREE.ShaderChunk.normal_vert = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n vNormal = normalize( normalMatrix * normal );\n #include <begin_vertex>\n   #include <morphtarget_vertex>\n #include <project_vertex>\n #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n}\n",
THREE.ShaderChunk.points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n    #include <clipping_planes_fragment>\n   vec3 outgoingLight = vec3( 0.0 );\n vec4 diffuseColor = vec4( diffuse, opacity );\n #include <logdepthbuf_fragment>\n   #include <map_particle_fragment>\n  #include <color_fragment>\n #include <alphatest_fragment>\n outgoingLight = diffuseColor.rgb;\n gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n #include <premultiplied_alpha_fragment>\n   #include <tonemapping_fragment>\n   #include <encodings_fragment>\n #include <fog_fragment>\n}\n",
THREE.ShaderChunk.points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n #include <color_vertex>\n   #include <begin_vertex>\n   #include <project_vertex>\n #ifdef USE_SIZEATTENUATION\n        gl_PointSize = size * ( scale / - mvPosition.z );\n #else\n     gl_PointSize = size;\n  #endif\n    #include <logdepthbuf_vertex>\n #include <clipping_planes_vertex>\n #include <worldpos_vertex>\n    #include <shadowmap_vertex>\n}\n",
THREE.ShaderChunk.shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n",
THREE.ShaderChunk.shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n #include <begin_vertex>\n   #include <project_vertex>\n #include <worldpos_vertex>\n    #include <shadowmap_vertex>\n}\n",
THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.fog]),
        vertexShader: THREE.ShaderChunk.meshbasic_vert,
        fragmentShader: THREE.ShaderChunk.meshbasic_frag
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {
            emissive: {
                value: new THREE.Color(0)
            }
        }]),
        vertexShader: THREE.ShaderChunk.meshlambert_vert,
        fragmentShader: THREE.ShaderChunk.meshlambert_frag
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.bumpmap, THREE.UniformsLib.normalmap, THREE.UniformsLib.displacementmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {
            emissive: {
                value: new THREE.Color(0)
            },
            specular: {
                value: new THREE.Color(1118481)
            },
            shininess: {
                value: 30
            }
        }]),
        vertexShader: THREE.ShaderChunk.meshphong_vert,
        fragmentShader: THREE.ShaderChunk.meshphong_frag
    },
    standard: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.bumpmap, THREE.UniformsLib.normalmap, THREE.UniformsLib.displacementmap, THREE.UniformsLib.roughnessmap, THREE.UniformsLib.metalnessmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {
            emissive: {
                value: new THREE.Color(0)
            },
            roughness: {
                value: .5
            },
            metalness: {
                value: 0
            },
            envMapIntensity: {
                value: 1
            }
        }]),
        vertexShader: THREE.ShaderChunk.meshphysical_vert,
        fragmentShader: THREE.ShaderChunk.meshphysical_frag
    },
    points: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.points, THREE.UniformsLib.fog]),
        vertexShader: THREE.ShaderChunk.points_vert,
        fragmentShader: THREE.ShaderChunk.points_frag
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {
                value: 1
            },
            dashSize: {
                value: 1
            },
            totalSize: {
                value: 2
            }
        }]),
        vertexShader: THREE.ShaderChunk.linedashed_vert,
        fragmentShader: THREE.ShaderChunk.linedashed_frag
    },
    depth: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.displacementmap]),
        vertexShader: THREE.ShaderChunk.depth_vert,
        fragmentShader: THREE.ShaderChunk.depth_frag
    },
    normal: {
        uniforms: {
            opacity: {
                value: 1
            }
        },
        vertexShader: THREE.ShaderChunk.normal_vert,
        fragmentShader: THREE.ShaderChunk.normal_frag
    },
    cube: {
        uniforms: {
            tCube: {
                value: null
            },
            tFlip: {
                value: -1
            },
            opacity: {
                value: 1
            }
        },
        vertexShader: THREE.ShaderChunk.cube_vert,
        fragmentShader: THREE.ShaderChunk.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            },
            tFlip: {
                value: -1
            }
        },
        vertexShader: THREE.ShaderChunk.equirect_vert,
        fragmentShader: THREE.ShaderChunk.equirect_frag
    },
    distanceRGBA: {
        uniforms: {
            lightPos: {
                value: new THREE.Vector3
            }
        },
        vertexShader: THREE.ShaderChunk.distanceRGBA_vert,
        fragmentShader: THREE.ShaderChunk.distanceRGBA_frag
    }
},
THREE.ShaderLib.physical = {
    uniforms: THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms, {
        clearCoat: {
            value: 0
        },
        clearCoatRoughness: {
            value: 0
        }
    }]),
    vertexShader: THREE.ShaderChunk.meshphysical_vert,
    fragmentShader: THREE.ShaderChunk.meshphysical_frag
},
THREE.WebGLRenderer = function(e) {
    function t() {
        return null === ee ? pe : 1
    }
    function n(e, t, n, i) {
        j === !0 && (e *= i,
        t *= i,
        n *= i),
        Ae.clearColor(e, t, n, i)
    }
    function i() {
        Ae.init(),
        Ae.scissor(oe.copy(fe).multiplyScalar(pe)),
        Ae.viewport(se.copy(ge).multiplyScalar(pe)),
        n(le.r, le.g, le.b, ue)
    }
    function r() {
        J = null,
        re = null,
        ie = "",
        ne = -1,
        Ae.reset()
    }
    function o(e) {
        e.preventDefault(),
        r(),
        i(),
        Pe.clear()
    }
    function a(e) {
        var t = e.target;
        t.removeEventListener("dispose", a),
        s(t)
    }
    function s(e) {
        c(e),
        Pe.delete(e)
    }
    function c(e) {
        var t = Pe.get(e).program;
        e.program = void 0,
        void 0 !== t && De.releaseProgram(t)
    }
    function l(e, t, n, i) {
        var r;
        if (n instanceof THREE.InstancedBufferGeometry && (r = _e.get("ANGLE_instanced_arrays"),
        null === r))
            return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        void 0 === i && (i = 0),
        Ae.initAttributes();
        var o = n.attributes
          , a = t.getAttributes()
          , s = e.defaultAttributeValues;
        for (var c in a) {
            var l = a[c];
            if (l >= 0) {
                var u = o[c];
                if (void 0 !== u) {
                    var h = Me.FLOAT
                      , d = u.array
                      , p = u.normalized;
                    d instanceof Float32Array ? h = Me.FLOAT : d instanceof Float64Array ? console.warn("Unsupported data buffer format: Float64Array") : d instanceof Uint16Array ? h = Me.UNSIGNED_SHORT : d instanceof Int16Array ? h = Me.SHORT : d instanceof Uint32Array ? h = Me.UNSIGNED_INT : d instanceof Int32Array ? h = Me.INT : d instanceof Int8Array ? h = Me.BYTE : d instanceof Uint8Array && (h = Me.UNSIGNED_BYTE);
                    var f = u.itemSize
                      , m = ke.getAttributeBuffer(u);
                    if (u instanceof THREE.InterleavedBufferAttribute) {
                        var g = u.data
                          , v = g.stride
                          , E = u.offset;
                        g instanceof THREE.InstancedInterleavedBuffer ? (Ae.enableAttributeAndDivisor(l, g.meshPerAttribute, r),
                        void 0 === n.maxInstancedCount && (n.maxInstancedCount = g.meshPerAttribute * g.count)) : Ae.enableAttribute(l),
                        Me.bindBuffer(Me.ARRAY_BUFFER, m),
                        Me.vertexAttribPointer(l, f, h, p, v * g.array.BYTES_PER_ELEMENT, (i * v + E) * g.array.BYTES_PER_ELEMENT)
                    } else
                        u instanceof THREE.InstancedBufferAttribute ? (Ae.enableAttributeAndDivisor(l, u.meshPerAttribute, r),
                        void 0 === n.maxInstancedCount && (n.maxInstancedCount = u.meshPerAttribute * u.count)) : Ae.enableAttribute(l),
                        Me.bindBuffer(Me.ARRAY_BUFFER, m),
                        Me.vertexAttribPointer(l, f, h, p, 0, i * f * u.array.BYTES_PER_ELEMENT)
                } else if (void 0 !== s) {
                    var y = s[c];
                    if (void 0 !== y)
                        switch (y.length) {
                        case 2:
                            Me.vertexAttrib2fv(l, y);
                            break;
                        case 3:
                            Me.vertexAttrib3fv(l, y);
                            break;
                        case 4:
                            Me.vertexAttrib4fv(l, y);
                            break;
                        default:
                            Me.vertexAttrib1fv(l, y)
                        }
                }
            }
        }
        Ae.disableUnusedAttributes()
    }
    function u(e, t) {
        return Math.abs(t[0]) - Math.abs(e[0])
    }
    function h(e, t) {
        return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.material.program && t.material.program && e.material.program !== t.material.program ? e.material.program.id - t.material.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
    }
    function d(e, t) {
        return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
    }
    function p(e, t, n, i, r) {
        var o, a;
        n.transparent ? (o = X,
        a = ++Y) : (o = W,
        a = ++q);
        var s = o[a];
        void 0 !== s ? (s.id = e.id,
        s.object = e,
        s.geometry = t,
        s.material = n,
        s.z = Re.z,
        s.group = r) : (s = {
            id: e.id,
            object: e,
            geometry: t,
            material: n,
            z: Re.z,
            group: r
        },
        o.push(s))
    }
    function f(e) {
        var t = e.geometry;
        return null === t.boundingSphere && t.computeBoundingSphere(),
        Te.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
        g(Te)
    }
    function m(e) {
        return Te.center.set(0, 0, 0),
        Te.radius = .7071067811865476,
        Te.applyMatrix4(e.matrixWorld),
        g(Te)
    }
    function g(e) {
        if (!ve.intersectsSphere(e))
            return !1;
        var t = Ee.numPlanes;
        if (0 === t)
            return !0;
        var n = Q.clippingPlanes
          , i = e.center
          , r = -e.radius
          , o = 0;
        do
            if (n[o].distanceToPoint(i) < r)
                return !1;
        while (++o !== t);return !0
    }
    function v(e, t) {
        if (e.visible !== !1) {
            if (e.layers.test(t.layers))
                if (e instanceof THREE.Light)
                    G.push(e);
                else if (e instanceof THREE.Sprite)
                    e.frustumCulled !== !1 && m(e) !== !0 || Z.push(e);
                else if (e instanceof THREE.LensFlare)
                    $.push(e);
                else if (e instanceof THREE.ImmediateRenderObject)
                    Q.sortObjects === !0 && (Re.setFromMatrixPosition(e.matrixWorld),
                    Re.applyProjection(xe)),
                    p(e, null, e.material, Re.z, null);
                else if ((e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Points) && (e instanceof THREE.SkinnedMesh && e.skeleton.update(),
                e.frustumCulled === !1 || f(e) === !0)) {
                    var n = e.material;
                    if (n.visible === !0) {
                        Q.sortObjects === !0 && (Re.setFromMatrixPosition(e.matrixWorld),
                        Re.applyProjection(xe));
                        var i = ke.update(e);
                        if (n instanceof THREE.MultiMaterial)
                            for (var r = i.groups, o = n.materials, a = 0, s = r.length; a < s; a++) {
                                var c = r[a]
                                  , l = o[c.materialIndex];
                                l.visible === !0 && p(e, i, l, Re.z, c)
                            }
                        else
                            p(e, i, n, Re.z, null)
                    }
                }
            for (var u = e.children, a = 0, s = u.length; a < s; a++)
                v(u[a], t)
        }
    }
    function E(e, t, n, i) {
        for (var r = 0, o = e.length; r < o; r++) {
            var a = e[r]
              , s = a.object
              , c = a.geometry
              , l = void 0 === i ? a.material : i
              , u = a.group;
            if (s.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, s.matrixWorld),
            s.normalMatrix.getNormalMatrix(s.modelViewMatrix),
            s instanceof THREE.ImmediateRenderObject) {
                b(l);
                var h = T(t, n, l, s);
                ie = "",
                s.render(function(e) {
                    Q.renderBufferImmediate(e, h, l)
                })
            } else
                Q.renderBufferDirect(t, n, c, l, s, u)
        }
    }
    function y(e, t, n) {
        var i = Pe.get(e)
          , r = De.getParameters(e, we, t, Ee.numPlanes, n)
          , o = De.getProgramCode(e, r)
          , s = i.program
          , l = !0;
        if (void 0 === s)
            e.addEventListener("dispose", a);
        else if (s.code !== o)
            c(e);
        else {
            if (void 0 !== r.shaderID)
                return;
            l = !1
        }
        if (l) {
            if (r.shaderID) {
                var u = THREE.ShaderLib[r.shaderID];
                i.__webglShader = {
                    name: e.type,
                    uniforms: THREE.UniformsUtils.clone(u.uniforms),
                    vertexShader: u.vertexShader,
                    fragmentShader: u.fragmentShader
                }
            } else
                i.__webglShader = {
                    name: e.type,
                    uniforms: e.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                };
            e.__webglShader = i.__webglShader,
            s = De.acquireProgram(e, r, o),
            i.program = s,
            e.program = s
        }
        var h = s.getAttributes();
        if (e.morphTargets) {
            e.numSupportedMorphTargets = 0;
            for (var d = 0; d < Q.maxMorphTargets; d++)
                h["morphTarget" + d] >= 0 && e.numSupportedMorphTargets++
        }
        if (e.morphNormals) {
            e.numSupportedMorphNormals = 0;
            for (var d = 0; d < Q.maxMorphNormals; d++)
                h["morphNormal" + d] >= 0 && e.numSupportedMorphNormals++
        }
        var p = i.__webglShader.uniforms;
        (e instanceof THREE.ShaderMaterial || e instanceof THREE.RawShaderMaterial) && e.clipping !== !0 || (i.numClippingPlanes = Ee.numPlanes,
        p.clippingPlanes = Ee.uniform),
        e.lights && (i.lightsHash = we.hash,
        p.ambientLightColor.value = we.ambient,
        p.directionalLights.value = we.directional,
        p.spotLights.value = we.spot,
        p.pointLights.value = we.point,
        p.hemisphereLights.value = we.hemi,
        p.directionalShadowMap.value = we.directionalShadowMap,
        p.directionalShadowMatrix.value = we.directionalShadowMatrix,
        p.spotShadowMap.value = we.spotShadowMap,
        p.spotShadowMatrix.value = we.spotShadowMatrix,
        p.pointShadowMap.value = we.pointShadowMap,
        p.pointShadowMatrix.value = we.pointShadowMatrix);
        var f = i.program.getUniforms()
          , m = THREE.WebGLUniforms.seqWithValue(f.seq, p);
        i.uniformsList = m,
        i.dynamicUniforms = THREE.WebGLUniforms.splitDynamic(m, p)
    }
    function b(e) {
        e.side !== THREE.DoubleSide ? Ae.enable(Me.CULL_FACE) : Ae.disable(Me.CULL_FACE),
        Ae.setFlipSided(e.side === THREE.BackSide),
        e.transparent === !0 ? Ae.setBlending(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha) : Ae.setBlending(THREE.NoBlending),
        Ae.setDepthFunc(e.depthFunc),
        Ae.setDepthTest(e.depthTest),
        Ae.setDepthWrite(e.depthWrite),
        Ae.setColorWrite(e.colorWrite),
        Ae.setPolygonOffset(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
    }
    function T(e, t, n, i) {
        ce = 0;
        var r = Pe.get(n);
        if (ye) {
            if (be || e !== re) {
                var o = e === re && n.id === ne;
                Ee.setState(n.clippingPlanes, n.clipShadows, e, r, o)
            }
            void 0 !== r.numClippingPlanes && r.numClippingPlanes !== Ee.numPlanes && (n.needsUpdate = !0)
        }
        void 0 === r.program && (n.needsUpdate = !0),
        void 0 !== r.lightsHash && r.lightsHash !== we.hash && (n.needsUpdate = !0),
        n.needsUpdate && (y(n, t, i),
        n.needsUpdate = !1);
        var a = !1
          , s = !1
          , c = !1
          , l = r.program
          , u = l.getUniforms()
          , h = r.__webglShader.uniforms;
        if (l.id !== J && (Me.useProgram(l.program),
        J = l.id,
        a = !0,
        s = !0,
        c = !0),
        n.id !== ne && (ne = n.id,
        s = !0),
        a || e !== re) {
            if (u.set(Me, e, "projectionMatrix"),
            Ce.logarithmicDepthBuffer && u.setValue(Me, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)),
            e !== re && (re = e,
            s = !0,
            c = !0),
            n instanceof THREE.ShaderMaterial || n instanceof THREE.MeshPhongMaterial || n instanceof THREE.MeshStandardMaterial || n.envMap) {
                var d = u.map.cameraPosition;
                void 0 !== d && d.setValue(Me, Re.setFromMatrixPosition(e.matrixWorld))
            }
            (n instanceof THREE.MeshPhongMaterial || n instanceof THREE.MeshLambertMaterial || n instanceof THREE.MeshBasicMaterial || n instanceof THREE.MeshStandardMaterial || n instanceof THREE.ShaderMaterial || n.skinning) && u.setValue(Me, "viewMatrix", e.matrixWorldInverse),
            u.set(Me, Q, "toneMappingExposure"),
            u.set(Me, Q, "toneMappingWhitePoint")
        }
        if (n.skinning) {
            u.setOptional(Me, i, "bindMatrix"),
            u.setOptional(Me, i, "bindMatrixInverse");
            var p = i.skeleton;
            p && (Ce.floatVertexTextures && p.useVertexTexture ? (u.set(Me, p, "boneTexture"),
            u.set(Me, p, "boneTextureWidth"),
            u.set(Me, p, "boneTextureHeight")) : u.setOptional(Me, p, "boneMatrices"))
        }
        s && (n.lights && P(h, c),
        t && n.fog && M(h, t),
        (n instanceof THREE.MeshBasicMaterial || n instanceof THREE.MeshLambertMaterial || n instanceof THREE.MeshPhongMaterial || n instanceof THREE.MeshStandardMaterial || n instanceof THREE.MeshDepthMaterial) && x(h, n),
        n instanceof THREE.LineBasicMaterial ? R(h, n) : n instanceof THREE.LineDashedMaterial ? (R(h, n),
        w(h, n)) : n instanceof THREE.PointsMaterial ? H(h, n) : n instanceof THREE.MeshLambertMaterial ? S(h, n) : n instanceof THREE.MeshPhongMaterial ? _(h, n) : n instanceof THREE.MeshPhysicalMaterial ? A(h, n) : n instanceof THREE.MeshStandardMaterial ? C(h, n) : n instanceof THREE.MeshDepthMaterial ? n.displacementMap && (h.displacementMap.value = n.displacementMap,
        h.displacementScale.value = n.displacementScale,
        h.displacementBias.value = n.displacementBias) : n instanceof THREE.MeshNormalMaterial && (h.opacity.value = n.opacity),
        THREE.WebGLUniforms.upload(Me, r.uniformsList, h, Q)),
        u.set(Me, i, "modelViewMatrix"),
        u.set(Me, i, "normalMatrix"),
        u.setValue(Me, "modelMatrix", i.matrixWorld);
        var f = r.dynamicUniforms;
        return null !== f && (THREE.WebGLUniforms.evalDynamic(f, h, i, e),
        THREE.WebGLUniforms.upload(Me, f, h, Q)),
        l
    }
    function x(e, t) {
        e.opacity.value = t.opacity,
        e.diffuse.value = t.color,
        t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),
        e.map.value = t.map,
        e.specularMap.value = t.specularMap,
        e.alphaMap.value = t.alphaMap,
        t.aoMap && (e.aoMap.value = t.aoMap,
        e.aoMapIntensity.value = t.aoMapIntensity);
        var n;
        if (t.map ? n = t.map : t.specularMap ? n = t.specularMap : t.displacementMap ? n = t.displacementMap : t.normalMap ? n = t.normalMap : t.bumpMap ? n = t.bumpMap : t.roughnessMap ? n = t.roughnessMap : t.metalnessMap ? n = t.metalnessMap : t.alphaMap ? n = t.alphaMap : t.emissiveMap && (n = t.emissiveMap),
        void 0 !== n) {
            n instanceof THREE.WebGLRenderTarget && (n = n.texture);
            var i = n.offset
              , r = n.repeat;
            e.offsetRepeat.value.set(i.x, i.y, r.x, r.y)
        }
        e.envMap.value = t.envMap,
        e.flipEnvMap.value = t.envMap instanceof THREE.CubeTexture ? -1 : 1,
        e.reflectivity.value = t.reflectivity,
        e.refractionRatio.value = t.refractionRatio
    }
    function R(e, t) {
        e.diffuse.value = t.color,
        e.opacity.value = t.opacity
    }
    function w(e, t) {
        e.dashSize.value = t.dashSize,
        e.totalSize.value = t.dashSize + t.gapSize,
        e.scale.value = t.scale
    }
    function H(e, t) {
        if (e.diffuse.value = t.color,
        e.opacity.value = t.opacity,
        e.size.value = t.size * pe,
        e.scale.value = .5 * O.clientHeight,
        e.map.value = t.map,
        null !== t.map) {
            var n = t.map.offset
              , i = t.map.repeat;
            e.offsetRepeat.value.set(n.x, n.y, i.x, i.y)
        }
    }
    function M(e, t) {
        e.fogColor.value = t.color,
        t instanceof THREE.Fog ? (e.fogNear.value = t.near,
        e.fogFar.value = t.far) : t instanceof THREE.FogExp2 && (e.fogDensity.value = t.density)
    }
    function S(e, t) {
        t.lightMap && (e.lightMap.value = t.lightMap,
        e.lightMapIntensity.value = t.lightMapIntensity),
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
    }
    function _(e, t) {
        e.specular.value = t.specular,
        e.shininess.value = Math.max(t.shininess, 1e-4),
        t.lightMap && (e.lightMap.value = t.lightMap,
        e.lightMapIntensity.value = t.lightMapIntensity),
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
        t.bumpMap && (e.bumpMap.value = t.bumpMap,
        e.bumpScale.value = t.bumpScale),
        t.normalMap && (e.normalMap.value = t.normalMap,
        e.normalScale.value.copy(t.normalScale)),
        t.displacementMap && (e.displacementMap.value = t.displacementMap,
        e.displacementScale.value = t.displacementScale,
        e.displacementBias.value = t.displacementBias)
    }
    function C(e, t) {
        e.roughness.value = t.roughness,
        e.metalness.value = t.metalness,
        t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
        t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
        t.lightMap && (e.lightMap.value = t.lightMap,
        e.lightMapIntensity.value = t.lightMapIntensity),
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
        t.bumpMap && (e.bumpMap.value = t.bumpMap,
        e.bumpScale.value = t.bumpScale),
        t.normalMap && (e.normalMap.value = t.normalMap,
        e.normalScale.value.copy(t.normalScale)),
        t.displacementMap && (e.displacementMap.value = t.displacementMap,
        e.displacementScale.value = t.displacementScale,
        e.displacementBias.value = t.displacementBias),
        t.envMap && (e.envMapIntensity.value = t.envMapIntensity)
    }
    function A(e, t) {
        e.clearCoat.value = t.clearCoat,
        e.clearCoatRoughness.value = t.clearCoatRoughness,
        C(e, t)
    }
    function P(e, t) {
        e.ambientLightColor.needsUpdate = t,
        e.directionalLights.needsUpdate = t,
        e.pointLights.needsUpdate = t,
        e.spotLights.needsUpdate = t,
        e.hemisphereLights.needsUpdate = t
    }
    function L(e) {
        for (var t = 0, n = 0, i = e.length; n < i; n++) {
            var r = e[n];
            r.castShadow && (we.shadows[t++] = r)
        }
        we.shadows.length = t
    }
    function k(e, t) {
        var n, i, r, o, a, s, c, l = 0, u = 0, h = 0, d = t.matrixWorldInverse, p = 0, f = 0, m = 0, g = 0;
        for (n = 0,
        i = e.length; n < i; n++)
            if (r = e[n],
            o = r.color,
            a = r.intensity,
            s = r.distance,
            c = r.shadow && r.shadow.map ? r.shadow.map.texture : null,
            r instanceof THREE.AmbientLight)
                l += o.r * a,
                u += o.g * a,
                h += o.b * a;
            else if (r instanceof THREE.DirectionalLight) {
                var v = Ie.get(r);
                v.color.copy(r.color).multiplyScalar(r.intensity),
                v.direction.setFromMatrixPosition(r.matrixWorld),
                Re.setFromMatrixPosition(r.target.matrixWorld),
                v.direction.sub(Re),
                v.direction.transformDirection(d),
                v.shadow = r.castShadow,
                r.castShadow && (v.shadowBias = r.shadow.bias,
                v.shadowRadius = r.shadow.radius,
                v.shadowMapSize = r.shadow.mapSize),
                we.directionalShadowMap[p] = c,
                we.directionalShadowMatrix[p] = r.shadow.matrix,
                we.directional[p++] = v
            } else if (r instanceof THREE.SpotLight) {
                var v = Ie.get(r);
                v.position.setFromMatrixPosition(r.matrixWorld),
                v.position.applyMatrix4(d),
                v.color.copy(o).multiplyScalar(a),
                v.distance = s,
                v.direction.setFromMatrixPosition(r.matrixWorld),
                Re.setFromMatrixPosition(r.target.matrixWorld),
                v.direction.sub(Re),
                v.direction.transformDirection(d),
                v.coneCos = Math.cos(r.angle),
                v.penumbraCos = Math.cos(r.angle * (1 - r.penumbra)),
                v.decay = 0 === r.distance ? 0 : r.decay,
                v.shadow = r.castShadow,
                r.castShadow && (v.shadowBias = r.shadow.bias,
                v.shadowRadius = r.shadow.radius,
                v.shadowMapSize = r.shadow.mapSize),
                we.spotShadowMap[m] = c,
                we.spotShadowMatrix[m] = r.shadow.matrix,
                we.spot[m++] = v
            } else if (r instanceof THREE.PointLight) {
                var v = Ie.get(r);
                v.position.setFromMatrixPosition(r.matrixWorld),
                v.position.applyMatrix4(d),
                v.color.copy(r.color).multiplyScalar(r.intensity),
                v.distance = r.distance,
                v.decay = 0 === r.distance ? 0 : r.decay,
                v.shadow = r.castShadow,
                r.castShadow && (v.shadowBias = r.shadow.bias,
                v.shadowRadius = r.shadow.radius,
                v.shadowMapSize = r.shadow.mapSize),
                we.pointShadowMap[f] = c,
                void 0 === we.pointShadowMatrix[f] && (we.pointShadowMatrix[f] = new THREE.Matrix4),
                Re.setFromMatrixPosition(r.matrixWorld).negate(),
                we.pointShadowMatrix[f].identity().setPosition(Re),
                we.point[f++] = v
            } else if (r instanceof THREE.HemisphereLight) {
                var v = Ie.get(r);
                v.direction.setFromMatrixPosition(r.matrixWorld),
                v.direction.transformDirection(d),
                v.direction.normalize(),
                v.skyColor.copy(r.color).multiplyScalar(a),
                v.groundColor.copy(r.groundColor).multiplyScalar(a),
                we.hemi[g++] = v
            }
        we.ambient[0] = l,
        we.ambient[1] = u,
        we.ambient[2] = h,
        we.directional.length = p,
        we.spot.length = m,
        we.point.length = f,
        we.hemi.length = g,
        we.hash = p + "," + f + "," + m + "," + g + "," + we.shadows.length
    }
    function D() {
        var e = ce;
        return e >= Ce.maxTextures && console.warn("WebGLRenderer: trying to use " + e + " texture units while this GPU supports only " + Ce.maxTextures),
        ce += 1,
        e
    }
    function I(e) {
        var t;
        if (e === THREE.RepeatWrapping)
            return Me.REPEAT;
        if (e === THREE.ClampToEdgeWrapping)
            return Me.CLAMP_TO_EDGE;
        if (e === THREE.MirroredRepeatWrapping)
            return Me.MIRRORED_REPEAT;
        if (e === THREE.NearestFilter)
            return Me.NEAREST;
        if (e === THREE.NearestMipMapNearestFilter)
            return Me.NEAREST_MIPMAP_NEAREST;
        if (e === THREE.NearestMipMapLinearFilter)
            return Me.NEAREST_MIPMAP_LINEAR;
        if (e === THREE.LinearFilter)
            return Me.LINEAR;
        if (e === THREE.LinearMipMapNearestFilter)
            return Me.LINEAR_MIPMAP_NEAREST;
        if (e === THREE.LinearMipMapLinearFilter)
            return Me.LINEAR_MIPMAP_LINEAR;
        if (e === THREE.UnsignedByteType)
            return Me.UNSIGNED_BYTE;
        if (e === THREE.UnsignedShort4444Type)
            return Me.UNSIGNED_SHORT_4_4_4_4;
        if (e === THREE.UnsignedShort5551Type)
            return Me.UNSIGNED_SHORT_5_5_5_1;
        if (e === THREE.UnsignedShort565Type)
            return Me.UNSIGNED_SHORT_5_6_5;
        if (e === THREE.ByteType)
            return Me.BYTE;
        if (e === THREE.ShortType)
            return Me.SHORT;
        if (e === THREE.UnsignedShortType)
            return Me.UNSIGNED_SHORT;
        if (e === THREE.IntType)
            return Me.INT;
        if (e === THREE.UnsignedIntType)
            return Me.UNSIGNED_INT;
        if (e === THREE.FloatType)
            return Me.FLOAT;
        if (t = _e.get("OES_texture_half_float"),
        null !== t && e === THREE.HalfFloatType)
            return t.HALF_FLOAT_OES;
        if (e === THREE.AlphaFormat)
            return Me.ALPHA;
        if (e === THREE.RGBFormat)
            return Me.RGB;
        if (e === THREE.RGBAFormat)
            return Me.RGBA;
        if (e === THREE.LuminanceFormat)
            return Me.LUMINANCE;
        if (e === THREE.LuminanceAlphaFormat)
            return Me.LUMINANCE_ALPHA;
        if (e === THREE.DepthFormat)
            return Me.DEPTH_COMPONENT;
        if (e === THREE.AddEquation)
            return Me.FUNC_ADD;
        if (e === THREE.SubtractEquation)
            return Me.FUNC_SUBTRACT;
        if (e === THREE.ReverseSubtractEquation)
            return Me.FUNC_REVERSE_SUBTRACT;
        if (e === THREE.ZeroFactor)
            return Me.ZERO;
        if (e === THREE.OneFactor)
            return Me.ONE;
        if (e === THREE.SrcColorFactor)
            return Me.SRC_COLOR;
        if (e === THREE.OneMinusSrcColorFactor)
            return Me.ONE_MINUS_SRC_COLOR;
        if (e === THREE.SrcAlphaFactor)
            return Me.SRC_ALPHA;
        if (e === THREE.OneMinusSrcAlphaFactor)
            return Me.ONE_MINUS_SRC_ALPHA;
        if (e === THREE.DstAlphaFactor)
            return Me.DST_ALPHA;
        if (e === THREE.OneMinusDstAlphaFactor)
            return Me.ONE_MINUS_DST_ALPHA;
        if (e === THREE.DstColorFactor)
            return Me.DST_COLOR;
        if (e === THREE.OneMinusDstColorFactor)
            return Me.ONE_MINUS_DST_COLOR;
        if (e === THREE.SrcAlphaSaturateFactor)
            return Me.SRC_ALPHA_SATURATE;
        if (t = _e.get("WEBGL_compressed_texture_s3tc"),
        null !== t) {
            if (e === THREE.RGB_S3TC_DXT1_Format)
                return t.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT1_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT3_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (e === THREE.RGBA_S3TC_DXT5_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT5_EXT
        }
        if (t = _e.get("WEBGL_compressed_texture_pvrtc"),
        null !== t) {
            if (e === THREE.RGB_PVRTC_4BPPV1_Format)
                return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (e === THREE.RGB_PVRTC_2BPPV1_Format)
                return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (e === THREE.RGBA_PVRTC_4BPPV1_Format)
                return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (e === THREE.RGBA_PVRTC_2BPPV1_Format)
                return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
        }
        if (t = _e.get("WEBGL_compressed_texture_etc1"),
        null !== t && e === THREE.RGB_ETC1_Format)
            return t.COMPRESSED_RGB_ETC1_WEBGL;
        if (t = _e.get("EXT_blend_minmax"),
        null !== t) {
            if (e === THREE.MinEquation)
                return t.MIN_EXT;
            if (e === THREE.MaxEquation)
                return t.MAX_EXT
        }
        return 0
    }
    console.log("THREE.WebGLRenderer", THREE.REVISION),
    e = e || {};
    var O = void 0 !== e.canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
      , B = void 0 !== e.context ? e.context : null
      , F = void 0 !== e.alpha && e.alpha
      , N = void 0 === e.depth || e.depth
      , U = void 0 === e.stencil || e.stencil
      , z = void 0 !== e.antialias && e.antialias
      , j = void 0 === e.premultipliedAlpha || e.premultipliedAlpha
      , V = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer
      , G = []
      , W = []
      , q = -1
      , X = []
      , Y = -1
      , K = new Float32Array(8)
      , Z = []
      , $ = [];
    this.domElement = O,
    this.context = null,
    this.autoClear = !0,
    this.autoClearColor = !0,
    this.autoClearDepth = !0,
    this.autoClearStencil = !0,
    this.sortObjects = !0,
    this.clippingPlanes = [],
    this.localClippingEnabled = !1,
    this.gammaFactor = 2,
    this.gammaInput = !1,
    this.gammaOutput = !1,
    this.physicallyCorrectLights = !1,
    this.toneMapping = THREE.LinearToneMapping,
    this.toneMappingExposure = 1,
    this.toneMappingWhitePoint = 1,
    this.maxMorphTargets = 8,
    this.maxMorphNormals = 4;
    var Q = this
      , J = null
      , ee = null
      , te = null
      , ne = -1
      , ie = ""
      , re = null
      , oe = new THREE.Vector4
      , ae = null
      , se = new THREE.Vector4
      , ce = 0
      , le = new THREE.Color(0)
      , ue = 0
      , he = O.width
      , de = O.height
      , pe = 1
      , fe = new THREE.Vector4(0,0,he,de)
      , me = !1
      , ge = new THREE.Vector4(0,0,he,de)
      , ve = new THREE.Frustum
      , Ee = new THREE.WebGLClipping
      , ye = !1
      , be = !1
      , Te = new THREE.Sphere
      , xe = new THREE.Matrix4
      , Re = new THREE.Vector3
      , we = {
        hash: "",
        ambient: [0, 0, 0],
        directional: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        point: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: [],
        shadows: []
    }
      , He = {
        calls: 0,
        vertices: 0,
        faces: 0,
        points: 0
    };
    this.info = {
        render: He,
        memory: {
            geometries: 0,
            textures: 0
        },
        programs: null
    };
    var Me;
    try {
        var Se = {
            alpha: F,
            depth: N,
            stencil: U,
            antialias: z,
            premultipliedAlpha: j,
            preserveDrawingBuffer: V
        };
        if (Me = B || O.getContext("webgl", Se) || O.getContext("experimental-webgl", Se),
        null === Me)
            throw null !== O.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
        void 0 === Me.getShaderPrecisionFormat && (Me.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            }
        }
        ),
        O.addEventListener("webglcontextlost", o, !1)
    } catch (e) {
        console.error("THREE.WebGLRenderer: " + e)
    }
    var _e = new THREE.WebGLExtensions(Me);
    _e.get("WEBGL_depth_texture"),
    _e.get("OES_texture_float"),
    _e.get("OES_texture_float_linear"),
    _e.get("OES_texture_half_float"),
    _e.get("OES_texture_half_float_linear"),
    _e.get("OES_standard_derivatives"),
    _e.get("ANGLE_instanced_arrays"),
    _e.get("OES_element_index_uint") && (THREE.BufferGeometry.MaxIndex = 4294967296);
    var Ce = new THREE.WebGLCapabilities(Me,_e,e)
      , Ae = new THREE.WebGLState(Me,_e,I)
      , Pe = new THREE.WebGLProperties
      , Le = new THREE.WebGLTextures(Me,_e,Ae,Pe,Ce,I,this.info)
      , ke = new THREE.WebGLObjects(Me,Pe,this.info)
      , De = new THREE.WebGLPrograms(this,Ce)
      , Ie = new THREE.WebGLLights;
    this.info.programs = De.programs;
    var Oe = new THREE.WebGLBufferRenderer(Me,_e,He)
      , Be = new THREE.WebGLIndexedBufferRenderer(Me,_e,He)
      , Fe = new THREE.OrthographicCamera(-1,1,1,-1,0,1)
      , Ne = new THREE.PerspectiveCamera
      , Ue = new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.MeshBasicMaterial({
        depthTest: !1,
        depthWrite: !1,
        fog: !1
    }))
      , ze = THREE.ShaderLib.cube
      , je = new THREE.Mesh(new THREE.BoxBufferGeometry(5,5,5),new THREE.ShaderMaterial({
        uniforms: ze.uniforms,
        vertexShader: ze.vertexShader,
        fragmentShader: ze.fragmentShader,
        side: THREE.BackSide,
        depthTest: !1,
        depthWrite: !1,
        fog: !1
    }));
    i(),
    this.context = Me,
    this.capabilities = Ce,
    this.extensions = _e,
    this.properties = Pe,
    this.state = Ae;
    var Ve = new THREE.WebGLShadowMap(this,we,ke,Ce);
    this.shadowMap = Ve;
    var Ge = new THREE.SpritePlugin(this,Z)
      , We = new THREE.LensFlarePlugin(this,$);
    this.getContext = function() {
        return Me
    }
    ,
    this.getContextAttributes = function() {
        return Me.getContextAttributes()
    }
    ,
    this.forceContextLoss = function() {
        _e.get("WEBGL_lose_context").loseContext()
    }
    ,
    this.getMaxAnisotropy = function() {
        return Ce.getMaxAnisotropy()
    }
    ,
    this.getPrecision = function() {
        return Ce.precision
    }
    ,
    this.getPixelRatio = function() {
        return pe
    }
    ,
    this.setPixelRatio = function(e) {
        void 0 !== e && (pe = e,
        this.setSize(ge.z, ge.w, !1))
    }
    ,
    this.getSize = function() {
        return {
            width: he,
            height: de
        }
    }
    ,
    this.setSize = function(e, t, n) {
        he = e,
        de = t,
        O.width = e * pe,
        O.height = t * pe,
        n !== !1 && (O.style.width = e + "px",
        O.style.height = t + "px"),
        this.setViewport(0, 0, e, t)
    }
    ,
    this.setViewport = function(e, t, n, i) {
        Ae.viewport(ge.set(e, t, n, i))
    }
    ,
    this.setScissor = function(e, t, n, i) {
        Ae.scissor(fe.set(e, t, n, i))
    }
    ,
    this.setScissorTest = function(e) {
        Ae.setScissorTest(me = e)
    }
    ,
    this.getClearColor = function() {
        return le
    }
    ,
    this.setClearColor = function(e, t) {
        le.set(e),
        ue = void 0 !== t ? t : 1,
        n(le.r, le.g, le.b, ue)
    }
    ,
    this.getClearAlpha = function() {
        return ue
    }
    ,
    this.setClearAlpha = function(e) {
        ue = e,
        n(le.r, le.g, le.b, ue)
    }
    ,
    this.clear = function(e, t, n) {
        var i = 0;
        (void 0 === e || e) && (i |= Me.COLOR_BUFFER_BIT),
        (void 0 === t || t) && (i |= Me.DEPTH_BUFFER_BIT),
        (void 0 === n || n) && (i |= Me.STENCIL_BUFFER_BIT),
        Me.clear(i)
    }
    ,
    this.clearColor = function() {
        this.clear(!0, !1, !1)
    }
    ,
    this.clearDepth = function() {
        this.clear(!1, !0, !1)
    }
    ,
    this.clearStencil = function() {
        this.clear(!1, !1, !0)
    }
    ,
    this.clearTarget = function(e, t, n, i) {
        this.setRenderTarget(e),
        this.clear(t, n, i)
    }
    ,
    this.resetGLState = r,
    this.dispose = function() {
        X = [],
        Y = -1,
        W = [],
        q = -1,
        O.removeEventListener("webglcontextlost", o, !1)
    }
    ,
    this.renderBufferImmediate = function(e, t, n) {
        Ae.initAttributes();
        var i = Pe.get(e);
        e.hasPositions && !i.position && (i.position = Me.createBuffer()),
        e.hasNormals && !i.normal && (i.normal = Me.createBuffer()),
        e.hasUvs && !i.uv && (i.uv = Me.createBuffer()),
        e.hasColors && !i.color && (i.color = Me.createBuffer());
        var r = t.getAttributes();
        if (e.hasPositions && (Me.bindBuffer(Me.ARRAY_BUFFER, i.position),
        Me.bufferData(Me.ARRAY_BUFFER, e.positionArray, Me.DYNAMIC_DRAW),
        Ae.enableAttribute(r.position),
        Me.vertexAttribPointer(r.position, 3, Me.FLOAT, !1, 0, 0)),
        e.hasNormals) {
            if (Me.bindBuffer(Me.ARRAY_BUFFER, i.normal),
            "MeshPhongMaterial" !== n.type && "MeshStandardMaterial" !== n.type && "MeshPhysicalMaterial" !== n.type && n.shading === THREE.FlatShading)
                for (var o = 0, a = 3 * e.count; o < a; o += 9) {
                    var s = e.normalArray
                      , c = (s[o + 0] + s[o + 3] + s[o + 6]) / 3
                      , l = (s[o + 1] + s[o + 4] + s[o + 7]) / 3
                      , u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                    s[o + 0] = c,
                    s[o + 1] = l,
                    s[o + 2] = u,
                    s[o + 3] = c,
                    s[o + 4] = l,
                    s[o + 5] = u,
                    s[o + 6] = c,
                    s[o + 7] = l,
                    s[o + 8] = u
                }
            Me.bufferData(Me.ARRAY_BUFFER, e.normalArray, Me.DYNAMIC_DRAW),
            Ae.enableAttribute(r.normal),
            Me.vertexAttribPointer(r.normal, 3, Me.FLOAT, !1, 0, 0)
        }
        e.hasUvs && n.map && (Me.bindBuffer(Me.ARRAY_BUFFER, i.uv),
        Me.bufferData(Me.ARRAY_BUFFER, e.uvArray, Me.DYNAMIC_DRAW),
        Ae.enableAttribute(r.uv),
        Me.vertexAttribPointer(r.uv, 2, Me.FLOAT, !1, 0, 0)),
        e.hasColors && n.vertexColors !== THREE.NoColors && (Me.bindBuffer(Me.ARRAY_BUFFER, i.color),
        Me.bufferData(Me.ARRAY_BUFFER, e.colorArray, Me.DYNAMIC_DRAW),
        Ae.enableAttribute(r.color),
        Me.vertexAttribPointer(r.color, 3, Me.FLOAT, !1, 0, 0)),
        Ae.disableUnusedAttributes(),
        Me.drawArrays(Me.TRIANGLES, 0, e.count),
        e.count = 0
    }
    ,
    this.renderBufferDirect = function(e, n, i, r, o, a) {
        b(r);
        var s = T(e, n, r, o)
          , c = !1
          , h = i.id + "_" + s.id + "_" + r.wireframe;
        h !== ie && (ie = h,
        c = !0);
        var d = o.morphTargetInfluences;
        if (void 0 !== d) {
            for (var p = [], f = 0, m = d.length; f < m; f++) {
                var g = d[f];
                p.push([g, f])
            }
            p.sort(u),
            p.length > 8 && (p.length = 8);
            for (var v = i.morphAttributes, f = 0, m = p.length; f < m; f++) {
                var g = p[f];
                if (K[f] = g[0],
                0 !== g[0]) {
                    var E = g[1];
                    r.morphTargets === !0 && v.position && i.addAttribute("morphTarget" + f, v.position[E]),
                    r.morphNormals === !0 && v.normal && i.addAttribute("morphNormal" + f, v.normal[E])
                } else
                    r.morphTargets === !0 && i.removeAttribute("morphTarget" + f),
                    r.morphNormals === !0 && i.removeAttribute("morphNormal" + f)
            }
            s.getUniforms().setValue(Me, "morphTargetInfluences", K),
            c = !0
        }
        var E = i.index
          , y = i.attributes.position;
        r.wireframe === !0 && (E = ke.getWireframeAttribute(i));
        var x;
        null !== E ? (x = Be,
        x.setIndex(E)) : x = Oe,
        c && (l(r, s, i),
        null !== E && Me.bindBuffer(Me.ELEMENT_ARRAY_BUFFER, ke.getAttributeBuffer(E)));
        var R = 0
          , w = 1 / 0;
        null !== E ? w = E.count : void 0 !== y && (w = y.count);
        var H = i.drawRange.start
          , M = i.drawRange.count
          , S = null !== a ? a.start : 0
          , _ = null !== a ? a.count : 1 / 0
          , C = Math.max(R, H, S)
          , A = Math.min(R + w, H + M, S + _) - 1
          , P = Math.max(0, A - C + 1);
        if (o instanceof THREE.Mesh)
            if (r.wireframe === !0)
                Ae.setLineWidth(r.wireframeLinewidth * t()),
                x.setMode(Me.LINES);
            else
                switch (o.drawMode) {
                case THREE.TrianglesDrawMode:
                    x.setMode(Me.TRIANGLES);
                    break;
                case THREE.TriangleStripDrawMode:
                    x.setMode(Me.TRIANGLE_STRIP);
                    break;
                case THREE.TriangleFanDrawMode:
                    x.setMode(Me.TRIANGLE_FAN)
                }
        else if (o instanceof THREE.Line) {
            var L = r.linewidth;
            void 0 === L && (L = 1),
            Ae.setLineWidth(L * t()),
            o instanceof THREE.LineSegments ? x.setMode(Me.LINES) : x.setMode(Me.LINE_STRIP)
        } else
            o instanceof THREE.Points && x.setMode(Me.POINTS);
        i instanceof THREE.InstancedBufferGeometry ? i.maxInstancedCount > 0 && x.renderInstances(i, C, P) : x.render(C, P)
    }
    ,
    this.render = function(e, t, i, r) {
        if (t instanceof THREE.Camera == !1)
            return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        var o = e.fog;
        ie = "",
        ne = -1,
        re = null,
        e.autoUpdate === !0 && e.updateMatrixWorld(),
        null === t.parent && t.updateMatrixWorld(),
        t.matrixWorldInverse.getInverse(t.matrixWorld),
        xe.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
        ve.setFromMatrix(xe),
        G.length = 0,
        q = -1,
        Y = -1,
        Z.length = 0,
        $.length = 0,
        be = this.localClippingEnabled,
        ye = Ee.init(this.clippingPlanes, be, t),
        v(e, t),
        W.length = q + 1,
        X.length = Y + 1,
        Q.sortObjects === !0 && (W.sort(h),
        X.sort(d)),
        ye && Ee.beginShadows(),
        L(G),
        Ve.render(e, t),
        k(G, t),
        ye && Ee.endShadows(),
        He.calls = 0,
        He.vertices = 0,
        He.faces = 0,
        He.points = 0,
        void 0 === i && (i = null),
        this.setRenderTarget(i);
        var a = e.background;
        if (null === a ? n(le.r, le.g, le.b, ue) : a instanceof THREE.Color && n(a.r, a.g, a.b, 1),
        (this.autoClear || r) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
        a instanceof THREE.CubeTexture ? (Ne.projectionMatrix.copy(t.projectionMatrix),
        Ne.matrixWorld.extractRotation(t.matrixWorld),
        Ne.matrixWorldInverse.getInverse(Ne.matrixWorld),
        je.material.uniforms.tCube.value = a,
        je.modelViewMatrix.multiplyMatrices(Ne.matrixWorldInverse, je.matrixWorld),
        ke.update(je),
        Q.renderBufferDirect(Ne, null, je.geometry, je.material, je, null)) : a instanceof THREE.Texture && (Ue.material.map = a,
        ke.update(Ue),
        Q.renderBufferDirect(Fe, null, Ue.geometry, Ue.material, Ue, null)),
        e.overrideMaterial) {
            var s = e.overrideMaterial;
            E(W, t, o, s),
            E(X, t, o, s)
        } else
            Ae.setBlending(THREE.NoBlending),
            E(W, t, o),
            E(X, t, o);
        Ge.render(e, t),
        We.render(e, t, se),
        i && Le.updateRenderTargetMipmap(i),
        Ae.setDepthTest(!0),
        Ae.setDepthWrite(!0),
        Ae.setColorWrite(!0)
    }
    ,
    this.setFaceCulling = function(e, t) {
        Ae.setCullFace(e),
        Ae.setFlipSided(t === THREE.FrontFaceDirectionCW)
    }
    ,
    this.allocTextureUnit = D,
    this.setTexture2D = function() {
        var e = !1;
        return function(t, n) {
            t instanceof THREE.WebGLRenderTarget && (e || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
            e = !0),
            t = t.texture),
            Le.setTexture2D(t, n)
        }
    }(),
    this.setTexture = function() {
        var e = !1;
        return function(t, n) {
            e || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),
            e = !0),
            Le.setTexture2D(t, n)
        }
    }(),
    this.setTextureCube = function() {
        var e = !1;
        return function(t, n) {
            t instanceof THREE.WebGLRenderTargetCube && (e || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
            e = !0),
            t = t.texture),
            t instanceof THREE.CubeTexture || Array.isArray(t.image) && 6 === t.image.length ? Le.setTextureCube(t, n) : Le.setTextureCubeDynamic(t, n)
        }
    }(),
    this.getCurrentRenderTarget = function() {
        return ee
    }
    ,
    this.setRenderTarget = function(e) {
        ee = e,
        e && void 0 === Pe.get(e).__webglFramebuffer && Le.setupRenderTarget(e);
        var t, n = e instanceof THREE.WebGLRenderTargetCube;
        if (e) {
            var i = Pe.get(e);
            t = n ? i.__webglFramebuffer[e.activeCubeFace] : i.__webglFramebuffer,
            oe.copy(e.scissor),
            ae = e.scissorTest,
            se.copy(e.viewport)
        } else
            t = null,
            oe.copy(fe).multiplyScalar(pe),
            ae = me,
            se.copy(ge).multiplyScalar(pe);
        if (te !== t && (Me.bindFramebuffer(Me.FRAMEBUFFER, t),
        te = t),
        Ae.scissor(oe),
        Ae.setScissorTest(ae),
        Ae.viewport(se),
        n) {
            var r = Pe.get(e.texture);
            Me.framebufferTexture2D(Me.FRAMEBUFFER, Me.COLOR_ATTACHMENT0, Me.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace, r.__webglTexture, e.activeMipMapLevel)
        }
    }
    ,
    this.readRenderTargetPixels = function(e, t, n, i, r, o) {
        if (e instanceof THREE.WebGLRenderTarget == !1)
            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        var a = Pe.get(e).__webglFramebuffer;
        if (a) {
            var s = !1;
            a !== te && (Me.bindFramebuffer(Me.FRAMEBUFFER, a),
            s = !0);
            try {
                var c = e.texture;
                if (c.format !== THREE.RGBAFormat && I(c.format) !== Me.getParameter(Me.IMPLEMENTATION_COLOR_READ_FORMAT))
                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(c.type === THREE.UnsignedByteType || I(c.type) === Me.getParameter(Me.IMPLEMENTATION_COLOR_READ_TYPE) || c.type === THREE.FloatType && _e.get("WEBGL_color_buffer_float") || c.type === THREE.HalfFloatType && _e.get("EXT_color_buffer_half_float")))
                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                Me.checkFramebufferStatus(Me.FRAMEBUFFER) === Me.FRAMEBUFFER_COMPLETE ? t >= 0 && t <= e.width - i && n >= 0 && n <= e.height - r && Me.readPixels(t, n, i, r, I(c.format), I(c.type), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
            } finally {
                s && Me.bindFramebuffer(Me.FRAMEBUFFER, te)
            }
        }
    }
}
,
THREE.WebGLRenderTarget = function(e, t, n) {
    this.uuid = THREE.Math.generateUUID(),
    this.width = e,
    this.height = t,
    this.scissor = new THREE.Vector4(0,0,e,t),
    this.scissorTest = !1,
    this.viewport = new THREE.Vector4(0,0,e,t),
    n = n || {},
    void 0 === n.minFilter && (n.minFilter = THREE.LinearFilter),
    this.texture = new THREE.Texture(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
    this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
    this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
    this.depthTexture = null
}
,
Object.assign(THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {
    setSize: function(e, t) {
        this.width === e && this.height === t || (this.width = e,
        this.height = t,
        this.dispose()),
        this.viewport.set(0, 0, e, t),
        this.scissor.set(0, 0, e, t)
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.width = e.width,
        this.height = e.height,
        this.viewport.copy(e.viewport),
        this.texture = e.texture.clone(),
        this.depthBuffer = e.depthBuffer,
        this.stencilBuffer = e.stencilBuffer,
        this.depthTexture = e.depthTexture,
        this
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
}),
THREE.WebGLRenderTargetCube = function(e, t, n) {
    THREE.WebGLRenderTarget.call(this, e, t, n),
    this.activeCubeFace = 0,
    this.activeMipMapLevel = 0
}
,
THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype),
THREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube,
THREE.WebGLBufferRenderer = function(e, t, n) {
    function i(e) {
        a = e
    }
    function r(t, i) {
        e.drawArrays(a, t, i),
        n.calls++,
        n.vertices += i,
        a === e.TRIANGLES && (n.faces += i / 3)
    }
    function o(i) {
        var r = t.get("ANGLE_instanced_arrays");
        if (null === r)
            return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        var o = i.attributes.position
          , s = 0;
        o instanceof THREE.InterleavedBufferAttribute ? (s = o.data.count,
        r.drawArraysInstancedANGLE(a, 0, s, i.maxInstancedCount)) : (s = o.count,
        r.drawArraysInstancedANGLE(a, 0, s, i.maxInstancedCount)),
        n.calls++,
        n.vertices += s * i.maxInstancedCount,
        a === e.TRIANGLES && (n.faces += i.maxInstancedCount * s / 3)
    }
    var a;
    this.setMode = i,
    this.render = r,
    this.renderInstances = o
}
,
THREE.WebGLClipping = function() {
    function e() {
        l.value !== i && (l.value = i,
        l.needsUpdate = r > 0),
        n.numPlanes = r
    }
    function t(e, t, i, r) {
        var o = null !== e ? e.length : 0
          , a = null;
        if (0 !== o) {
            if (a = l.value,
            r !== !0 || null === a) {
                var u = i + 4 * o
                  , h = t.matrixWorldInverse;
                c.getNormalMatrix(h),
                (null === a || a.length < u) && (a = new Float32Array(u));
                for (var d = 0, p = i; d !== o; ++d,
                p += 4)
                    s.copy(e[d]).applyMatrix4(h, c),
                    s.normal.toArray(a, p),
                    a[p + 3] = s.constant
            }
            l.value = a,
            l.needsUpdate = !0
        }
        return n.numPlanes = o,
        a
    }
    var n = this
      , i = null
      , r = 0
      , o = !1
      , a = !1
      , s = new THREE.Plane
      , c = new THREE.Matrix3
      , l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l,
    this.numPlanes = 0,
    this.init = function(e, n, a) {
        var s = 0 !== e.length || n || 0 !== r || o;
        return o = n,
        i = t(e, a, 0),
        r = e.length,
        s
    }
    ,
    this.beginShadows = function() {
        a = !0,
        t(null)
    }
    ,
    this.endShadows = function() {
        a = !1,
        e()
    }
    ,
    this.setState = function(n, s, c, u, h) {
        if (!o || null === n || 0 === n.length || a && !s)
            a ? t(null) : e();
        else {
            var d = a ? 0 : r
              , p = 4 * d
              , f = u.clippingState || null;
            l.value = f,
            f = t(n, c, p, h);
            for (var m = 0; m !== p; ++m)
                f[m] = i[m];
            u.clippingState = f,
            this.numPlanes += d
        }
    }
}
,
THREE.WebGLIndexedBufferRenderer = function(e, t, n) {
    function i(e) {
        s = e
    }
    function r(n) {
        n.array instanceof Uint32Array && t.get("OES_element_index_uint") ? (c = e.UNSIGNED_INT,
        l = 4) : (c = e.UNSIGNED_SHORT,
        l = 2)
    }
    function o(t, i) {
        e.drawElements(s, i, c, t * l),
        n.calls++,
        n.vertices += i,
        s === e.TRIANGLES && (n.faces += i / 3)
    }
    function a(i, r, o) {
        var a = t.get("ANGLE_instanced_arrays");
        return null === a ? void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.") : (a.drawElementsInstancedANGLE(s, o, c, r * l, i.maxInstancedCount),
        n.calls++,
        n.vertices += o * i.maxInstancedCount,
        void (s === e.TRIANGLES && (n.faces += i.maxInstancedCount * o / 3)))
    }
    var s, c, l;
    this.setMode = i,
    this.setIndex = r,
    this.render = o,
    this.renderInstances = a
}
,
THREE.WebGLExtensions = function(e) {
    var t = {};
    this.get = function(n) {
        if (void 0 !== t[n])
            return t[n];
        var i;
        switch (n) {
        case "WEBGL_depth_texture":
            i = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
            break;
        case "EXT_texture_filter_anisotropic":
            i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
            break;
        case "WEBGL_compressed_texture_s3tc":
            i = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
            break;
        case "WEBGL_compressed_texture_pvrtc":
            i = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
            break;
        case "WEBGL_compressed_texture_etc1":
            i = e.getExtension("WEBGL_compressed_texture_etc1");
            break;
        default:
            i = e.getExtension(n)
        }
        return null === i && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
        t[n] = i,
        i
    }
}
,
THREE.WebGLCapabilities = function(e, t, n) {
    function i() {
        if (void 0 !== o)
            return o;
        var n = t.get("EXT_texture_filter_anisotropic");
        return o = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
    }
    function r(t) {
        if ("highp" === t) {
            if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0)
                return "highp";
            t = "mediump"
        }
        return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
    }
    var o;
    this.getMaxAnisotropy = i,
    this.getMaxPrecision = r,
    this.precision = void 0 !== n.precision ? n.precision : "highp",
    this.logarithmicDepthBuffer = void 0 !== n.logarithmicDepthBuffer && n.logarithmicDepthBuffer,
    this.maxTextures = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
    this.maxVertexTextures = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
    this.maxTextureSize = e.getParameter(e.MAX_TEXTURE_SIZE),
    this.maxCubemapSize = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
    this.maxAttributes = e.getParameter(e.MAX_VERTEX_ATTRIBS),
    this.maxVertexUniforms = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
    this.maxVaryings = e.getParameter(e.MAX_VARYING_VECTORS),
    this.maxFragmentUniforms = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
    this.vertexTextures = this.maxVertexTextures > 0,
    this.floatFragmentTextures = !!t.get("OES_texture_float"),
    this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;
    var a = r(this.precision);
    a !== this.precision && (console.warn("THREE.WebGLRenderer:", this.precision, "not supported, using", a, "instead."),
    this.precision = a),
    this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!t.get("EXT_frag_depth"))
}
,
THREE.WebGLGeometries = function(e, t, n) {
    function i(e) {
        var t = e.geometry;
        if (void 0 !== l[t.id])
            return l[t.id];
        t.addEventListener("dispose", r);
        var i;
        return t instanceof THREE.BufferGeometry ? i = t : t instanceof THREE.Geometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new THREE.BufferGeometry).setFromObject(e)),
        i = t._bufferGeometry),
        l[t.id] = i,
        n.memory.geometries++,
        i
    }
    function r(e) {
        var i = e.target
          , o = l[i.id];
        null !== o.index && a(o.index),
        s(o.attributes),
        i.removeEventListener("dispose", r),
        delete l[i.id];
        var c = t.get(i);
        c.wireframe && a(c.wireframe),
        t.delete(i);
        var u = t.get(o);
        u.wireframe && a(u.wireframe),
        t.delete(o),
        n.memory.geometries--
    }
    function o(e) {
        return e instanceof THREE.InterleavedBufferAttribute ? t.get(e.data).__webglBuffer : t.get(e).__webglBuffer
    }
    function a(t) {
        var n = o(t);
        void 0 !== n && (e.deleteBuffer(n),
        c(t))
    }
    function s(e) {
        for (var t in e)
            a(e[t])
    }
    function c(e) {
        e instanceof THREE.InterleavedBufferAttribute ? t.delete(e.data) : t.delete(e)
    }
    var l = {};
    this.get = i
}
,
THREE.WebGLLights = function() {
    var e = {};
    this.get = function(t) {
        if (void 0 !== e[t.id])
            return e[t.id];
        var n;
        switch (t.type) {
        case "DirectionalLight":
            n = {
                direction: new THREE.Vector3,
                color: new THREE.Color,
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new THREE.Vector2
            };
            break;
        case "SpotLight":
            n = {
                position: new THREE.Vector3,
                direction: new THREE.Vector3,
                color: new THREE.Color,
                distance: 0,
                coneCos: 0,
                penumbraCos: 0,
                decay: 0,
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new THREE.Vector2
            };
            break;
        case "PointLight":
            n = {
                position: new THREE.Vector3,
                color: new THREE.Color,
                distance: 0,
                decay: 0,
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new THREE.Vector2
            };
            break;
        case "HemisphereLight":
            n = {
                direction: new THREE.Vector3,
                skyColor: new THREE.Color,
                groundColor: new THREE.Color
            }
        }
        return e[t.id] = n,
        n
    }
}
,
THREE.WebGLObjects = function(e, t, n) {
    function i(t) {
        var n = u.get(t);
        t.geometry instanceof THREE.Geometry && n.updateFromObject(t);
        var i = n.index
          , o = n.attributes;
        null !== i && r(i, e.ELEMENT_ARRAY_BUFFER);
        for (var a in o)
            r(o[a], e.ARRAY_BUFFER);
        var s = n.morphAttributes;
        for (var a in s)
            for (var c = s[a], l = 0, h = c.length; l < h; l++)
                r(c[l], e.ARRAY_BUFFER);
        return n
    }
    function r(e, n) {
        var i = e instanceof THREE.InterleavedBufferAttribute ? e.data : e
          , r = t.get(i);
        void 0 === r.__webglBuffer ? o(r, i, n) : r.version !== i.version && a(r, i, n)
    }
    function o(t, n, i) {
        t.__webglBuffer = e.createBuffer(),
        e.bindBuffer(i, t.__webglBuffer);
        var r = n.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW;
        e.bufferData(i, n.array, r),
        t.version = n.version
    }
    function a(t, n, i) {
        e.bindBuffer(i, t.__webglBuffer),
        n.dynamic === !1 || n.updateRange.count === -1 ? e.bufferSubData(i, 0, n.array) : 0 === n.updateRange.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (e.bufferSubData(i, n.updateRange.offset * n.array.BYTES_PER_ELEMENT, n.array.subarray(n.updateRange.offset, n.updateRange.offset + n.updateRange.count)),
        n.updateRange.count = 0),
        t.version = n.version
    }
    function s(e) {
        return e instanceof THREE.InterleavedBufferAttribute ? t.get(e.data).__webglBuffer : t.get(e).__webglBuffer
    }
    function c(n) {
        var i = t.get(n);
        if (void 0 !== i.wireframe)
            return i.wireframe;
        var o = []
          , a = n.index
          , s = n.attributes
          , c = s.position;
        if (null !== a)
            for (var u = {}, h = a.array, d = 0, p = h.length; d < p; d += 3) {
                var f = h[d + 0]
                  , m = h[d + 1]
                  , g = h[d + 2];
                l(u, f, m) && o.push(f, m),
                l(u, m, g) && o.push(m, g),
                l(u, g, f) && o.push(g, f)
            }
        else
            for (var h = s.position.array, d = 0, p = h.length / 3 - 1; d < p; d += 3) {
                var f = d + 0
                  , m = d + 1
                  , g = d + 2;
                o.push(f, m, m, g, g, f)
            }
        var v = c.count > 65535 ? Uint32Array : Uint16Array
          , E = new THREE.BufferAttribute(new v(o),1);
        return r(E, e.ELEMENT_ARRAY_BUFFER),
        i.wireframe = E,
        E
    }
    function l(e, t, n) {
        if (t > n) {
            var i = t;
            t = n,
            n = i
        }
        var r = e[t];
        return void 0 === r ? (e[t] = [n],
        !0) : r.indexOf(n) === -1 && (r.push(n),
        !0)
    }
    var u = new THREE.WebGLGeometries(e,t,n);
    this.getAttributeBuffer = s,
    this.getWireframeAttribute = c,
    this.update = i
}
,
THREE.WebGLProgram = function() {
    function e(e) {
        switch (e) {
        case THREE.LinearEncoding:
            return ["Linear", "( value )"];
        case THREE.sRGBEncoding:
            return ["sRGB", "( value )"];
        case THREE.RGBEEncoding:
            return ["RGBE", "( value )"];
        case THREE.RGBM7Encoding:
            return ["RGBM", "( value, 7.0 )"];
        case THREE.RGBM16Encoding:
            return ["RGBM", "( value, 16.0 )"];
        case THREE.RGBDEncoding:
            return ["RGBD", "( value, 256.0 )"];
        case THREE.GammaEncoding:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        default:
            throw new Error("unsupported encoding: " + e)
        }
    }
    function t(t, n) {
        var i = e(n);
        return "vec4 " + t + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }"
    }
    function n(t, n) {
        var i = e(n);
        return "vec4 " + t + "( vec4 value ) { return LinearTo" + i[0] + i[1] + "; }"
    }
    function i(e, t) {
        var n;
        switch (t) {
        case THREE.LinearToneMapping:
            n = "Linear";
            break;
        case THREE.ReinhardToneMapping:
            n = "Reinhard";
            break;
        case THREE.Uncharted2ToneMapping:
            n = "Uncharted2";
            break;
        case THREE.CineonToneMapping:
            n = "OptimizedCineon";
            break;
        default:
            throw new Error("unsupported toneMapping: " + t)
        }
        return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function r(e, t, n) {
        e = e || {};
        var i = [e.derivatives || t.envMapCubeUV || t.bumpMap || t.normalMap || t.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (e.fragDepth || t.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", e.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (e.shaderTextureLOD || t.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""];
        return i.filter(s).join("\n")
    }
    function o(e) {
        var t = [];
        for (var n in e) {
            var i = e[n];
            i !== !1 && t.push("#define " + n + " " + i)
        }
        return t.join("\n")
    }
    function a(e, t, n) {
        for (var i = {}, r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), o = 0; o < r; o++) {
            var a = e.getActiveAttrib(t, o)
              , s = a.name;
            i[s] = e.getAttribLocation(t, s)
        }
        return i
    }
    function s(e) {
        return "" !== e
    }
    function c(e, t) {
        return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
    }
    function l(e) {
        function t(e, t) {
            var n = THREE.ShaderChunk[t];
            if (void 0 === n)
                throw new Error("Can not resolve #include <" + t + ">");
            return l(n)
        }
        var n = /#include +<([\w\d.]+)>/g;
        return e.replace(n, t)
    }
    function u(e) {
        function t(e, t, n, i) {
            for (var r = "", o = parseInt(t); o < parseInt(n); o++)
                r += i.replace(/\[ i \]/g, "[ " + o + " ]");
            return r
        }
        var n = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
        return e.replace(n, t)
    }
    var h = 0;
    return function(e, d, p, f) {
        var m = e.context
          , g = p.extensions
          , v = p.defines
          , E = p.__webglShader.vertexShader
          , y = p.__webglShader.fragmentShader
          , b = "SHADOWMAP_TYPE_BASIC";
        f.shadowMapType === THREE.PCFShadowMap ? b = "SHADOWMAP_TYPE_PCF" : f.shadowMapType === THREE.PCFSoftShadowMap && (b = "SHADOWMAP_TYPE_PCF_SOFT");
        var T = "ENVMAP_TYPE_CUBE"
          , x = "ENVMAP_MODE_REFLECTION"
          , R = "ENVMAP_BLENDING_MULTIPLY";
        if (f.envMap) {
            switch (p.envMap.mapping) {
            case THREE.CubeReflectionMapping:
            case THREE.CubeRefractionMapping:
                T = "ENVMAP_TYPE_CUBE";
                break;
            case THREE.CubeUVReflectionMapping:
            case THREE.CubeUVRefractionMapping:
                T = "ENVMAP_TYPE_CUBE_UV";
                break;
            case THREE.EquirectangularReflectionMapping:
            case THREE.EquirectangularRefractionMapping:
                T = "ENVMAP_TYPE_EQUIREC";
                break;
            case THREE.SphericalReflectionMapping:
                T = "ENVMAP_TYPE_SPHERE"
            }
            switch (p.envMap.mapping) {
            case THREE.CubeRefractionMapping:
            case THREE.EquirectangularRefractionMapping:
                x = "ENVMAP_MODE_REFRACTION"
            }
            switch (p.combine) {
            case THREE.MultiplyOperation:
                R = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case THREE.MixOperation:
                R = "ENVMAP_BLENDING_MIX";
                break;
            case THREE.AddOperation:
                R = "ENVMAP_BLENDING_ADD"
            }
        }
        var w, H, M = e.gammaFactor > 0 ? e.gammaFactor : 1, S = r(g, f, e.extensions), _ = o(v), C = m.createProgram();
        p instanceof THREE.RawShaderMaterial ? (w = [_].filter(s).join("\n"),
        H = [_].filter(s).join("\n")) : (w = ["precision " + f.precision + " float;", "precision " + f.precision + " int;", "#define SHADER_NAME " + p.__webglShader.name, _, f.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + M, "#define MAX_BONES " + f.maxBones, f.map ? "#define USE_MAP" : "", f.envMap ? "#define USE_ENVMAP" : "", f.envMap ? "#define " + x : "", f.lightMap ? "#define USE_LIGHTMAP" : "", f.aoMap ? "#define USE_AOMAP" : "", f.emissiveMap ? "#define USE_EMISSIVEMAP" : "", f.bumpMap ? "#define USE_BUMPMAP" : "", f.normalMap ? "#define USE_NORMALMAP" : "", f.displacementMap && f.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", f.specularMap ? "#define USE_SPECULARMAP" : "", f.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", f.metalnessMap ? "#define USE_METALNESSMAP" : "", f.alphaMap ? "#define USE_ALPHAMAP" : "", f.vertexColors ? "#define USE_COLOR" : "", f.flatShading ? "#define FLAT_SHADED" : "", f.skinning ? "#define USE_SKINNING" : "", f.useVertexTexture ? "#define BONE_TEXTURE" : "", f.morphTargets ? "#define USE_MORPHTARGETS" : "", f.morphNormals && f.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", f.doubleSided ? "#define DOUBLE_SIDED" : "", f.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + f.numClippingPlanes, f.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", f.shadowMapEnabled ? "#define " + b : "", f.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", f.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", f.logarithmicDepthBuffer && e.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "   attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "   attribute vec3 morphTarget0;", "   attribute vec3 morphTarget1;", "   attribute vec3 morphTarget2;", "   attribute vec3 morphTarget3;", "   #ifdef USE_MORPHNORMALS", "       attribute vec3 morphNormal0;", "       attribute vec3 morphNormal1;", "       attribute vec3 morphNormal2;", "       attribute vec3 morphNormal3;", "   #else", "       attribute vec3 morphTarget4;", "       attribute vec3 morphTarget5;", "       attribute vec3 morphTarget6;", "       attribute vec3 morphTarget7;", "   #endif", "#endif", "#ifdef USE_SKINNING", "   attribute vec4 skinIndex;", "   attribute vec4 skinWeight;", "#endif", "\n"].filter(s).join("\n"),
        H = [S, "precision " + f.precision + " float;", "precision " + f.precision + " int;", "#define SHADER_NAME " + p.__webglShader.name, _, f.alphaTest ? "#define ALPHATEST " + f.alphaTest : "", "#define GAMMA_FACTOR " + M, f.useFog && f.fog ? "#define USE_FOG" : "", f.useFog && f.fogExp ? "#define FOG_EXP2" : "", f.map ? "#define USE_MAP" : "", f.envMap ? "#define USE_ENVMAP" : "", f.envMap ? "#define " + T : "", f.envMap ? "#define " + x : "", f.envMap ? "#define " + R : "", f.lightMap ? "#define USE_LIGHTMAP" : "", f.aoMap ? "#define USE_AOMAP" : "", f.emissiveMap ? "#define USE_EMISSIVEMAP" : "", f.bumpMap ? "#define USE_BUMPMAP" : "", f.normalMap ? "#define USE_NORMALMAP" : "", f.specularMap ? "#define USE_SPECULARMAP" : "", f.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", f.metalnessMap ? "#define USE_METALNESSMAP" : "", f.alphaMap ? "#define USE_ALPHAMAP" : "", f.vertexColors ? "#define USE_COLOR" : "", f.flatShading ? "#define FLAT_SHADED" : "", f.doubleSided ? "#define DOUBLE_SIDED" : "", f.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + f.numClippingPlanes, f.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", f.shadowMapEnabled ? "#define " + b : "", f.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", f.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", f.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", f.logarithmicDepthBuffer && e.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", f.envMap && e.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", f.toneMapping !== THREE.NoToneMapping ? "#define TONE_MAPPING" : "", f.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk.tonemapping_pars_fragment : "", f.toneMapping !== THREE.NoToneMapping ? i("toneMapping", f.toneMapping) : "", f.outputEncoding || f.mapEncoding || f.envMapEncoding || f.emissiveMapEncoding ? THREE.ShaderChunk.encodings_pars_fragment : "", f.mapEncoding ? t("mapTexelToLinear", f.mapEncoding) : "", f.envMapEncoding ? t("envMapTexelToLinear", f.envMapEncoding) : "", f.emissiveMapEncoding ? t("emissiveMapTexelToLinear", f.emissiveMapEncoding) : "", f.outputEncoding ? n("linearToOutputTexel", f.outputEncoding) : "", f.depthPacking ? "#define DEPTH_PACKING " + p.depthPacking : "", "\n"].filter(s).join("\n")),
        E = l(E, f),
        E = c(E, f),
        y = l(y, f),
        y = c(y, f),
        p instanceof THREE.ShaderMaterial == !1 && (E = u(E),
        y = u(y));
        var A = w + E
          , P = H + y
          , L = THREE.WebGLShader(m, m.VERTEX_SHADER, A)
          , k = THREE.WebGLShader(m, m.FRAGMENT_SHADER, P);
        m.attachShader(C, L),
        m.attachShader(C, k),
        void 0 !== p.index0AttributeName ? m.bindAttribLocation(C, 0, p.index0AttributeName) : f.morphTargets === !0 && m.bindAttribLocation(C, 0, "position"),
        m.linkProgram(C);
        var D = m.getProgramInfoLog(C)
          , I = m.getShaderInfoLog(L)
          , O = m.getShaderInfoLog(k)
          , B = !0
          , F = !0;
        m.getProgramParameter(C, m.LINK_STATUS) === !1 ? (B = !1,
        console.error("THREE.WebGLProgram: shader error: ", m.getError(), "gl.VALIDATE_STATUS", m.getProgramParameter(C, m.VALIDATE_STATUS), "gl.getProgramInfoLog", D, I, O)) : "" !== D ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", D) : "" !== I && "" !== O || (F = !1),
        F && (this.diagnostics = {
            runnable: B,
            material: p,
            programLog: D,
            vertexShader: {
                log: I,
                prefix: w
            },
            fragmentShader: {
                log: O,
                prefix: H
            }
        }),
        m.deleteShader(L),
        m.deleteShader(k);
        var N;
        this.getUniforms = function() {
            return void 0 === N && (N = new THREE.WebGLUniforms(m,C,e)),
            N
        }
        ;
        var U;
        return this.getAttributes = function() {
            return void 0 === U && (U = a(m, C)),
            U
        }
        ,
        this.destroy = function() {
            m.deleteProgram(C),
            this.program = void 0
        }
        ,
        Object.defineProperties(this, {
            uniforms: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                    this.getUniforms()
                }
            },
            attributes: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                    this.getAttributes()
                }
            }
        }),
        this.id = h++,
        this.code = d,
        this.usedTimes = 1,
        this.program = C,
        this.vertexShader = L,
        this.fragmentShader = k,
        this
    }
}(),
THREE.WebGLPrograms = function(e, t) {
    function n(e) {
        if (t.floatVertexTextures && e && e.skeleton && e.skeleton.useVertexTexture)
            return 1024;
        var n = t.maxVertexUniforms
          , i = Math.floor((n - 20) / 4)
          , r = i;
        return void 0 !== e && e instanceof THREE.SkinnedMesh && (r = Math.min(e.skeleton.bones.length, r),
        r < e.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + e.skeleton.bones.length + ", this GPU supports just " + r + " (try OpenGL instead of ANGLE)")),
        r
    }
    function i(e, t) {
        var n;
        return e ? e instanceof THREE.Texture ? n = e.encoding : e instanceof THREE.WebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
        n = e.texture.encoding) : n = THREE.LinearEncoding,
        n === THREE.LinearEncoding && t && (n = THREE.GammaEncoding),
        n
    }
    var r = []
      , o = {
        MeshDepthMaterial: "depth",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points"
    }
      , a = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "depthPacking"];
    this.getParameters = function(r, a, s, c, l) {
        var u = o[r.type]
          , h = n(l)
          , d = e.getPrecision();
        null !== r.precision && (d = t.getMaxPrecision(r.precision),
        d !== r.precision && console.warn("THREE.WebGLProgram.getParameters:", r.precision, "not supported, using", d, "instead."));
        var p = e.getCurrentRenderTarget()
          , f = {
            shaderID: u,
            precision: d,
            supportsVertexTextures: t.vertexTextures,
            outputEncoding: i(p ? p.texture : null, e.gammaOutput),
            map: !!r.map,
            mapEncoding: i(r.map, e.gammaInput),
            envMap: !!r.envMap,
            envMapMode: r.envMap && r.envMap.mapping,
            envMapEncoding: i(r.envMap, e.gammaInput),
            envMapCubeUV: !!r.envMap && (r.envMap.mapping === THREE.CubeUVReflectionMapping || r.envMap.mapping === THREE.CubeUVRefractionMapping),
            lightMap: !!r.lightMap,
            aoMap: !!r.aoMap,
            emissiveMap: !!r.emissiveMap,
            emissiveMapEncoding: i(r.emissiveMap, e.gammaInput),
            bumpMap: !!r.bumpMap,
            normalMap: !!r.normalMap,
            displacementMap: !!r.displacementMap,
            roughnessMap: !!r.roughnessMap,
            metalnessMap: !!r.metalnessMap,
            specularMap: !!r.specularMap,
            alphaMap: !!r.alphaMap,
            combine: r.combine,
            vertexColors: r.vertexColors,
            fog: !!s,
            useFog: r.fog,
            fogExp: s instanceof THREE.FogExp2,
            flatShading: r.shading === THREE.FlatShading,
            sizeAttenuation: r.sizeAttenuation,
            logarithmicDepthBuffer: t.logarithmicDepthBuffer,
            skinning: r.skinning,
            maxBones: h,
            useVertexTexture: t.floatVertexTextures && l && l.skeleton && l.skeleton.useVertexTexture,
            morphTargets: r.morphTargets,
            morphNormals: r.morphNormals,
            maxMorphTargets: e.maxMorphTargets,
            maxMorphNormals: e.maxMorphNormals,
            numDirLights: a.directional.length,
            numPointLights: a.point.length,
            numSpotLights: a.spot.length,
            numHemiLights: a.hemi.length,
            numClippingPlanes: c,
            shadowMapEnabled: e.shadowMap.enabled && l.receiveShadow && a.shadows.length > 0,
            shadowMapType: e.shadowMap.type,
            toneMapping: e.toneMapping,
            physicallyCorrectLights: e.physicallyCorrectLights,
            premultipliedAlpha: r.premultipliedAlpha,
            alphaTest: r.alphaTest,
            doubleSided: r.side === THREE.DoubleSide,
            flipSided: r.side === THREE.BackSide,
            depthPacking: void 0 !== r.depthPacking && r.depthPacking
        };
        return f
    }
    ,
    this.getProgramCode = function(e, t) {
        var n = [];
        if (t.shaderID ? n.push(t.shaderID) : (n.push(e.fragmentShader),
        n.push(e.vertexShader)),
        void 0 !== e.defines)
            for (var i in e.defines)
                n.push(i),
                n.push(e.defines[i]);
        for (var r = 0; r < a.length; r++)
            n.push(t[a[r]]);
        return n.join()
    }
    ,
    this.acquireProgram = function(t, n, i) {
        for (var o, a = 0, s = r.length; a < s; a++) {
            var c = r[a];
            if (c.code === i) {
                o = c,
                ++o.usedTimes;
                break
            }
        }
        return void 0 === o && (o = new THREE.WebGLProgram(e,i,t,n),
        r.push(o)),
        o
    }
    ,
    this.releaseProgram = function(e) {
        if (0 === --e.usedTimes) {
            var t = r.indexOf(e);
            r[t] = r[r.length - 1],
            r.pop(),
            e.destroy()
        }
    }
    ,
    this.programs = r
}
,
THREE.WebGLProperties = function() {
    var e = {};
    this.get = function(t) {
        var n = t.uuid
          , i = e[n];
        return void 0 === i && (i = {},
        e[n] = i),
        i
    }
    ,
    this.delete = function(t) {
        delete e[t.uuid]
    }
    ,
    this.clear = function() {
        e = {}
    }
}
,
THREE.WebGLShader = function() {
    function e(e) {
        for (var t = e.split("\n"), n = 0; n < t.length; n++)
            t[n] = n + 1 + ": " + t[n];
        return t.join("\n")
    }
    return function(t, n, i) {
        var r = t.createShader(n);
        return t.shaderSource(r, i),
        t.compileShader(r),
        t.getShaderParameter(r, t.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== t.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", n === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(r), e(i)),
        r
    }
}(),
THREE.WebGLShadowMap = function(e, t, n, i) {
    function r(t, n, i, r) {
        var o = t.geometry
          , a = null
          , s = y
          , c = t.customDepthMaterial;
        if (i && (s = b,
        c = t.customDistanceMaterial),
        c)
            a = c;
        else {
            var l = !1;
            n.morphTargets && (o instanceof THREE.BufferGeometry ? l = o.morphAttributes && o.morphAttributes.position && o.morphAttributes.position.length > 0 : o instanceof THREE.Geometry && (l = o.morphTargets && o.morphTargets.length > 0));
            var u = t instanceof THREE.SkinnedMesh && n.skinning
              , h = 0;
            l && (h |= g),
            u && (h |= v),
            a = s[h]
        }
        if (e.localClippingEnabled && n.clipShadows === !0 && 0 !== n.clippingPlanes.length) {
            var d = a.uuid
              , p = n.uuid
              , f = T[d];
            void 0 === f && (f = {},
            T[d] = f);
            var m = f[p];
            void 0 === m && (m = a.clone(),
            f[p] = m),
            a = m
        }
        a.visible = n.visible,
        a.wireframe = n.wireframe;
        var E = n.side;
        return k.renderSingleSided && E == THREE.DoubleSide && (E = THREE.FrontSide),
        k.renderReverseSided && (E === THREE.FrontSide ? E = THREE.BackSide : E === THREE.BackSide && (E = THREE.FrontSide)),
        a.side = E,
        a.clipShadows = n.clipShadows,
        a.clippingPlanes = n.clippingPlanes,
        a.wireframeLinewidth = n.wireframeLinewidth,
        a.linewidth = n.linewidth,
        i && void 0 !== a.uniforms.lightPos && a.uniforms.lightPos.value.copy(r),
        a
    }
    function o(e, t, n) {
        if (e.visible !== !1) {
            if (e.layers.test(t.layers) && (e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Points) && e.castShadow && (e.frustumCulled === !1 || c.intersectsObject(e) === !0)) {
                var i = e.material;
                i.visible === !0 && (e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld),
                m.push(e))
            }
            for (var r = e.children, a = 0, s = r.length; a < s; a++)
                o(r[a], t, n)
        }
    }
    var a = e.context
      , s = e.state
      , c = new THREE.Frustum
      , l = new THREE.Matrix4
      , u = t.shadows
      , h = new THREE.Vector2
      , d = new THREE.Vector2(i.maxTextureSize,i.maxTextureSize)
      , p = new THREE.Vector3
      , f = new THREE.Vector3
      , m = []
      , g = 1
      , v = 2
      , E = (g | v) + 1
      , y = new Array(E)
      , b = new Array(E)
      , T = {}
      , x = [new THREE.Vector3(1,0,0), new THREE.Vector3(-1,0,0), new THREE.Vector3(0,0,1), new THREE.Vector3(0,0,-1), new THREE.Vector3(0,1,0), new THREE.Vector3(0,-1,0)]
      , R = [new THREE.Vector3(0,1,0), new THREE.Vector3(0,1,0), new THREE.Vector3(0,1,0), new THREE.Vector3(0,1,0), new THREE.Vector3(0,0,1), new THREE.Vector3(0,0,-1)]
      , w = [new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4]
      , H = new THREE.MeshDepthMaterial;
    H.depthPacking = THREE.RGBADepthPacking,
    H.clipping = !0;
    for (var M = THREE.ShaderLib.distanceRGBA, S = THREE.UniformsUtils.clone(M.uniforms), _ = 0; _ !== E; ++_) {
        var C = 0 !== (_ & g)
          , A = 0 !== (_ & v)
          , P = H.clone();
        P.morphTargets = C,
        P.skinning = A,
        y[_] = P;
        var L = new THREE.ShaderMaterial({
            defines: {
                USE_SHADOWMAP: ""
            },
            uniforms: S,
            vertexShader: M.vertexShader,
            fragmentShader: M.fragmentShader,
            morphTargets: C,
            skinning: A,
            clipping: !0
        });
        b[_] = L
    }
    var k = this;
    this.enabled = !1,
    this.autoUpdate = !0,
    this.needsUpdate = !1,
    this.type = THREE.PCFShadowMap,
    this.renderReverseSided = !0,
    this.renderSingleSided = !0,
    this.render = function(t, i) {
        if (k.enabled !== !1 && (k.autoUpdate !== !1 || k.needsUpdate !== !1) && 0 !== u.length) {
            s.clearColor(1, 1, 1, 1),
            s.disable(a.BLEND),
            s.setDepthTest(!0),
            s.setScissorTest(!1);
            for (var g, v, E = 0, y = u.length; E < y; E++) {
                var b = u[E]
                  , T = b.shadow;
                if (void 0 !== T) {
                    var H = T.camera;
                    if (h.copy(T.mapSize),
                    h.min(d),
                    b instanceof THREE.PointLight) {
                        g = 6,
                        v = !0;
                        var M = h.x
                          , S = h.y;
                        w[0].set(2 * M, S, M, S),
                        w[1].set(0, S, M, S),
                        w[2].set(3 * M, S, M, S),
                        w[3].set(M, S, M, S),
                        w[4].set(3 * M, 0, M, S),
                        w[5].set(M, 0, M, S),
                        h.x *= 4,
                        h.y *= 2
                    } else
                        g = 1,
                        v = !1;
                    if (null === T.map) {
                        var _ = {
                            minFilter: THREE.NearestFilter,
                            magFilter: THREE.NearestFilter,
                            format: THREE.RGBAFormat
                        };
                        T.map = new THREE.WebGLRenderTarget(h.x,h.y,_),
                        H.updateProjectionMatrix()
                    }
                    T instanceof THREE.SpotLightShadow && T.update(b);
                    var C = T.map
                      , A = T.matrix;
                    f.setFromMatrixPosition(b.matrixWorld),
                    H.position.copy(f),
                    e.setRenderTarget(C),
                    e.clear();
                    for (var P = 0; P < g; P++) {
                        if (v) {
                            p.copy(H.position),
                            p.add(x[P]),
                            H.up.copy(R[P]),
                            H.lookAt(p);
                            var L = w[P];
                            s.viewport(L)
                        } else
                            p.setFromMatrixPosition(b.target.matrixWorld),
                            H.lookAt(p);
                        H.updateMatrixWorld(),
                        H.matrixWorldInverse.getInverse(H.matrixWorld),
                        A.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                        A.multiply(H.projectionMatrix),
                        A.multiply(H.matrixWorldInverse),
                        l.multiplyMatrices(H.projectionMatrix, H.matrixWorldInverse),
                        c.setFromMatrix(l),
                        m.length = 0,
                        o(t, i, H);
                        for (var D = 0, I = m.length; D < I; D++) {
                            var O = m[D]
                              , B = n.update(O)
                              , F = O.material;
                            if (F instanceof THREE.MultiMaterial)
                                for (var N = B.groups, U = F.materials, z = 0, j = N.length; z < j; z++) {
                                    var V = N[z]
                                      , G = U[V.materialIndex];
                                    if (G.visible === !0) {
                                        var W = r(O, G, v, f);
                                        e.renderBufferDirect(H, null, B, W, O, V)
                                    }
                                }
                            else {
                                var W = r(O, F, v, f);
                                e.renderBufferDirect(H, null, B, W, O, null)
                            }
                        }
                    }
                } else
                    console.warn("THREE.WebGLShadowMap:", b, "has no shadow.")
            }
            var q = e.getClearColor()
              , X = e.getClearAlpha();
            e.setClearColor(q, X),
            k.needsUpdate = !1
        }
    }
}
,
THREE.WebGLState = function(e, t, n) {
    function i(t, n, i) {
        var r = new Uint8Array(4)
          , o = e.createTexture();
        e.bindTexture(t, o),
        e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
        e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
        for (var a = 0; a < i; a++)
            e.texImage2D(n + a, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, r);
        return o
    }
    var r = this;
    this.buffers = {
        color: new THREE.WebGLColorBuffer(e,this),
        depth: new THREE.WebGLDepthBuffer(e,this),
        stencil: new THREE.WebGLStencilBuffer(e,this)
    };
    var o = e.getParameter(e.MAX_VERTEX_ATTRIBS)
      , a = new Uint8Array(o)
      , s = new Uint8Array(o)
      , c = new Uint8Array(o)
      , l = {}
      , u = null
      , h = null
      , d = null
      , p = null
      , f = null
      , m = null
      , g = null
      , v = null
      , E = !1
      , y = null
      , b = null
      , T = null
      , x = null
      , R = null
      , w = null
      , H = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)
      , M = null
      , S = {}
      , _ = new THREE.Vector4
      , C = new THREE.Vector4
      , A = {};
    A[e.TEXTURE_2D] = i(e.TEXTURE_2D, e.TEXTURE_2D, 1),
    A[e.TEXTURE_CUBE_MAP] = i(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
    this.init = function() {
        this.clearColor(0, 0, 0, 1),
        this.clearDepth(1),
        this.clearStencil(0),
        this.enable(e.DEPTH_TEST),
        this.setDepthFunc(THREE.LessEqualDepth),
        this.setFlipSided(!1),
        this.setCullFace(THREE.CullFaceBack),
        this.enable(e.CULL_FACE),
        this.enable(e.BLEND),
        this.setBlending(THREE.NormalBlending)
    }
    ,
    this.initAttributes = function() {
        for (var e = 0, t = a.length; e < t; e++)
            a[e] = 0
    }
    ,
    this.enableAttribute = function(n) {
        if (a[n] = 1,
        0 === s[n] && (e.enableVertexAttribArray(n),
        s[n] = 1),
        0 !== c[n]) {
            var i = t.get("ANGLE_instanced_arrays");
            i.vertexAttribDivisorANGLE(n, 0),
            c[n] = 0
        }
    }
    ,
    this.enableAttributeAndDivisor = function(t, n, i) {
        a[t] = 1,
        0 === s[t] && (e.enableVertexAttribArray(t),
        s[t] = 1),
        c[t] !== n && (i.vertexAttribDivisorANGLE(t, n),
        c[t] = n)
    }
    ,
    this.disableUnusedAttributes = function() {
        for (var t = 0, n = s.length; t !== n; ++t)
            s[t] !== a[t] && (e.disableVertexAttribArray(t),
            s[t] = 0)
    }
    ,
    this.enable = function(t) {
        l[t] !== !0 && (e.enable(t),
        l[t] = !0)
    }
    ,
    this.disable = function(t) {
        l[t] !== !1 && (e.disable(t),
        l[t] = !1)
    }
    ,
    this.getCompressedTextureFormats = function() {
        if (null === u && (u = [],
        t.get("WEBGL_compressed_texture_pvrtc") || t.get("WEBGL_compressed_texture_s3tc") || t.get("WEBGL_compressed_texture_etc1")))
            for (var n = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), i = 0; i < n.length; i++)
                u.push(n[i]);
        return u
    }
    ,
    this.setBlending = function(t, i, r, o, a, s, c, l) {
        return t === THREE.NoBlending ? (this.disable(e.BLEND),
        void (h = t)) : (this.enable(e.BLEND),
        t === h && l === E || (t === THREE.AdditiveBlending ? l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
        e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : (e.blendEquation(e.FUNC_ADD),
        e.blendFunc(e.SRC_ALPHA, e.ONE)) : t === THREE.SubtractiveBlending ? l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
        e.blendFuncSeparate(e.ZERO, e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD),
        e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR)) : t === THREE.MultiplyBlending ? l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
        e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD),
        e.blendFunc(e.ZERO, e.SRC_COLOR)) : l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
        e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
        e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA)),
        h = t,
        E = l),
        void (t === THREE.CustomBlending ? (a = a || i,
        s = s || r,
        c = c || o,
        i === d && a === m || (e.blendEquationSeparate(n(i), n(a)),
        d = i,
        m = a),
        r === p && o === f && s === g && c === v || (e.blendFuncSeparate(n(r), n(o), n(s), n(c)),
        p = r,
        f = o,
        g = s,
        v = c)) : (d = null,
        p = null,
        f = null,
        m = null,
        g = null,
        v = null)))
    }
    ,
    this.setColorWrite = function(e) {
        this.buffers.color.setMask(e)
    }
    ,
    this.setDepthTest = function(e) {
        this.buffers.depth.setTest(e)
    }
    ,
    this.setDepthWrite = function(e) {
        this.buffers.depth.setMask(e)
    }
    ,
    this.setDepthFunc = function(e) {
        this.buffers.depth.setFunc(e)
    }
    ,
    this.setStencilTest = function(e) {
        this.buffers.stencil.setTest(e)
    }
    ,
    this.setStencilWrite = function(e) {
        this.buffers.stencil.setMask(e)
    }
    ,
    this.setStencilFunc = function(e, t, n) {
        this.buffers.stencil.setFunc(e, t, n)
    }
    ,
    this.setStencilOp = function(e, t, n) {
        this.buffers.stencil.setOp(e, t, n)
    }
    ,
    this.setFlipSided = function(t) {
        y !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW),
        y = t)
    }
    ,
    this.setCullFace = function(t) {
        t !== THREE.CullFaceNone ? (this.enable(e.CULL_FACE),
        t !== b && (t === THREE.CullFaceBack ? e.cullFace(e.BACK) : t === THREE.CullFaceFront ? e.cullFace(e.FRONT) : e.cullFace(e.FRONT_AND_BACK))) : this.disable(e.CULL_FACE),
        b = t
    }
    ,
    this.setLineWidth = function(t) {
        t !== T && (e.lineWidth(t),
        T = t)
    }
    ,
    this.setPolygonOffset = function(t, n, i) {
        t ? (this.enable(e.POLYGON_OFFSET_FILL),
        x === n && R === i || (e.polygonOffset(n, i),
        x = n,
        R = i)) : this.disable(e.POLYGON_OFFSET_FILL)
    }
    ,
    this.getScissorTest = function() {
        return w
    }
    ,
    this.setScissorTest = function(t) {
        w = t,
        t ? this.enable(e.SCISSOR_TEST) : this.disable(e.SCISSOR_TEST)
    }
    ,
    this.activeTexture = function(t) {
        void 0 === t && (t = e.TEXTURE0 + H - 1),
        M !== t && (e.activeTexture(t),
        M = t)
    }
    ,
    this.bindTexture = function(t, n) {
        null === M && r.activeTexture();
        var i = S[M];
        void 0 === i && (i = {
            type: void 0,
            texture: void 0
        },
        S[M] = i),
        i.type === t && i.texture === n || (e.bindTexture(t, n || A[t]),
        i.type = t,
        i.texture = n)
    }
    ,
    this.compressedTexImage2D = function() {
        try {
            e.compressedTexImage2D.apply(e, arguments)
        } catch (e) {
            console.error(e)
        }
    }
    ,
    this.texImage2D = function() {
        try {
            e.texImage2D.apply(e, arguments)
        } catch (e) {
            console.error(e)
        }
    }
    ,
    this.clearColor = function(e, t, n, i) {
        this.buffers.color.setClear(e, t, n, i)
    }
    ,
    this.clearDepth = function(e) {
        this.buffers.depth.setClear(e)
    }
    ,
    this.clearStencil = function(e) {
        this.buffers.stencil.setClear(e)
    }
    ,
    this.scissor = function(t) {
        _.equals(t) === !1 && (e.scissor(t.x, t.y, t.z, t.w),
        _.copy(t))
    }
    ,
    this.viewport = function(t) {
        C.equals(t) === !1 && (e.viewport(t.x, t.y, t.z, t.w),
        C.copy(t))
    }
    ,
    this.reset = function() {
        for (var t = 0; t < s.length; t++)
            1 === s[t] && (e.disableVertexAttribArray(t),
            s[t] = 0);
        l = {},
        u = null,
        M = null,
        S = {},
        h = null,
        y = null,
        b = null,
        this.buffers.color.reset(),
        this.buffers.depth.reset(),
        this.buffers.stencil.reset()
    }
}
,
THREE.WebGLColorBuffer = function(e, t) {
    var n = !1
      , i = new THREE.Vector4
      , r = null
      , o = new THREE.Vector4;
    this.setMask = function(t) {
        r === t || n || (e.colorMask(t, t, t, t),
        r = t)
    }
    ,
    this.setLocked = function(e) {
        n = e
    }
    ,
    this.setClear = function(t, n, r, a) {
        i.set(t, n, r, a),
        o.equals(i) === !1 && (e.clearColor(t, n, r, a),
        o.copy(i))
    }
    ,
    this.reset = function() {
        n = !1,
        r = null,
        o = new THREE.Vector4
    }
}
,
THREE.WebGLDepthBuffer = function(e, t) {
    var n = !1
      , i = null
      , r = null
      , o = null;
    this.setTest = function(n) {
        n ? t.enable(e.DEPTH_TEST) : t.disable(e.DEPTH_TEST)
    }
    ,
    this.setMask = function(t) {
        i === t || n || (e.depthMask(t),
        i = t)
    }
    ,
    this.setFunc = function(t) {
        if (r !== t) {
            if (t)
                switch (t) {
                case THREE.NeverDepth:
                    e.depthFunc(e.NEVER);
                    break;
                case THREE.AlwaysDepth:
                    e.depthFunc(e.ALWAYS);
                    break;
                case THREE.LessDepth:
                    e.depthFunc(e.LESS);
                    break;
                case THREE.LessEqualDepth:
                    e.depthFunc(e.LEQUAL);
                    break;
                case THREE.EqualDepth:
                    e.depthFunc(e.EQUAL);
                    break;
                case THREE.GreaterEqualDepth:
                    e.depthFunc(e.GEQUAL);
                    break;
                case THREE.GreaterDepth:
                    e.depthFunc(e.GREATER);
                    break;
                case THREE.NotEqualDepth:
                    e.depthFunc(e.NOTEQUAL);
                    break;
                default:
                    e.depthFunc(e.LEQUAL)
                }
            else
                e.depthFunc(e.LEQUAL);
            r = t
        }
    }
    ,
    this.setLocked = function(e) {
        n = e
    }
    ,
    this.setClear = function(t) {
        o !== t && (e.clearDepth(t),
        o = t)
    }
    ,
    this.reset = function() {
        n = !1,
        i = null,
        r = null,
        o = null
    }
}
,
THREE.WebGLStencilBuffer = function(e, t) {
    var n = !1
      , i = null
      , r = null
      , o = null
      , a = null
      , s = null
      , c = null
      , l = null
      , u = null;
    this.setTest = function(n) {
        n ? t.enable(e.STENCIL_TEST) : t.disable(e.STENCIL_TEST)
    }
    ,
    this.setMask = function(t) {
        i === t || n || (e.stencilMask(t),
        i = t)
    }
    ,
    this.setFunc = function(t, n, i) {
        r === t && o === n && a === i || (e.stencilFunc(t, n, i),
        r = t,
        o = n,
        a = i)
    }
    ,
    this.setOp = function(t, n, i) {
        s === t && c === n && l === i || (e.stencilOp(t, n, i),
        s = t,
        c = n,
        l = i)
    }
    ,
    this.setLocked = function(e) {
        n = e
    }
    ,
    this.setClear = function(t) {
        u !== t && (e.clearStencil(t),
        u = t)
    }
    ,
    this.reset = function() {
        n = !1,
        i = null,
        r = null,
        o = null,
        a = null,
        s = null,
        c = null,
        l = null,
        u = null
    }
}
,
THREE.WebGLTextures = function(e, t, n, i, r, o, a) {
    function s(e, t) {
        if (e.width > t || e.height > t) {
            var n = t / Math.max(e.width, e.height)
              , i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            i.width = Math.floor(e.width * n),
            i.height = Math.floor(e.height * n);
            var r = i.getContext("2d");
            return r.drawImage(e, 0, 0, e.width, e.height, 0, 0, i.width, i.height),
            console.warn("THREE.WebGLRenderer: image is too big (" + e.width + "x" + e.height + "). Resized to " + i.width + "x" + i.height, e),
            i
        }
        return e
    }
    function c(e) {
        return THREE.Math.isPowerOfTwo(e.width) && THREE.Math.isPowerOfTwo(e.height)
    }
    function l(e) {
        if (e instanceof HTMLImageElement || e instanceof HTMLCanvasElement) {
            var t = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            t.width = THREE.Math.nearestPowerOfTwo(e.width),
            t.height = THREE.Math.nearestPowerOfTwo(e.height);
            var n = t.getContext("2d");
            return n.drawImage(e, 0, 0, t.width, t.height),
            console.warn("THREE.WebGLRenderer: image is not power of two (" + e.width + "x" + e.height + "). Resized to " + t.width + "x" + t.height, e),
            t
        }
        return e
    }
    function u(e) {
        return e.wrapS !== THREE.ClampToEdgeWrapping || e.wrapT !== THREE.ClampToEdgeWrapping || e.minFilter !== THREE.NearestFilter && e.minFilter !== THREE.LinearFilter
    }
    function h(t) {
        return t === THREE.NearestFilter || t === THREE.NearestMipMapNearestFilter || t === THREE.NearestMipMapLinearFilter ? e.NEAREST : e.LINEAR
    }
    function d(e) {
        var t = e.target;
        t.removeEventListener("dispose", d),
        f(t),
        S.textures--
    }
    function p(e) {
        var t = e.target;
        t.removeEventListener("dispose", p),
        m(t),
        S.textures--
    }
    function f(t) {
        var n = i.get(t);
        if (t.image && n.__image__webglTextureCube)
            e.deleteTexture(n.__image__webglTextureCube);
        else {
            if (void 0 === n.__webglInit)
                return;
            e.deleteTexture(n.__webglTexture)
        }
        i.delete(t)
    }
    function m(t) {
        var n = i.get(t)
          , r = i.get(t.texture);
        if (t) {
            if (void 0 !== r.__webglTexture && e.deleteTexture(r.__webglTexture),
            t.depthTexture && t.depthTexture.dispose(),
            t instanceof THREE.WebGLRenderTargetCube)
                for (var o = 0; o < 6; o++)
                    e.deleteFramebuffer(n.__webglFramebuffer[o]),
                    n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[o]);
            else
                e.deleteFramebuffer(n.__webglFramebuffer),
                n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer);
            i.delete(t.texture),
            i.delete(t)
        }
    }
    function g(t, r) {
        var o = i.get(t);
        if (t.version > 0 && o.__version !== t.version) {
            var a = t.image;
            if (void 0 === a)
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", t);
            else {
                if (a.complete !== !1)
                    return void b(o, t, r);
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", t)
            }
        }
        n.activeTexture(e.TEXTURE0 + r),
        n.bindTexture(e.TEXTURE_2D, o.__webglTexture)
    }
    function v(t, a) {
        var l = i.get(t);
        if (6 === t.image.length)
            if (t.version > 0 && l.__version !== t.version) {
                l.__image__webglTextureCube || (t.addEventListener("dispose", d),
                l.__image__webglTextureCube = e.createTexture(),
                S.textures++),
                n.activeTexture(e.TEXTURE0 + a),
                n.bindTexture(e.TEXTURE_CUBE_MAP, l.__image__webglTextureCube),
                e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY);
                for (var u = t instanceof THREE.CompressedTexture, h = t.image[0]instanceof THREE.DataTexture, p = [], f = 0; f < 6; f++)
                    u || h ? p[f] = h ? t.image[f].image : t.image[f] : p[f] = s(t.image[f], r.maxCubemapSize);
                var m = p[0]
                  , g = c(m)
                  , v = o(t.format)
                  , E = o(t.type);
                y(e.TEXTURE_CUBE_MAP, t, g);
                for (var f = 0; f < 6; f++)
                    if (u)
                        for (var b, T = p[f].mipmaps, x = 0, R = T.length; x < R; x++)
                            b = T[x],
                            t.format !== THREE.RGBAFormat && t.format !== THREE.RGBFormat ? n.getCompressedTextureFormats().indexOf(v) > -1 ? n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + f, x, v, b.width, b.height, 0, b.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + f, x, v, b.width, b.height, 0, v, E, b.data);
                    else
                        h ? n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, v, p[f].width, p[f].height, 0, v, E, p[f].data) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, v, v, E, p[f]);
                t.generateMipmaps && g && e.generateMipmap(e.TEXTURE_CUBE_MAP),
                l.__version = t.version,
                t.onUpdate && t.onUpdate(t)
            } else
                n.activeTexture(e.TEXTURE0 + a),
                n.bindTexture(e.TEXTURE_CUBE_MAP, l.__image__webglTextureCube)
    }
    function E(t, r) {
        n.activeTexture(e.TEXTURE0 + r),
        n.bindTexture(e.TEXTURE_CUBE_MAP, i.get(t).__webglTexture)
    }
    function y(n, a, s) {
        var c;
        if (s ? (e.texParameteri(n, e.TEXTURE_WRAP_S, o(a.wrapS)),
        e.texParameteri(n, e.TEXTURE_WRAP_T, o(a.wrapT)),
        e.texParameteri(n, e.TEXTURE_MAG_FILTER, o(a.magFilter)),
        e.texParameteri(n, e.TEXTURE_MIN_FILTER, o(a.minFilter))) : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
        e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
        a.wrapS === THREE.ClampToEdgeWrapping && a.wrapT === THREE.ClampToEdgeWrapping || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", a),
        e.texParameteri(n, e.TEXTURE_MAG_FILTER, h(a.magFilter)),
        e.texParameteri(n, e.TEXTURE_MIN_FILTER, h(a.minFilter)),
        a.minFilter !== THREE.NearestFilter && a.minFilter !== THREE.LinearFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", a)),
        c = t.get("EXT_texture_filter_anisotropic")) {
            if (a.type === THREE.FloatType && null === t.get("OES_texture_float_linear"))
                return;
            if (a.type === THREE.HalfFloatType && null === t.get("OES_texture_half_float_linear"))
                return;
            (a.anisotropy > 1 || i.get(a).__currentAnisotropy) && (e.texParameterf(n, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, r.getMaxAnisotropy())),
            i.get(a).__currentAnisotropy = a.anisotropy)
        }
    }
    function b(t, i, a) {
        void 0 === t.__webglInit && (t.__webglInit = !0,
        i.addEventListener("dispose", d),
        t.__webglTexture = e.createTexture(),
        S.textures++),
        n.activeTexture(e.TEXTURE0 + a),
        n.bindTexture(e.TEXTURE_2D, t.__webglTexture),
        e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY),
        e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, i.premultiplyAlpha),
        e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment);
        var h = s(i.image, r.maxTextureSize);
        u(i) && c(h) === !1 && (h = l(h));
        var p = c(h)
          , f = o(i.format)
          , m = o(i.type);
        y(e.TEXTURE_2D, i, p);
        var g, v = i.mipmaps;
        if (i instanceof THREE.DepthTexture) {
            var E = e.DEPTH_COMPONENT;
            if (i.type === THREE.FloatType) {
                if (!_)
                    throw new Error("Float Depth Texture only supported in WebGL2.0");
                E = e.DEPTH_COMPONENT32F
            } else
                _ && (E = e.DEPTH_COMPONENT16);
            n.texImage2D(e.TEXTURE_2D, 0, E, h.width, h.height, 0, f, m, null)
        } else if (i instanceof THREE.DataTexture)
            if (v.length > 0 && p) {
                for (var b = 0, T = v.length; b < T; b++)
                    g = v[b],
                    n.texImage2D(e.TEXTURE_2D, b, f, g.width, g.height, 0, f, m, g.data);
                i.generateMipmaps = !1
            } else
                n.texImage2D(e.TEXTURE_2D, 0, f, h.width, h.height, 0, f, m, h.data);
        else if (i instanceof THREE.CompressedTexture)
            for (var b = 0, T = v.length; b < T; b++)
                g = v[b],
                i.format !== THREE.RGBAFormat && i.format !== THREE.RGBFormat ? n.getCompressedTextureFormats().indexOf(f) > -1 ? n.compressedTexImage2D(e.TEXTURE_2D, b, f, g.width, g.height, 0, g.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(e.TEXTURE_2D, b, f, g.width, g.height, 0, f, m, g.data);
        else if (v.length > 0 && p) {
            for (var b = 0, T = v.length; b < T; b++)
                g = v[b],
                n.texImage2D(e.TEXTURE_2D, b, f, f, m, g);
            i.generateMipmaps = !1
        } else
            n.texImage2D(e.TEXTURE_2D, 0, f, f, m, h);
        i.generateMipmaps && p && e.generateMipmap(e.TEXTURE_2D),
        t.__version = i.version,
        i.onUpdate && i.onUpdate(i)
    }
    function T(t, r, a, s) {
        var c = o(r.texture.format)
          , l = o(r.texture.type);
        n.texImage2D(s, 0, c, r.width, r.height, 0, c, l, null),
        e.bindFramebuffer(e.FRAMEBUFFER, t),
        e.framebufferTexture2D(e.FRAMEBUFFER, a, s, i.get(r.texture).__webglTexture, 0),
        e.bindFramebuffer(e.FRAMEBUFFER, null)
    }
    function x(t, n) {
        e.bindRenderbuffer(e.RENDERBUFFER, t),
        n.depthBuffer && !n.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, n.width, n.height),
        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t)) : n.depthBuffer && n.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_STENCIL, n.width, n.height),
        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.RENDERBUFFER, t)) : e.renderbufferStorage(e.RENDERBUFFER, e.RGBA4, n.width, n.height),
        e.bindRenderbuffer(e.RENDERBUFFER, null)
    }
    function R(t, n) {
        var r = n instanceof THREE.WebGLRenderTargetCube;
        if (r)
            throw new Error("Depth Texture with cube render targets is not supported!");
        if (e.bindFramebuffer(e.FRAMEBUFFER, t),
        !(n.depthTexture instanceof THREE.DepthTexture))
            throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        i.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
        n.depthTexture.image.height = n.height,
        n.depthTexture.needsUpdate = !0),
        g(n.depthTexture, 0);
        var o = i.get(n.depthTexture).__webglTexture;
        e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, o, 0)
    }
    function w(t) {
        var n = i.get(t)
          , r = t instanceof THREE.WebGLRenderTargetCube;
        if (t.depthTexture) {
            if (r)
                throw new Error("target.depthTexture not supported in Cube render targets");
            R(n.__webglFramebuffer, t)
        } else if (r) {
            n.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
                e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer[o]),
                n.__webglDepthbuffer[o] = e.createRenderbuffer(),
                x(n.__webglDepthbuffer[o], t)
        } else
            e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer),
            n.__webglDepthbuffer = e.createRenderbuffer(),
            x(n.__webglDepthbuffer, t);
        e.bindFramebuffer(e.FRAMEBUFFER, null)
    }
    function H(t) {
        var r = i.get(t)
          , o = i.get(t.texture);
        t.addEventListener("dispose", p),
        o.__webglTexture = e.createTexture(),
        S.textures++;
        var a = t instanceof THREE.WebGLRenderTargetCube
          , s = c(t);
        if (a) {
            r.__webglFramebuffer = [];
            for (var l = 0; l < 6; l++)
                r.__webglFramebuffer[l] = e.createFramebuffer()
        } else
            r.__webglFramebuffer = e.createFramebuffer();
        if (a) {
            n.bindTexture(e.TEXTURE_CUBE_MAP, o.__webglTexture),
            y(e.TEXTURE_CUBE_MAP, t.texture, s);
            for (var l = 0; l < 6; l++)
                T(r.__webglFramebuffer[l], t, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + l);
            t.texture.generateMipmaps && s && e.generateMipmap(e.TEXTURE_CUBE_MAP),
            n.bindTexture(e.TEXTURE_CUBE_MAP, null)
        } else
            n.bindTexture(e.TEXTURE_2D, o.__webglTexture),
            y(e.TEXTURE_2D, t.texture, s),
            T(r.__webglFramebuffer, t, e.COLOR_ATTACHMENT0, e.TEXTURE_2D),
            t.texture.generateMipmaps && s && e.generateMipmap(e.TEXTURE_2D),
            n.bindTexture(e.TEXTURE_2D, null);
        t.depthBuffer && w(t)
    }
    function M(t) {
        var r = t.texture;
        if (r.generateMipmaps && c(t) && r.minFilter !== THREE.NearestFilter && r.minFilter !== THREE.LinearFilter) {
            var o = t instanceof THREE.WebGLRenderTargetCube ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D
              , a = i.get(r).__webglTexture;
            n.bindTexture(o, a),
            e.generateMipmap(o),
            n.bindTexture(o, null)
        }
    }
    var S = a.memory
      , _ = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext;
    this.setTexture2D = g,
    this.setTextureCube = v,
    this.setTextureCubeDynamic = E,
    this.setupRenderTarget = H,
    this.updateRenderTargetMipmap = M
}
,
THREE.WebGLUniforms = function() {
    var e = new THREE.Texture
      , t = new THREE.CubeTexture
      , n = function() {
        this.seq = [],
        this.map = {}
    }
      , i = []
      , r = []
      , o = function(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0)
            return e;
        var o = t * n
          , a = i[o];
        if (void 0 === a && (a = new Float32Array(o),
        i[o] = a),
        0 !== t) {
            r.toArray(a, 0);
            for (var s = 1, c = 0; s !== t; ++s)
                c += n,
                e[s].toArray(a, c)
        }
        return a
    }
      , a = function(e, t) {
        var n = r[t];
        void 0 === n && (n = new Int32Array(t),
        r[t] = n);
        for (var i = 0; i !== t; ++i)
            n[i] = e.allocTextureUnit();
        return n
    }
      , s = function(e, t) {
        e.uniform1f(this.addr, t)
    }
      , c = function(e, t) {
        e.uniform1i(this.addr, t)
    }
      , l = function(e, t) {
        void 0 === t.x ? e.uniform2fv(this.addr, t) : e.uniform2f(this.addr, t.x, t.y)
    }
      , u = function(e, t) {
        void 0 !== t.x ? e.uniform3f(this.addr, t.x, t.y, t.z) : void 0 !== t.r ? e.uniform3f(this.addr, t.r, t.g, t.b) : e.uniform3fv(this.addr, t)
    }
      , h = function(e, t) {
        void 0 === t.x ? e.uniform4fv(this.addr, t) : e.uniform4f(this.addr, t.x, t.y, t.z, t.w)
    }
      , d = function(e, t) {
        e.uniformMatrix2fv(this.addr, !1, t.elements || t)
    }
      , p = function(e, t) {
        e.uniformMatrix3fv(this.addr, !1, t.elements || t)
    }
      , f = function(e, t) {
        e.uniformMatrix4fv(this.addr, !1, t.elements || t)
    }
      , m = function(t, n, i) {
        var r = i.allocTextureUnit();
        t.uniform1i(this.addr, r),
        i.setTexture2D(n || e, r)
    }
      , g = function(e, n, i) {
        var r = i.allocTextureUnit();
        e.uniform1i(this.addr, r),
        i.setTextureCube(n || t, r)
    }
      , v = function(e, t) {
        e.uniform2iv(this.addr, t)
    }
      , E = function(e, t) {
        e.uniform3iv(this.addr, t)
    }
      , y = function(e, t) {
        e.uniform4iv(this.addr, t)
    }
      , b = function(e) {
        switch (e) {
        case 5126:
            return s;
        case 35664:
            return l;
        case 35665:
            return u;
        case 35666:
            return h;
        case 35674:
            return d;
        case 35675:
            return p;
        case 35676:
            return f;
        case 35678:
            return m;
        case 35680:
            return g;
        case 5124:
        case 35670:
            return c;
        case 35667:
        case 35671:
            return v;
        case 35668:
        case 35672:
            return E;
        case 35669:
        case 35673:
            return y
        }
    }
      , T = function(e, t) {
        e.uniform1fv(this.addr, t)
    }
      , x = function(e, t) {
        e.uniform1iv(this.addr, t)
    }
      , R = function(e, t) {
        e.uniform2fv(this.addr, o(t, this.size, 2))
    }
      , w = function(e, t) {
        e.uniform3fv(this.addr, o(t, this.size, 3))
    }
      , H = function(e, t) {
        e.uniform4fv(this.addr, o(t, this.size, 4))
    }
      , M = function(e, t) {
        e.uniformMatrix2fv(this.addr, !1, o(t, this.size, 4))
    }
      , S = function(e, t) {
        e.uniformMatrix3fv(this.addr, !1, o(t, this.size, 9))
    }
      , _ = function(e, t) {
        e.uniformMatrix4fv(this.addr, !1, o(t, this.size, 16))
    }
      , C = function(t, n, i) {
        var r = n.length
          , o = a(i, r);
        t.uniform1iv(this.addr, o);
        for (var s = 0; s !== r; ++s)
            i.setTexture2D(n[s] || e, o[s])
    }
      , A = function(e, n, i) {
        var r = n.length
          , o = a(i, r);
        e.uniform1iv(this.addr, o);
        for (var s = 0; s !== r; ++s)
            i.setTextureCube(n[s] || t, o[s])
    }
      , P = function(e) {
        switch (e) {
        case 5126:
            return T;
        case 35664:
            return R;
        case 35665:
            return w;
        case 35666:
            return H;
        case 35674:
            return M;
        case 35675:
            return S;
        case 35676:
            return _;
        case 35678:
            return C;
        case 35680:
            return A;
        case 5124:
        case 35670:
            return x;
        case 35667:
        case 35671:
            return v;
        case 35668:
        case 35672:
            return E;
        case 35669:
        case 35673:
            return y
        }
    }
      , L = function(e, t, n) {
        this.id = e,
        this.addr = n,
        this.setValue = b(t.type)
    }
      , k = function(e, t, n) {
        this.id = e,
        this.addr = n,
        this.size = t.size,
        this.setValue = P(t.type)
    }
      , D = function(e) {
        this.id = e,
        n.call(this)
    };
    D.prototype.setValue = function(e, t) {
        for (var n = this.seq, i = 0, r = n.length; i !== r; ++i) {
            var o = n[i];
            o.setValue(e, t[o.id])
        }
    }
    ;
    var I = /([\w\d_]+)(\])?(\[|\.)?/g
      , O = function(e, t) {
        e.seq.push(t),
        e.map[t.id] = t
    }
      , B = function(e, t, n) {
        var i = e.name
          , r = i.length;
        for (I.lastIndex = 0; ; ) {
            var o = I.exec(i)
              , a = I.lastIndex
              , s = o[1]
              , c = "]" === o[2]
              , l = o[3];
            if (c && (s = 0 | s),
            void 0 === l || "[" === l && a + 2 === r) {
                O(n, void 0 === l ? new L(s,e,t) : new k(s,e,t));
                break
            }
            var u = n.map
              , h = u[s];
            void 0 === h && (h = new D(s),
            O(n, h)),
            n = h
        }
    }
      , F = function(e, t, i) {
        n.call(this),
        this.renderer = i;
        for (var r = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), o = 0; o !== r; ++o) {
            var a = e.getActiveUniform(t, o)
              , s = a.name
              , c = e.getUniformLocation(t, s);
            B(a, c, this)
        }
    };
    return F.prototype.setValue = function(e, t, n) {
        var i = this.map[t];
        void 0 !== i && i.setValue(e, n, this.renderer)
    }
    ,
    F.prototype.set = function(e, t, n) {
        var i = this.map[n];
        void 0 !== i && i.setValue(e, t[n], this.renderer)
    }
    ,
    F.prototype.setOptional = function(e, t, n) {
        var i = t[n];
        void 0 !== i && this.setValue(e, n, i)
    }
    ,
    F.upload = function(e, t, n, i) {
        for (var r = 0, o = t.length; r !== o; ++r) {
            var a = t[r]
              , s = n[a.id];
            s.needsUpdate !== !1 && a.setValue(e, s.value, i)
        }
    }
    ,
    F.seqWithValue = function(e, t) {
        for (var n = [], i = 0, r = e.length; i !== r; ++i) {
            var o = e[i];
            o.id in t && n.push(o)
        }
        return n
    }
    ,
    F.splitDynamic = function(e, t) {
        for (var n = null, i = e.length, r = 0, o = 0; o !== i; ++o) {
            var a = e[o]
              , s = t[a.id];
            s && s.dynamic === !0 ? (null === n && (n = []),
            n.push(a)) : (r < o && (e[r] = a),
            ++r)
        }
        return r < i && (e.length = r),
        n
    }
    ,
    F.evalDynamic = function(e, t, n, i) {
        for (var r = 0, o = e.length; r !== o; ++r) {
            var a = t[e[r].id]
              , s = a.onUpdateCallback;
            void 0 !== s && s.call(a, n, i)
        }
    }
    ,
    F
}(),
THREE.LensFlarePlugin = function(e, t) {
    function n() {
        var e = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
          , t = new Uint16Array([0, 1, 2, 0, 2, 3]);
        r = d.createBuffer(),
        o = d.createBuffer(),
        d.bindBuffer(d.ARRAY_BUFFER, r),
        d.bufferData(d.ARRAY_BUFFER, e, d.STATIC_DRAW),
        d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, o),
        d.bufferData(d.ELEMENT_ARRAY_BUFFER, t, d.STATIC_DRAW),
        u = d.createTexture(),
        h = d.createTexture(),
        p.bindTexture(d.TEXTURE_2D, u),
        d.texImage2D(d.TEXTURE_2D, 0, d.RGB, 16, 16, 0, d.RGB, d.UNSIGNED_BYTE, null),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_S, d.CLAMP_TO_EDGE),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_T, d.CLAMP_TO_EDGE),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST),
        p.bindTexture(d.TEXTURE_2D, h),
        d.texImage2D(d.TEXTURE_2D, 0, d.RGBA, 16, 16, 0, d.RGBA, d.UNSIGNED_BYTE, null),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_S, d.CLAMP_TO_EDGE),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_T, d.CLAMP_TO_EDGE),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST),
        d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST),
        a = {
            vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
        },
        s = i(a),
        c = {
            vertex: d.getAttribLocation(s, "position"),
            uv: d.getAttribLocation(s, "uv")
        },
        l = {
            renderType: d.getUniformLocation(s, "renderType"),
            map: d.getUniformLocation(s, "map"),
            occlusionMap: d.getUniformLocation(s, "occlusionMap"),
            opacity: d.getUniformLocation(s, "opacity"),
            color: d.getUniformLocation(s, "color"),
            scale: d.getUniformLocation(s, "scale"),
            rotation: d.getUniformLocation(s, "rotation"),
            screenPosition: d.getUniformLocation(s, "screenPosition")
        }
    }
    function i(t) {
        var n = d.createProgram()
          , i = d.createShader(d.FRAGMENT_SHADER)
          , r = d.createShader(d.VERTEX_SHADER)
          , o = "precision " + e.getPrecision() + " float;\n";
        return d.shaderSource(i, o + t.fragmentShader),
        d.shaderSource(r, o + t.vertexShader),
        d.compileShader(i),
        d.compileShader(r),
        d.attachShader(n, i),
        d.attachShader(n, r),
        d.linkProgram(n),
        n
    }
    var r, o, a, s, c, l, u, h, d = e.context, p = e.state;
    this.render = function(i, a, f) {
        if (0 !== t.length) {
            var m = new THREE.Vector3
              , g = f.w / f.z
              , v = .5 * f.z
              , E = .5 * f.w
              , y = 16 / f.w
              , b = new THREE.Vector2(y * g,y)
              , T = new THREE.Vector3(1,1,0)
              , x = new THREE.Vector2(1,1)
              , R = new THREE.Box2;
            R.min.set(0, 0),
            R.max.set(f.z - 16, f.w - 16),
            void 0 === s && n(),
            d.useProgram(s),
            p.initAttributes(),
            p.enableAttribute(c.vertex),
            p.enableAttribute(c.uv),
            p.disableUnusedAttributes(),
            d.uniform1i(l.occlusionMap, 0),
            d.uniform1i(l.map, 1),
            d.bindBuffer(d.ARRAY_BUFFER, r),
            d.vertexAttribPointer(c.vertex, 2, d.FLOAT, !1, 16, 0),
            d.vertexAttribPointer(c.uv, 2, d.FLOAT, !1, 16, 8),
            d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, o),
            p.disable(d.CULL_FACE),
            p.setDepthWrite(!1);
            for (var w = 0, H = t.length; w < H; w++) {
                y = 16 / f.w,
                b.set(y * g, y);
                var M = t[w];
                if (m.set(M.matrixWorld.elements[12], M.matrixWorld.elements[13], M.matrixWorld.elements[14]),
                m.applyMatrix4(a.matrixWorldInverse),
                m.applyProjection(a.projectionMatrix),
                T.copy(m),
                x.x = f.x + T.x * v + v - 8,
                x.y = f.y + T.y * E + E - 8,
                R.containsPoint(x) === !0) {
                    p.activeTexture(d.TEXTURE0),
                    p.bindTexture(d.TEXTURE_2D, null),
                    p.activeTexture(d.TEXTURE1),
                    p.bindTexture(d.TEXTURE_2D, u),
                    d.copyTexImage2D(d.TEXTURE_2D, 0, d.RGB, x.x, x.y, 16, 16, 0),
                    d.uniform1i(l.renderType, 0),
                    d.uniform2f(l.scale, b.x, b.y),
                    d.uniform3f(l.screenPosition, T.x, T.y, T.z),
                    p.disable(d.BLEND),
                    p.enable(d.DEPTH_TEST),
                    d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0),
                    p.activeTexture(d.TEXTURE0),
                    p.bindTexture(d.TEXTURE_2D, h),
                    d.copyTexImage2D(d.TEXTURE_2D, 0, d.RGBA, x.x, x.y, 16, 16, 0),
                    d.uniform1i(l.renderType, 1),
                    p.disable(d.DEPTH_TEST),
                    p.activeTexture(d.TEXTURE1),
                    p.bindTexture(d.TEXTURE_2D, u),
                    d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0),
                    M.positionScreen.copy(T),
                    M.customUpdateCallback ? M.customUpdateCallback(M) : M.updateLensFlares(),
                    d.uniform1i(l.renderType, 2),
                    p.enable(d.BLEND);
                    for (var S = 0, _ = M.lensFlares.length; S < _; S++) {
                        var C = M.lensFlares[S];
                        C.opacity > .001 && C.scale > .001 && (T.x = C.x,
                        T.y = C.y,
                        T.z = C.z,
                        y = C.size * C.scale / f.w,
                        b.x = y * g,
                        b.y = y,
                        d.uniform3f(l.screenPosition, T.x, T.y, T.z),
                        d.uniform2f(l.scale, b.x, b.y),
                        d.uniform1f(l.rotation, C.rotation),
                        d.uniform1f(l.opacity, C.opacity),
                        d.uniform3f(l.color, C.color.r, C.color.g, C.color.b),
                        p.setBlending(C.blending, C.blendEquation, C.blendSrc, C.blendDst),
                        e.setTexture2D(C.texture, 1),
                        d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0))
                    }
                }
            }
            p.enable(d.CULL_FACE),
            p.enable(d.DEPTH_TEST),
            p.setDepthWrite(!0),
            e.resetGLState()
        }
    }
}
,
THREE.SpritePlugin = function(e, t) {
    function n() {
        var e = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
          , t = new Uint16Array([0, 1, 2, 0, 2, 3]);
        o = h.createBuffer(),
        a = h.createBuffer(),
        h.bindBuffer(h.ARRAY_BUFFER, o),
        h.bufferData(h.ARRAY_BUFFER, e, h.STATIC_DRAW),
        h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, a),
        h.bufferData(h.ELEMENT_ARRAY_BUFFER, t, h.STATIC_DRAW),
        s = i(),
        c = {
            position: h.getAttribLocation(s, "position"),
            uv: h.getAttribLocation(s, "uv")
        },
        l = {
            uvOffset: h.getUniformLocation(s, "uvOffset"),
            uvScale: h.getUniformLocation(s, "uvScale"),
            rotation: h.getUniformLocation(s, "rotation"),
            scale: h.getUniformLocation(s, "scale"),
            color: h.getUniformLocation(s, "color"),
            map: h.getUniformLocation(s, "map"),
            opacity: h.getUniformLocation(s, "opacity"),
            modelViewMatrix: h.getUniformLocation(s, "modelViewMatrix"),
            projectionMatrix: h.getUniformLocation(s, "projectionMatrix"),
            fogType: h.getUniformLocation(s, "fogType"),
            fogDensity: h.getUniformLocation(s, "fogDensity"),
            fogNear: h.getUniformLocation(s, "fogNear"),
            fogFar: h.getUniformLocation(s, "fogFar"),
            fogColor: h.getUniformLocation(s, "fogColor"),
            alphaTest: h.getUniformLocation(s, "alphaTest")
        };
        var n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
        n.width = 8,
        n.height = 8;
        var r = n.getContext("2d");
        r.fillStyle = "white",
        r.fillRect(0, 0, 8, 8),
        u = new THREE.Texture(n),
        u.needsUpdate = !0
    }
    function i() {
        var t = h.createProgram()
          , n = h.createShader(h.VERTEX_SHADER)
          , i = h.createShader(h.FRAGMENT_SHADER);
        return h.shaderSource(n, ["precision " + e.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
        h.shaderSource(i, ["precision " + e.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
        h.compileShader(n),
        h.compileShader(i),
        h.attachShader(t, n),
        h.attachShader(t, i),
        h.linkProgram(t),
        t
    }
    function r(e, t) {
        return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : t.id - e.id
    }
    var o, a, s, c, l, u, h = e.context, d = e.state, p = new THREE.Vector3, f = new THREE.Quaternion, m = new THREE.Vector3;
    this.render = function(i, g) {
        if (0 !== t.length) {
            void 0 === s && n(),
            h.useProgram(s),
            d.initAttributes(),
            d.enableAttribute(c.position),
            d.enableAttribute(c.uv),
            d.disableUnusedAttributes(),
            d.disable(h.CULL_FACE),
            d.enable(h.BLEND),
            h.bindBuffer(h.ARRAY_BUFFER, o),
            h.vertexAttribPointer(c.position, 2, h.FLOAT, !1, 16, 0),
            h.vertexAttribPointer(c.uv, 2, h.FLOAT, !1, 16, 8),
            h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, a),
            h.uniformMatrix4fv(l.projectionMatrix, !1, g.projectionMatrix.elements),
            d.activeTexture(h.TEXTURE0),
            h.uniform1i(l.map, 0);
            var v = 0
              , E = 0
              , y = i.fog;
            y ? (h.uniform3f(l.fogColor, y.color.r, y.color.g, y.color.b),
            y instanceof THREE.Fog ? (h.uniform1f(l.fogNear, y.near),
            h.uniform1f(l.fogFar, y.far),
            h.uniform1i(l.fogType, 1),
            v = 1,
            E = 1) : y instanceof THREE.FogExp2 && (h.uniform1f(l.fogDensity, y.density),
            h.uniform1i(l.fogType, 2),
            v = 2,
            E = 2)) : (h.uniform1i(l.fogType, 0),
            v = 0,
            E = 0);
            for (var b = 0, T = t.length; b < T; b++) {
                var x = t[b];
                x.modelViewMatrix.multiplyMatrices(g.matrixWorldInverse, x.matrixWorld),
                x.z = -x.modelViewMatrix.elements[14]
            }
            t.sort(r);
            for (var R = [], b = 0, T = t.length; b < T; b++) {
                var x = t[b]
                  , w = x.material;
                if (w.visible !== !1) {
                    h.uniform1f(l.alphaTest, w.alphaTest),
                    h.uniformMatrix4fv(l.modelViewMatrix, !1, x.modelViewMatrix.elements),
                    x.matrixWorld.decompose(p, f, m),
                    R[0] = m.x,
                    R[1] = m.y;
                    var H = 0;
                    i.fog && w.fog && (H = E),
                    v !== H && (h.uniform1i(l.fogType, H),
                    v = H),
                    null !== w.map ? (h.uniform2f(l.uvOffset, w.map.offset.x, w.map.offset.y),
                    h.uniform2f(l.uvScale, w.map.repeat.x, w.map.repeat.y)) : (h.uniform2f(l.uvOffset, 0, 0),
                    h.uniform2f(l.uvScale, 1, 1)),
                    h.uniform1f(l.opacity, w.opacity),
                    h.uniform3f(l.color, w.color.r, w.color.g, w.color.b),
                    h.uniform1f(l.rotation, w.rotation),
                    h.uniform2fv(l.scale, R),
                    d.setBlending(w.blending, w.blendEquation, w.blendSrc, w.blendDst),
                    d.setDepthTest(w.depthTest),
                    d.setDepthWrite(w.depthWrite),
                    w.map ? e.setTexture2D(w.map, 0) : e.setTexture2D(u, 0),
                    h.drawElements(h.TRIANGLES, 6, h.UNSIGNED_SHORT, 0)
                }
            }
            d.enable(h.CULL_FACE),
            e.resetGLState()
        }
    }
}
,
Object.assign(THREE, {
    Face4: function(e, t, n, i, r, o, a) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
        new THREE.Face3(e,t,n,r,o,a)
    },
    LineStrip: 0,
    LinePieces: 1,
    MeshFaceMaterial: THREE.MultiMaterial,
    PointCloud: function(e, t) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
        new THREE.Points(e,t)
    },
    Particle: THREE.Sprite,
    ParticleSystem: function(e, t) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
        new THREE.Points(e,t)
    },
    PointCloudMaterial: function(e) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
        new THREE.PointsMaterial(e)
    },
    ParticleBasicMaterial: function(e) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
        new THREE.PointsMaterial(e)
    },
    ParticleSystemMaterial: function(e) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
        new THREE.PointsMaterial(e)
    },
    Vertex: function(e, t, n) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
        new THREE.Vector3(e,t,n)
    }
}),
Object.assign(THREE.Box2.prototype, {
    empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
        this.isEmpty()
    },
    isIntersectionBox: function(e) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
        this.intersectsBox(e)
    }
}),
Object.assign(THREE.Box3.prototype, {
    empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
        this.isEmpty()
    },
    isIntersectionBox: function(e) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
        this.intersectsBox(e)
    },
    isIntersectionSphere: function(e) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
        this.intersectsSphere(e)
    }
}),
Object.assign(THREE.Matrix3.prototype, {
    multiplyVector3: function(e) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
        e.applyMatrix3(this)
    },
    multiplyVector3Array: function(e) {
        return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(e)
    }
}),
Object.assign(THREE.Matrix4.prototype, {
    extractPosition: function(e) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
        this.copyPosition(e)
    },
    setRotationFromQuaternion: function(e) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
        this.makeRotationFromQuaternion(e)
    },
    multiplyVector3: function(e) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),
        e.applyProjection(this)
    },
    multiplyVector4: function(e) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        e.applyMatrix4(this)
    },
    multiplyVector3Array: function(e) {
        return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(e)
    },
    rotateAxis: function(e) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
        e.transformDirection(this)
    },
    crossVector: function(e) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        e.applyMatrix4(this)
    },
    translate: function(e) {
        console.error("THREE.Matrix4: .translate() has been removed.")
    },
    rotateX: function(e) {
        console.error("THREE.Matrix4: .rotateX() has been removed.")
    },
    rotateY: function(e) {
        console.error("THREE.Matrix4: .rotateY() has been removed.")
    },
    rotateZ: function(e) {
        console.error("THREE.Matrix4: .rotateZ() has been removed.")
    },
    rotateByAxis: function(e, t) {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
    }
}),
Object.assign(THREE.Plane.prototype, {
    isIntersectionLine: function(e) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(e)
    }
}),
Object.assign(THREE.Quaternion.prototype, {
    multiplyVector3: function(e) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        e.applyQuaternion(this)
    }
}),
Object.assign(THREE.Ray.prototype, {
    isIntersectionBox: function(e) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
        this.intersectsBox(e)
    },
    isIntersectionPlane: function(e) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
        this.intersectsPlane(e)
    },
    isIntersectionSphere: function(e) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
        this.intersectsSphere(e)
    }
}),
Object.assign(THREE.Vector3.prototype, {
    setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
    },
    setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
    },
    getPositionFromMatrix: function(e) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
        this.setFromMatrixPosition(e)
    },
    getScaleFromMatrix: function(e) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
        this.setFromMatrixScale(e)
    },
    getColumnFromMatrix: function(e, t) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
        this.setFromMatrixColumn(t, e)
    }
}),
Object.assign(THREE.Object3D.prototype, {
    getChildByName: function(e) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
        this.getObjectByName(e)
    },
    renderDepth: function(e) {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
    },
    translate: function(e, t) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
        this.translateOnAxis(t, e)
    }
}),
Object.defineProperties(THREE.Object3D.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
            this.rotation.order
        },
        set: function(e) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
            this.rotation.order = e
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        set: function(e) {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        }
    }
}),
Object.defineProperties(THREE.LOD.prototype, {
    objects: {
        get: function() {
            return console.warn("THREE.LOD: .objects has been renamed to .levels."),
            this.levels
        }
    }
}),
THREE.PerspectiveCamera.prototype.setLens = function(e, t) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
    void 0 !== t && (this.filmGauge = t),
    this.setFocalLength(e)
}
,
Object.defineProperties(THREE.Light.prototype, {
    onlyShadow: {
        set: function(e) {
            console.warn("THREE.Light: .onlyShadow has been removed.")
        }
    },
    shadowCameraFov: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
            this.shadow.camera.fov = e
        }
    },
    shadowCameraLeft: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
            this.shadow.camera.left = e
        }
    },
    shadowCameraRight: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
            this.shadow.camera.right = e
        }
    },
    shadowCameraTop: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
            this.shadow.camera.top = e
        }
    },
    shadowCameraBottom: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
            this.shadow.camera.bottom = e
        }
    },
    shadowCameraNear: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
            this.shadow.camera.near = e
        }
    },
    shadowCameraFar: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
            this.shadow.camera.far = e
        }
    },
    shadowCameraVisible: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
        }
    },
    shadowBias: {
        set: function(e) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
            this.shadow.bias = e
        }
    },
    shadowDarkness: {
        set: function(e) {
            console.warn("THREE.Light: .shadowDarkness has been removed.")
        }
    },
    shadowMapWidth: {
        set: function(e) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
            this.shadow.mapSize.width = e
        }
    },
    shadowMapHeight: {
        set: function(e) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
            this.shadow.mapSize.height = e
        }
    }
}),
Object.defineProperties(THREE.BufferAttribute.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),
            this.array.length
        }
    }
}),
Object.assign(THREE.BufferGeometry.prototype, {
    addIndex: function(e) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
        this.setIndex(e)
    },
    addDrawCall: function(e, t, n) {
        void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
        console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
        this.addGroup(e, t)
    },
    clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
        this.clearGroups()
    },
    computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
    },
    computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
    }
}),
Object.defineProperties(THREE.BufferGeometry.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
            this.groups
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
            this.groups
        }
    }
}),
Object.defineProperties(THREE.Material.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.")
        },
        set: function(e) {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.")
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE." + this.type + ": .wrapRGB has been removed."),
            new THREE.Color
        }
    }
}),
Object.defineProperties(THREE.MeshPhongMaterial.prototype, {
    metal: {
        get: function() {
            return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
            !1
        },
        set: function(e) {
            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
        }
    }
}),
Object.defineProperties(THREE.ShaderMaterial.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
            this.extensions.derivatives
        },
        set: function(e) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
            this.extensions.derivatives = e
        }
    }
}),
THREE.EventDispatcher.prototype = Object.assign(Object.create({
    constructor: THREE.EventDispatcher,
    apply: function(e) {
        console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."),
        Object.assign(e, this)
    }
}), THREE.EventDispatcher.prototype),
Object.assign(THREE.WebGLRenderer.prototype, {
    supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
        this.extensions.get("OES_texture_float")
    },
    supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
        this.extensions.get("OES_texture_half_float")
    },
    supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
        this.extensions.get("OES_standard_derivatives")
    },
    supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
        this.extensions.get("WEBGL_compressed_texture_s3tc")
    },
    supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
        this.extensions.get("WEBGL_compressed_texture_pvrtc")
    },
    supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
        this.extensions.get("EXT_blend_minmax")
    },
    supportsVertexTextures: function() {
        return this.capabilities.vertexTextures
    },
    supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
        this.extensions.get("ANGLE_instanced_arrays")
    },
    enableScissorTest: function(e) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
        this.setScissorTest(e)
    },
    initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
    },
    addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
    },
    addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
    },
    updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
    }
}),
Object.defineProperties(THREE.WebGLRenderer.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
            this.shadowMap.enabled = e
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
            this.shadowMap.type = e
        }
    },
    shadowMapCullFace: {
        get: function() {
            return this.shadowMap.cullFace
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),
            this.shadowMap.cullFace = e
        }
    }
}),
Object.defineProperties(THREE.WebGLShadowMap.prototype, {
    cullFace: {
        get: function() {
            return this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack
        },
        set: function(e) {
            var t = e !== THREE.CullFaceBack;
            console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + t + "."),
            this.renderReverseSided = t
        }
    }
}),
Object.defineProperties(THREE.WebGLRenderTarget.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
            this.texture.wrapS
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
            this.texture.wrapS = e
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
            this.texture.wrapT
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
            this.texture.wrapT = e
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
            this.texture.magFilter
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
            this.texture.magFilter = e
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
            this.texture.minFilter
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
            this.texture.minFilter = e
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
            this.texture.anisotropy
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
            this.texture.anisotropy = e
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
            this.texture.offset
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
            this.texture.offset = e
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
            this.texture.repeat
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
            this.texture.repeat = e
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
            this.texture.format
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
            this.texture.format = e
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
            this.texture.type
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
            this.texture.type = e
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
            this.texture.generateMipmaps
        },
        set: function(e) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
            this.texture.generateMipmaps = e
        }
    }
}),
Object.assign(THREE.Audio.prototype, {
    load: function(e) {
        console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");
        var t = this
          , n = new THREE.AudioLoader;
        return n.load(e, function(e) {
            t.setBuffer(e)
        }),
        this
    }
}),
Object.assign(THREE.AudioAnalyser.prototype, {
    getData: function(e) {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
}),
THREE.GeometryUtils = {
    merge: function(e, t, n) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var i;
        t instanceof THREE.Mesh && (t.matrixAutoUpdate && t.updateMatrix(),
        i = t.matrix,
        t = t.geometry),
        e.merge(t, i, n)
    },
    center: function(e) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
        e.center()
    }
},
THREE.ImageUtils = {
    crossOrigin: void 0,
    loadTexture: function(e, t, n, i) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var r = new THREE.TextureLoader;
        r.setCrossOrigin(this.crossOrigin);
        var o = r.load(e, n, void 0, i);
        return t && (o.mapping = t),
        o
    },
    loadTextureCube: function(e, t, n, i) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var r = new THREE.CubeTextureLoader;
        r.setCrossOrigin(this.crossOrigin);
        var o = r.load(e, n, void 0, i);
        return t && (o.mapping = t),
        o
    },
    loadCompressedTexture: function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    },
    loadCompressedTextureCube: function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    }
},
THREE.Projector = function() {
    console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
    this.projectVector = function(e, t) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."),
        e.project(t)
    }
    ,
    this.unprojectVector = function(e, t) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
        e.unproject(t)
    }
    ,
    this.pickingRay = function(e, t) {
        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
    }
}
,
THREE.CanvasRenderer = function() {
    console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
    this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
    this.clear = function() {}
    ,
    this.render = function() {}
    ,
    this.setClearColor = function() {}
    ,
    this.setSize = function() {}
}
,
THREE.CurveUtils = {
    tangentQuadraticBezier: function(e, t, n, i) {
        return 2 * (1 - e) * (n - t) + 2 * e * (i - n)
    },
    tangentCubicBezier: function(e, t, n, i, r) {
        return -3 * t * (1 - e) * (1 - e) + 3 * n * (1 - e) * (1 - e) - 6 * e * n * (1 - e) + 6 * e * i * (1 - e) - 3 * e * e * i + 3 * e * e * r
    },
    tangentSpline: function(e, t, n, i, r) {
        var o = 6 * e * e - 6 * e
          , a = 3 * e * e - 4 * e + 1
          , s = -6 * e * e + 6 * e
          , c = 3 * e * e - 2 * e;
        return o + a + s + c
    },
    interpolate: function(e, t, n, i, r) {
        var o = .5 * (n - e)
          , a = .5 * (i - t)
          , s = r * r
          , c = r * s;
        return (2 * t - 2 * n + o + a) * c + (-3 * t + 3 * n - 2 * o - a) * s + o * r + t
    }
},
THREE.SceneUtils = {
    createMultiMaterialObject: function(e, t) {
        for (var n = new THREE.Group, i = 0, r = t.length; i < r; i++)
            n.add(new THREE.Mesh(e,t[i]));
        return n
    },
    detach: function(e, t, n) {
        e.applyMatrix(t.matrixWorld),
        t.remove(e),
        n.add(e)
    },
    attach: function(e, t, n) {
        var i = new THREE.Matrix4;
        i.getInverse(n.matrixWorld),
        e.applyMatrix(i),
        t.remove(e),
        n.add(e)
    }
},
THREE.ShapeUtils = {
    area: function(e) {
        for (var t = e.length, n = 0, i = t - 1, r = 0; r < t; i = r++)
            n += e[i].x * e[r].y - e[r].x * e[i].y;
        return .5 * n
    },
    triangulate: function() {
        function e(e, t, n, i, r, o) {
            var a, s, c, l, u, h, d, p, f;
            if (s = e[o[t]].x,
            c = e[o[t]].y,
            l = e[o[n]].x,
            u = e[o[n]].y,
            h = e[o[i]].x,
            d = e[o[i]].y,
            Number.EPSILON > (l - s) * (d - c) - (u - c) * (h - s))
                return !1;
            var m, g, v, E, y, b, T, x, R, w, H, M, S, _, C;
            for (m = h - l,
            g = d - u,
            v = s - h,
            E = c - d,
            y = l - s,
            b = u - c,
            a = 0; a < r; a++)
                if (p = e[o[a]].x,
                f = e[o[a]].y,
                !(p === s && f === c || p === l && f === u || p === h && f === d) && (T = p - s,
                x = f - c,
                R = p - l,
                w = f - u,
                H = p - h,
                M = f - d,
                C = m * w - g * R,
                S = y * x - b * T,
                _ = v * M - E * H,
                C >= -Number.EPSILON && _ >= -Number.EPSILON && S >= -Number.EPSILON))
                    return !1;
            return !0
        }
        return function(t, n) {
            var i = t.length;
            if (i < 3)
                return null;
            var r, o, a, s = [], c = [], l = [];
            if (THREE.ShapeUtils.area(t) > 0)
                for (o = 0; o < i; o++)
                    c[o] = o;
            else
                for (o = 0; o < i; o++)
                    c[o] = i - 1 - o;
            var u = i
              , h = 2 * u;
            for (o = u - 1; u > 2; ) {
                if (h-- <= 0)
                    return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),
                    n ? l : s;
                if (r = o,
                u <= r && (r = 0),
                o = r + 1,
                u <= o && (o = 0),
                a = o + 1,
                u <= a && (a = 0),
                e(t, r, o, a, u, c)) {
                    var d, p, f, m, g;
                    for (d = c[r],
                    p = c[o],
                    f = c[a],
                    s.push([t[d], t[p], t[f]]),
                    l.push([c[r], c[o], c[a]]),
                    m = o,
                    g = o + 1; g < u; m++,
                    g++)
                        c[m] = c[g];
                    u--,
                    h = 2 * u
                }
            }
            return n ? l : s
        }
    }(),
    triangulateShape: function(e, t) {
        function n(e) {
            var t = e.length;
            t > 2 && e[t - 1].equals(e[0]) && e.pop()
        }
        function i(e, t, n) {
            return e.x !== t.x ? e.x < t.x ? e.x <= n.x && n.x <= t.x : t.x <= n.x && n.x <= e.x : e.y < t.y ? e.y <= n.y && n.y <= t.y : t.y <= n.y && n.y <= e.y
        }
        function r(e, t, n, r, o) {
            var a = t.x - e.x
              , s = t.y - e.y
              , c = r.x - n.x
              , l = r.y - n.y
              , u = e.x - n.x
              , h = e.y - n.y
              , d = s * c - a * l
              , p = s * u - a * h;
            if (Math.abs(d) > Number.EPSILON) {
                var f;
                if (d > 0) {
                    if (p < 0 || p > d)
                        return [];
                    if (f = l * u - c * h,
                    f < 0 || f > d)
                        return []
                } else {
                    if (p > 0 || p < d)
                        return [];
                    if (f = l * u - c * h,
                    f > 0 || f < d)
                        return []
                }
                if (0 === f)
                    return !o || 0 !== p && p !== d ? [e] : [];
                if (f === d)
                    return !o || 0 !== p && p !== d ? [t] : [];
                if (0 === p)
                    return [n];
                if (p === d)
                    return [r];
                var m = f / d;
                return [{
                    x: e.x + m * a,
                    y: e.y + m * s
                }]
            }
            if (0 !== p || l * u !== c * h)
                return [];
            var g = 0 === a && 0 === s
              , v = 0 === c && 0 === l;
            if (g && v)
                return e.x !== n.x || e.y !== n.y ? [] : [e];
            if (g)
                return i(n, r, e) ? [e] : [];
            if (v)
                return i(e, t, n) ? [n] : [];
            var E, y, b, T, x, R, w, H;
            return 0 !== a ? (e.x < t.x ? (E = e,
            b = e.x,
            y = t,
            T = t.x) : (E = t,
            b = t.x,
            y = e,
            T = e.x),
            n.x < r.x ? (x = n,
            w = n.x,
            R = r,
            H = r.x) : (x = r,
            w = r.x,
            R = n,
            H = n.x)) : (e.y < t.y ? (E = e,
            b = e.y,
            y = t,
            T = t.y) : (E = t,
            b = t.y,
            y = e,
            T = e.y),
            n.y < r.y ? (x = n,
            w = n.y,
            R = r,
            H = r.y) : (x = r,
            w = r.y,
            R = n,
            H = n.y)),
            b <= w ? T < w ? [] : T === w ? o ? [] : [x] : T <= H ? [x, y] : [x, R] : b > H ? [] : b === H ? o ? [] : [E] : T <= H ? [E, y] : [E, R]
        }
        function o(e, t, n, i) {
            var r = t.x - e.x
              , o = t.y - e.y
              , a = n.x - e.x
              , s = n.y - e.y
              , c = i.x - e.x
              , l = i.y - e.y
              , u = r * s - o * a
              , h = r * l - o * c;
            if (Math.abs(u) > Number.EPSILON) {
                var d = c * s - l * a;
                return u > 0 ? h >= 0 && d >= 0 : h >= 0 || d >= 0
            }
            return h > 0
        }
        function a(e, t) {
            function n(e, t) {
                var n = E.length - 1
                  , i = e - 1;
                i < 0 && (i = n);
                var r = e + 1;
                r > n && (r = 0);
                var a = o(E[e], E[i], E[r], s[t]);
                if (!a)
                    return !1;
                var c = s.length - 1
                  , l = t - 1;
                l < 0 && (l = c);
                var u = t + 1;
                return u > c && (u = 0),
                a = o(s[t], s[l], s[u], E[e]),
                !!a
            }
            function i(e, t) {
                var n, i, o;
                for (n = 0; n < E.length; n++)
                    if (i = n + 1,
                    i %= E.length,
                    o = r(e, t, E[n], E[i], !0),
                    o.length > 0)
                        return !0;
                return !1
            }
            function a(e, n) {
                var i, o, a, s, c;
                for (i = 0; i < y.length; i++)
                    for (o = t[y[i]],
                    a = 0; a < o.length; a++)
                        if (s = a + 1,
                        s %= o.length,
                        c = r(e, n, o[a], o[s], !0),
                        c.length > 0)
                            return !0;
                return !1
            }
            for (var s, c, l, u, h, d, p, f, m, g, v, E = e.concat(), y = [], b = [], T = 0, x = t.length; T < x; T++)
                y.push(T);
            for (var R = 0, w = 2 * y.length; y.length > 0; ) {
                if (w--,
                w < 0) {
                    console.log("Infinite Loop! Holes left:" + y.length + ", Probably Hole outside Shape!");
                    break
                }
                for (l = R; l < E.length; l++) {
                    u = E[l],
                    c = -1;
                    for (var T = 0; T < y.length; T++)
                        if (d = y[T],
                        p = u.x + ":" + u.y + ":" + d,
                        void 0 === b[p]) {
                            s = t[d];
                            for (var H = 0; H < s.length; H++)
                                if (h = s[H],
                                n(l, H) && !i(u, h) && !a(u, h)) {
                                    c = H,
                                    y.splice(T, 1),
                                    f = E.slice(0, l + 1),
                                    m = E.slice(l),
                                    g = s.slice(c),
                                    v = s.slice(0, c + 1),
                                    E = f.concat(g).concat(v).concat(m),
                                    R = l;
                                    break
                                }
                            if (c >= 0)
                                break;
                            b[p] = !0
                        }
                    if (c >= 0)
                        break
                }
            }
            return E
        }
        n(e),
        t.forEach(n);
        for (var s, c, l, u, h, d, p = {}, f = e.concat(), m = 0, g = t.length; m < g; m++)
            Array.prototype.push.apply(f, t[m]);
        for (s = 0,
        c = f.length; s < c; s++)
            h = f[s].x + ":" + f[s].y,
            void 0 !== p[h] && console.warn("THREE.ShapeUtils: Duplicate point", h, s),
            p[h] = s;
        var v = a(e, t)
          , E = THREE.ShapeUtils.triangulate(v, !1);
        for (s = 0,
        c = E.length; s < c; s++)
            for (u = E[s],
            l = 0; l < 3; l++)
                h = u[l].x + ":" + u[l].y,
                d = p[h],
                void 0 !== d && (u[l] = d);
        return E.concat()
    },
    isClockWise: function(e) {
        return THREE.ShapeUtils.area(e) < 0
    },
    b2: function() {
        function e(e, t) {
            var n = 1 - e;
            return n * n * t
        }
        function t(e, t) {
            return 2 * (1 - e) * e * t
        }
        function n(e, t) {
            return e * e * t
        }
        return function(i, r, o, a) {
            return e(i, r) + t(i, o) + n(i, a)
        }
    }(),
    b3: function() {
        function e(e, t) {
            var n = 1 - e;
            return n * n * n * t
        }
        function t(e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t
        }
        function n(e, t) {
            var n = 1 - e;
            return 3 * n * e * e * t
        }
        function i(e, t) {
            return e * e * e * t
        }
        return function(r, o, a, s, c) {
            return e(r, o) + t(r, a) + n(r, s) + i(r, c)
        }
    }()
},
THREE.Curve = function() {}
,
THREE.Curve.prototype = {
    constructor: THREE.Curve,
    getPoint: function(e) {
        return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),
        null
    },
    getPointAt: function(e) {
        var t = this.getUtoTmapping(e);
        return this.getPoint(t)
    },
    getPoints: function(e) {
        e || (e = 5);
        for (var t = [], n = 0; n <= e; n++)
            t.push(this.getPoint(n / e));
        return t
    },
    getSpacedPoints: function(e) {
        e || (e = 5);
        for (var t = [], n = 0; n <= e; n++)
            t.push(this.getPointAt(n / e));
        return t
    },
    getLength: function() {
        var e = this.getLengths();
        return e[e.length - 1]
    },
    getLengths: function(e) {
        if (e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
        this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
            return this.cacheArcLengths;
        this.needsUpdate = !1;
        var t, n, i = [], r = this.getPoint(0), o = 0;
        for (i.push(0),
        n = 1; n <= e; n++)
            t = this.getPoint(n / e),
            o += t.distanceTo(r),
            i.push(o),
            r = t;
        return this.cacheArcLengths = i,
        i
    },
    updateArcLengths: function() {
        this.needsUpdate = !0,
        this.getLengths()
    },
    getUtoTmapping: function(e, t) {
        var n, i = this.getLengths(), r = 0, o = i.length;
        n = t ? t : e * i[o - 1];
        for (var a, s = 0, c = o - 1; s <= c; )
            if (r = Math.floor(s + (c - s) / 2),
            a = i[r] - n,
            a < 0)
                s = r + 1;
            else {
                if (!(a > 0)) {
                    c = r;
                    break
                }
                c = r - 1
            }
        if (r = c,
        i[r] === n) {
            var l = r / (o - 1);
            return l
        }
        var u = i[r]
          , h = i[r + 1]
          , d = h - u
          , p = (n - u) / d
          , l = (r + p) / (o - 1);
        return l
    },
    getTangent: function(e) {
        var t = 1e-4
          , n = e - t
          , i = e + t;
        n < 0 && (n = 0),
        i > 1 && (i = 1);
        var r = this.getPoint(n)
          , o = this.getPoint(i)
          , a = o.clone().sub(r);
        return a.normalize()
    },
    getTangentAt: function(e) {
        var t = this.getUtoTmapping(e);
        return this.getTangent(t)
    }
},
THREE.Curve.create = function(e, t) {
    return e.prototype = Object.create(THREE.Curve.prototype),
    e.prototype.constructor = e,
    e.prototype.getPoint = t,
    e
}
,
THREE.CurvePath = function() {
    this.curves = [],
    this.autoClose = !1
}
,
THREE.CurvePath.prototype = Object.assign(Object.create(THREE.Curve.prototype), {
    constructor: THREE.CurvePath,
    add: function(e) {
        this.curves.push(e)
    },
    closePath: function() {
        var e = this.curves[0].getPoint(0)
          , t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new THREE.LineCurve(t,e))
    },
    getPoint: function(e) {
        for (var t = e * this.getLength(), n = this.getCurveLengths(), i = 0; i < n.length; ) {
            if (n[i] >= t) {
                var r = n[i] - t
                  , o = this.curves[i]
                  , a = o.getLength()
                  , s = 0 === a ? 0 : 1 - r / a;
                return o.getPointAt(s)
            }
            i++
        }
        return null
    },
    getLength: function() {
        var e = this.getCurveLengths();
        return e[e.length - 1]
    },
    updateArcLengths: function() {
        this.needsUpdate = !0,
        this.cacheLengths = null,
        this.getLengths()
    },
    getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
            return this.cacheLengths;
        for (var e = [], t = 0, n = 0, i = this.curves.length; n < i; n++)
            t += this.curves[n].getLength(),
            e.push(t);
        return this.cacheLengths = e,
        e
    },
    getSpacedPoints: function(e) {
        e || (e = 40);
        for (var t = [], n = 0; n <= e; n++)
            t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]),
        t
    },
    getPoints: function(e) {
        e = e || 12;
        for (var t, n = [], i = 0, r = this.curves; i < r.length; i++)
            for (var o = r[i], a = o instanceof THREE.EllipseCurve ? 2 * e : o instanceof THREE.LineCurve ? 1 : o instanceof THREE.SplineCurve ? e * o.points.length : e, s = o.getPoints(a), c = 0; c < s.length; c++) {
                var l = s[c];
                t && t.equals(l) || (n.push(l),
                t = l)
            }
        return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
        n
    },
    createPointsGeometry: function(e) {
        var t = this.getPoints(e);
        return this.createGeometry(t)
    },
    createSpacedPointsGeometry: function(e) {
        var t = this.getSpacedPoints(e);
        return this.createGeometry(t)
    },
    createGeometry: function(e) {
        for (var t = new THREE.Geometry, n = 0, i = e.length; n < i; n++) {
            var r = e[n];
            t.vertices.push(new THREE.Vector3(r.x,r.y,r.z || 0))
        }
        return t
    }
}),
THREE.Font = function(e) {
    this.data = e
}
,
Object.assign(THREE.Font.prototype, {
    generateShapes: function(e, t, n) {
        function i(e) {
            for (var n = String(e).split(""), i = t / o.resolution, a = 0, s = [], c = 0; c < n.length; c++) {
                var l = r(n[c], i, a);
                a += l.offset,
                s.push(l.path)
            }
            return s
        }
        function r(e, t, i) {
            var r = o.glyphs[e] || o.glyphs["?"];
            if (r) {
                var a, s, c, l, u, h, d, p, f, m, g, v = new THREE.ShapePath, E = [], y = THREE.ShapeUtils.b2, b = THREE.ShapeUtils.b3;
                if (r.o)
                    for (var T = r._cachedOutline || (r._cachedOutline = r.o.split(" ")), x = 0, R = T.length; x < R; ) {
                        var w = T[x++];
                        switch (w) {
                        case "m":
                            a = T[x++] * t + i,
                            s = T[x++] * t,
                            v.moveTo(a, s);
                            break;
                        case "l":
                            a = T[x++] * t + i,
                            s = T[x++] * t,
                            v.lineTo(a, s);
                            break;
                        case "q":
                            if (c = T[x++] * t + i,
                            l = T[x++] * t,
                            d = T[x++] * t + i,
                            p = T[x++] * t,
                            v.quadraticCurveTo(d, p, c, l),
                            g = E[E.length - 1]) {
                                u = g.x,
                                h = g.y;
                                for (var H = 1; H <= n; H++) {
                                    var M = H / n;
                                    y(M, u, d, c),
                                    y(M, h, p, l)
                                }
                            }
                            break;
                        case "b":
                            if (c = T[x++] * t + i,
                            l = T[x++] * t,
                            d = T[x++] * t + i,
                            p = T[x++] * t,
                            f = T[x++] * t + i,
                            m = T[x++] * t,
                            v.bezierCurveTo(d, p, f, m, c, l),
                            g = E[E.length - 1]) {
                                u = g.x,
                                h = g.y;
                                for (var H = 1; H <= n; H++) {
                                    var M = H / n;
                                    b(M, u, d, f, c),
                                    b(M, h, p, m, l)
                                }
                            }
                        }
                    }
                return {
                    offset: r.ha * t,
                    path: v
                }
            }
        }
        void 0 === t && (t = 100),
        void 0 === n && (n = 4);
        for (var o = this.data, a = i(e), s = [], c = 0, l = a.length; c < l; c++)
            Array.prototype.push.apply(s, a[c].toShapes());
        return s
    }
}),
THREE.Path = function(e) {
    THREE.CurvePath.call(this),
    this.currentPoint = new THREE.Vector2,
    e && this.fromPoints(e)
}
,
THREE.Path.prototype = Object.assign(Object.create(THREE.CurvePath.prototype), {
    constructor: THREE.Path,
    fromPoints: function(e) {
        this.moveTo(e[0].x, e[0].y);
        for (var t = 1, n = e.length; t < n; t++)
            this.lineTo(e[t].x, e[t].y)
    },
    moveTo: function(e, t) {
        this.currentPoint.set(e, t)
    },
    lineTo: function(e, t) {
        var n = new THREE.LineCurve(this.currentPoint.clone(),new THREE.Vector2(e,t));
        this.curves.push(n),
        this.currentPoint.set(e, t)
    },
    quadraticCurveTo: function(e, t, n, i) {
        var r = new THREE.QuadraticBezierCurve(this.currentPoint.clone(),new THREE.Vector2(e,t),new THREE.Vector2(n,i));
        this.curves.push(r),
        this.currentPoint.set(n, i)
    },
    bezierCurveTo: function(e, t, n, i, r, o) {
        var a = new THREE.CubicBezierCurve(this.currentPoint.clone(),new THREE.Vector2(e,t),new THREE.Vector2(n,i),new THREE.Vector2(r,o));
        this.curves.push(a),
        this.currentPoint.set(r, o)
    },
    splineThru: function(e) {
        var t = [this.currentPoint.clone()].concat(e)
          , n = new THREE.SplineCurve(t);
        this.curves.push(n),
        this.currentPoint.copy(e[e.length - 1])
    },
    arc: function(e, t, n, i, r, o) {
        var a = this.currentPoint.x
          , s = this.currentPoint.y;
        this.absarc(e + a, t + s, n, i, r, o)
    },
    absarc: function(e, t, n, i, r, o) {
        this.absellipse(e, t, n, n, i, r, o)
    },
    ellipse: function(e, t, n, i, r, o, a, s) {
        var c = this.currentPoint.x
          , l = this.currentPoint.y;
        this.absellipse(e + c, t + l, n, i, r, o, a, s)
    },
    absellipse: function(e, t, n, i, r, o, a, s) {
        var c = new THREE.EllipseCurve(e,t,n,i,r,o,a,s);
        if (this.curves.length > 0) {
            var l = c.getPoint(0);
            l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
        }
        this.curves.push(c);
        var u = c.getPoint(1);
        this.currentPoint.copy(u)
    }
}),
THREE.ShapePath = function() {
    this.subPaths = [],
    this.currentPath = null
}
,
THREE.ShapePath.prototype = {
    moveTo: function(e, t) {
        this.currentPath = new THREE.Path,
        this.subPaths.push(this.currentPath),
        this.currentPath.moveTo(e, t)
    },
    lineTo: function(e, t) {
        this.currentPath.lineTo(e, t)
    },
    quadraticCurveTo: function(e, t, n, i) {
        this.currentPath.quadraticCurveTo(e, t, n, i)
    },
    bezierCurveTo: function(e, t, n, i, r, o) {
        this.currentPath.bezierCurveTo(e, t, n, i, r, o)
    },
    splineThru: function(e) {
        this.currentPath.splineThru(e)
    },
    toShapes: function(e, t) {
        function n(e) {
            for (var t = [], n = 0, i = e.length; n < i; n++) {
                var r = e[n]
                  , o = new THREE.Shape;
                o.curves = r.curves,
                t.push(o)
            }
            return t
        }
        function i(e, t) {
            for (var n = t.length, i = !1, r = n - 1, o = 0; o < n; r = o++) {
                var a = t[r]
                  , s = t[o]
                  , c = s.x - a.x
                  , l = s.y - a.y;
                if (Math.abs(l) > Number.EPSILON) {
                    if (l < 0 && (a = t[o],
                    c = -c,
                    s = t[r],
                    l = -l),
                    e.y < a.y || e.y > s.y)
                        continue;
                    if (e.y === a.y) {
                        if (e.x === a.x)
                            return !0
                    } else {
                        var u = l * (e.x - a.x) - c * (e.y - a.y);
                        if (0 === u)
                            return !0;
                        if (u < 0)
                            continue;
                        i = !i
                    }
                } else {
                    if (e.y !== a.y)
                        continue;
                    if (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x)
                        return !0
                }
            }
            return i
        }
        var r = THREE.ShapeUtils.isClockWise
          , o = this.subPaths;
        if (0 === o.length)
            return [];
        if (t === !0)
            return n(o);
        var a, s, c, l = [];
        if (1 === o.length)
            return s = o[0],
            c = new THREE.Shape,
            c.curves = s.curves,
            l.push(c),
            l;
        var u = !r(o[0].getPoints());
        u = e ? !u : u;
        var h, d = [], p = [], f = [], m = 0;
        p[m] = void 0,
        f[m] = [];
        for (var g = 0, v = o.length; g < v; g++)
            s = o[g],
            h = s.getPoints(),
            a = r(h),
            a = e ? !a : a,
            a ? (!u && p[m] && m++,
            p[m] = {
                s: new THREE.Shape,
                p: h
            },
            p[m].s.curves = s.curves,
            u && m++,
            f[m] = []) : f[m].push({
                h: s,
                p: h[0]
            });
        if (!p[0])
            return n(o);
        if (p.length > 1) {
            for (var E = !1, y = [], b = 0, T = p.length; b < T; b++)
                d[b] = [];
            for (var b = 0, T = p.length; b < T; b++)
                for (var x = f[b], R = 0; R < x.length; R++) {
                    for (var w = x[R], H = !0, M = 0; M < p.length; M++)
                        i(w.p, p[M].p) && (b !== M && y.push({
                            froms: b,
                            tos: M,
                            hole: R
                        }),
                        H ? (H = !1,
                        d[M].push(w)) : E = !0);
                    H && d[b].push(w)
                }
            y.length > 0 && (E || (f = d))
        }
        for (var S, g = 0, _ = p.length; g < _; g++) {
            c = p[g].s,
            l.push(c),
            S = f[g];
            for (var C = 0, A = S.length; C < A; C++)
                c.holes.push(S[C].h)
        }
        return l
    }
},
THREE.Shape = function() {
    THREE.Path.apply(this, arguments),
    this.holes = []
}
,
THREE.Shape.prototype = Object.assign(Object.create(THREE.Path.prototype), {
    constructor: THREE.Shape,
    extrude: function(e) {
        return new THREE.ExtrudeGeometry(this,e)
    },
    makeGeometry: function(e) {
        return new THREE.ShapeGeometry(this,e)
    },
    getPointsHoles: function(e) {
        for (var t = [], n = 0, i = this.holes.length; n < i; n++)
            t[n] = this.holes[n].getPoints(e);
        return t
    },
    extractAllPoints: function(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        }
    },
    extractPoints: function(e) {
        return this.extractAllPoints(e)
    }
}),
THREE.LineCurve = function(e, t) {
    this.v1 = e,
    this.v2 = t
}
,
THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.LineCurve.prototype.constructor = THREE.LineCurve,
THREE.LineCurve.prototype.getPoint = function(e) {
    if (1 === e)
        return this.v2.clone();
    var t = this.v2.clone().sub(this.v1);
    return t.multiplyScalar(e).add(this.v1),
    t
}
,
THREE.LineCurve.prototype.getPointAt = function(e) {
    return this.getPoint(e)
}
,
THREE.LineCurve.prototype.getTangent = function(e) {
    var t = this.v2.clone().sub(this.v1);
    return t.normalize()
}
,
THREE.QuadraticBezierCurve = function(e, t, n) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = n
}
,
THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve,
THREE.QuadraticBezierCurve.prototype.getPoint = function(e) {
    var t = THREE.ShapeUtils.b2;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x),t(e, this.v0.y, this.v1.y, this.v2.y))
}
,
THREE.QuadraticBezierCurve.prototype.getTangent = function(e) {
    var t = THREE.CurveUtils.tangentQuadraticBezier;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x),t(e, this.v0.y, this.v1.y, this.v2.y)).normalize()
}
,
THREE.CubicBezierCurve = function(e, t, n, i) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = n,
    this.v3 = i
}
,
THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve,
THREE.CubicBezierCurve.prototype.getPoint = function(e) {
    var t = THREE.ShapeUtils.b3;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
}
,
THREE.CubicBezierCurve.prototype.getTangent = function(e) {
    var t = THREE.CurveUtils.tangentCubicBezier;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
}
,
THREE.SplineCurve = function(e) {
    this.points = void 0 == e ? [] : e
}
,
THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.SplineCurve.prototype.constructor = THREE.SplineCurve,
THREE.SplineCurve.prototype.getPoint = function(e) {
    var t = this.points
      , n = (t.length - 1) * e
      , i = Math.floor(n)
      , r = n - i
      , o = t[0 === i ? i : i - 1]
      , a = t[i]
      , s = t[i > t.length - 2 ? t.length - 1 : i + 1]
      , c = t[i > t.length - 3 ? t.length - 1 : i + 2]
      , l = THREE.CurveUtils.interpolate;
    return new THREE.Vector2(l(o.x, a.x, s.x, c.x, r),l(o.y, a.y, s.y, c.y, r))
}
,
THREE.EllipseCurve = function(e, t, n, i, r, o, a, s) {
    this.aX = e,
    this.aY = t,
    this.xRadius = n,
    this.yRadius = i,
    this.aStartAngle = r,
    this.aEndAngle = o,
    this.aClockwise = a,
    this.aRotation = s || 0
}
,
THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve,
THREE.EllipseCurve.prototype.getPoint = function(e) {
    for (var t = 2 * Math.PI, n = this.aEndAngle - this.aStartAngle, i = Math.abs(n) < Number.EPSILON; n < 0; )
        n += t;
    for (; n > t; )
        n -= t;
    n < Number.EPSILON && (n = i ? 0 : t),
    this.aClockwise !== !0 || i || (n === t ? n = -t : n -= t);
    var r = this.aStartAngle + e * n
      , o = this.aX + this.xRadius * Math.cos(r)
      , a = this.aY + this.yRadius * Math.sin(r);
    if (0 !== this.aRotation) {
        var s = Math.cos(this.aRotation)
          , c = Math.sin(this.aRotation)
          , l = o - this.aX
          , u = a - this.aY;
        o = l * s - u * c + this.aX,
        a = l * c + u * s + this.aY
    }
    return new THREE.Vector2(o,a)
}
,
THREE.ArcCurve = function(e, t, n, i, r, o) {
    THREE.EllipseCurve.call(this, e, t, n, n, i, r, o)
}
,
THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype),
THREE.ArcCurve.prototype.constructor = THREE.ArcCurve,
THREE.LineCurve3 = THREE.Curve.create(function(e, t) {
    this.v1 = e,
    this.v2 = t
}, function(e) {
    if (1 === e)
        return this.v2.clone();
    var t = new THREE.Vector3;
    return t.subVectors(this.v2, this.v1),
    t.multiplyScalar(e),
    t.add(this.v1),
    t
}),
THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(e, t, n) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = n
}, function(e) {
    var t = THREE.ShapeUtils.b2;
    return new THREE.Vector3(t(e, this.v0.x, this.v1.x, this.v2.x),t(e, this.v0.y, this.v1.y, this.v2.y),t(e, this.v0.z, this.v1.z, this.v2.z))
}),
THREE.CubicBezierCurve3 = THREE.Curve.create(function(e, t, n, i) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = n,
    this.v3 = i
}, function(e) {
    var t = THREE.ShapeUtils.b3;
    return new THREE.Vector3(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y),t(e, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
}),
THREE.SplineCurve3 = THREE.Curve.create(function(e) {
    console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),
    this.points = void 0 == e ? [] : e
}, function(e) {
    var t = this.points
      , n = (t.length - 1) * e
      , i = Math.floor(n)
      , r = n - i
      , o = t[0 == i ? i : i - 1]
      , a = t[i]
      , s = t[i > t.length - 2 ? t.length - 1 : i + 1]
      , c = t[i > t.length - 3 ? t.length - 1 : i + 2]
      , l = THREE.CurveUtils.interpolate;
    return new THREE.Vector3(l(o.x, a.x, s.x, c.x, r),l(o.y, a.y, s.y, c.y, r),l(o.z, a.z, s.z, c.z, r))
}),
THREE.CatmullRomCurve3 = function() {
    function e() {}
    var t = new THREE.Vector3
      , n = new e
      , i = new e
      , r = new e;
    return e.prototype.init = function(e, t, n, i) {
        this.c0 = e,
        this.c1 = n,
        this.c2 = -3 * e + 3 * t - 2 * n - i,
        this.c3 = 2 * e - 2 * t + n + i
    }
    ,
    e.prototype.initNonuniformCatmullRom = function(e, t, n, i, r, o, a) {
        var s = (t - e) / r - (n - e) / (r + o) + (n - t) / o
          , c = (n - t) / o - (i - t) / (o + a) + (i - n) / a;
        s *= o,
        c *= o,
        this.init(t, n, s, c)
    }
    ,
    e.prototype.initCatmullRom = function(e, t, n, i, r) {
        this.init(t, n, r * (n - e), r * (i - t))
    }
    ,
    e.prototype.calc = function(e) {
        var t = e * e
          , n = t * e;
        return this.c0 + this.c1 * e + this.c2 * t + this.c3 * n
    }
    ,
    THREE.Curve.create(function(e) {
        this.points = e || [],
        this.closed = !1
    }, function(e) {
        var o, a, s, c, l = this.points;
        c = l.length,
        c < 2 && console.log("duh, you need at least 2 points"),
        o = (c - (this.closed ? 0 : 1)) * e,
        a = Math.floor(o),
        s = o - a,
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / l.length) + 1) * l.length : 0 === s && a === c - 1 && (a = c - 2,
        s = 1);
        var u, h, d, p;
        if (this.closed || a > 0 ? u = l[(a - 1) % c] : (t.subVectors(l[0], l[1]).add(l[0]),
        u = t),
        h = l[a % c],
        d = l[(a + 1) % c],
        this.closed || a + 2 < c ? p = l[(a + 2) % c] : (t.subVectors(l[c - 1], l[c - 2]).add(l[c - 1]),
        p = t),
        void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
            var f = "chordal" === this.type ? .5 : .25
              , m = Math.pow(u.distanceToSquared(h), f)
              , g = Math.pow(h.distanceToSquared(d), f)
              , v = Math.pow(d.distanceToSquared(p), f);
            g < 1e-4 && (g = 1),
            m < 1e-4 && (m = g),
            v < 1e-4 && (v = g),
            n.initNonuniformCatmullRom(u.x, h.x, d.x, p.x, m, g, v),
            i.initNonuniformCatmullRom(u.y, h.y, d.y, p.y, m, g, v),
            r.initNonuniformCatmullRom(u.z, h.z, d.z, p.z, m, g, v)
        } else if ("catmullrom" === this.type) {
            var E = void 0 !== this.tension ? this.tension : .5;
            n.initCatmullRom(u.x, h.x, d.x, p.x, E),
            i.initCatmullRom(u.y, h.y, d.y, p.y, E),
            r.initCatmullRom(u.z, h.z, d.z, p.z, E)
        }
        var y = new THREE.Vector3(n.calc(s),i.calc(s),r.calc(s));
        return y
    })
}(),
THREE.ClosedSplineCurve3 = function(e) {
    console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),
    THREE.CatmullRomCurve3.call(this, e),
    this.type = "catmullrom",
    this.closed = !0
}
,
THREE.ClosedSplineCurve3.prototype = Object.create(THREE.CatmullRomCurve3.prototype),
THREE.BoxGeometry = function(e, t, n, i, r, o) {
    THREE.Geometry.call(this),
    this.type = "BoxGeometry",
    this.parameters = {
        width: e,
        height: t,
        depth: n,
        widthSegments: i,
        heightSegments: r,
        depthSegments: o
    },
    this.fromBufferGeometry(new THREE.BoxBufferGeometry(e,t,n,i,r,o)),
    this.mergeVertices()
}
,
THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry,
THREE.CubeGeometry = THREE.BoxGeometry,
THREE.BoxBufferGeometry = function(e, t, n, i, r, o) {
    function a(e, t, n) {
        var i = 0;
        return i += (e + 1) * (t + 1) * 2,
        i += (e + 1) * (n + 1) * 2,
        i += (n + 1) * (t + 1) * 2
    }
    function s(e, t, n) {
        var i = 0;
        return i += e * t * 2,
        i += e * n * 2,
        i += n * t * 2,
        6 * i
    }
    function c(e, t, n, i, r, o, a, s, c, u, h) {
        for (var T = o / c, x = a / u, R = o / 2, w = a / 2, H = s / 2, M = c + 1, S = u + 1, _ = 0, C = 0, A = new THREE.Vector3, P = 0; P < S; P++)
            for (var L = P * x - w, k = 0; k < M; k++) {
                var D = k * T - R;
                A[e] = D * i,
                A[t] = L * r,
                A[n] = H,
                p[g] = A.x,
                p[g + 1] = A.y,
                p[g + 2] = A.z,
                A[e] = 0,
                A[t] = 0,
                A[n] = s > 0 ? 1 : -1,
                f[g] = A.x,
                f[g + 1] = A.y,
                f[g + 2] = A.z,
                m[v] = k / c,
                m[v + 1] = 1 - P / u,
                g += 3,
                v += 2,
                _ += 1
            }
        for (P = 0; P < u; P++)
            for (k = 0; k < c; k++) {
                var I = y + k + M * P
                  , O = y + k + M * (P + 1)
                  , B = y + (k + 1) + M * (P + 1)
                  , F = y + (k + 1) + M * P;
                d[E] = I,
                d[E + 1] = O,
                d[E + 2] = F,
                d[E + 3] = O,
                d[E + 4] = B,
                d[E + 5] = F,
                E += 6,
                C += 6
            }
        l.addGroup(b, C, h),
        b += C,
        y += _
    }
    THREE.BufferGeometry.call(this),
    this.type = "BoxBufferGeometry",
    this.parameters = {
        width: e,
        height: t,
        depth: n,
        widthSegments: i,
        heightSegments: r,
        depthSegments: o
    };
    var l = this;
    i = Math.floor(i) || 1,
    r = Math.floor(r) || 1,
    o = Math.floor(o) || 1;
    var u = a(i, r, o)
      , h = s(i, r, o)
      , d = new (h > 65535 ? Uint32Array : Uint16Array)(h)
      , p = new Float32Array(3 * u)
      , f = new Float32Array(3 * u)
      , m = new Float32Array(2 * u)
      , g = 0
      , v = 0
      , E = 0
      , y = 0
      , b = 0;
    c("z", "y", "x", -1, -1, n, t, e, o, r, 0),
    c("z", "y", "x", 1, -1, n, t, -e, o, r, 1),
    c("x", "z", "y", 1, 1, e, n, t, i, o, 2),
    c("x", "z", "y", 1, -1, e, n, -t, i, o, 3),
    c("x", "y", "z", 1, -1, e, t, n, i, r, 4),
    c("x", "y", "z", -1, -1, e, t, -n, i, r, 5),
    this.setIndex(new THREE.BufferAttribute(d,1)),
    this.addAttribute("position", new THREE.BufferAttribute(p,3)),
    this.addAttribute("normal", new THREE.BufferAttribute(f,3)),
    this.addAttribute("uv", new THREE.BufferAttribute(m,2))
}
,
THREE.BoxBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry,
THREE.CircleGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this),
    this.type = "CircleGeometry",
    this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: i
    },
    this.fromBufferGeometry(new THREE.CircleBufferGeometry(e,t,n,i))
}
,
THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry,
THREE.CircleBufferGeometry = function(e, t, n, i) {
    THREE.BufferGeometry.call(this),
    this.type = "CircleBufferGeometry",
    this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: i
    },
    e = e || 50,
    t = void 0 !== t ? Math.max(3, t) : 8,
    n = void 0 !== n ? n : 0,
    i = void 0 !== i ? i : 2 * Math.PI;
    var r = t + 2
      , o = new Float32Array(3 * r)
      , a = new Float32Array(3 * r)
      , s = new Float32Array(2 * r);
    a[2] = 1,
    s[0] = .5,
    s[1] = .5;
    for (var c = 0, l = 3, u = 2; c <= t; c++,
    l += 3,
    u += 2) {
        var h = n + c / t * i;
        o[l] = e * Math.cos(h),
        o[l + 1] = e * Math.sin(h),
        a[l + 2] = 1,
        s[u] = (o[l] / e + 1) / 2,
        s[u + 1] = (o[l + 1] / e + 1) / 2
    }
    for (var d = [], l = 1; l <= t; l++)
        d.push(l, l + 1, 0);
    this.setIndex(new THREE.BufferAttribute(new Uint16Array(d),1)),
    this.addAttribute("position", new THREE.BufferAttribute(o,3)),
    this.addAttribute("normal", new THREE.BufferAttribute(a,3)),
    this.addAttribute("uv", new THREE.BufferAttribute(s,2)),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,e)
}
,
THREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry,
THREE.CylinderBufferGeometry = function(e, t, n, i, r, o, a, s) {
    function c() {
        var e = (i + 1) * (r + 1);
        return o === !1 && (e += (i + 1) * p + i * p),
        e
    }
    function l() {
        var e = i * r * 2 * 3;
        return o === !1 && (e += i * p * 3),
        e
    }
    function u() {
        var o, c, l = new THREE.Vector3, u = new THREE.Vector3, h = 0, p = (t - e) / n;
        for (c = 0; c <= r; c++) {
            var f = []
              , m = c / r
              , H = m * (t - e) + e;
            for (o = 0; o <= i; o++) {
                var M = o / i;
                u.x = H * Math.sin(M * s + a),
                u.y = -m * n + R,
                u.z = H * Math.cos(M * s + a),
                v.setXYZ(b, u.x, u.y, u.z),
                l.copy(u),
                (0 === e && 0 === c || 0 === t && c === r) && (l.x = Math.sin(M * s + a),
                l.z = Math.cos(M * s + a)),
                l.setY(Math.sqrt(l.x * l.x + l.z * l.z) * p).normalize(),
                E.setXYZ(b, l.x, l.y, l.z),
                y.setXY(b, M, 1 - m),
                f.push(b),
                b++
            }
            x.push(f)
        }
        for (o = 0; o < i; o++)
            for (c = 0; c < r; c++) {
                var S = x[c][o]
                  , _ = x[c + 1][o]
                  , C = x[c + 1][o + 1]
                  , A = x[c][o + 1];
                g.setX(T, S),
                T++,
                g.setX(T, _),
                T++,
                g.setX(T, A),
                T++,
                g.setX(T, _),
                T++,
                g.setX(T, C),
                T++,
                g.setX(T, A),
                T++,
                h += 6
            }
        d.addGroup(w, h, 0),
        w += h
    }
    function h(n) {
        var r, o, c, l = new THREE.Vector2, u = new THREE.Vector3, h = 0, p = n === !0 ? e : t, f = n === !0 ? 1 : -1;
        for (o = b,
        r = 1; r <= i; r++)
            v.setXYZ(b, 0, R * f, 0),
            E.setXYZ(b, 0, f, 0),
            l.x = .5,
            l.y = .5,
            y.setXY(b, l.x, l.y),
            b++;
        for (c = b,
        r = 0; r <= i; r++) {
            var m = r / i
              , x = m * s + a
              , H = Math.cos(x)
              , M = Math.sin(x);
            u.x = p * M,
            u.y = R * f,
            u.z = p * H,
            v.setXYZ(b, u.x, u.y, u.z),
            E.setXYZ(b, 0, f, 0),
            l.x = .5 * H + .5,
            l.y = .5 * M * f + .5,
            y.setXY(b, l.x, l.y),
            b++
        }
        for (r = 0; r < i; r++) {
            var S = o + r
              , _ = c + r;
            n === !0 ? (g.setX(T, _),
            T++,
            g.setX(T, _ + 1),
            T++,
            g.setX(T, S),
            T++) : (g.setX(T, _ + 1),
            T++,
            g.setX(T, _),
            T++,
            g.setX(T, S),
            T++),
            h += 3
        }
        d.addGroup(w, h, n === !0 ? 1 : 2),
        w += h
    }
    THREE.BufferGeometry.call(this),
    this.type = "CylinderBufferGeometry",
    this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: i,
        heightSegments: r,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    };
    var d = this;
    e = void 0 !== e ? e : 20,
    t = void 0 !== t ? t : 20,
    n = void 0 !== n ? n : 100,
    i = Math.floor(i) || 8,
    r = Math.floor(r) || 1,
    o = void 0 !== o && o,
    a = void 0 !== a ? a : 0,
    s = void 0 !== s ? s : 2 * Math.PI;
    var p = 0;
    o === !1 && (e > 0 && p++,
    t > 0 && p++);
    var f = c()
      , m = l()
      , g = new THREE.BufferAttribute(new (m > 65535 ? Uint32Array : Uint16Array)(m),1)
      , v = new THREE.BufferAttribute(new Float32Array(3 * f),3)
      , E = new THREE.BufferAttribute(new Float32Array(3 * f),3)
      , y = new THREE.BufferAttribute(new Float32Array(2 * f),2)
      , b = 0
      , T = 0
      , x = []
      , R = n / 2
      , w = 0;
    u(),
    o === !1 && (e > 0 && h(!0),
    t > 0 && h(!1)),
    this.setIndex(g),
    this.addAttribute("position", v),
    this.addAttribute("normal", E),
    this.addAttribute("uv", y)
}
,
THREE.CylinderBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry,
THREE.CylinderGeometry = function(e, t, n, i, r, o, a, s) {
    THREE.Geometry.call(this),
    this.type = "CylinderGeometry",
    this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: i,
        heightSegments: r,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    },
    this.fromBufferGeometry(new THREE.CylinderBufferGeometry(e,t,n,i,r,o,a,s)),
    this.mergeVertices()
}
,
THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry,
THREE.ConeBufferGeometry = function(e, t, n, i, r, o, a) {
    THREE.CylinderBufferGeometry.call(this, 0, e, t, n, i, r, o, a),
    this.type = "ConeBufferGeometry",
    this.parameters = {
        radius: e,
        height: t,
        radialSegments: n,
        heightSegments: i,
        thetaStart: o,
        thetaLength: a
    }
}
,
THREE.ConeBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry,
THREE.ConeGeometry = function(e, t, n, i, r, o, a) {
    THREE.CylinderGeometry.call(this, 0, e, t, n, i, r, o, a),
    this.type = "ConeGeometry",
    this.parameters = {
        radius: e,
        height: t,
        radialSegments: n,
        heightSegments: i,
        openEnded: r,
        thetaStart: o,
        thetaLength: a
    }
}
,
THREE.ConeGeometry.prototype = Object.create(THREE.CylinderGeometry.prototype),
THREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry,
THREE.EdgesGeometry = function(e, t) {
    function n(e, t) {
        return e - t
    }
    THREE.BufferGeometry.call(this),
    t = void 0 !== t ? t : 1;
    var i, r = Math.cos(THREE.Math.DEG2RAD * t), o = [0, 0], a = {}, s = ["a", "b", "c"];
    e instanceof THREE.BufferGeometry ? (i = new THREE.Geometry,
    i.fromBufferGeometry(e)) : i = e.clone(),
    i.mergeVertices(),
    i.computeFaceNormals();
    for (var c = i.vertices, l = i.faces, u = 0, h = l.length; u < h; u++)
        for (var d = l[u], p = 0; p < 3; p++) {
            o[0] = d[s[p]],
            o[1] = d[s[(p + 1) % 3]],
            o.sort(n);
            var f = o.toString();
            void 0 === a[f] ? a[f] = {
                vert1: o[0],
                vert2: o[1],
                face1: u,
                face2: void 0
            } : a[f].face2 = u
        }
    var m = [];
    for (var f in a) {
        var g = a[f];
        if (void 0 === g.face2 || l[g.face1].normal.dot(l[g.face2].normal) <= r) {
            var v = c[g.vert1];
            m.push(v.x),
            m.push(v.y),
            m.push(v.z),
            v = c[g.vert2],
            m.push(v.x),
            m.push(v.y),
            m.push(v.z)
        }
    }
    this.addAttribute("position", new THREE.BufferAttribute(new Float32Array(m),3))
}
,
THREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry,
THREE.ExtrudeGeometry = function(e, t) {
    return "undefined" == typeof e ? void (e = []) : (THREE.Geometry.call(this),
    this.type = "ExtrudeGeometry",
    e = Array.isArray(e) ? e : [e],
    this.addShapeList(e, t),
    void this.computeFaceNormals())
}
,
THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry,
THREE.ExtrudeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = e.length, i = 0; i < n; i++) {
        var r = e[i];
        this.addShape(r, t)
    }
}
,
THREE.ExtrudeGeometry.prototype.addShape = function(e, t) {
    function n(e, t, n) {
        return t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
        t.clone().multiplyScalar(n).add(e)
    }
    function i(e, t, n) {
        var i, r, o = 1, a = e.x - t.x, s = e.y - t.y, c = n.x - e.x, l = n.y - e.y, u = a * a + s * s, h = a * l - s * c;
        if (Math.abs(h) > Number.EPSILON) {
            var d = Math.sqrt(u)
              , p = Math.sqrt(c * c + l * l)
              , f = t.x - s / d
              , m = t.y + a / d
              , g = n.x - l / p
              , v = n.y + c / p
              , E = ((g - f) * l - (v - m) * c) / (a * l - s * c);
            i = f + a * E - e.x,
            r = m + s * E - e.y;
            var y = i * i + r * r;
            if (y <= 2)
                return new THREE.Vector2(i,r);
            o = Math.sqrt(y / 2)
        } else {
            var b = !1;
            a > Number.EPSILON ? c > Number.EPSILON && (b = !0) : a < -Number.EPSILON ? c < -Number.EPSILON && (b = !0) : Math.sign(s) === Math.sign(l) && (b = !0),
            b ? (i = -s,
            r = a,
            o = Math.sqrt(u)) : (i = a,
            r = s,
            o = Math.sqrt(u / 2))
        }
        return new THREE.Vector2(i / o,r / o)
    }
    function r() {
        if (y) {
            var e = 0
              , t = j * e;
            for (W = 0; W < V; W++)
                z = D[W],
                c(z[2] + t, z[1] + t, z[0] + t);
            for (e = T + 2 * E,
            t = j * e,
            W = 0; W < V; W++)
                z = D[W],
                c(z[0] + t, z[1] + t, z[2] + t)
        } else {
            for (W = 0; W < V; W++)
                z = D[W],
                c(z[2], z[1], z[0]);
            for (W = 0; W < V; W++)
                z = D[W],
                c(z[0] + j * T, z[1] + j * T, z[2] + j * T)
        }
    }
    function o() {
        var e = 0;
        for (a(I, e),
        e += I.length,
        M = 0,
        S = L.length; M < S; M++)
            H = L[M],
            a(H, e),
            e += H.length
    }
    function a(e, t) {
        var n, i;
        for (W = e.length; --W >= 0; ) {
            n = W,
            i = W - 1,
            i < 0 && (i = e.length - 1);
            var r = 0
              , o = T + 2 * E;
            for (r = 0; r < o; r++) {
                var a = j * r
                  , s = j * (r + 1)
                  , c = t + n + a
                  , u = t + i + a
                  , h = t + i + s
                  , d = t + n + s;
                l(c, u, h, d, e, r, o, n, i)
            }
        }
    }
    function s(e, t, n) {
        _.vertices.push(new THREE.Vector3(e,t,n))
    }
    function c(e, t, n) {
        e += C,
        t += C,
        n += C,
        _.faces.push(new THREE.Face3(e,t,n,null,null,0));
        var i = w.generateTopUV(_, e, t, n);
        _.faceVertexUvs[0].push(i)
    }
    function l(e, t, n, i, r, o, a, s, c) {
        e += C,
        t += C,
        n += C,
        i += C,
        _.faces.push(new THREE.Face3(e,t,i,null,null,1)),
        _.faces.push(new THREE.Face3(t,n,i,null,null,1));
        var l = w.generateSideWallUV(_, e, t, n, i);
        _.faceVertexUvs[0].push([l[0], l[1], l[3]]),
        _.faceVertexUvs[0].push([l[1], l[2], l[3]])
    }
    var u, h, d, p, f, m = void 0 !== t.amount ? t.amount : 100, g = void 0 !== t.bevelThickness ? t.bevelThickness : 6, v = void 0 !== t.bevelSize ? t.bevelSize : g - 2, E = void 0 !== t.bevelSegments ? t.bevelSegments : 3, y = void 0 === t.bevelEnabled || t.bevelEnabled, b = void 0 !== t.curveSegments ? t.curveSegments : 12, T = void 0 !== t.steps ? t.steps : 1, x = t.extrudePath, R = !1, w = void 0 !== t.UVGenerator ? t.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
    x && (u = x.getSpacedPoints(T),
    R = !0,
    y = !1,
    h = void 0 !== t.frames ? t.frames : new THREE.TubeGeometry.FrenetFrames(x,T,!1),
    d = new THREE.Vector3,
    p = new THREE.Vector3,
    f = new THREE.Vector3),
    y || (E = 0,
    g = 0,
    v = 0);
    var H, M, S, _ = this, C = this.vertices.length, A = e.extractPoints(b), P = A.shape, L = A.holes, k = !THREE.ShapeUtils.isClockWise(P);
    if (k) {
        for (P = P.reverse(),
        M = 0,
        S = L.length; M < S; M++)
            H = L[M],
            THREE.ShapeUtils.isClockWise(H) && (L[M] = H.reverse());
        k = !1
    }
    var D = THREE.ShapeUtils.triangulateShape(P, L)
      , I = P;
    for (M = 0,
    S = L.length; M < S; M++)
        H = L[M],
        P = P.concat(H);
    for (var O, B, F, N, U, z, j = P.length, V = D.length, G = [], W = 0, q = I.length, X = q - 1, Y = W + 1; W < q; W++,
    X++,
    Y++)
        X === q && (X = 0),
        Y === q && (Y = 0),
        G[W] = i(I[W], I[X], I[Y]);
    var K, Z = [], $ = G.concat();
    for (M = 0,
    S = L.length; M < S; M++) {
        for (H = L[M],
        K = [],
        W = 0,
        q = H.length,
        X = q - 1,
        Y = W + 1; W < q; W++,
        X++,
        Y++)
            X === q && (X = 0),
            Y === q && (Y = 0),
            K[W] = i(H[W], H[X], H[Y]);
        Z.push(K),
        $ = $.concat(K)
    }
    for (O = 0; O < E; O++) {
        for (F = O / E,
        N = g * (1 - F),
        B = v * Math.sin(F * Math.PI / 2),
        W = 0,
        q = I.length; W < q; W++)
            U = n(I[W], G[W], B),
            s(U.x, U.y, -N);
        for (M = 0,
        S = L.length; M < S; M++)
            for (H = L[M],
            K = Z[M],
            W = 0,
            q = H.length; W < q; W++)
                U = n(H[W], K[W], B),
                s(U.x, U.y, -N)
    }
    for (B = v,
    W = 0; W < j; W++)
        U = y ? n(P[W], $[W], B) : P[W],
        R ? (p.copy(h.normals[0]).multiplyScalar(U.x),
        d.copy(h.binormals[0]).multiplyScalar(U.y),
        f.copy(u[0]).add(p).add(d),
        s(f.x, f.y, f.z)) : s(U.x, U.y, 0);
    var Q;
    for (Q = 1; Q <= T; Q++)
        for (W = 0; W < j; W++)
            U = y ? n(P[W], $[W], B) : P[W],
            R ? (p.copy(h.normals[Q]).multiplyScalar(U.x),
            d.copy(h.binormals[Q]).multiplyScalar(U.y),
            f.copy(u[Q]).add(p).add(d),
            s(f.x, f.y, f.z)) : s(U.x, U.y, m / T * Q);
    for (O = E - 1; O >= 0; O--) {
        for (F = O / E,
        N = g * (1 - F),
        B = v * Math.sin(F * Math.PI / 2),
        W = 0,
        q = I.length; W < q; W++)
            U = n(I[W], G[W], B),
            s(U.x, U.y, m + N);
        for (M = 0,
        S = L.length; M < S; M++)
            for (H = L[M],
            K = Z[M],
            W = 0,
            q = H.length; W < q; W++)
                U = n(H[W], K[W], B),
                R ? s(U.x, U.y + u[T - 1].y, u[T - 1].x + N) : s(U.x, U.y, m + N)
    }
    r(),
    o()
}
,
THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(e, t, n, i) {
        var r = e.vertices
          , o = r[t]
          , a = r[n]
          , s = r[i];
        return [new THREE.Vector2(o.x,o.y), new THREE.Vector2(a.x,a.y), new THREE.Vector2(s.x,s.y)]
    },
    generateSideWallUV: function(e, t, n, i, r) {
        var o = e.vertices
          , a = o[t]
          , s = o[n]
          , c = o[i]
          , l = o[r];
        return Math.abs(a.y - s.y) < .01 ? [new THREE.Vector2(a.x,1 - a.z), new THREE.Vector2(s.x,1 - s.z), new THREE.Vector2(c.x,1 - c.z), new THREE.Vector2(l.x,1 - l.z)] : [new THREE.Vector2(a.y,1 - a.z), new THREE.Vector2(s.y,1 - s.z), new THREE.Vector2(c.y,1 - c.z), new THREE.Vector2(l.y,1 - l.z)]
    }
},
THREE.ShapeGeometry = function(e, t) {
    THREE.Geometry.call(this),
    this.type = "ShapeGeometry",
    Array.isArray(e) === !1 && (e = [e]),
    this.addShapeList(e, t),
    this.computeFaceNormals()
}
,
THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry,
THREE.ShapeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = 0, i = e.length; n < i; n++)
        this.addShape(e[n], t);
    return this
}
,
THREE.ShapeGeometry.prototype.addShape = function(e, t) {
    void 0 === t && (t = {});
    var n, i, r, o = void 0 !== t.curveSegments ? t.curveSegments : 12, a = t.material, s = void 0 === t.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : t.UVGenerator, c = this.vertices.length, l = e.extractPoints(o), u = l.shape, h = l.holes, d = !THREE.ShapeUtils.isClockWise(u);
    if (d) {
        for (u = u.reverse(),
        n = 0,
        i = h.length; n < i; n++)
            r = h[n],
            THREE.ShapeUtils.isClockWise(r) && (h[n] = r.reverse());
        d = !1
    }
    var p = THREE.ShapeUtils.triangulateShape(u, h);
    for (n = 0,
    i = h.length; n < i; n++)
        r = h[n],
        u = u.concat(r);
    var f, m, g = u.length, v = p.length;
    for (n = 0; n < g; n++)
        f = u[n],
        this.vertices.push(new THREE.Vector3(f.x,f.y,0));
    for (n = 0; n < v; n++) {
        m = p[n];
        var E = m[0] + c
          , y = m[1] + c
          , b = m[2] + c;
        this.faces.push(new THREE.Face3(E,y,b,null,null,a)),
        this.faceVertexUvs[0].push(s.generateTopUV(this, E, y, b))
    }
}
,
THREE.LatheBufferGeometry = function(e, t, n, i) {
    THREE.BufferGeometry.call(this),
    this.type = "LatheBufferGeometry",
    this.parameters = {
        points: e,
        segments: t,
        phiStart: n,
        phiLength: i
    },
    t = Math.floor(t) || 12,
    n = n || 0,
    i = i || 2 * Math.PI,
    i = THREE.Math.clamp(i, 0, 2 * Math.PI);
    var r, o, a, s = (t + 1) * e.length, c = t * e.length * 2 * 3, l = new THREE.BufferAttribute(new (c > 65535 ? Uint32Array : Uint16Array)(c),1), u = new THREE.BufferAttribute(new Float32Array(3 * s),3), h = new THREE.BufferAttribute(new Float32Array(2 * s),2), d = 0, p = 0, f = (1 / (e.length - 1),
    1 / t), m = new THREE.Vector3, g = new THREE.Vector2;
    for (o = 0; o <= t; o++) {
        var v = n + o * f * i
          , E = Math.sin(v)
          , y = Math.cos(v);
        for (a = 0; a <= e.length - 1; a++)
            m.x = e[a].x * E,
            m.y = e[a].y,
            m.z = e[a].x * y,
            u.setXYZ(d, m.x, m.y, m.z),
            g.x = o / t,
            g.y = a / (e.length - 1),
            h.setXY(d, g.x, g.y),
            d++
    }
    for (o = 0; o < t; o++)
        for (a = 0; a < e.length - 1; a++) {
            r = a + o * e.length;
            var b = r
              , T = r + e.length
              , x = r + e.length + 1
              , R = r + 1;
            l.setX(p, b),
            p++,
            l.setX(p, T),
            p++,
            l.setX(p, R),
            p++,
            l.setX(p, T),
            p++,
            l.setX(p, x),
            p++,
            l.setX(p, R),
            p++
        }
    if (this.setIndex(l),
    this.addAttribute("position", u),
    this.addAttribute("uv", h),
    this.computeVertexNormals(),
    i === 2 * Math.PI) {
        var w = this.attributes.normal.array
          , H = new THREE.Vector3
          , M = new THREE.Vector3
          , S = new THREE.Vector3;
        for (r = t * e.length * 3,
        o = 0,
        a = 0; o < e.length; o++,
        a += 3)
            H.x = w[a + 0],
            H.y = w[a + 1],
            H.z = w[a + 2],
            M.x = w[r + a + 0],
            M.y = w[r + a + 1],
            M.z = w[r + a + 2],
            S.addVectors(H, M).normalize(),
            w[a + 0] = w[r + a + 0] = S.x,
            w[a + 1] = w[r + a + 1] = S.y,
            w[a + 2] = w[r + a + 2] = S.z
    }
}
,
THREE.LatheBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry,
THREE.LatheGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this),
    this.type = "LatheGeometry",
    this.parameters = {
        points: e,
        segments: t,
        phiStart: n,
        phiLength: i
    },
    this.fromBufferGeometry(new THREE.LatheBufferGeometry(e,t,n,i)),
    this.mergeVertices()
}
,
THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;
THREE.PlaneGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this),
    this.type = "PlaneGeometry",
    this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: i
    },
    this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,n,i))
}
,
THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry,
THREE.PlaneBufferGeometry = function(e, t, n, i) {
    THREE.BufferGeometry.call(this),
    this.type = "PlaneBufferGeometry",
    this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: i
    };
    for (var r = e / 2, o = t / 2, a = Math.floor(n) || 1, s = Math.floor(i) || 1, c = a + 1, l = s + 1, u = e / a, h = t / s, d = new Float32Array(c * l * 3), p = new Float32Array(c * l * 3), f = new Float32Array(c * l * 2), m = 0, g = 0, v = 0; v < l; v++)
        for (var E = v * h - o, y = 0; y < c; y++) {
            var b = y * u - r;
            d[m] = b,
            d[m + 1] = -E,
            p[m + 2] = 1,
            f[g] = y / a,
            f[g + 1] = 1 - v / s,
            m += 3,
            g += 2
        }
    m = 0;
    for (var T = new (d.length / 3 > 65535 ? Uint32Array : Uint16Array)(a * s * 6), v = 0; v < s; v++)
        for (var y = 0; y < a; y++) {
            var x = y + c * v
              , R = y + c * (v + 1)
              , w = y + 1 + c * (v + 1)
              , H = y + 1 + c * v;
            T[m] = x,
            T[m + 1] = R,
            T[m + 2] = H,
            T[m + 3] = R,
            T[m + 4] = w,
            T[m + 5] = H,
            m += 6
        }
    this.setIndex(new THREE.BufferAttribute(T,1)),
    this.addAttribute("position", new THREE.BufferAttribute(d,3)),
    this.addAttribute("normal", new THREE.BufferAttribute(p,3)),
    this.addAttribute("uv", new THREE.BufferAttribute(f,2))
}
,
THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry,
THREE.RingBufferGeometry = function(e, t, n, i, r, o) {
    THREE.BufferGeometry.call(this),
    this.type = "RingBufferGeometry",
    this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: n,
        phiSegments: i,
        thetaStart: r,
        thetaLength: o
    },
    e = e || 20,
    t = t || 50,
    r = void 0 !== r ? r : 0,
    o = void 0 !== o ? o : 2 * Math.PI,
    n = void 0 !== n ? Math.max(3, n) : 8,
    i = void 0 !== i ? Math.max(1, i) : 1;
    var a, s, c, l = (n + 1) * (i + 1), u = n * i * 2 * 3, h = new THREE.BufferAttribute(new (u > 65535 ? Uint32Array : Uint16Array)(u),1), d = new THREE.BufferAttribute(new Float32Array(3 * l),3), p = new THREE.BufferAttribute(new Float32Array(3 * l),3), f = new THREE.BufferAttribute(new Float32Array(2 * l),2), m = 0, g = 0, v = e, E = (t - e) / i, y = new THREE.Vector3, b = new THREE.Vector2;
    for (s = 0; s <= i; s++) {
        for (c = 0; c <= n; c++)
            a = r + c / n * o,
            y.x = v * Math.cos(a),
            y.y = v * Math.sin(a),
            d.setXYZ(m, y.x, y.y, y.z),
            p.setXYZ(m, 0, 0, 1),
            b.x = (y.x / t + 1) / 2,
            b.y = (y.y / t + 1) / 2,
            f.setXY(m, b.x, b.y),
            m++;
        v += E
    }
    for (s = 0; s < i; s++) {
        var T = s * (n + 1);
        for (c = 0; c < n; c++) {
            a = c + T;
            var x = a
              , R = a + n + 1
              , w = a + n + 2
              , H = a + 1;
            h.setX(g, x),
            g++,
            h.setX(g, R),
            g++,
            h.setX(g, w),
            g++,
            h.setX(g, x),
            g++,
            h.setX(g, w),
            g++,
            h.setX(g, H),
            g++
        }
    }
    this.setIndex(h),
    this.addAttribute("position", d),
    this.addAttribute("normal", p),
    this.addAttribute("uv", f)
}
,
THREE.RingBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry,
THREE.RingGeometry = function(e, t, n, i, r, o) {
    THREE.Geometry.call(this),
    this.type = "RingGeometry",
    this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: n,
        phiSegments: i,
        thetaStart: r,
        thetaLength: o
    },
    this.fromBufferGeometry(new THREE.RingBufferGeometry(e,t,n,i,r,o))
}
,
THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.RingGeometry.prototype.constructor = THREE.RingGeometry,
THREE.SphereGeometry = function(e, t, n, i, r, o, a) {
    THREE.Geometry.call(this),
    this.type = "SphereGeometry",
    this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: i,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    },
    this.fromBufferGeometry(new THREE.SphereBufferGeometry(e,t,n,i,r,o,a))
}
,
THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry,
THREE.SphereBufferGeometry = function(e, t, n, i, r, o, a) {
    THREE.BufferGeometry.call(this),
    this.type = "SphereBufferGeometry",
    this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: i,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    },
    e = e || 50,
    t = Math.max(3, Math.floor(t) || 8),
    n = Math.max(2, Math.floor(n) || 6),
    i = void 0 !== i ? i : 0,
    r = void 0 !== r ? r : 2 * Math.PI,
    o = void 0 !== o ? o : 0,
    a = void 0 !== a ? a : Math.PI;
    for (var s = o + a, c = (t + 1) * (n + 1), l = new THREE.BufferAttribute(new Float32Array(3 * c),3), u = new THREE.BufferAttribute(new Float32Array(3 * c),3), h = new THREE.BufferAttribute(new Float32Array(2 * c),2), d = 0, p = [], f = new THREE.Vector3, m = 0; m <= n; m++) {
        for (var g = [], v = m / n, E = 0; E <= t; E++) {
            var y = E / t
              , b = -e * Math.cos(i + y * r) * Math.sin(o + v * a)
              , T = e * Math.cos(o + v * a)
              , x = e * Math.sin(i + y * r) * Math.sin(o + v * a);
            f.set(b, T, x).normalize(),
            l.setXYZ(d, b, T, x),
            u.setXYZ(d, f.x, f.y, f.z),
            h.setXY(d, y, 1 - v),
            g.push(d),
            d++
        }
        p.push(g)
    }
    for (var R = [], m = 0; m < n; m++)
        for (var E = 0; E < t; E++) {
            var w = p[m][E + 1]
              , H = p[m][E]
              , M = p[m + 1][E]
              , S = p[m + 1][E + 1];
            (0 !== m || o > 0) && R.push(w, H, S),
            (m !== n - 1 || s < Math.PI) && R.push(H, M, S)
        }
    this.setIndex(new (l.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(R,1)),
    this.addAttribute("position", l),
    this.addAttribute("normal", u),
    this.addAttribute("uv", h),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,e)
}
,
THREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry,
THREE.TextGeometry = function(e, t) {
    t = t || {};
    var n = t.font;
    if (n instanceof THREE.Font == !1)
        return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
        new THREE.Geometry;
    var i = n.generateShapes(e, t.size, t.curveSegments);
    t.amount = void 0 !== t.height ? t.height : 50,
    void 0 === t.bevelThickness && (t.bevelThickness = 10),
    void 0 === t.bevelSize && (t.bevelSize = 8),
    void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
    THREE.ExtrudeGeometry.call(this, i, t),
    this.type = "TextGeometry"
}
,
THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype),
THREE.TextGeometry.prototype.constructor = THREE.TextGeometry,
THREE.TorusBufferGeometry = function(e, t, n, i, r) {
    THREE.BufferGeometry.call(this),
    this.type = "TorusBufferGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: i,
        arc: r
    },
    e = e || 100,
    t = t || 40,
    n = Math.floor(n) || 8,
    i = Math.floor(i) || 6,
    r = r || 2 * Math.PI;
    var o, a, s = (n + 1) * (i + 1), c = n * i * 2 * 3, l = new (c > 65535 ? Uint32Array : Uint16Array)(c), u = new Float32Array(3 * s), h = new Float32Array(3 * s), d = new Float32Array(2 * s), p = 0, f = 0, m = 0, g = new THREE.Vector3, v = new THREE.Vector3, E = new THREE.Vector3;
    for (o = 0; o <= n; o++)
        for (a = 0; a <= i; a++) {
            var y = a / i * r
              , b = o / n * Math.PI * 2;
            v.x = (e + t * Math.cos(b)) * Math.cos(y),
            v.y = (e + t * Math.cos(b)) * Math.sin(y),
            v.z = t * Math.sin(b),
            u[p] = v.x,
            u[p + 1] = v.y,
            u[p + 2] = v.z,
            g.x = e * Math.cos(y),
            g.y = e * Math.sin(y),
            E.subVectors(v, g).normalize(),
            h[p] = E.x,
            h[p + 1] = E.y,
            h[p + 2] = E.z,
            d[f] = a / i,
            d[f + 1] = o / n,
            p += 3,
            f += 2
        }
    for (o = 1; o <= n; o++)
        for (a = 1; a <= i; a++) {
            var T = (i + 1) * o + a - 1
              , x = (i + 1) * (o - 1) + a - 1
              , R = (i + 1) * (o - 1) + a
              , w = (i + 1) * o + a;
            l[m] = T,
            l[m + 1] = x,
            l[m + 2] = w,
            l[m + 3] = x,
            l[m + 4] = R,
            l[m + 5] = w,
            m += 6
        }
    this.setIndex(new THREE.BufferAttribute(l,1)),
    this.addAttribute("position", new THREE.BufferAttribute(u,3)),
    this.addAttribute("normal", new THREE.BufferAttribute(h,3)),
    this.addAttribute("uv", new THREE.BufferAttribute(d,2))
}
,
THREE.TorusBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry,
THREE.TorusGeometry = function(e, t, n, i, r) {
    THREE.Geometry.call(this),
    this.type = "TorusGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: i,
        arc: r
    },
    this.fromBufferGeometry(new THREE.TorusBufferGeometry(e,t,n,i,r))
}
,
THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry,
THREE.TorusKnotBufferGeometry = function(e, t, n, i, r, o) {
    function a(e, t, n, i, r) {
        var o = Math.cos(e)
          , a = Math.sin(e)
          , s = n / t * e
          , c = Math.cos(s);
        r.x = i * (2 + c) * .5 * o,
        r.y = i * (2 + c) * a * .5,
        r.z = i * Math.sin(s) * .5
    }
    THREE.BufferGeometry.call(this),
    this.type = "TorusKnotBufferGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        tubularSegments: n,
        radialSegments: i,
        p: r,
        q: o
    },
    e = e || 100,
    t = t || 40,
    n = Math.floor(n) || 64,
    i = Math.floor(i) || 8,
    r = r || 2,
    o = o || 3;
    var s, c, l = (i + 1) * (n + 1), u = i * n * 2 * 3, h = new THREE.BufferAttribute(new (u > 65535 ? Uint32Array : Uint16Array)(u),1), d = new THREE.BufferAttribute(new Float32Array(3 * l),3), p = new THREE.BufferAttribute(new Float32Array(3 * l),3), f = new THREE.BufferAttribute(new Float32Array(2 * l),2), m = 0, g = 0, v = new THREE.Vector3, E = new THREE.Vector3, y = new THREE.Vector2, b = new THREE.Vector3, T = new THREE.Vector3, x = new THREE.Vector3, R = new THREE.Vector3, w = new THREE.Vector3;
    for (s = 0; s <= n; ++s) {
        var H = s / n * r * Math.PI * 2;
        for (a(H, r, o, e, b),
        a(H + .01, r, o, e, T),
        R.subVectors(T, b),
        w.addVectors(T, b),
        x.crossVectors(R, w),
        w.crossVectors(x, R),
        x.normalize(),
        w.normalize(),
        c = 0; c <= i; ++c) {
            var M = c / i * Math.PI * 2
              , S = -t * Math.cos(M)
              , _ = t * Math.sin(M);
            v.x = b.x + (S * w.x + _ * x.x),
            v.y = b.y + (S * w.y + _ * x.y),
            v.z = b.z + (S * w.z + _ * x.z),
            d.setXYZ(m, v.x, v.y, v.z),
            E.subVectors(v, b).normalize(),
            p.setXYZ(m, E.x, E.y, E.z),
            y.x = s / n,
            y.y = c / i,
            f.setXY(m, y.x, y.y),
            m++
        }
    }
    for (c = 1; c <= n; c++)
        for (s = 1; s <= i; s++) {
            var C = (i + 1) * (c - 1) + (s - 1)
              , A = (i + 1) * c + (s - 1)
              , P = (i + 1) * c + s
              , L = (i + 1) * (c - 1) + s;
            h.setX(g, C),
            g++,
            h.setX(g, A),
            g++,
            h.setX(g, L),
            g++,
            h.setX(g, A),
            g++,
            h.setX(g, P),
            g++,
            h.setX(g, L),
            g++
        }
    this.setIndex(h),
    this.addAttribute("position", d),
    this.addAttribute("normal", p),
    this.addAttribute("uv", f)
}
,
THREE.TorusKnotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry,
THREE.TorusKnotGeometry = function(e, t, n, i, r, o, a) {
    THREE.Geometry.call(this),
    this.type = "TorusKnotGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        tubularSegments: n,
        radialSegments: i,
        p: r,
        q: o
    },
    void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
    this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(e,t,n,i,r,o)),
    this.mergeVertices()
}
,
THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry,
THREE.TubeGeometry = function(e, t, n, i, r, o) {
    function a(e, t, n) {
        return C.vertices.push(new THREE.Vector3(e,t,n)) - 1
    }
    THREE.Geometry.call(this),
    this.type = "TubeGeometry",
    this.parameters = {
        path: e,
        segments: t,
        radius: n,
        radialSegments: i,
        closed: r,
        taper: o
    },
    t = t || 64,
    n = n || 1,
    i = i || 8,
    r = r || !1,
    o = o || THREE.TubeGeometry.NoTaper;
    var s, c, l, u, h, d, p, f, m, g, v, E, y, b, T, x, R, w, H, M, S, _ = [], C = this, A = t + 1, P = new THREE.Vector3, L = new THREE.TubeGeometry.FrenetFrames(e,t,r), k = L.tangents, D = L.normals, I = L.binormals;
    for (this.tangents = k,
    this.normals = D,
    this.binormals = I,
    g = 0; g < A; g++)
        for (_[g] = [],
        u = g / (A - 1),
        m = e.getPointAt(u),
        s = k[g],
        c = D[g],
        l = I[g],
        d = n * o(u),
        v = 0; v < i; v++)
            h = v / i * 2 * Math.PI,
            p = -d * Math.cos(h),
            f = d * Math.sin(h),
            P.copy(m),
            P.x += p * c.x + f * l.x,
            P.y += p * c.y + f * l.y,
            P.z += p * c.z + f * l.z,
            _[g][v] = a(P.x, P.y, P.z);
    for (g = 0; g < t; g++)
        for (v = 0; v < i; v++)
            E = r ? (g + 1) % t : g + 1,
            y = (v + 1) % i,
            b = _[g][v],
            T = _[E][v],
            x = _[E][y],
            R = _[g][y],
            w = new THREE.Vector2(g / t,v / i),
            H = new THREE.Vector2((g + 1) / t,v / i),
            M = new THREE.Vector2((g + 1) / t,(v + 1) / i),
            S = new THREE.Vector2(g / t,(v + 1) / i),
            this.faces.push(new THREE.Face3(b,T,R)),
            this.faceVertexUvs[0].push([w, H, S]),
            this.faces.push(new THREE.Face3(T,x,R)),
            this.faceVertexUvs[0].push([H.clone(), M, S.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry,
THREE.TubeGeometry.NoTaper = function(e) {
    return 1
}
,
THREE.TubeGeometry.SinusoidalTaper = function(e) {
    return Math.sin(Math.PI * e)
}
,
THREE.TubeGeometry.FrenetFrames = function(e, t, n) {
    function i() {
        p[0] = new THREE.Vector3,
        f[0] = new THREE.Vector3,
        o = Number.MAX_VALUE,
        a = Math.abs(d[0].x),
        s = Math.abs(d[0].y),
        c = Math.abs(d[0].z),
        a <= o && (o = a,
        h.set(1, 0, 0)),
        s <= o && (o = s,
        h.set(0, 1, 0)),
        c <= o && h.set(0, 0, 1),
        m.crossVectors(d[0], h).normalize(),
        p[0].crossVectors(d[0], m),
        f[0].crossVectors(d[0], p[0])
    }
    var r, o, a, s, c, l, u, h = new THREE.Vector3, d = [], p = [], f = [], m = new THREE.Vector3, g = new THREE.Matrix4, v = t + 1;
    for (this.tangents = d,
    this.normals = p,
    this.binormals = f,
    l = 0; l < v; l++)
        u = l / (v - 1),
        d[l] = e.getTangentAt(u),
        d[l].normalize();
    for (i(),
    l = 1; l < v; l++)
        p[l] = p[l - 1].clone(),
        f[l] = f[l - 1].clone(),
        m.crossVectors(d[l - 1], d[l]),
        m.length() > Number.EPSILON && (m.normalize(),
        r = Math.acos(THREE.Math.clamp(d[l - 1].dot(d[l]), -1, 1)),
        p[l].applyMatrix4(g.makeRotationAxis(m, r))),
        f[l].crossVectors(d[l], p[l]);
    if (n)
        for (r = Math.acos(THREE.Math.clamp(p[0].dot(p[v - 1]), -1, 1)),
        r /= v - 1,
        d[0].dot(m.crossVectors(p[0], p[v - 1])) > 0 && (r = -r),
        l = 1; l < v; l++)
            p[l].applyMatrix4(g.makeRotationAxis(d[l], r * l)),
            f[l].crossVectors(d[l], p[l])
}
,
THREE.PolyhedronGeometry = function(e, t, n, i) {
    function r(e) {
        var t = e.normalize().clone();
        t.index = u.vertices.push(t) - 1;
        var n = s(e) / 2 / Math.PI + .5
          , i = c(e) / Math.PI + .5;
        return t.uv = new THREE.Vector2(n,1 - i),
        t
    }
    function o(e, t, n) {
        var i = new THREE.Face3(e.index,t.index,n.index,[e.clone(), t.clone(), n.clone()]);
        u.faces.push(i),
        y.copy(e).add(t).add(n).divideScalar(3);
        var r = s(y);
        u.faceVertexUvs[0].push([l(e.uv, e, r), l(t.uv, t, r), l(n.uv, n, r)])
    }
    function a(e, t) {
        for (var n = Math.pow(2, t), i = r(u.vertices[e.a]), a = r(u.vertices[e.b]), s = r(u.vertices[e.c]), c = [], l = 0; l <= n; l++) {
            c[l] = [];
            for (var h = r(i.clone().lerp(s, l / n)), d = r(a.clone().lerp(s, l / n)), p = n - l, f = 0; f <= p; f++)
                0 === f && l === n ? c[l][f] = h : c[l][f] = r(h.clone().lerp(d, f / p))
        }
        for (var l = 0; l < n; l++)
            for (var f = 0; f < 2 * (n - l) - 1; f++) {
                var m = Math.floor(f / 2);
                f % 2 === 0 ? o(c[l][m + 1], c[l + 1][m], c[l][m]) : o(c[l][m + 1], c[l + 1][m + 1], c[l + 1][m])
            }
    }
    function s(e) {
        return Math.atan2(e.z, -e.x)
    }
    function c(e) {
        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
    }
    function l(e, t, n) {
        return n < 0 && 1 === e.x && (e = new THREE.Vector2(e.x - 1,e.y)),
        0 === t.x && 0 === t.z && (e = new THREE.Vector2(n / 2 / Math.PI + .5,e.y)),
        e.clone()
    }
    THREE.Geometry.call(this),
    this.type = "PolyhedronGeometry",
    this.parameters = {
        vertices: e,
        indices: t,
        radius: n,
        detail: i
    },
    n = n || 1,
    i = i || 0;
    for (var u = this, h = 0, d = e.length; h < d; h += 3)
        r(new THREE.Vector3(e[h],e[h + 1],e[h + 2]));
    for (var p = this.vertices, f = [], h = 0, m = 0, d = t.length; h < d; h += 3,
    m++) {
        var g = p[t[h]]
          , v = p[t[h + 1]]
          , E = p[t[h + 2]];
        f[m] = new THREE.Face3(g.index,v.index,E.index,[g.clone(), v.clone(), E.clone()])
    }
    for (var y = new THREE.Vector3, h = 0, d = f.length; h < d; h++)
        a(f[h], i);
    for (var h = 0, d = this.faceVertexUvs[0].length; h < d; h++) {
        var b = this.faceVertexUvs[0][h]
          , T = b[0].x
          , x = b[1].x
          , R = b[2].x
          , w = Math.max(T, x, R)
          , H = Math.min(T, x, R);
        w > .9 && H < .1 && (T < .2 && (b[0].x += 1),
        x < .2 && (b[1].x += 1),
        R < .2 && (b[2].x += 1))
    }
    for (var h = 0, d = this.vertices.length; h < d; h++)
        this.vertices[h].multiplyScalar(n);
    this.mergeVertices(),
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,n)
}
,
THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry,
THREE.DodecahedronGeometry = function(e, t) {
    var n = (1 + Math.sqrt(5)) / 2
      , i = 1 / n
      , r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i]
      , o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
    THREE.PolyhedronGeometry.call(this, r, o, e, t),
    this.type = "DodecahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),
THREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry,
THREE.IcosahedronGeometry = function(e, t) {
    var n = (1 + Math.sqrt(5)) / 2
      , i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1]
      , r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
    THREE.PolyhedronGeometry.call(this, i, r, e, t),
    this.type = "IcosahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),
THREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry,
THREE.OctahedronGeometry = function(e, t) {
    var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
      , i = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
    THREE.PolyhedronGeometry.call(this, n, i, e, t),
    this.type = "OctahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),
THREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry,
THREE.TetrahedronGeometry = function(e, t) {
    var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
      , i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
    THREE.PolyhedronGeometry.call(this, n, i, e, t),
    this.type = "TetrahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),
THREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry,
THREE.ParametricGeometry = function(e, t, n) {
    THREE.Geometry.call(this),
    this.type = "ParametricGeometry",
    this.parameters = {
        func: e,
        slices: t,
        stacks: n
    };
    var i, r, o, a, s, c = this.vertices, l = this.faces, u = this.faceVertexUvs[0], h = t + 1;
    for (i = 0; i <= n; i++)
        for (s = i / n,
        r = 0; r <= t; r++)
            a = r / t,
            o = e(a, s),
            c.push(o);
    var d, p, f, m, g, v, E, y;
    for (i = 0; i < n; i++)
        for (r = 0; r < t; r++)
            d = i * h + r,
            p = i * h + r + 1,
            f = (i + 1) * h + r + 1,
            m = (i + 1) * h + r,
            g = new THREE.Vector2(r / t,i / n),
            v = new THREE.Vector2((r + 1) / t,i / n),
            E = new THREE.Vector2((r + 1) / t,(i + 1) / n),
            y = new THREE.Vector2(r / t,(i + 1) / n),
            l.push(new THREE.Face3(d,p,m)),
            u.push([g, v, y]),
            l.push(new THREE.Face3(p,f,m)),
            u.push([v.clone(), E, y.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry,
THREE.WireframeGeometry = function(e) {
    function t(e, t) {
        return e - t
    }
    THREE.BufferGeometry.call(this);
    var n = [0, 0]
      , i = {}
      , r = ["a", "b", "c"];
    if (e instanceof THREE.Geometry) {
        for (var o = e.vertices, a = e.faces, s = 0, c = new Uint32Array(6 * a.length), l = 0, u = a.length; l < u; l++)
            for (var h = a[l], d = 0; d < 3; d++) {
                n[0] = h[r[d]],
                n[1] = h[r[(d + 1) % 3]],
                n.sort(t);
                var p = n.toString();
                void 0 === i[p] && (c[2 * s] = n[0],
                c[2 * s + 1] = n[1],
                i[p] = !0,
                s++)
            }
        for (var f = new Float32Array(2 * s * 3), l = 0, u = s; l < u; l++)
            for (var d = 0; d < 2; d++) {
                var m = o[c[2 * l + d]]
                  , g = 6 * l + 3 * d;
                f[g + 0] = m.x,
                f[g + 1] = m.y,
                f[g + 2] = m.z
            }
        this.addAttribute("position", new THREE.BufferAttribute(f,3))
    } else if (e instanceof THREE.BufferGeometry)
        if (null !== e.index) {
            var v = e.index.array
              , o = e.attributes.position
              , E = e.groups
              , s = 0;
            0 === E.length && e.addGroup(0, v.length);
            for (var c = new Uint32Array(2 * v.length), y = 0, b = E.length; y < b; ++y)
                for (var T = E[y], x = T.start, R = T.count, l = x, w = x + R; l < w; l += 3)
                    for (var d = 0; d < 3; d++) {
                        n[0] = v[l + d],
                        n[1] = v[l + (d + 1) % 3],
                        n.sort(t);
                        var p = n.toString();
                        void 0 === i[p] && (c[2 * s] = n[0],
                        c[2 * s + 1] = n[1],
                        i[p] = !0,
                        s++)
                    }
            for (var f = new Float32Array(2 * s * 3), l = 0, u = s; l < u; l++)
                for (var d = 0; d < 2; d++) {
                    var g = 6 * l + 3 * d
                      , H = c[2 * l + d];
                    f[g + 0] = o.getX(H),
                    f[g + 1] = o.getY(H),
                    f[g + 2] = o.getZ(H)
                }
            this.addAttribute("position", new THREE.BufferAttribute(f,3))
        } else {
            for (var o = e.attributes.position.array, s = o.length / 3, M = s / 3, f = new Float32Array(2 * s * 3), l = 0, u = M; l < u; l++)
                for (var d = 0; d < 3; d++) {
                    var g = 18 * l + 6 * d
                      , S = 9 * l + 3 * d;
                    f[g + 0] = o[S],
                    f[g + 1] = o[S + 1],
                    f[g + 2] = o[S + 2];
                    var H = 9 * l + 3 * ((d + 1) % 3);
                    f[g + 3] = o[H],
                    f[g + 4] = o[H + 1],
                    f[g + 5] = o[H + 2]
                }
            this.addAttribute("position", new THREE.BufferAttribute(f,3))
        }
}
,
THREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry,
THREE.AxisHelper = function(e) {
    e = e || 1;
    var t = new Float32Array([0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e])
      , n = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1])
      , i = new THREE.BufferGeometry;
    i.addAttribute("position", new THREE.BufferAttribute(t,3)),
    i.addAttribute("color", new THREE.BufferAttribute(n,3));
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.LineSegments.call(this, i, r)
}
,
THREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.AxisHelper.prototype.constructor = THREE.AxisHelper,
THREE.ArrowHelper = function() {
    var e = new THREE.BufferGeometry;
    e.addAttribute("position", new THREE.Float32Attribute([0, 0, 0, 0, 1, 0],3));
    var t = new THREE.CylinderBufferGeometry(0,.5,1,5,1);
    return t.translate(0, -.5, 0),
    function(n, i, r, o, a, s) {
        THREE.Object3D.call(this),
        void 0 === o && (o = 16776960),
        void 0 === r && (r = 1),
        void 0 === a && (a = .2 * r),
        void 0 === s && (s = .2 * a),
        this.position.copy(i),
        this.line = new THREE.Line(e,new THREE.LineBasicMaterial({
            color: o
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new THREE.Mesh(t,new THREE.MeshBasicMaterial({
            color: o
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(n),
        this.setLength(r, a, s)
    }
}(),
THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper,
THREE.ArrowHelper.prototype.setDirection = function() {
    var e, t = new THREE.Vector3;
    return function(n) {
        n.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : n.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (t.set(n.z, 0, -n.x).normalize(),
        e = Math.acos(n.y),
        this.quaternion.setFromAxisAngle(t, e))
    }
}(),
THREE.ArrowHelper.prototype.setLength = function(e, t, n) {
    void 0 === t && (t = .2 * e),
    void 0 === n && (n = .2 * t),
    this.line.scale.set(1, Math.max(0, e - t), 1),
    this.line.updateMatrix(),
    this.cone.scale.set(n, t, n),
    this.cone.position.y = e,
    this.cone.updateMatrix()
}
,
THREE.ArrowHelper.prototype.setColor = function(e) {
    this.line.material.color.copy(e),
    this.cone.material.color.copy(e)
}
,
THREE.BoxHelper = function(e, t) {
    void 0 === t && (t = 16776960);
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
      , i = new Float32Array(24)
      , r = new THREE.BufferGeometry;
    r.setIndex(new THREE.BufferAttribute(n,1)),
    r.addAttribute("position", new THREE.BufferAttribute(i,3)),
    THREE.LineSegments.call(this, r, new THREE.LineBasicMaterial({
        color: t
    })),
    void 0 !== e && this.update(e)
}
,
THREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.BoxHelper.prototype.constructor = THREE.BoxHelper,
THREE.BoxHelper.prototype.update = function() {
    var e = new THREE.Box3;
    return function(t) {
        if (t instanceof THREE.Box3 ? e.copy(t) : e.setFromObject(t),
        !e.isEmpty()) {
            var n = e.min
              , i = e.max
              , r = this.geometry.attributes.position
              , o = r.array;
            o[0] = i.x,
            o[1] = i.y,
            o[2] = i.z,
            o[3] = n.x,
            o[4] = i.y,
            o[5] = i.z,
            o[6] = n.x,
            o[7] = n.y,
            o[8] = i.z,
            o[9] = i.x,
            o[10] = n.y,
            o[11] = i.z,
            o[12] = i.x,
            o[13] = i.y,
            o[14] = n.z,
            o[15] = n.x,
            o[16] = i.y,
            o[17] = n.z,
            o[18] = n.x,
            o[19] = n.y,
            o[20] = n.z,
            o[21] = i.x,
            o[22] = n.y,
            o[23] = n.z,
            r.needsUpdate = !0,
            this.geometry.computeBoundingSphere()
        }
    }
}(),
THREE.BoundingBoxHelper = function(e, t) {
    var n = void 0 !== t ? t : 8947848;
    this.object = e,
    this.box = new THREE.Box3,
    THREE.Mesh.call(this, new THREE.BoxGeometry(1,1,1), new THREE.MeshBasicMaterial({
        color: n,
        wireframe: !0
    }))
}
,
THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper,
THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object),
    this.box.size(this.scale),
    this.box.center(this.position)
}
,
THREE.CameraHelper = function(e) {
    function t(e, t, i) {
        n(e, i),
        n(t, i)
    }
    function n(e, t) {
        i.vertices.push(new THREE.Vector3),
        i.colors.push(new THREE.Color(t)),
        void 0 === o[e] && (o[e] = []),
        o[e].push(i.vertices.length - 1)
    }
    var i = new THREE.Geometry
      , r = new THREE.LineBasicMaterial({
        color: 16777215,
        vertexColors: THREE.FaceColors
    })
      , o = {}
      , a = 16755200
      , s = 16711680
      , c = 43775
      , l = 16777215
      , u = 3355443;
    t("n1", "n2", a),
    t("n2", "n4", a),
    t("n4", "n3", a),
    t("n3", "n1", a),
    t("f1", "f2", a),
    t("f2", "f4", a),
    t("f4", "f3", a),
    t("f3", "f1", a),
    t("n1", "f1", a),
    t("n2", "f2", a),
    t("n3", "f3", a),
    t("n4", "f4", a),
    t("p", "n1", s),
    t("p", "n2", s),
    t("p", "n3", s),
    t("p", "n4", s),
    t("u1", "u2", c),
    t("u2", "u3", c),
    t("u3", "u1", c),
    t("c", "t", l),
    t("p", "c", u),
    t("cn1", "cn2", u),
    t("cn3", "cn4", u),
    t("cf1", "cf2", u),
    t("cf3", "cf4", u),
    THREE.LineSegments.call(this, i, r),
    this.camera = e,
    this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.pointMap = o,
    this.update()
}
,
THREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.CameraHelper.prototype.constructor = THREE.CameraHelper,
THREE.CameraHelper.prototype.update = function() {
    function e(e, o, a, s) {
        i.set(o, a, s).unproject(r);
        var c = n[e];
        if (void 0 !== c)
            for (var l = 0, u = c.length; l < u; l++)
                t.vertices[c[l]].copy(i)
    }
    var t, n, i = new THREE.Vector3, r = new THREE.Camera;
    return function() {
        t = this.geometry,
        n = this.pointMap;
        var i = 1
          , o = 1;
        r.projectionMatrix.copy(this.camera.projectionMatrix),
        e("c", 0, 0, -1),
        e("t", 0, 0, 1),
        e("n1", -i, -o, -1),
        e("n2", i, -o, -1),
        e("n3", -i, o, -1),
        e("n4", i, o, -1),
        e("f1", -i, -o, 1),
        e("f2", i, -o, 1),
        e("f3", -i, o, 1),
        e("f4", i, o, 1),
        e("u1", .7 * i, 1.1 * o, -1),
        e("u2", .7 * -i, 1.1 * o, -1),
        e("u3", 0, 2 * o, -1),
        e("cf1", -i, 0, 1),
        e("cf2", i, 0, 1),
        e("cf3", 0, -o, 1),
        e("cf4", 0, o, 1),
        e("cn1", -i, 0, -1),
        e("cn2", i, 0, -1),
        e("cn3", 0, -o, -1),
        e("cn4", 0, o, -1),
        t.verticesNeedUpdate = !0
    }
}(),
THREE.DirectionalLightHelper = function(e, t) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    void 0 === t && (t = 1);
    var n = new THREE.BufferGeometry;
    n.addAttribute("position", new THREE.Float32Attribute([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0],3));
    var i = new THREE.LineBasicMaterial({
        fog: !1
    });
    this.add(new THREE.Line(n,i)),
    n = new THREE.BufferGeometry,
    n.addAttribute("position", new THREE.Float32Attribute([0, 0, 0, 0, 0, 1],3)),
    this.add(new THREE.Line(n,i)),
    this.update()
}
,
THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper,
THREE.DirectionalLightHelper.prototype.dispose = function() {
    var e = this.children[0]
      , t = this.children[1];
    e.geometry.dispose(),
    e.material.dispose(),
    t.geometry.dispose(),
    t.material.dispose()
}
,
THREE.DirectionalLightHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , n = new THREE.Vector3;
    return function() {
        e.setFromMatrixPosition(this.light.matrixWorld),
        t.setFromMatrixPosition(this.light.target.matrixWorld),
        n.subVectors(t, e);
        var i = this.children[0]
          , r = this.children[1];
        i.lookAt(n),
        i.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
        r.lookAt(n),
        r.scale.z = n.length()
    }
}(),
THREE.EdgesHelper = function(e, t, n) {
    var i = void 0 !== t ? t : 16777215;
    THREE.LineSegments.call(this, new THREE.EdgesGeometry(e.geometry,n), new THREE.LineBasicMaterial({
        color: i
    })),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper,
THREE.FaceNormalsHelper = function(e, t, n, i) {
    this.object = e,
    this.size = void 0 !== t ? t : 1;
    var r = void 0 !== n ? n : 16776960
      , o = void 0 !== i ? i : 1
      , a = 0
      , s = this.object.geometry;
    s instanceof THREE.Geometry ? a = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
    var c = new THREE.BufferGeometry
      , l = new THREE.Float32Attribute(2 * a * 3,3);
    c.addAttribute("position", l),
    THREE.LineSegments.call(this, c, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    })),
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper,
THREE.FaceNormalsHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , n = new THREE.Matrix3;
    return function() {
        this.object.updateMatrixWorld(!0),
        n.getNormalMatrix(this.object.matrixWorld);
        for (var i = this.object.matrixWorld, r = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, c = 0, l = 0, u = s.length; l < u; l++) {
            var h = s[l]
              , d = h.normal;
            e.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(i),
            t.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),
            r.setXYZ(c, e.x, e.y, e.z),
            c += 1,
            r.setXYZ(c, t.x, t.y, t.z),
            c += 1
        }
        return r.needsUpdate = !0,
        this
    }
}(),
THREE.GridHelper = function(e, t, n, i) {
    t = t || 1,
    n = new THREE.Color(void 0 !== n ? n : 4473924),
    i = new THREE.Color(void 0 !== i ? i : 8947848);
    for (var r = t / 2, o = 2 * e / t, a = [], s = [], c = 0, l = 0, u = -e; c <= t; c++,
    u += o) {
        a.push(-e, 0, u, e, 0, u),
        a.push(u, 0, -e, u, 0, e);
        var h = c === r ? n : i;
        h.toArray(s, l),
        l += 3,
        h.toArray(s, l),
        l += 3,
        h.toArray(s, l),
        l += 3,
        h.toArray(s, l),
        l += 3
    }
    var d = new THREE.BufferGeometry;
    d.addAttribute("position", new THREE.Float32Attribute(a,3)),
    d.addAttribute("color", new THREE.Float32Attribute(s,3));
    var p = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.LineSegments.call(this, d, p)
}
,
THREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.GridHelper.prototype.constructor = THREE.GridHelper,
THREE.GridHelper.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
}
,
THREE.HemisphereLightHelper = function(e, t) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.colors = [new THREE.Color, new THREE.Color];
    var n = new THREE.SphereGeometry(t,4,2);
    n.rotateX(-Math.PI / 2);
    for (var i = 0, r = 8; i < r; i++)
        n.faces[i].color = this.colors[i < 4 ? 0 : 1];
    var o = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    });
    this.lightSphere = new THREE.Mesh(n,o),
    this.add(this.lightSphere),
    this.update()
}
,
THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper,
THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose(),
    this.lightSphere.material.dispose()
}
,
THREE.HemisphereLightHelper.prototype.update = function() {
    var e = new THREE.Vector3;
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
        this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),
        this.lightSphere.geometry.colorsNeedUpdate = !0
    }
}(),
THREE.PointLightHelper = function(e, t) {
    this.light = e,
    this.light.updateMatrixWorld();
    var n = new THREE.SphereBufferGeometry(t,4,2)
      , i = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    i.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    THREE.Mesh.call(this, n, i),
    this.matrix = this.light.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper,
THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose(),
    this.material.dispose()
}
,
THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
}
,
THREE.SkeletonHelper = function(e) {
    this.bones = this.getBoneList(e);
    for (var t = new THREE.Geometry, n = 0; n < this.bones.length; n++) {
        var i = this.bones[n];
        i.parent instanceof THREE.Bone && (t.vertices.push(new THREE.Vector3),
        t.vertices.push(new THREE.Vector3),
        t.colors.push(new THREE.Color(0,0,1)),
        t.colors.push(new THREE.Color(0,1,0)))
    }
    t.dynamic = !0;
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    });
    THREE.LineSegments.call(this, t, r),
    this.root = e,
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper,
THREE.SkeletonHelper.prototype.getBoneList = function(e) {
    var t = [];
    e instanceof THREE.Bone && t.push(e);
    for (var n = 0; n < e.children.length; n++)
        t.push.apply(t, this.getBoneList(e.children[n]));
    return t
}
,
THREE.SkeletonHelper.prototype.update = function() {
    for (var e = this.geometry, t = (new THREE.Matrix4).getInverse(this.root.matrixWorld), n = new THREE.Matrix4, i = 0, r = 0; r < this.bones.length; r++) {
        var o = this.bones[r];
        o.parent instanceof THREE.Bone && (n.multiplyMatrices(t, o.matrixWorld),
        e.vertices[i].setFromMatrixPosition(n),
        n.multiplyMatrices(t, o.parent.matrixWorld),
        e.vertices[i + 1].setFromMatrixPosition(n),
        i += 2)
    }
    e.verticesNeedUpdate = !0,
    e.computeBoundingSphere()
}
,
THREE.SpotLightHelper = function(e) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1;
    for (var t = new THREE.BufferGeometry, n = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, r = 1, o = 32; i < o; i++,
    r++) {
        var a = i / o * Math.PI * 2
          , s = r / o * Math.PI * 2;
        n.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1)
    }
    t.addAttribute("position", new THREE.Float32Attribute(n,3));
    var c = new THREE.LineBasicMaterial({
        fog: !1
    });
    this.cone = new THREE.LineSegments(t,c),
    this.add(this.cone),
    this.update()
}
,
THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper,
THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose(),
    this.cone.material.dispose()
}
,
THREE.SpotLightHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3;
    return function() {
        var n = this.light.distance ? this.light.distance : 1e3
          , i = n * Math.tan(this.light.angle);
        this.cone.scale.set(i, i, n),
        e.setFromMatrixPosition(this.light.matrixWorld),
        t.setFromMatrixPosition(this.light.target.matrixWorld),
        this.cone.lookAt(t.sub(e)),
        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}(),
THREE.VertexNormalsHelper = function(e, t, n, i) {
    this.object = e,
    this.size = void 0 !== t ? t : 1;
    var r = void 0 !== n ? n : 16711680
      , o = void 0 !== i ? i : 1
      , a = 0
      , s = this.object.geometry;
    s instanceof THREE.Geometry ? a = 3 * s.faces.length : s instanceof THREE.BufferGeometry && (a = s.attributes.normal.count);
    var c = new THREE.BufferGeometry
      , l = new THREE.Float32Attribute(2 * a * 3,3);
    c.addAttribute("position", l),
    THREE.LineSegments.call(this, c, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    })),
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper,
THREE.VertexNormalsHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , n = new THREE.Matrix3;
    return function() {
        var i = ["a", "b", "c"];
        this.object.updateMatrixWorld(!0),
        n.getNormalMatrix(this.object.matrixWorld);
        var r = this.object.matrixWorld
          , o = this.geometry.attributes.position
          , a = this.object.geometry;
        if (a instanceof THREE.Geometry)
            for (var s = a.vertices, c = a.faces, l = 0, u = 0, h = c.length; u < h; u++)
                for (var d = c[u], p = 0, f = d.vertexNormals.length; p < f; p++) {
                    var m = s[d[i[p]]]
                      , g = d.vertexNormals[p];
                    e.copy(m).applyMatrix4(r),
                    t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),
                    o.setXYZ(l, e.x, e.y, e.z),
                    l += 1,
                    o.setXYZ(l, t.x, t.y, t.z),
                    l += 1
                }
        else if (a instanceof THREE.BufferGeometry)
            for (var v = a.attributes.position, E = a.attributes.normal, l = 0, p = 0, f = v.count; p < f; p++)
                e.set(v.getX(p), v.getY(p), v.getZ(p)).applyMatrix4(r),
                t.set(E.getX(p), E.getY(p), E.getZ(p)),
                t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),
                o.setXYZ(l, e.x, e.y, e.z),
                l += 1,
                o.setXYZ(l, t.x, t.y, t.z),
                l += 1;
        return o.needsUpdate = !0,
        this
    }
}(),
THREE.WireframeHelper = function(e, t) {
    var n = void 0 !== t ? t : 16777215;
    THREE.LineSegments.call(this, new THREE.WireframeGeometry(e.geometry), new THREE.LineBasicMaterial({
        color: n
    })),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype),
THREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper,
THREE.ImmediateRenderObject = function(e) {
    THREE.Object3D.call(this),
    this.material = e,
    this.render = function(e) {}
}
,
THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype),
THREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject,
THREE.MorphBlendMesh = function(e, t) {
    THREE.Mesh.call(this, e, t),
    this.animationsMap = {},
    this.animationsList = [];
    var n = this.geometry.morphTargets.length
      , i = "__default"
      , r = 0
      , o = n - 1
      , a = n / 1;
    this.createAnimation(i, r, o, a),
    this.setAnimationWeight(i, 1)
}
,
THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh,
THREE.MorphBlendMesh.prototype.createAnimation = function(e, t, n, i) {
    var r = {
        start: t,
        end: n,
        length: n - t + 1,
        fps: i,
        duration: (n - t) / i,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    };
    this.animationsMap[e] = r,
    this.animationsList.push(r)
}
,
THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(e) {
    for (var t, n = /([a-z]+)_?(\d+)/i, i = {}, r = this.geometry, o = 0, a = r.morphTargets.length; o < a; o++) {
        var s = r.morphTargets[o]
          , c = s.name.match(n);
        if (c && c.length > 1) {
            var l = c[1];
            i[l] || (i[l] = {
                start: 1 / 0,
                end: -(1 / 0)
            });
            var u = i[l];
            o < u.start && (u.start = o),
            o > u.end && (u.end = o),
            t || (t = l)
        }
    }
    for (var l in i) {
        var u = i[l];
        this.createAnimation(l, u.start, u.end, e)
    }
    this.firstAnimation = t
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = 1,
    t.directionBackwards = !1)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = -1,
    t.directionBackwards = !0)
}
,
THREE.MorphBlendMesh.prototype.setAnimationFPS = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.fps = t,
    n.duration = (n.end - n.start) / n.fps)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDuration = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.duration = t,
    n.fps = (n.end - n.start) / n.duration)
}
,
THREE.MorphBlendMesh.prototype.setAnimationWeight = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.weight = t)
}
,
THREE.MorphBlendMesh.prototype.setAnimationTime = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.time = t)
}
,
THREE.MorphBlendMesh.prototype.getAnimationTime = function(e) {
    var t = 0
      , n = this.animationsMap[e];
    return n && (t = n.time),
    t
}
,
THREE.MorphBlendMesh.prototype.getAnimationDuration = function(e) {
    var t = -1
      , n = this.animationsMap[e];
    return n && (t = n.duration),
    t
}
,
THREE.MorphBlendMesh.prototype.playAnimation = function(e) {
    var t = this.animationsMap[e];
    t ? (t.time = 0,
    t.active = !0) : console.warn("THREE.MorphBlendMesh: animation[" + e + "] undefined in .playAnimation()")
}
,
THREE.MorphBlendMesh.prototype.stopAnimation = function(e) {
    var t = this.animationsMap[e];
    t && (t.active = !1)
}
,
THREE.MorphBlendMesh.prototype.update = function(e) {
    for (var t = 0, n = this.animationsList.length; t < n; t++) {
        var i = this.animationsList[t];
        if (i.active) {
            var r = i.duration / i.length;
            i.time += i.direction * e,
            i.mirroredLoop ? (i.time > i.duration || i.time < 0) && (i.direction *= -1,
            i.time > i.duration && (i.time = i.duration,
            i.directionBackwards = !0),
            i.time < 0 && (i.time = 0,
            i.directionBackwards = !1)) : (i.time = i.time % i.duration,
            i.time < 0 && (i.time += i.duration));
            var o = i.start + THREE.Math.clamp(Math.floor(i.time / r), 0, i.length - 1)
              , a = i.weight;
            o !== i.currentFrame && (this.morphTargetInfluences[i.lastFrame] = 0,
            this.morphTargetInfluences[i.currentFrame] = 1 * a,
            this.morphTargetInfluences[o] = 0,
            i.lastFrame = i.currentFrame,
            i.currentFrame = o);
            var s = i.time % r / r;
            i.directionBackwards && (s = 1 - s),
            i.currentFrame !== i.lastFrame ? (this.morphTargetInfluences[i.currentFrame] = s * a,
            this.morphTargetInfluences[i.lastFrame] = (1 - s) * a) : this.morphTargetInfluences[i.currentFrame] = a
        }
    }
}
;
var THREEx = THREEx || {};
THREEx.KeyboardState = function(e) {
    this.domElement = e || document,
    this.keyCodes = {},
    this.modifiers = {};
    var t = this;
    this._onKeyDown = function(e) {
        t._onKeyChange(e)
    }
    ,
    this._onKeyUp = function(e) {
        t._onKeyChange(e)
    }
    ,
    this.domElement.addEventListener("keydown", this._onKeyDown, !1),
    this.domElement.addEventListener("keyup", this._onKeyUp, !1),
    this._onBlur = function() {
        for (var e in t.keyCodes)
            t.keyCodes[e] = !1;
        for (var e in t.modifiers)
            t.modifiers[e] = !1
    }
    ,
    window.addEventListener("blur", this._onBlur, !1)
}
,
THREEx.KeyboardState.prototype.destroy = function() {
    this.domElement.removeEventListener("keydown", this._onKeyDown, !1),
    this.domElement.removeEventListener("keyup", this._onKeyUp, !1),
    window.removeEventListener("blur", this._onBlur, !1)
}
,
THREEx.KeyboardState.MODIFIERS = ["shift", "ctrl", "alt", "meta"],
THREEx.KeyboardState.ALIAS = {
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    space: 32,
    pageup: 33,
    pagedown: 34,
    tab: 9,
    escape: 27
},
THREEx.KeyboardState.prototype._onKeyChange = function(e) {
    var t = e.keyCode
      , n = "keydown" === e.type;
    this.keyCodes[t] = n,
    this.modifiers.shift = e.shiftKey,
    this.modifiers.ctrl = e.ctrlKey,
    this.modifiers.alt = e.altKey,
    this.modifiers.meta = e.metaKey,
    t == THREEx.KeyboardState.ALIAS.space || t == THREEx.KeyboardState.ALIAS.up || t == THREEx.KeyboardState.ALIAS.down
}
,
THREEx.KeyboardState.prototype.pressed = function(e) {
    for (var t = e.split("+"), n = 0; n < t.length; n++) {
        var i = t[n]
          , r = !1;
        if (r = THREEx.KeyboardState.MODIFIERS.indexOf(i) !== -1 ? this.modifiers[i] : Object.keys(THREEx.KeyboardState.ALIAS).indexOf(i) != -1 ? this.keyCodes[THREEx.KeyboardState.ALIAS[i]] : this.keyCodes[i.toUpperCase().charCodeAt(0)],
        !r)
            return !1
    }
    return !0
}
,
THREEx.KeyboardState.prototype.eventMatches = function(e, t) {
    for (var n = THREEx.KeyboardState.ALIAS, i = Object.keys(n), r = t.split("+"), o = 0; o < r.length; o++) {
        var a = r[o]
          , s = !1;
        if ("shift" === a ? s = !!e.shiftKey : "ctrl" === a ? s = !!e.ctrlKey : "alt" === a ? s = !!e.altKey : "meta" === a ? s = !!e.metaKey : i.indexOf(a) !== -1 ? s = e.keyCode === n[a] : e.keyCode === a.toUpperCase().charCodeAt(0) && (s = !0),
        !s)
            return !1
    }
    return !0
}
,
define("keyboard", [], function() {
    return THREEx.KeyboardState
}),
function(e) {
    function t(e, t, n, i, r) {
        this._listener = t,
        this._isOnce = n,
        this.context = i,
        this._signal = e,
        this._priority = r || 0
    }
    function n(e, t) {
        if ("function" != typeof e)
            throw new Error("listener is a required param of {fn}() and should be a Function.".replace("{fn}", t))
    }
    function i() {
        this._bindings = [],
        this._prevParams = null;
        var e = this;
        this.dispatch = function() {
            i.prototype.dispatch.apply(e, arguments)
        }
    }
    t.prototype = {
        active: !0,
        params: null,
        execute: function(e) {
            var t, n;
            return this.active && this._listener && (n = this.params ? this.params.concat(e) : e,
            t = this._listener.apply(this.context, n),
            this._isOnce && this.detach()),
            t
        },
        detach: function() {
            return this.isBound() ? this._signal.remove(this._listener, this.context) : null
        },
        isBound: function() {
            return !!this._signal && !!this._listener
        },
        isOnce: function() {
            return this._isOnce
        },
        getListener: function() {
            return this._listener
        },
        getSignal: function() {
            return this._signal
        },
        _destroy: function() {
            delete this._signal,
            delete this._listener,
            delete this.context
        },
        toString: function() {
            return "[SignalBinding isOnce:" + this._isOnce + ", isBound:" + this.isBound() + ", active:" + this.active + "]"
        }
    },
    i.prototype = {
        VERSION: "1.0.0",
        memorize: !1,
        _shouldPropagate: !0,
        active: !0,
        _registerListener: function(e, n, i, r) {
            var o, a = this._indexOfListener(e, i);
            if (a !== -1) {
                if (o = this._bindings[a],
                o.isOnce() !== n)
                    throw new Error("You cannot add" + (n ? "" : "Once") + "() then add" + (n ? "Once" : "") + "() the same listener without removing the relationship first.")
            } else
                o = new t(this,e,n,i,r),
                this._addBinding(o);
            return this.memorize && this._prevParams && o.execute(this._prevParams),
            o
        },
        _addBinding: function(e) {
            var t = this._bindings.length;
            do
                --t;
            while (this._bindings[t] && e._priority <= this._bindings[t]._priority);this._bindings.splice(t + 1, 0, e)
        },
        _indexOfListener: function(e, t) {
            for (var n, i = this._bindings.length; i--; )
                if (n = this._bindings[i],
                n._listener === e && n.context === t)
                    return i;
            return -1
        },
        has: function(e, t) {
            return this._indexOfListener(e, t) !== -1
        },
        add: function(e, t, i) {
            return n(e, "add"),
            this._registerListener(e, !1, t, i)
        },
        addOnce: function(e, t, i) {
            return n(e, "addOnce"),
            this._registerListener(e, !0, t, i)
        },
        remove: function(e, t) {
            n(e, "remove");
            var i = this._indexOfListener(e, t);
            return i !== -1 && (this._bindings[i]._destroy(),
            this._bindings.splice(i, 1)),
            e
        },
        removeAll: function() {
            for (var e = this._bindings.length; e--; )
                this._bindings[e]._destroy();
            this._bindings.length = 0
        },
        getNumListeners: function() {
            return this._bindings.length
        },
        halt: function() {
            this._shouldPropagate = !1
        },
        dispatch: function(e) {
            if (this.active) {
                var t, n = Array.prototype.slice.call(arguments), i = this._bindings.length;
                if (this.memorize && (this._prevParams = n),
                i) {
                    t = this._bindings.slice(),
                    this._shouldPropagate = !0;
                    do
                        i--;
                    while (t[i] && this._shouldPropagate && t[i].execute(n) !== !1)
                }
            }
        },
        forget: function() {
            this._prevParams = null
        },
        dispose: function() {
            this.removeAll(),
            delete this._bindings,
            delete this._prevParams
        },
        toString: function() {
            return "[Signal active:" + this.active + " numListeners:" + this.getNumListeners() + "]"
        }
    };
    var r = i;
    r.Signal = i,
    "function" == typeof define && define.amd ? define("js-signals", [], function() {
        return r
    }) : "undefined" != typeof module && module.exports ? module.exports = r : e.signals = r
}(this),
define("game/object", ["three", "js-signals"], function(e, t) {
    var n = function() {
        this.position = new e.Vector3,
        this.velocity = new e.Vector3,
        this.attributes = {},
        this.onRender = new t.Signal,
        this.onLocalUpdate = new t.Signal,
        this.onServerUpdate = new t.Signal,
        this.onUpdateAttrib = new t.Signal,
        this.renderPrediction = !0,
        this.updatePrediction = !0,
        this.autoPositionThree = !0,
        this.threeContainer = new e.Object3D
    };
    return n.prototype.render = function(e, t) {
        if (this.renderPrediction) {
            var n = this.position.x + this.velocity.x * (e + t) / 1e3
              , i = this.position.y + this.velocity.y * (e + t) / 1e3;
            this.threeContainer.position.set(n, i, this.position.z)
        } else
            this.autoPositionThree && this.threeContainer.position.copy(this.position);
        this.onRender.dispatch(this, e, t)
    }
    ,
    n.prototype.localUpdate = function(e, t) {
        this.updatePrediction && (this.position.x += this.velocity.x * e,
        this.position.y += this.velocity.y * e),
        this.onLocalUpdate.dispatch(this, e, t)
    }
    ,
    n.prototype.serverUpdate = function(e, t) {
        this.playerPrediction || this.playerBouncePrediction || (this.position.x = e.x,
        this.position.y = e.y,
        this.velocity.x = t.x,
        this.velocity.y = t.y),
        this.onServerUpdate.dispatch(this, e, t)
    }
    ,
    n.prototype.updateAttrib = function(e, t) {
        var n = this.attributes[e];
        this.attributes[e] = t,
        this.onUpdateAttrib.dispatch(this, e, t, n)
    }
    ,
    n
}),
define("game/scene", ["three", "game/object", "js-signals"], function(e, t, n) {
    function i() {
        this.attributes = {},
        this.onRender = new n.Signal,
        this.onLocalUpdate = new n.Signal,
        this.onServerUpdate = new n.Signal,
        this.onUpdateAttrib = new n.Signal,
        this.threeContainer = new e.Object3D,
        this.objectIdHash = {},
        this.layerHash = {},
        this.objectList = [],
        this.toRemove = [],
        this.toAdd = [],
        this.updating = !1,
        this.layers = {}
    }
    return i.prototype.realAdd = function(e) {
        void 0 !== e.id && e.id >= 0 && (this.objectIdHash.hasOwnProperty(e.id) && console.log("Object ID collision! ID: " + e.id),
        this.objectIdHash[e.id] = e.obj,
        e.obj.id = e.id),
        this.objectList.push(e.obj)
    }
    ,
    i.prototype.add = function(t, n, i) {
        var r = {
            obj: t,
            id: n,
            layer: i
        };
        this.toAdd.push(r),
        this.updating || this.flushRemoveCache();
        var o = this.threeContainer;
        i && (this.layers.hasOwnProperty(i) ? o = this.layers[i] : (o = new e.Object3D,
        this.threeContainer.add(o),
        this.layers[i] = o),
        this.layerHash[t] = i),
        o.add(t.threeContainer)
    }
    ,
    i.prototype.remove = function(e) {
        this.layerHash.hasOwnProperty(e) ? this.layers[this.layerHash[e]].remove(e.threeContainer) : this.threeContainer.remove(e.threeContainer),
        e.hasOwnProperty("id") && this.objectIdHash.hasOwnProperty(e.id) && delete this.objectIdHash[e.id],
        this.toRemove.push(e),
        this.updating || this.flushRemoveCache()
    }
    ,
    i.prototype.flushRemoveCache = function() {
        if (this.updating)
            console.log("attempted flush during update loop");
        else {
            for (var e = 0; e < this.toRemove.length; e++)
                this.objectList.splice(this.objectList.indexOf(this.toRemove[e]), 1);
            this.toRemove = [];
            for (var e = 0; e < this.toAdd.length; e++)
                this.realAdd(this.toAdd[e]);
            this.toAdd = []
        }
    }
    ,
    i.prototype.render = function(e, t) {
        for (var n = 0; n < this.objectList.length; n++) {
            var i = this.objectList[n];
            i.render(e, t)
        }
        this.onRender.dispatch(this)
    }
    ,
    i.prototype.localUpdate = function(e, t, n, i) {
        this.flushRemoveCache(),
        this.updating = !0;
        for (var r = 0; r < this.objectList.length; r++) {
            var o = this.objectList[r];
            o.localUpdate(e, t)
        }
        this.updating = !1,
        this.flushRemoveCache(),
        this.onLocalUpdate.dispatch(this, e, t)
    }
    ,
    i.prototype.serverUpdate = function(e) {
        if (e.hasOwnProperty("objects"))
            for (var t in e.objects)
                if (e.objects.hasOwnProperty(t)) {
                    var n = e.objects[t];
                    this.objectIdHash[n.id].serverUpdate(n.position, n.velocity)
                }
        if (e.hasOwnProperty("attribs"))
            for (var i = 0; i < e.attribs.length; i++) {
                var r = e.attribs[i];
                this.objectIdHash[r.id].updateAttrib(r.name, r.value)
            }
        if (e.hasOwnProperty("delete"))
            for (var i = 0; i < e.delete.length; i++) {
                var o = e.delete[i]
                  , a = this.objectIdHash[o.id];
                this.remove(a)
            }
        this.onServerUpdate.dispatch(this, e)
    }
    ,
    i
}),
function(e, t) {
    "use strict";
    "function" == typeof define && define.amd ? define("sat", t) : "object" == typeof exports ? module.exports = t() : e.SAT = t()
}(this, function() {
    "use strict";
    function e(e, t) {
        this.x = e || 0,
        this.y = t || 0
    }
    function t(t, n) {
        this.pos = t || new e,
        this.r = n || 0
    }
    function n(t, n) {
        this.pos = t || new e,
        this.angle = 0,
        this.offset = new e,
        this.setPoints(n || [])
    }
    function i(t, n, i) {
        this.pos = t || new e,
        this.w = n || 0,
        this.h = i || 0
    }
    function r() {
        this.a = null,
        this.b = null,
        this.overlapN = new e,
        this.overlapV = new e,
        this.clear()
    }
    function o(e, t, n) {
        for (var i = Number.MAX_VALUE, r = -Number.MAX_VALUE, o = e.length, a = 0; a < o; a++) {
            var s = e[a].dot(t);
            s < i && (i = s),
            s > r && (r = s)
        }
        n[0] = i,
        n[1] = r
    }
    function a(e, t, n, i, r, a) {
        var s = v.pop()
          , c = v.pop()
          , l = m.pop().copy(t).sub(e)
          , u = l.dot(r);
        if (o(n, r, s),
        o(i, r, c),
        c[0] += u,
        c[1] += u,
        s[0] > c[1] || c[0] > s[1])
            return m.push(l),
            v.push(s),
            v.push(c),
            !0;
        if (a) {
            var h = 0;
            if (s[0] < c[0])
                if (a.aInB = !1,
                s[1] < c[1])
                    h = s[1] - c[0],
                    a.bInA = !1;
                else {
                    var d = s[1] - c[0]
                      , p = c[1] - s[0];
                    h = d < p ? d : -p
                }
            else if (a.bInA = !1,
            s[1] > c[1])
                h = s[0] - c[1],
                a.aInB = !1;
            else {
                var d = s[1] - c[0]
                  , p = c[1] - s[0];
                h = d < p ? d : -p
            }
            var f = Math.abs(h);
            f < a.overlap && (a.overlap = f,
            a.overlapN.copy(r),
            h < 0 && a.overlapN.reverse())
        }
        return m.push(l),
        v.push(s),
        v.push(c),
        !1
    }
    function s(e, t) {
        var n = e.len2()
          , i = t.dot(e);
        return i < 0 ? b : i > n ? x : T
    }
    function c(e, t) {
        var n = m.pop().copy(e).sub(t.pos)
          , i = t.r * t.r
          , r = n.len2();
        return m.push(n),
        r <= i
    }
    function l(e, t) {
        y.pos.copy(e),
        E.clear();
        var n = p(y, t, E);
        return n && (n = E.aInB),
        n
    }
    function u(e, t, n) {
        var i = m.pop().copy(t.pos).sub(e.pos)
          , r = e.r + t.r
          , o = r * r
          , a = i.len2();
        if (a > o)
            return m.push(i),
            !1;
        if (n) {
            var s = Math.sqrt(a);
            n.a = e,
            n.b = t,
            n.overlap = r - s,
            n.overlapN.copy(i.normalize()),
            n.overlapV.copy(i).scale(n.overlap),
            n.aInB = e.r <= t.r && s <= t.r - e.r,
            n.bInA = t.r <= e.r && s <= e.r - t.r
        }
        return m.push(i),
        !0
    }
    function h(e, t, n) {
        for (var i = m.pop().copy(t.pos).sub(e.pos), r = t.r, o = r * r, a = e.calcPoints, c = a.length, l = m.pop(), u = m.pop(), h = 0; h < c; h++) {
            var d = h === c - 1 ? 0 : h + 1
              , p = 0 === h ? c - 1 : h - 1
              , f = 0
              , g = null;
            l.copy(e.edges[h]),
            u.copy(i).sub(a[h]),
            n && u.len2() > o && (n.aInB = !1);
            var v = s(l, u);
            if (v === b) {
                l.copy(e.edges[p]);
                var E = m.pop().copy(i).sub(a[p]);
                if (v = s(l, E),
                v === x) {
                    var y = u.len();
                    if (y > r)
                        return m.push(i),
                        m.push(l),
                        m.push(u),
                        m.push(E),
                        !1;
                    n && (n.bInA = !1,
                    g = u.normalize(),
                    f = r - y)
                }
                m.push(E)
            } else if (v === x) {
                if (l.copy(e.edges[d]),
                u.copy(i).sub(a[d]),
                v = s(l, u),
                v === b) {
                    var y = u.len();
                    if (y > r)
                        return m.push(i),
                        m.push(l),
                        m.push(u),
                        !1;
                    n && (n.bInA = !1,
                    g = u.normalize(),
                    f = r - y)
                }
            } else {
                var T = l.perp().normalize()
                  , y = u.dot(T)
                  , R = Math.abs(y);
                if (y > 0 && R > r)
                    return m.push(i),
                    m.push(T),
                    m.push(u),
                    !1;
                n && (g = T,
                f = r - y,
                (y >= 0 || f < 2 * r) && (n.bInA = !1))
            }
            g && n && Math.abs(f) < Math.abs(n.overlap) && (n.overlap = f,
            n.overlapN.copy(g))
        }
        return n && (n.a = e,
        n.b = t,
        n.overlapV.copy(n.overlapN).scale(n.overlap)),
        m.push(i),
        m.push(l),
        m.push(u),
        !0
    }
    function d(e, t, n) {
        var i = h(t, e, n);
        if (i && n) {
            var r = n.a
              , o = n.aInB;
            n.overlapN.reverse(),
            n.overlapV.reverse(),
            n.a = n.b,
            n.b = r,
            n.aInB = n.bInA,
            n.bInA = o
        }
        return i
    }
    function p(e, t, n) {
        for (var i = e.calcPoints, r = i.length, o = t.calcPoints, s = o.length, c = 0; c < r; c++)
            if (a(e.pos, t.pos, i, o, e.normals[c], n))
                return !1;
        for (var c = 0; c < s; c++)
            if (a(e.pos, t.pos, i, o, t.normals[c], n))
                return !1;
        return n && (n.a = e,
        n.b = t,
        n.overlapV.copy(n.overlapN).scale(n.overlap)),
        !0
    }
    var f = {};
    f.Vector = e,
    f.V = e,
    e.prototype.copy = e.prototype.copy = function(e) {
        return this.x = e.x,
        this.y = e.y,
        this
    }
    ,
    e.prototype.clone = e.prototype.clone = function() {
        return new e(this.x,this.y)
    }
    ,
    e.prototype.perp = e.prototype.perp = function() {
        var e = this.x;
        return this.x = this.y,
        this.y = -e,
        this
    }
    ,
    e.prototype.rotate = e.prototype.rotate = function(e) {
        var t = this.x
          , n = this.y;
        return this.x = t * Math.cos(e) - n * Math.sin(e),
        this.y = t * Math.sin(e) + n * Math.cos(e),
        this
    }
    ,
    e.prototype.reverse = e.prototype.reverse = function() {
        return this.x = -this.x,
        this.y = -this.y,
        this
    }
    ,
    e.prototype.getAngle = e.prototype.getAngle = function() {
        return Math.atan2(this.y, this.x)
    }
    ,
    e.prototype.normalize = e.prototype.normalize = function() {
        var e = this.len();
        return e > 0 && (this.x = this.x / e,
        this.y = this.y / e),
        this
    }
    ,
    e.prototype.add = e.prototype.add = function(e) {
        return this.x += e.x,
        this.y += e.y,
        this
    }
    ,
    e.prototype.sub = e.prototype.sub = function(e) {
        return this.x -= e.x,
        this.y -= e.y,
        this
    }
    ,
    e.prototype.scale = e.prototype.scale = function(e, t) {
        return this.x *= e,
        this.y *= t || e,
        this
    }
    ,
    e.prototype.project = e.prototype.project = function(e) {
        var t = this.dot(e) / e.len2();
        return this.x = t * e.x,
        this.y = t * e.y,
        this
    }
    ,
    e.prototype.projectN = e.prototype.projectN = function(e) {
        var t = this.dot(e);
        return this.x = t * e.x,
        this.y = t * e.y,
        this
    }
    ,
    e.prototype.reflect = e.prototype.reflect = function(e) {
        var t = this.x
          , n = this.y;
        return this.project(e).scale(2),
        this.x -= t,
        this.y -= n,
        this
    }
    ,
    e.prototype.reflectN = e.prototype.reflectN = function(e) {
        var t = this.x
          , n = this.y;
        return this.projectN(e).scale(2),
        this.x -= t,
        this.y -= n,
        this
    }
    ,
    e.prototype.dot = e.prototype.dot = function(e) {
        return this.x * e.x + this.y * e.y
    }
    ,
    e.prototype.len2 = e.prototype.len2 = function() {
        return this.dot(this)
    }
    ,
    e.prototype.len = e.prototype.len = function() {
        return Math.sqrt(this.len2())
    }
    ,
    f.Circle = t,
    t.prototype.getAABB = t.prototype.getAABB = function() {
        var t = this.r
          , n = this.pos.clone().sub(new e(t,t));
        return new i(n,2 * t,2 * t).toPolygon()
    }
    ,
    f.Polygon = n,
    n.prototype.setPoints = n.prototype.setPoints = function(t) {
        var n = !this.points || this.points.length !== t.length;
        if (n) {
            var i, r = this.calcPoints = [], o = this.edges = [], a = this.normals = [];
            for (i = 0; i < t.length; i++)
                r.push(new e),
                o.push(new e),
                a.push(new e)
        }
        return this.points = t,
        this._recalc(),
        this
    }
    ,
    n.prototype.setAngle = n.prototype.setAngle = function(e) {
        return this.angle = e,
        this._recalc(),
        this
    }
    ,
    n.prototype.setOffset = n.prototype.setOffset = function(e) {
        return this.offset = e,
        this._recalc(),
        this
    }
    ,
    n.prototype.rotate = n.prototype.rotate = function(e) {
        for (var t = this.points, n = t.length, i = 0; i < n; i++)
            t[i].rotate(e);
        return this._recalc(),
        this
    }
    ,
    n.prototype.translate = n.prototype.translate = function(e, t) {
        for (var n = this.points, i = n.length, r = 0; r < i; r++)
            n[r].x += e,
            n[r].y += t;
        return this._recalc(),
        this
    }
    ,
    n.prototype._recalc = function() {
        var e, t = this.calcPoints, n = this.edges, i = this.normals, r = this.points, o = this.offset, a = this.angle, s = r.length;
        for (e = 0; e < s; e++) {
            var c = t[e].copy(r[e]);
            c.x += o.x,
            c.y += o.y,
            0 !== a && c.rotate(a)
        }
        for (e = 0; e < s; e++) {
            var l = t[e]
              , u = e < s - 1 ? t[e + 1] : t[0]
              , h = n[e].copy(u).sub(l);
            i[e].copy(h).perp().normalize()
        }
        return this
    }
    ,
    n.prototype.getAABB = n.prototype.getAABB = function() {
        for (var t = this.calcPoints, n = t.length, r = t[0].x, o = t[0].y, a = t[0].x, s = t[0].y, c = 1; c < n; c++) {
            var l = t[c];
            l.x < r ? r = l.x : l.x > a && (a = l.x),
            l.y < o ? o = l.y : l.y > s && (s = l.y)
        }
        return new i(this.pos.clone().add(new e(r,o)),a - r,s - o).toPolygon()
    }
    ,
    f.Box = i,
    i.prototype.toPolygon = i.prototype.toPolygon = function() {
        var t = this.pos
          , i = this.w
          , r = this.h;
        return new n(new e(t.x,t.y),[new e, new e(i,0), new e(i,r), new e(0,r)])
    }
    ,
    i.prototype.toCenteredPolygon = i.prototype.toCenteredPolygon = function() {
        var t = this.pos
          , i = this.w
          , r = this.h;
        return new n(new e(t.x,t.y),[new e(-i / 2,-r / 2), new e(i / 2,-r / 2), new e(i / 2,r / 2), new e(-i / 2,r / 2)])
    }
    ,
    f.Response = r,
    r.prototype.clear = r.prototype.clear = function() {
        return this.aInB = !0,
        this.bInA = !0,
        this.overlap = Number.MAX_VALUE,
        this
    }
    ;
    for (var m = [], g = 0; g < 10; g++)
        m.push(new e);
    for (var v = [], g = 0; g < 5; g++)
        v.push([]);
    var E = new r
      , y = new i(new e,1,1).toPolygon()
      , b = -1
      , T = 0
      , x = 1;
    return f.pointInCircle = c,
    f.pointInPolygon = l,
    f.testCircleCircle = u,
    f.testPolygonCircle = h,
    f.testCirclePolygon = d,
    f.testPolygonPolygon = p,
    f
}),
function(e) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
    else if ("function" == typeof define && define.amd)
        define("socket.io", [], e);
    else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
        t.io = e()
    }
}(function() {
    var e;
    return function e(t, n, i) {
        function r(a, s) {
            if (!n[a]) {
                if (!t[a]) {
                    var c = "function" == typeof require && require;
                    if (!s && c)
                        return c(a, !0);
                    if (o)
                        return o(a, !0);
                    var l = new Error("Cannot find module '" + a + "'");
                    throw l.code = "MODULE_NOT_FOUND",
                    l
                }
                var u = n[a] = {
                    exports: {}
                };
                t[a][0].call(u.exports, function(e) {
                    var n = t[a][1][e];
                    return r(n ? n : e)
                }, u, u.exports, e, t, n, i)
            }
            return n[a].exports
        }
        for (var o = "function" == typeof require && require, a = 0; a < i.length; a++)
            r(i[a]);
        return r
    }({
        1: [function(e, t, n) {
            t.exports = e("./lib/")
        }
        , {
            "./lib/": 2
        }],
        2: [function(e, t, n) {
            t.exports = e("./socket"),
            t.exports.parser = e("engine.io-parser")
        }
        , {
            "./socket": 3,
            "engine.io-parser": 19
        }],
        3: [function(e, t, n) {
            (function(n) {
                function i(e, t) {
                    if (!(this instanceof i))
                        return new i(e,t);
                    t = t || {},
                    e && "object" == typeof e && (t = e,
                    e = null),
                    e ? (e = u(e),
                    t.hostname = e.host,
                    t.secure = "https" == e.protocol || "wss" == e.protocol,
                    t.port = e.port,
                    e.query && (t.query = e.query)) : t.host && (t.hostname = u(t.host).host),
                    this.secure = null != t.secure ? t.secure : n.location && "https:" == location.protocol,
                    t.hostname && !t.port && (t.port = this.secure ? "443" : "80"),
                    this.agent = t.agent || !1,
                    this.hostname = t.hostname || (n.location ? location.hostname : "localhost"),
                    this.port = t.port || (n.location && location.port ? location.port : this.secure ? 443 : 80),
                    this.query = t.query || {},
                    "string" == typeof this.query && (this.query = d.decode(this.query)),
                    this.upgrade = !1 !== t.upgrade,
                    this.path = (t.path || "/engine.io").replace(/\/$/, "") + "/",
                    this.forceJSONP = !!t.forceJSONP,
                    this.jsonp = !1 !== t.jsonp,
                    this.forceBase64 = !!t.forceBase64,
                    this.enablesXDR = !!t.enablesXDR,
                    this.timestampParam = t.timestampParam || "t",
                    this.timestampRequests = t.timestampRequests,
                    this.transports = t.transports || ["polling", "websocket"],
                    this.readyState = "",
                    this.writeBuffer = [],
                    this.policyPort = t.policyPort || 843,
                    this.rememberUpgrade = t.rememberUpgrade || !1,
                    this.binaryType = null,
                    this.onlyBinaryUpgrades = t.onlyBinaryUpgrades,
                    this.perMessageDeflate = !1 !== t.perMessageDeflate && (t.perMessageDeflate || {}),
                    !0 === this.perMessageDeflate && (this.perMessageDeflate = {}),
                    this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024),
                    this.pfx = t.pfx || null,
                    this.key = t.key || null,
                    this.passphrase = t.passphrase || null,
                    this.cert = t.cert || null,
                    this.ca = t.ca || null,
                    this.ciphers = t.ciphers || null,
                    this.rejectUnauthorized = void 0 === t.rejectUnauthorized ? null : t.rejectUnauthorized;
                    var r = "object" == typeof n && n;
                    r.global === r && t.extraHeaders && Object.keys(t.extraHeaders).length > 0 && (this.extraHeaders = t.extraHeaders),
                    this.open()
                }
                function r(e) {
                    var t = {};
                    for (var n in e)
                        e.hasOwnProperty(n) && (t[n] = e[n]);
                    return t
                }
                var o = e("./transports")
                  , a = e("component-emitter")
                  , s = e("debug")("engine.io-client:socket")
                  , c = e("indexof")
                  , l = e("engine.io-parser")
                  , u = e("parseuri")
                  , h = e("parsejson")
                  , d = e("parseqs");
                t.exports = i,
                i.priorWebsocketSuccess = !1,
                a(i.prototype),
                i.protocol = l.protocol,
                i.Socket = i,
                i.Transport = e("./transport"),
                i.transports = e("./transports"),
                i.parser = e("engine.io-parser"),
                i.prototype.createTransport = function(e) {
                    s('creating transport "%s"', e);
                    var t = r(this.query);
                    t.EIO = l.protocol,
                    t.transport = e,
                    this.id && (t.sid = this.id);
                    var n = new o[e]({
                        agent: this.agent,
                        hostname: this.hostname,
                        port: this.port,
                        secure: this.secure,
                        path: this.path,
                        query: t,
                        forceJSONP: this.forceJSONP,
                        jsonp: this.jsonp,
                        forceBase64: this.forceBase64,
                        enablesXDR: this.enablesXDR,
                        timestampRequests: this.timestampRequests,
                        timestampParam: this.timestampParam,
                        policyPort: this.policyPort,
                        socket: this,
                        pfx: this.pfx,
                        key: this.key,
                        passphrase: this.passphrase,
                        cert: this.cert,
                        ca: this.ca,
                        ciphers: this.ciphers,
                        rejectUnauthorized: this.rejectUnauthorized,
                        perMessageDeflate: this.perMessageDeflate,
                        extraHeaders: this.extraHeaders
                    });
                    return n
                }
                ,
                i.prototype.open = function() {
                    var e;
                    if (this.rememberUpgrade && i.priorWebsocketSuccess && this.transports.indexOf("websocket") != -1)
                        e = "websocket";
                    else {
                        if (0 === this.transports.length) {
                            var t = this;
                            return void setTimeout(function() {
                                t.emit("error", "No transports available")
                            }, 0)
                        }
                        e = this.transports[0]
                    }
                    this.readyState = "opening";
                    try {
                        e = this.createTransport(e)
                    } catch (e) {
                        return this.transports.shift(),
                        void this.open()
                    }
                    e.open(),
                    this.setTransport(e)
                }
                ,
                i.prototype.setTransport = function(e) {
                    s("setting transport %s", e.name);
                    var t = this;
                    this.transport && (s("clearing existing transport %s", this.transport.name),
                    this.transport.removeAllListeners()),
                    this.transport = e,
                    e.on("drain", function() {
                        t.onDrain()
                    }).on("packet", function(e) {
                        t.onPacket(e)
                    }).on("error", function(e) {
                        t.onError(e)
                    }).on("close", function() {
                        t.onClose("transport close")
                    })
                }
                ,
                i.prototype.probe = function(e) {
                    function t() {
                        if (d.onlyBinaryUpgrades) {
                            var t = !this.supportsBinary && d.transport.supportsBinary;
                            h = h || t
                        }
                        h || (s('probe transport "%s" opened', e),
                        u.send([{
                            type: "ping",
                            data: "probe"
                        }]),
                        u.once("packet", function(t) {
                            if (!h)
                                if ("pong" == t.type && "probe" == t.data) {
                                    if (s('probe transport "%s" pong', e),
                                    d.upgrading = !0,
                                    d.emit("upgrading", u),
                                    !u)
                                        return;
                                    i.priorWebsocketSuccess = "websocket" == u.name,
                                    s('pausing current transport "%s"', d.transport.name),
                                    d.transport.pause(function() {
                                        h || "closed" != d.readyState && (s("changing transport and sending upgrade packet"),
                                        l(),
                                        d.setTransport(u),
                                        u.send([{
                                            type: "upgrade"
                                        }]),
                                        d.emit("upgrade", u),
                                        u = null,
                                        d.upgrading = !1,
                                        d.flush())
                                    })
                                } else {
                                    s('probe transport "%s" failed', e);
                                    var n = new Error("probe error");
                                    n.transport = u.name,
                                    d.emit("upgradeError", n)
                                }
                        }))
                    }
                    function n() {
                        h || (h = !0,
                        l(),
                        u.close(),
                        u = null)
                    }
                    function r(t) {
                        var i = new Error("probe error: " + t);
                        i.transport = u.name,
                        n(),
                        s('probe transport "%s" failed because of error: %s', e, t),
                        d.emit("upgradeError", i)
                    }
                    function o() {
                        r("transport closed")
                    }
                    function a() {
                        r("socket closed")
                    }
                    function c(e) {
                        u && e.name != u.name && (s('"%s" works - aborting "%s"', e.name, u.name),
                        n())
                    }
                    function l() {
                        u.removeListener("open", t),
                        u.removeListener("error", r),
                        u.removeListener("close", o),
                        d.removeListener("close", a),
                        d.removeListener("upgrading", c)
                    }
                    s('probing transport "%s"', e);
                    var u = this.createTransport(e, {
                        probe: 1
                    })
                      , h = !1
                      , d = this;
                    i.priorWebsocketSuccess = !1,
                    u.once("open", t),
                    u.once("error", r),
                    u.once("close", o),
                    this.once("close", a),
                    this.once("upgrading", c),
                    u.open()
                }
                ,
                i.prototype.onOpen = function() {
                    if (s("socket open"),
                    this.readyState = "open",
                    i.priorWebsocketSuccess = "websocket" == this.transport.name,
                    this.emit("open"),
                    this.flush(),
                    "open" == this.readyState && this.upgrade && this.transport.pause) {
                        s("starting upgrade probes");
                        for (var e = 0, t = this.upgrades.length; e < t; e++)
                            this.probe(this.upgrades[e])
                    }
                }
                ,
                i.prototype.onPacket = function(e) {
                    if ("opening" == this.readyState || "open" == this.readyState)
                        switch (s('socket receive: type "%s", data "%s"', e.type, e.data),
                        this.emit("packet", e),
                        this.emit("heartbeat"),
                        e.type) {
                        case "open":
                            this.onHandshake(h(e.data));
                            break;
                        case "pong":
                            this.setPing(),
                            this.emit("pong");
                            break;
                        case "error":
                            var t = new Error("server error");
                            t.code = e.data,
                            this.onError(t);
                            break;
                        case "message":
                            this.emit("data", e.data),
                            this.emit("message", e.data)
                        }
                    else
                        s('packet received with socket readyState "%s"', this.readyState)
                }
                ,
                i.prototype.onHandshake = function(e) {
                    this.emit("handshake", e),
                    this.id = e.sid,
                    this.transport.query.sid = e.sid,
                    this.upgrades = this.filterUpgrades(e.upgrades),
                    this.pingInterval = e.pingInterval,
                    this.pingTimeout = e.pingTimeout,
                    this.onOpen(),
                    "closed" != this.readyState && (this.setPing(),
                    this.removeListener("heartbeat", this.onHeartbeat),
                    this.on("heartbeat", this.onHeartbeat))
                }
                ,
                i.prototype.onHeartbeat = function(e) {
                    clearTimeout(this.pingTimeoutTimer);
                    var t = this;
                    t.pingTimeoutTimer = setTimeout(function() {
                        "closed" != t.readyState && t.onClose("ping timeout")
                    }, e || t.pingInterval + t.pingTimeout)
                }
                ,
                i.prototype.setPing = function() {
                    var e = this;
                    clearTimeout(e.pingIntervalTimer),
                    e.pingIntervalTimer = setTimeout(function() {
                        s("writing ping packet - expecting pong within %sms", e.pingTimeout),
                        e.ping(),
                        e.onHeartbeat(e.pingTimeout)
                    }, e.pingInterval)
                }
                ,
                i.prototype.ping = function() {
                    var e = this;
                    this.sendPacket("ping", function() {
                        e.emit("ping")
                    })
                }
                ,
                i.prototype.onDrain = function() {
                    this.writeBuffer.splice(0, this.prevBufferLen),
                    this.prevBufferLen = 0,
                    0 === this.writeBuffer.length ? this.emit("drain") : this.flush()
                }
                ,
                i.prototype.flush = function() {
                    "closed" != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (s("flushing %d packets in socket", this.writeBuffer.length),
                    this.transport.send(this.writeBuffer),
                    this.prevBufferLen = this.writeBuffer.length,
                    this.emit("flush"))
                }
                ,
                i.prototype.write = i.prototype.send = function(e, t, n) {
                    return this.sendPacket("message", e, t, n),
                    this
                }
                ,
                i.prototype.sendPacket = function(e, t, n, i) {
                    if ("function" == typeof t && (i = t,
                    t = void 0),
                    "function" == typeof n && (i = n,
                    n = null),
                    "closing" != this.readyState && "closed" != this.readyState) {
                        n = n || {},
                        n.compress = !1 !== n.compress;
                        var r = {
                            type: e,
                            data: t,
                            options: n
                        };
                        this.emit("packetCreate", r),
                        this.writeBuffer.push(r),
                        i && this.once("flush", i),
                        this.flush()
                    }
                }
                ,
                i.prototype.close = function() {
                    function e() {
                        i.onClose("forced close"),
                        s("socket closing - telling transport to close"),
                        i.transport.close()
                    }
                    function t() {
                        i.removeListener("upgrade", t),
                        i.removeListener("upgradeError", t),
                        e()
                    }
                    function n() {
                        i.once("upgrade", t),
                        i.once("upgradeError", t)
                    }
                    if ("opening" == this.readyState || "open" == this.readyState) {
                        this.readyState = "closing";
                        var i = this;
                        this.writeBuffer.length ? this.once("drain", function() {
                            this.upgrading ? n() : e()
                        }) : this.upgrading ? n() : e()
                    }
                    return this
                }
                ,
                i.prototype.onError = function(e) {
                    s("socket error %j", e),
                    i.priorWebsocketSuccess = !1,
                    this.emit("error", e),
                    this.onClose("transport error", e)
                }
                ,
                i.prototype.onClose = function(e, t) {
                    if ("opening" == this.readyState || "open" == this.readyState || "closing" == this.readyState) {
                        s('socket close with reason: "%s"', e);
                        var n = this;
                        clearTimeout(this.pingIntervalTimer),
                        clearTimeout(this.pingTimeoutTimer),
                        this.transport.removeAllListeners("close"),
                        this.transport.close(),
                        this.transport.removeAllListeners(),
                        this.readyState = "closed",
                        this.id = null,
                        this.emit("close", e, t),
                        n.writeBuffer = [],
                        n.prevBufferLen = 0
                    }
                }
                ,
                i.prototype.filterUpgrades = function(e) {
                    for (var t = [], n = 0, i = e.length; n < i; n++)
                        ~c(this.transports, e[n]) && t.push(e[n]);
                    return t
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./transport": 4,
            "./transports": 5,
            "component-emitter": 15,
            debug: 17,
            "engine.io-parser": 19,
            indexof: 23,
            parsejson: 26,
            parseqs: 27,
            parseuri: 28
        }],
        4: [function(e, t, n) {
            function i(e) {
                this.path = e.path,
                this.hostname = e.hostname,
                this.port = e.port,
                this.secure = e.secure,
                this.query = e.query,
                this.timestampParam = e.timestampParam,
                this.timestampRequests = e.timestampRequests,
                this.readyState = "",
                this.agent = e.agent || !1,
                this.socket = e.socket,
                this.enablesXDR = e.enablesXDR,
                this.pfx = e.pfx,
                this.key = e.key,
                this.passphrase = e.passphrase,
                this.cert = e.cert,
                this.ca = e.ca,
                this.ciphers = e.ciphers,
                this.rejectUnauthorized = e.rejectUnauthorized,
                this.extraHeaders = e.extraHeaders
            }
            var r = e("engine.io-parser")
              , o = e("component-emitter");
            t.exports = i,
            o(i.prototype),
            i.prototype.onError = function(e, t) {
                var n = new Error(e);
                return n.type = "TransportError",
                n.description = t,
                this.emit("error", n),
                this
            }
            ,
            i.prototype.open = function() {
                return "closed" != this.readyState && "" != this.readyState || (this.readyState = "opening",
                this.doOpen()),
                this
            }
            ,
            i.prototype.close = function() {
                return "opening" != this.readyState && "open" != this.readyState || (this.doClose(),
                this.onClose()),
                this
            }
            ,
            i.prototype.send = function(e) {
                if ("open" != this.readyState)
                    throw new Error("Transport not open");
                this.write(e)
            }
            ,
            i.prototype.onOpen = function() {
                this.readyState = "open",
                this.writable = !0,
                this.emit("open")
            }
            ,
            i.prototype.onData = function(e) {
                var t = r.decodePacket(e, this.socket.binaryType);
                this.onPacket(t)
            }
            ,
            i.prototype.onPacket = function(e) {
                this.emit("packet", e)
            }
            ,
            i.prototype.onClose = function() {
                this.readyState = "closed",
                this.emit("close")
            }
        }
        , {
            "component-emitter": 15,
            "engine.io-parser": 19
        }],
        5: [function(e, t, n) {
            (function(t) {
                function i(e) {
                    var n, i = !1, s = !1, c = !1 !== e.jsonp;
                    if (t.location) {
                        var l = "https:" == location.protocol
                          , u = location.port;
                        u || (u = l ? 443 : 80),
                        i = e.hostname != location.hostname || u != e.port,
                        s = e.secure != l
                    }
                    if (e.xdomain = i,
                    e.xscheme = s,
                    n = new r(e),
                    "open"in n && !e.forceJSONP)
                        return new o(e);
                    if (!c)
                        throw new Error("JSONP disabled");
                    return new a(e)
                }
                var r = e("xmlhttprequest-ssl")
                  , o = e("./polling-xhr")
                  , a = e("./polling-jsonp")
                  , s = e("./websocket");
                n.polling = i,
                n.websocket = s
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./polling-jsonp": 6,
            "./polling-xhr": 7,
            "./websocket": 9,
            "xmlhttprequest-ssl": 10
        }],
        6: [function(e, t, n) {
            (function(n) {
                function i() {}
                function r(e) {
                    o.call(this, e),
                    this.query = this.query || {},
                    s || (n.___eio || (n.___eio = []),
                    s = n.___eio),
                    this.index = s.length;
                    var t = this;
                    s.push(function(e) {
                        t.onData(e)
                    }),
                    this.query.j = this.index,
                    n.document && n.addEventListener && n.addEventListener("beforeunload", function() {
                        t.script && (t.script.onerror = i)
                    }, !1)
                }
                var o = e("./polling")
                  , a = e("component-inherit");
                t.exports = r;
                var s, c = /\n/g, l = /\\n/g;
                a(r, o),
                r.prototype.supportsBinary = !1,
                r.prototype.doClose = function() {
                    this.script && (this.script.parentNode.removeChild(this.script),
                    this.script = null),
                    this.form && (this.form.parentNode.removeChild(this.form),
                    this.form = null,
                    this.iframe = null),
                    o.prototype.doClose.call(this)
                }
                ,
                r.prototype.doPoll = function() {
                    var e = this
                      , t = document.createElement("script");
                    this.script && (this.script.parentNode.removeChild(this.script),
                    this.script = null),
                    t.async = !0,
                    t.src = this.uri(),
                    t.onerror = function(t) {
                        e.onError("jsonp poll error", t)
                    }
                    ;
                    var n = document.getElementsByTagName("script")[0];
                    n ? n.parentNode.insertBefore(t, n) : (document.head || document.body).appendChild(t),
                    this.script = t;
                    var i = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);
                    i && setTimeout(function() {
                        var e = document.createElement("iframe");
                        document.body.appendChild(e),
                        document.body.removeChild(e)
                    }, 100)
                }
                ,
                r.prototype.doWrite = function(e, t) {
                    function n() {
                        i(),
                        t()
                    }
                    function i() {
                        if (r.iframe)
                            try {
                                r.form.removeChild(r.iframe)
                            } catch (e) {
                                r.onError("jsonp polling iframe removal error", e)
                            }
                        try {
                            var e = '<iframe src="javascript:0" name="' + r.iframeId + '">';
                            o = document.createElement(e)
                        } catch (e) {
                            o = document.createElement("iframe"),
                            o.name = r.iframeId,
                            o.src = "javascript:0"
                        }
                        o.id = r.iframeId,
                        r.form.appendChild(o),
                        r.iframe = o
                    }
                    var r = this;
                    if (!this.form) {
                        var o, a = document.createElement("form"), s = document.createElement("textarea"), u = this.iframeId = "eio_iframe_" + this.index;
                        a.className = "socketio",
                        a.style.position = "absolute",
                        a.style.top = "-1000px",
                        a.style.left = "-1000px",
                        a.target = u,
                        a.method = "POST",
                        a.setAttribute("accept-charset", "utf-8"),
                        s.name = "d",
                        a.appendChild(s),
                        document.body.appendChild(a),
                        this.form = a,
                        this.area = s
                    }
                    this.form.action = this.uri(),
                    i(),
                    e = e.replace(l, "\\\n"),
                    this.area.value = e.replace(c, "\\n");
                    try {
                        this.form.submit()
                    } catch (e) {}
                    this.iframe.attachEvent ? this.iframe.onreadystatechange = function() {
                        "complete" == r.iframe.readyState && n()
                    }
                    : this.iframe.onload = n
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./polling": 8,
            "component-inherit": 16
        }],
        7: [function(e, t, n) {
            (function(n) {
                function i() {}
                function r(e) {
                    if (c.call(this, e),
                    n.location) {
                        var t = "https:" == location.protocol
                          , i = location.port;
                        i || (i = t ? 443 : 80),
                        this.xd = e.hostname != n.location.hostname || i != e.port,
                        this.xs = e.secure != t
                    } else
                        this.extraHeaders = e.extraHeaders
                }
                function o(e) {
                    this.method = e.method || "GET",
                    this.uri = e.uri,
                    this.xd = !!e.xd,
                    this.xs = !!e.xs,
                    this.async = !1 !== e.async,
                    this.data = void 0 != e.data ? e.data : null,
                    this.agent = e.agent,
                    this.isBinary = e.isBinary,
                    this.supportsBinary = e.supportsBinary,
                    this.enablesXDR = e.enablesXDR,
                    this.pfx = e.pfx,
                    this.key = e.key,
                    this.passphrase = e.passphrase,
                    this.cert = e.cert,
                    this.ca = e.ca,
                    this.ciphers = e.ciphers,
                    this.rejectUnauthorized = e.rejectUnauthorized,
                    this.extraHeaders = e.extraHeaders,
                    this.create()
                }
                function a() {
                    for (var e in o.requests)
                        o.requests.hasOwnProperty(e) && o.requests[e].abort()
                }
                var s = e("xmlhttprequest-ssl")
                  , c = e("./polling")
                  , l = e("component-emitter")
                  , u = e("component-inherit")
                  , h = e("debug")("engine.io-client:polling-xhr");
                t.exports = r,
                t.exports.Request = o,
                u(r, c),
                r.prototype.supportsBinary = !0,
                r.prototype.request = function(e) {
                    return e = e || {},
                    e.uri = this.uri(),
                    e.xd = this.xd,
                    e.xs = this.xs,
                    e.agent = this.agent || !1,
                    e.supportsBinary = this.supportsBinary,
                    e.enablesXDR = this.enablesXDR,
                    e.pfx = this.pfx,
                    e.key = this.key,
                    e.passphrase = this.passphrase,
                    e.cert = this.cert,
                    e.ca = this.ca,
                    e.ciphers = this.ciphers,
                    e.rejectUnauthorized = this.rejectUnauthorized,
                    e.extraHeaders = this.extraHeaders,
                    new o(e)
                }
                ,
                r.prototype.doWrite = function(e, t) {
                    var n = "string" != typeof e && void 0 !== e
                      , i = this.request({
                        method: "POST",
                        data: e,
                        isBinary: n
                    })
                      , r = this;
                    i.on("success", t),
                    i.on("error", function(e) {
                        r.onError("xhr post error", e)
                    }),
                    this.sendXhr = i
                }
                ,
                r.prototype.doPoll = function() {
                    h("xhr poll");
                    var e = this.request()
                      , t = this;
                    e.on("data", function(e) {
                        t.onData(e)
                    }),
                    e.on("error", function(e) {
                        t.onError("xhr poll error", e)
                    }),
                    this.pollXhr = e
                }
                ,
                l(o.prototype),
                o.prototype.create = function() {
                    var e = {
                        agent: this.agent,
                        xdomain: this.xd,
                        xscheme: this.xs,
                        enablesXDR: this.enablesXDR
                    };
                    e.pfx = this.pfx,
                    e.key = this.key,
                    e.passphrase = this.passphrase,
                    e.cert = this.cert,
                    e.ca = this.ca,
                    e.ciphers = this.ciphers,
                    e.rejectUnauthorized = this.rejectUnauthorized;
                    var t = this.xhr = new s(e)
                      , i = this;
                    try {
                        h("xhr open %s: %s", this.method, this.uri),
                        t.open(this.method, this.uri, this.async);
                        try {
                            if (this.extraHeaders) {
                                t.setDisableHeaderCheck(!0);
                                for (var r in this.extraHeaders)
                                    this.extraHeaders.hasOwnProperty(r) && t.setRequestHeader(r, this.extraHeaders[r])
                            }
                        } catch (e) {}
                        if (this.supportsBinary && (t.responseType = "arraybuffer"),
                        "POST" == this.method)
                            try {
                                this.isBinary ? t.setRequestHeader("Content-type", "application/octet-stream") : t.setRequestHeader("Content-type", "text/plain;charset=UTF-8")
                            } catch (e) {}
                        "withCredentials"in t && (t.withCredentials = !0),
                        this.hasXDR() ? (t.onload = function() {
                            i.onLoad()
                        }
                        ,
                        t.onerror = function() {
                            i.onError(t.responseText)
                        }
                        ) : t.onreadystatechange = function() {
                            4 == t.readyState && (200 == t.status || 1223 == t.status ? i.onLoad() : setTimeout(function() {
                                i.onError(t.status)
                            }, 0))
                        }
                        ,
                        h("xhr data %s", this.data),
                        t.send(this.data)
                    } catch (e) {
                        return void setTimeout(function() {
                            i.onError(e)
                        }, 0)
                    }
                    n.document && (this.index = o.requestsCount++,
                    o.requests[this.index] = this)
                }
                ,
                o.prototype.onSuccess = function() {
                    this.emit("success"),
                    this.cleanup()
                }
                ,
                o.prototype.onData = function(e) {
                    this.emit("data", e),
                    this.onSuccess()
                }
                ,
                o.prototype.onError = function(e) {
                    this.emit("error", e),
                    this.cleanup(!0)
                }
                ,
                o.prototype.cleanup = function(e) {
                    if ("undefined" != typeof this.xhr && null !== this.xhr) {
                        if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = i : this.xhr.onreadystatechange = i,
                        e)
                            try {
                                this.xhr.abort()
                            } catch (e) {}
                        n.document && delete o.requests[this.index],
                        this.xhr = null
                    }
                }
                ,
                o.prototype.onLoad = function() {
                    var e;
                    try {
                        var t;
                        try {
                            t = this.xhr.getResponseHeader("Content-Type").split(";")[0]
                        } catch (e) {}
                        if ("application/octet-stream" === t)
                            e = this.xhr.response;
                        else if (this.supportsBinary)
                            try {
                                e = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response))
                            } catch (t) {
                                for (var n = new Uint8Array(this.xhr.response), i = [], r = 0, o = n.length; r < o; r++)
                                    i.push(n[r]);
                                e = String.fromCharCode.apply(null, i)
                            }
                        else
                            e = this.xhr.responseText
                    } catch (e) {
                        this.onError(e)
                    }
                    null != e && this.onData(e)
                }
                ,
                o.prototype.hasXDR = function() {
                    return "undefined" != typeof n.XDomainRequest && !this.xs && this.enablesXDR
                }
                ,
                o.prototype.abort = function() {
                    this.cleanup()
                }
                ,
                n.document && (o.requestsCount = 0,
                o.requests = {},
                n.attachEvent ? n.attachEvent("onunload", a) : n.addEventListener && n.addEventListener("beforeunload", a, !1))
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./polling": 8,
            "component-emitter": 15,
            "component-inherit": 16,
            debug: 17,
            "xmlhttprequest-ssl": 10
        }],
        8: [function(e, t, n) {
            function i(e) {
                var t = e && e.forceBase64;
                u && !t || (this.supportsBinary = !1),
                r.call(this, e)
            }
            var r = e("../transport")
              , o = e("parseqs")
              , a = e("engine.io-parser")
              , s = e("component-inherit")
              , c = e("yeast")
              , l = e("debug")("engine.io-client:polling");
            t.exports = i;
            var u = function() {
                var t = e("xmlhttprequest-ssl")
                  , n = new t({
                    xdomain: !1
                });
                return null != n.responseType
            }();
            s(i, r),
            i.prototype.name = "polling",
            i.prototype.doOpen = function() {
                this.poll()
            }
            ,
            i.prototype.pause = function(e) {
                function t() {
                    l("paused"),
                    n.readyState = "paused",
                    e()
                }
                var n = this;
                if (this.readyState = "pausing",
                this.polling || !this.writable) {
                    var i = 0;
                    this.polling && (l("we are currently polling - waiting to pause"),
                    i++,
                    this.once("pollComplete", function() {
                        l("pre-pause polling complete"),
                        --i || t()
                    })),
                    this.writable || (l("we are currently writing - waiting to pause"),
                    i++,
                    this.once("drain", function() {
                        l("pre-pause writing complete"),
                        --i || t()
                    }))
                } else
                    t()
            }
            ,
            i.prototype.poll = function() {
                l("polling"),
                this.polling = !0,
                this.doPoll(),
                this.emit("poll")
            }
            ,
            i.prototype.onData = function(e) {
                var t = this;
                l("polling got data %s", e);
                var n = function(e, n, i) {
                    return "opening" == t.readyState && t.onOpen(),
                    "close" == e.type ? (t.onClose(),
                    !1) : void t.onPacket(e)
                };
                a.decodePayload(e, this.socket.binaryType, n),
                "closed" != this.readyState && (this.polling = !1,
                this.emit("pollComplete"),
                "open" == this.readyState ? this.poll() : l('ignoring poll - transport state "%s"', this.readyState))
            }
            ,
            i.prototype.doClose = function() {
                function e() {
                    l("writing close packet"),
                    t.write([{
                        type: "close"
                    }])
                }
                var t = this;
                "open" == this.readyState ? (l("transport open - closing"),
                e()) : (l("transport not open - deferring close"),
                this.once("open", e))
            }
            ,
            i.prototype.write = function(e) {
                var t = this;
                this.writable = !1;
                var n = function() {
                    t.writable = !0,
                    t.emit("drain")
                }
                  , t = this;
                a.encodePayload(e, this.supportsBinary, function(e) {
                    t.doWrite(e, n)
                })
            }
            ,
            i.prototype.uri = function() {
                var e = this.query || {}
                  , t = this.secure ? "https" : "http"
                  , n = "";
                !1 !== this.timestampRequests && (e[this.timestampParam] = c()),
                this.supportsBinary || e.sid || (e.b64 = 1),
                e = o.encode(e),
                this.port && ("https" == t && 443 != this.port || "http" == t && 80 != this.port) && (n = ":" + this.port),
                e.length && (e = "?" + e);
                var i = this.hostname.indexOf(":") !== -1;
                return t + "://" + (i ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e
            }
        }
        , {
            "../transport": 4,
            "component-inherit": 16,
            debug: 17,
            "engine.io-parser": 19,
            parseqs: 27,
            "xmlhttprequest-ssl": 10,
            yeast: 30
        }],
        9: [function(e, t, n) {
            (function(n) {
                function i(e) {
                    var t = e && e.forceBase64;
                    t && (this.supportsBinary = !1),
                    this.perMessageDeflate = e.perMessageDeflate,
                    r.call(this, e)
                }
                var r = e("../transport")
                  , o = e("engine.io-parser")
                  , a = e("parseqs")
                  , s = e("component-inherit")
                  , c = e("yeast")
                  , l = e("debug")("engine.io-client:websocket")
                  , u = n.WebSocket || n.MozWebSocket
                  , h = u;
                if (!h && "undefined" == typeof window)
                    try {
                        h = e("ws")
                    } catch (e) {}
                t.exports = i,
                s(i, r),
                i.prototype.name = "websocket",
                i.prototype.supportsBinary = !0,
                i.prototype.doOpen = function() {
                    if (this.check()) {
                        var e = this.uri()
                          , t = void 0
                          , n = {
                            agent: this.agent,
                            perMessageDeflate: this.perMessageDeflate
                        };
                        n.pfx = this.pfx,
                        n.key = this.key,
                        n.passphrase = this.passphrase,
                        n.cert = this.cert,
                        n.ca = this.ca,
                        n.ciphers = this.ciphers,
                        n.rejectUnauthorized = this.rejectUnauthorized,
                        this.extraHeaders && (n.headers = this.extraHeaders),
                        this.ws = u ? new h(e) : new h(e,t,n),
                        void 0 === this.ws.binaryType && (this.supportsBinary = !1),
                        this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0,
                        this.ws.binaryType = "buffer") : this.ws.binaryType = "arraybuffer",
                        this.addEventListeners()
                    }
                }
                ,
                i.prototype.addEventListeners = function() {
                    var e = this;
                    this.ws.onopen = function() {
                        e.onOpen()
                    }
                    ,
                    this.ws.onclose = function() {
                        e.onClose()
                    }
                    ,
                    this.ws.onmessage = function(t) {
                        e.onData(t.data)
                    }
                    ,
                    this.ws.onerror = function(t) {
                        e.onError("websocket error", t)
                    }
                }
                ,
                "undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent) && (i.prototype.onData = function(e) {
                    var t = this;
                    setTimeout(function() {
                        r.prototype.onData.call(t, e)
                    }, 0)
                }
                ),
                i.prototype.write = function(e) {
                    function t() {
                        i.emit("flush"),
                        setTimeout(function() {
                            i.writable = !0,
                            i.emit("drain")
                        }, 0)
                    }
                    var i = this;
                    this.writable = !1;
                    for (var r = e.length, a = 0, s = r; a < s; a++)
                        !function(e) {
                            o.encodePacket(e, i.supportsBinary, function(o) {
                                if (!u) {
                                    var a = {};
                                    if (e.options && (a.compress = e.options.compress),
                                    i.perMessageDeflate) {
                                        var s = "string" == typeof o ? n.Buffer.byteLength(o) : o.length;
                                        s < i.perMessageDeflate.threshold && (a.compress = !1)
                                    }
                                }
                                try {
                                    u ? i.ws.send(o) : i.ws.send(o, a)
                                } catch (e) {
                                    l("websocket closed before onclose event")
                                }
                                --r || t()
                            })
                        }(e[a])
                }
                ,
                i.prototype.onClose = function() {
                    r.prototype.onClose.call(this)
                }
                ,
                i.prototype.doClose = function() {
                    "undefined" != typeof this.ws && this.ws.close()
                }
                ,
                i.prototype.uri = function() {
                    var e = this.query || {}
                      , t = this.secure ? "wss" : "ws"
                      , n = "";
                    this.port && ("wss" == t && 443 != this.port || "ws" == t && 80 != this.port) && (n = ":" + this.port),
                    this.timestampRequests && (e[this.timestampParam] = c()),
                    this.supportsBinary || (e.b64 = 1),
                    e = a.encode(e),
                    e.length && (e = "?" + e);
                    var i = this.hostname.indexOf(":") !== -1;
                    return t + "://" + (i ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e
                }
                ,
                i.prototype.check = function() {
                    return !(!h || "__initialize"in h && this.name === i.prototype.name)
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "../transport": 4,
            "component-inherit": 16,
            debug: 17,
            "engine.io-parser": 19,
            parseqs: 27,
            ws: void 0,
            yeast: 30
        }],
        10: [function(e, t, n) {
            var i = e("has-cors");
            t.exports = function(e) {
                var t = e.xdomain
                  , n = e.xscheme
                  , r = e.enablesXDR;
                try {
                    if ("undefined" != typeof XMLHttpRequest && (!t || i))
                        return new XMLHttpRequest
                } catch (e) {}
                try {
                    if ("undefined" != typeof XDomainRequest && !n && r)
                        return new XDomainRequest
                } catch (e) {}
                if (!t)
                    try {
                        return new ActiveXObject("Microsoft.XMLHTTP")
                    } catch (e) {}
            }
        }
        , {
            "has-cors": 22
        }],
        11: [function(e, t, n) {
            function i(e, t, n) {
                function i(e, r) {
                    if (i.count <= 0)
                        throw new Error("after called too many times");
                    --i.count,
                    e ? (o = !0,
                    t(e),
                    t = n) : 0 !== i.count || o || t(null, r)
                }
                var o = !1;
                return n = n || r,
                i.count = e,
                0 === e ? t() : i
            }
            function r() {}
            t.exports = i
        }
        , {}],
        12: [function(e, t, n) {
            t.exports = function(e, t, n) {
                var i = e.byteLength;
                if (t = t || 0,
                n = n || i,
                e.slice)
                    return e.slice(t, n);
                if (t < 0 && (t += i),
                n < 0 && (n += i),
                n > i && (n = i),
                t >= i || t >= n || 0 === i)
                    return new ArrayBuffer(0);
                for (var r = new Uint8Array(e), o = new Uint8Array(n - t), a = t, s = 0; a < n; a++,
                s++)
                    o[s] = r[a];
                return o.buffer
            }
        }
        , {}],
        13: [function(e, t, n) {
            !function(e) {
                "use strict";
                n.encode = function(t) {
                    var n, i = new Uint8Array(t), r = i.length, o = "";
                    for (n = 0; n < r; n += 3)
                        o += e[i[n] >> 2],
                        o += e[(3 & i[n]) << 4 | i[n + 1] >> 4],
                        o += e[(15 & i[n + 1]) << 2 | i[n + 2] >> 6],
                        o += e[63 & i[n + 2]];
                    return r % 3 === 2 ? o = o.substring(0, o.length - 1) + "=" : r % 3 === 1 && (o = o.substring(0, o.length - 2) + "=="),
                    o
                }
                ,
                n.decode = function(t) {
                    var n, i, r, o, a, s = .75 * t.length, c = t.length, l = 0;
                    "=" === t[t.length - 1] && (s--,
                    "=" === t[t.length - 2] && s--);
                    var u = new ArrayBuffer(s)
                      , h = new Uint8Array(u);
                    for (n = 0; n < c; n += 4)
                        i = e.indexOf(t[n]),
                        r = e.indexOf(t[n + 1]),
                        o = e.indexOf(t[n + 2]),
                        a = e.indexOf(t[n + 3]),
                        h[l++] = i << 2 | r >> 4,
                        h[l++] = (15 & r) << 4 | o >> 2,
                        h[l++] = (3 & o) << 6 | 63 & a;
                    return u
                }
            }("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")
        }
        , {}],
        14: [function(e, t, n) {
            (function(e) {
                function n(e) {
                    for (var t = 0; t < e.length; t++) {
                        var n = e[t];
                        if (n.buffer instanceof ArrayBuffer) {
                            var i = n.buffer;
                            if (n.byteLength !== i.byteLength) {
                                var r = new Uint8Array(n.byteLength);
                                r.set(new Uint8Array(i,n.byteOffset,n.byteLength)),
                                i = r.buffer
                            }
                            e[t] = i
                        }
                    }
                }
                function i(e, t) {
                    t = t || {};
                    var i = new o;
                    n(e);
                    for (var r = 0; r < e.length; r++)
                        i.append(e[r]);
                    return t.type ? i.getBlob(t.type) : i.getBlob()
                }
                function r(e, t) {
                    return n(e),
                    new Blob(e,t || {})
                }
                var o = e.BlobBuilder || e.WebKitBlobBuilder || e.MSBlobBuilder || e.MozBlobBuilder
                  , a = function() {
                    try {
                        var e = new Blob(["hi"]);
                        return 2 === e.size
                    } catch (e) {
                        return !1
                    }
                }()
                  , s = a && function() {
                    try {
                        var e = new Blob([new Uint8Array([1, 2])]);
                        return 2 === e.size
                    } catch (e) {
                        return !1
                    }
                }()
                  , c = o && o.prototype.append && o.prototype.getBlob;
                t.exports = function() {
                    return a ? s ? e.Blob : r : c ? i : void 0
                }()
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {}],
        15: [function(e, t, n) {
            function i(e) {
                if (e)
                    return r(e)
            }
            function r(e) {
                for (var t in i.prototype)
                    e[t] = i.prototype[t];
                return e
            }
            t.exports = i,
            i.prototype.on = i.prototype.addEventListener = function(e, t) {
                return this._callbacks = this._callbacks || {},
                (this._callbacks[e] = this._callbacks[e] || []).push(t),
                this
            }
            ,
            i.prototype.once = function(e, t) {
                function n() {
                    i.off(e, n),
                    t.apply(this, arguments)
                }
                var i = this;
                return this._callbacks = this._callbacks || {},
                n.fn = t,
                this.on(e, n),
                this
            }
            ,
            i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function(e, t) {
                if (this._callbacks = this._callbacks || {},
                0 == arguments.length)
                    return this._callbacks = {},
                    this;
                var n = this._callbacks[e];
                if (!n)
                    return this;
                if (1 == arguments.length)
                    return delete this._callbacks[e],
                    this;
                for (var i, r = 0; r < n.length; r++)
                    if (i = n[r],
                    i === t || i.fn === t) {
                        n.splice(r, 1);
                        break
                    }
                return this
            }
            ,
            i.prototype.emit = function(e) {
                this._callbacks = this._callbacks || {};
                var t = [].slice.call(arguments, 1)
                  , n = this._callbacks[e];
                if (n) {
                    n = n.slice(0);
                    for (var i = 0, r = n.length; i < r; ++i)
                        n[i].apply(this, t)
                }
                return this
            }
            ,
            i.prototype.listeners = function(e) {
                return this._callbacks = this._callbacks || {},
                this._callbacks[e] || []
            }
            ,
            i.prototype.hasListeners = function(e) {
                return !!this.listeners(e).length
            }
        }
        , {}],
        16: [function(e, t, n) {
            t.exports = function(e, t) {
                var n = function() {};
                n.prototype = t.prototype,
                e.prototype = new n,
                e.prototype.constructor = e
            }
        }
        , {}],
        17: [function(e, t, n) {
            function i() {
                return "WebkitAppearance"in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31
            }
            function r() {
                var e = arguments
                  , t = this.useColors;
                if (e[0] = (t ? "%c" : "") + this.namespace + (t ? " %c" : " ") + e[0] + (t ? "%c " : " ") + "+" + n.humanize(this.diff),
                !t)
                    return e;
                var i = "color: " + this.color;
                e = [e[0], i, "color: inherit"].concat(Array.prototype.slice.call(e, 1));
                var r = 0
                  , o = 0;
                return e[0].replace(/%[a-z%]/g, function(e) {
                    "%%" !== e && (r++,
                    "%c" === e && (o = r))
                }),
                e.splice(o, 0, i),
                e
            }
            function o() {
                return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
            }
            function a(e) {
                try {
                    null == e ? n.storage.removeItem("debug") : n.storage.debug = e
                } catch (e) {}
            }
            function s() {
                var e;
                try {
                    e = n.storage.debug
                } catch (e) {}
                return e
            }
            function c() {
                try {
                    return window.localStorage
                } catch (e) {}
            }
            n = t.exports = e("./debug"),
            n.log = o,
            n.formatArgs = r,
            n.save = a,
            n.load = s,
            n.useColors = i,
            n.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : c(),
            n.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"],
            n.formatters.j = function(e) {
                return JSON.stringify(e)
            }
            ,
            n.enable(s())
        }
        , {
            "./debug": 18
        }],
        18: [function(e, t, n) {
            function i() {
                return n.colors[u++ % n.colors.length]
            }
            function r(e) {
                function t() {}
                function r() {
                    var e = r
                      , t = +new Date
                      , o = t - (l || t);
                    e.diff = o,
                    e.prev = l,
                    e.curr = t,
                    l = t,
                    null == e.useColors && (e.useColors = n.useColors()),
                    null == e.color && e.useColors && (e.color = i());
                    var a = Array.prototype.slice.call(arguments);
                    a[0] = n.coerce(a[0]),
                    "string" != typeof a[0] && (a = ["%o"].concat(a));
                    var s = 0;
                    a[0] = a[0].replace(/%([a-z%])/g, function(t, i) {
                        if ("%%" === t)
                            return t;
                        s++;
                        var r = n.formatters[i];
                        if ("function" == typeof r) {
                            var o = a[s];
                            t = r.call(e, o),
                            a.splice(s, 1),
                            s--
                        }
                        return t
                    }),
                    "function" == typeof n.formatArgs && (a = n.formatArgs.apply(e, a));
                    var c = r.log || n.log || console.log.bind(console);
                    c.apply(e, a)
                }
                t.enabled = !1,
                r.enabled = !0;
                var o = n.enabled(e) ? r : t;
                return o.namespace = e,
                o
            }
            function o(e) {
                n.save(e);
                for (var t = (e || "").split(/[\s,]+/), i = t.length, r = 0; r < i; r++)
                    t[r] && (e = t[r].replace(/\*/g, ".*?"),
                    "-" === e[0] ? n.skips.push(new RegExp("^" + e.substr(1) + "$")) : n.names.push(new RegExp("^" + e + "$")))
            }
            function a() {
                n.enable("")
            }
            function s(e) {
                var t, i;
                for (t = 0,
                i = n.skips.length; t < i; t++)
                    if (n.skips[t].test(e))
                        return !1;
                for (t = 0,
                i = n.names.length; t < i; t++)
                    if (n.names[t].test(e))
                        return !0;
                return !1
            }
            function c(e) {
                return e instanceof Error ? e.stack || e.message : e
            }
            n = t.exports = r,
            n.coerce = c,
            n.disable = a,
            n.enable = o,
            n.enabled = s,
            n.humanize = e("ms"),
            n.names = [],
            n.skips = [],
            n.formatters = {};
            var l, u = 0
        }
        , {
            ms: 25
        }],
        19: [function(e, t, n) {
            (function(t) {
                function i(e, t) {
                    var i = "b" + n.packets[e.type] + e.data.data;
                    return t(i)
                }
                function r(e, t, i) {
                    if (!t)
                        return n.encodeBase64Packet(e, i);
                    var r = e.data
                      , o = new Uint8Array(r)
                      , a = new Uint8Array(1 + r.byteLength);
                    a[0] = v[e.type];
                    for (var s = 0; s < o.length; s++)
                        a[s + 1] = o[s];
                    return i(a.buffer)
                }
                function o(e, t, i) {
                    if (!t)
                        return n.encodeBase64Packet(e, i);
                    var r = new FileReader;
                    return r.onload = function() {
                        e.data = r.result,
                        n.encodePacket(e, t, !0, i)
                    }
                    ,
                    r.readAsArrayBuffer(e.data)
                }
                function a(e, t, i) {
                    if (!t)
                        return n.encodeBase64Packet(e, i);
                    if (g)
                        return o(e, t, i);
                    var r = new Uint8Array(1);
                    r[0] = v[e.type];
                    var a = new b([r.buffer, e.data]);
                    return i(a)
                }
                function s(e, t, n) {
                    for (var i = new Array(e.length), r = d(e.length, n), o = function(e, n, r) {
                        t(n, function(t, n) {
                            i[e] = n,
                            r(t, i)
                        })
                    }, a = 0; a < e.length; a++)
                        o(a, e[a], r)
                }
                var c = e("./keys")
                  , l = e("has-binary")
                  , u = e("arraybuffer.slice")
                  , h = e("base64-arraybuffer")
                  , d = e("after")
                  , p = e("utf8")
                  , f = navigator.userAgent.match(/Android/i)
                  , m = /PhantomJS/i.test(navigator.userAgent)
                  , g = f || m;
                n.protocol = 3;
                var v = n.packets = {
                    open: 0,
                    close: 1,
                    ping: 2,
                    pong: 3,
                    message: 4,
                    upgrade: 5,
                    noop: 6
                }
                  , E = c(v)
                  , y = {
                    type: "error",
                    data: "parser error"
                }
                  , b = e("blob");
                n.encodePacket = function(e, n, o, s) {
                    "function" == typeof n && (s = n,
                    n = !1),
                    "function" == typeof o && (s = o,
                    o = null);
                    var c = void 0 === e.data ? void 0 : e.data.buffer || e.data;
                    if (t.ArrayBuffer && c instanceof ArrayBuffer)
                        return r(e, n, s);
                    if (b && c instanceof t.Blob)
                        return a(e, n, s);
                    if (c && c.base64)
                        return i(e, s);
                    var l = v[e.type];
                    return void 0 !== e.data && (l += o ? p.encode(String(e.data)) : String(e.data)),
                    s("" + l)
                }
                ,
                n.encodeBase64Packet = function(e, i) {
                    var r = "b" + n.packets[e.type];
                    if (b && e.data instanceof t.Blob) {
                        var o = new FileReader;
                        return o.onload = function() {
                            var e = o.result.split(",")[1];
                            i(r + e)
                        }
                        ,
                        o.readAsDataURL(e.data)
                    }
                    var a;
                    try {
                        a = String.fromCharCode.apply(null, new Uint8Array(e.data))
                    } catch (t) {
                        for (var s = new Uint8Array(e.data), c = new Array(s.length), l = 0; l < s.length; l++)
                            c[l] = s[l];
                        a = String.fromCharCode.apply(null, c)
                    }
                    return r += t.btoa(a),
                    i(r)
                }
                ,
                n.decodePacket = function(e, t, i) {
                    if ("string" == typeof e || void 0 === e) {
                        if ("b" == e.charAt(0))
                            return n.decodeBase64Packet(e.substr(1), t);
                        if (i)
                            try {
                                e = p.decode(e)
                            } catch (e) {
                                return y
                            }
                        var r = e.charAt(0);
                        return Number(r) == r && E[r] ? e.length > 1 ? {
                            type: E[r],
                            data: e.substring(1)
                        } : {
                            type: E[r]
                        } : y
                    }
                    var o = new Uint8Array(e)
                      , r = o[0]
                      , a = u(e, 1);
                    return b && "blob" === t && (a = new b([a])),
                    {
                        type: E[r],
                        data: a
                    }
                }
                ,
                n.decodeBase64Packet = function(e, n) {
                    var i = E[e.charAt(0)];
                    if (!t.ArrayBuffer)
                        return {
                            type: i,
                            data: {
                                base64: !0,
                                data: e.substr(1)
                            }
                        };
                    var r = h.decode(e.substr(1));
                    return "blob" === n && b && (r = new b([r])),
                    {
                        type: i,
                        data: r
                    }
                }
                ,
                n.encodePayload = function(e, t, i) {
                    function r(e) {
                        return e.length + ":" + e
                    }
                    function o(e, i) {
                        n.encodePacket(e, !!a && t, !0, function(e) {
                            i(null, r(e))
                        })
                    }
                    "function" == typeof t && (i = t,
                    t = null);
                    var a = l(e);
                    return t && a ? b && !g ? n.encodePayloadAsBlob(e, i) : n.encodePayloadAsArrayBuffer(e, i) : e.length ? void s(e, o, function(e, t) {
                        return i(t.join(""))
                    }) : i("0:")
                }
                ,
                n.decodePayload = function(e, t, i) {
                    if ("string" != typeof e)
                        return n.decodePayloadAsBinary(e, t, i);
                    "function" == typeof t && (i = t,
                    t = null);
                    var r;
                    if ("" == e)
                        return i(y, 0, 1);
                    for (var o, a, s = "", c = 0, l = e.length; c < l; c++) {
                        var u = e.charAt(c);
                        if (":" != u)
                            s += u;
                        else {
                            if ("" == s || s != (o = Number(s)))
                                return i(y, 0, 1);
                            if (a = e.substr(c + 1, o),
                            s != a.length)
                                return i(y, 0, 1);
                            if (a.length) {
                                if (r = n.decodePacket(a, t, !0),
                                y.type == r.type && y.data == r.data)
                                    return i(y, 0, 1);
                                var h = i(r, c + o, l);
                                if (!1 === h)
                                    return
                            }
                            c += o,
                            s = ""
                        }
                    }
                    return "" != s ? i(y, 0, 1) : void 0
                }
                ,
                n.encodePayloadAsArrayBuffer = function(e, t) {
                    function i(e, t) {
                        n.encodePacket(e, !0, !0, function(e) {
                            return t(null, e)
                        })
                    }
                    return e.length ? void s(e, i, function(e, n) {
                        var i = n.reduce(function(e, t) {
                            var n;
                            return n = "string" == typeof t ? t.length : t.byteLength,
                            e + n.toString().length + n + 2
                        }, 0)
                          , r = new Uint8Array(i)
                          , o = 0;
                        return n.forEach(function(e) {
                            var t = "string" == typeof e
                              , n = e;
                            if (t) {
                                for (var i = new Uint8Array(e.length), a = 0; a < e.length; a++)
                                    i[a] = e.charCodeAt(a);
                                n = i.buffer
                            }
                            t ? r[o++] = 0 : r[o++] = 1;
                            for (var s = n.byteLength.toString(), a = 0; a < s.length; a++)
                                r[o++] = parseInt(s[a]);
                            r[o++] = 255;
                            for (var i = new Uint8Array(n), a = 0; a < i.length; a++)
                                r[o++] = i[a]
                        }),
                        t(r.buffer)
                    }) : t(new ArrayBuffer(0))
                }
                ,
                n.encodePayloadAsBlob = function(e, t) {
                    function i(e, t) {
                        n.encodePacket(e, !0, !0, function(e) {
                            var n = new Uint8Array(1);
                            if (n[0] = 1,
                            "string" == typeof e) {
                                for (var i = new Uint8Array(e.length), r = 0; r < e.length; r++)
                                    i[r] = e.charCodeAt(r);
                                e = i.buffer,
                                n[0] = 0
                            }
                            for (var o = e instanceof ArrayBuffer ? e.byteLength : e.size, a = o.toString(), s = new Uint8Array(a.length + 1), r = 0; r < a.length; r++)
                                s[r] = parseInt(a[r]);
                            if (s[a.length] = 255,
                            b) {
                                var c = new b([n.buffer, s.buffer, e]);
                                t(null, c)
                            }
                        })
                    }
                    s(e, i, function(e, n) {
                        return t(new b(n))
                    })
                }
                ,
                n.decodePayloadAsBinary = function(e, t, i) {
                    "function" == typeof t && (i = t,
                    t = null);
                    for (var r = e, o = [], a = !1; r.byteLength > 0; ) {
                        for (var s = new Uint8Array(r), c = 0 === s[0], l = "", h = 1; 255 != s[h]; h++) {
                            if (l.length > 310) {
                                a = !0;
                                break
                            }
                            l += s[h]
                        }
                        if (a)
                            return i(y, 0, 1);
                        r = u(r, 2 + l.length),
                        l = parseInt(l);
                        var d = u(r, 0, l);
                        if (c)
                            try {
                                d = String.fromCharCode.apply(null, new Uint8Array(d))
                            } catch (e) {
                                var p = new Uint8Array(d);
                                d = "";
                                for (var h = 0; h < p.length; h++)
                                    d += String.fromCharCode(p[h])
                            }
                        o.push(d),
                        r = u(r, l)
                    }
                    var f = o.length;
                    o.forEach(function(e, r) {
                        i(n.decodePacket(e, t, !0), r, f)
                    })
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./keys": 20,
            after: 11,
            "arraybuffer.slice": 12,
            "base64-arraybuffer": 13,
            blob: 14,
            "has-binary": 21,
            utf8: 29
        }],
        20: [function(e, t, n) {
            t.exports = Object.keys || function(e) {
                var t = []
                  , n = Object.prototype.hasOwnProperty;
                for (var i in e)
                    n.call(e, i) && t.push(i);
                return t
            }
        }
        , {}],
        21: [function(e, t, n) {
            (function(n) {
                function i(e) {
                    function t(e) {
                        if (!e)
                            return !1;
                        if (n.Buffer && n.Buffer.isBuffer(e) || n.ArrayBuffer && e instanceof ArrayBuffer || n.Blob && e instanceof Blob || n.File && e instanceof File)
                            return !0;
                        if (r(e)) {
                            for (var i = 0; i < e.length; i++)
                                if (t(e[i]))
                                    return !0
                        } else if (e && "object" == typeof e) {
                            e.toJSON && (e = e.toJSON());
                            for (var o in e)
                                if (Object.prototype.hasOwnProperty.call(e, o) && t(e[o]))
                                    return !0
                        }
                        return !1
                    }
                    return t(e)
                }
                var r = e("isarray");
                t.exports = i
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            isarray: 24
        }],
        22: [function(e, t, n) {
            try {
                t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials"in new XMLHttpRequest
            } catch (e) {
                t.exports = !1
            }
        }
        , {}],
        23: [function(e, t, n) {
            var i = [].indexOf;
            t.exports = function(e, t) {
                if (i)
                    return e.indexOf(t);
                for (var n = 0; n < e.length; ++n)
                    if (e[n] === t)
                        return n;
                return -1
            }
        }
        , {}],
        24: [function(e, t, n) {
            t.exports = Array.isArray || function(e) {
                return "[object Array]" == Object.prototype.toString.call(e)
            }
        }
        , {}],
        25: [function(e, t, n) {
            function i(e) {
                if (e = "" + e,
                !(e.length > 1e4)) {
                    var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
                    if (t) {
                        var n = parseFloat(t[1])
                          , i = (t[2] || "ms").toLowerCase();
                        switch (i) {
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return n * h;
                        case "days":
                        case "day":
                        case "d":
                            return n * u;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return n * l;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return n * c;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return n * s;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return n
                        }
                    }
                }
            }
            function r(e) {
                return e >= u ? Math.round(e / u) + "d" : e >= l ? Math.round(e / l) + "h" : e >= c ? Math.round(e / c) + "m" : e >= s ? Math.round(e / s) + "s" : e + "ms"
            }
            function o(e) {
                return a(e, u, "day") || a(e, l, "hour") || a(e, c, "minute") || a(e, s, "second") || e + " ms"
            }
            function a(e, t, n) {
                if (!(e < t))
                    return e < 1.5 * t ? Math.floor(e / t) + " " + n : Math.ceil(e / t) + " " + n + "s"
            }
            var s = 1e3
              , c = 60 * s
              , l = 60 * c
              , u = 24 * l
              , h = 365.25 * u;
            t.exports = function(e, t) {
                return t = t || {},
                "string" == typeof e ? i(e) : t.long ? o(e) : r(e)
            }
        }
        , {}],
        26: [function(e, t, n) {
            (function(e) {
                var n = /^[\],:{}\s]*$/
                  , i = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g
                  , r = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g
                  , o = /(?:^|:|,)(?:\s*\[)+/g
                  , a = /^\s+/
                  , s = /\s+$/;
                t.exports = function(t) {
                    return "string" == typeof t && t ? (t = t.replace(a, "").replace(s, ""),
                    e.JSON && JSON.parse ? JSON.parse(t) : n.test(t.replace(i, "@").replace(r, "]").replace(o, "")) ? new Function("return " + t)() : void 0) : null
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {}],
        27: [function(e, t, n) {
            n.encode = function(e) {
                var t = "";
                for (var n in e)
                    e.hasOwnProperty(n) && (t.length && (t += "&"),
                    t += encodeURIComponent(n) + "=" + encodeURIComponent(e[n]));
                return t
            }
            ,
            n.decode = function(e) {
                for (var t = {}, n = e.split("&"), i = 0, r = n.length; i < r; i++) {
                    var o = n[i].split("=");
                    t[decodeURIComponent(o[0])] = decodeURIComponent(o[1])
                }
                return t
            }
        }
        , {}],
        28: [function(e, t, n) {
            var i = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
              , r = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            t.exports = function(e) {
                var t = e
                  , n = e.indexOf("[")
                  , o = e.indexOf("]");
                n != -1 && o != -1 && (e = e.substring(0, n) + e.substring(n, o).replace(/:/g, ";") + e.substring(o, e.length));
                for (var a = i.exec(e || ""), s = {}, c = 14; c--; )
                    s[r[c]] = a[c] || "";
                return n != -1 && o != -1 && (s.source = t,
                s.host = s.host.substring(1, s.host.length - 1).replace(/;/g, ":"),
                s.authority = s.authority.replace("[", "").replace("]", "").replace(/;/g, ":"),
                s.ipv6uri = !0),
                s
            }
        }
        , {}],
        29: [function(t, n, i) {
            (function(t) {
                !function(r) {
                    function o(e) {
                        for (var t, n, i = [], r = 0, o = e.length; r < o; )
                            t = e.charCodeAt(r++),
                            t >= 55296 && t <= 56319 && r < o ? (n = e.charCodeAt(r++),
                            56320 == (64512 & n) ? i.push(((1023 & t) << 10) + (1023 & n) + 65536) : (i.push(t),
                            r--)) : i.push(t);
                        return i
                    }
                    function a(e) {
                        for (var t, n = e.length, i = -1, r = ""; ++i < n; )
                            t = e[i],
                            t > 65535 && (t -= 65536,
                            r += b(t >>> 10 & 1023 | 55296),
                            t = 56320 | 1023 & t),
                            r += b(t);
                        return r
                    }
                    function s(e) {
                        if (e >= 55296 && e <= 57343)
                            throw Error("Lone surrogate U+" + e.toString(16).toUpperCase() + " is not a scalar value")
                    }
                    function c(e, t) {
                        return b(e >> t & 63 | 128)
                    }
                    function l(e) {
                        if (0 == (4294967168 & e))
                            return b(e);
                        var t = "";
                        return 0 == (4294965248 & e) ? t = b(e >> 6 & 31 | 192) : 0 == (4294901760 & e) ? (s(e),
                        t = b(e >> 12 & 15 | 224),
                        t += c(e, 6)) : 0 == (4292870144 & e) && (t = b(e >> 18 & 7 | 240),
                        t += c(e, 12),
                        t += c(e, 6)),
                        t += b(63 & e | 128)
                    }
                    function u(e) {
                        for (var t, n = o(e), i = n.length, r = -1, a = ""; ++r < i; )
                            t = n[r],
                            a += l(t);
                        return a
                    }
                    function h() {
                        if (y >= E)
                            throw Error("Invalid byte index");
                        var e = 255 & v[y];
                        if (y++,
                        128 == (192 & e))
                            return 63 & e;
                        throw Error("Invalid continuation byte")
                    }
                    function d() {
                        var e, t, n, i, r;
                        if (y > E)
                            throw Error("Invalid byte index");
                        if (y == E)
                            return !1;
                        if (e = 255 & v[y],
                        y++,
                        0 == (128 & e))
                            return e;
                        if (192 == (224 & e)) {
                            var t = h();
                            if (r = (31 & e) << 6 | t,
                            r >= 128)
                                return r;
                            throw Error("Invalid continuation byte")
                        }
                        if (224 == (240 & e)) {
                            if (t = h(),
                            n = h(),
                            r = (15 & e) << 12 | t << 6 | n,
                            r >= 2048)
                                return s(r),
                                r;
                            throw Error("Invalid continuation byte")
                        }
                        if (240 == (248 & e) && (t = h(),
                        n = h(),
                        i = h(),
                        r = (15 & e) << 18 | t << 12 | n << 6 | i,
                        r >= 65536 && r <= 1114111))
                            return r;
                        throw Error("Invalid UTF-8 detected")
                    }
                    function p(e) {
                        v = o(e),
                        E = v.length,
                        y = 0;
                        for (var t, n = []; (t = d()) !== !1; )
                            n.push(t);
                        return a(n)
                    }
                    var f = "object" == typeof i && i
                      , m = "object" == typeof n && n && n.exports == f && n
                      , g = "object" == typeof t && t;
                    g.global !== g && g.window !== g || (r = g);
                    var v, E, y, b = String.fromCharCode, T = {
                        version: "2.0.0",
                        encode: u,
                        decode: p
                    };
                    if ("function" == typeof e && "object" == typeof e.amd && e.amd)
                        e(function() {
                            return T
                        });
                    else if (f && !f.nodeType)
                        if (m)
                            m.exports = T;
                        else {
                            var x = {}
                              , R = x.hasOwnProperty;
                            for (var w in T)
                                R.call(T, w) && (f[w] = T[w])
                        }
                    else
                        r.utf8 = T
                }(this)
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {}],
        30: [function(e, t, n) {
            "use strict";
            function i(e) {
                var t = "";
                do
                    t = s[e % c] + t,
                    e = Math.floor(e / c);
                while (e > 0);return t
            }
            function r(e) {
                var t = 0;
                for (h = 0; h < e.length; h++)
                    t = t * c + l[e.charAt(h)];
                return t
            }
            function o() {
                var e = i(+new Date);
                return e !== a ? (u = 0,
                a = e) : e + "." + i(u++)
            }
            for (var a, s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), c = 64, l = {}, u = 0, h = 0; h < c; h++)
                l[s[h]] = h;
            o.encode = i,
            o.decode = r,
            t.exports = o
        }
        , {}],
        31: [function(e, t, n) {
            function i(e, t) {
                "object" == typeof e && (t = e,
                e = void 0),
                t = t || {};
                var n, i = r(e), o = i.source, l = i.id, u = i.path, h = c[l] && u in c[l].nsps, d = t.forceNew || t["force new connection"] || !1 === t.multiplex || h;
                return d ? (s("ignoring socket cache for %s", o),
                n = a(o, t)) : (c[l] || (s("new io instance for %s", o),
                c[l] = a(o, t)),
                n = c[l]),
                n.socket(i.path)
            }
            var r = e("./url")
              , o = e("socket.io-parser")
              , a = e("./manager")
              , s = e("debug")("socket.io-client");
            t.exports = n = i;
            var c = n.managers = {};
            n.protocol = o.protocol,
            n.connect = i,
            n.Manager = e("./manager"),
            n.Socket = e("./socket")
        }
        , {
            "./manager": 32,
            "./socket": 34,
            "./url": 35,
            debug: 39,
            "socket.io-parser": 47
        }],
        32: [function(e, t, n) {
            function i(e, t) {
                return this instanceof i ? (e && "object" == typeof e && (t = e,
                e = void 0),
                t = t || {},
                t.path = t.path || "/socket.io",
                this.nsps = {},
                this.subs = [],
                this.opts = t,
                this.reconnection(t.reconnection !== !1),
                this.reconnectionAttempts(t.reconnectionAttempts || 1 / 0),
                this.reconnectionDelay(t.reconnectionDelay || 1e3),
                this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3),
                this.randomizationFactor(t.randomizationFactor || .5),
                this.backoff = new d({
                    min: this.reconnectionDelay(),
                    max: this.reconnectionDelayMax(),
                    jitter: this.randomizationFactor()
                }),
                this.timeout(null == t.timeout ? 2e4 : t.timeout),
                this.readyState = "closed",
                this.uri = e,
                this.connecting = [],
                this.lastPing = null,
                this.encoding = !1,
                this.packetBuffer = [],
                this.encoder = new s.Encoder,
                this.decoder = new s.Decoder,
                this.autoConnect = t.autoConnect !== !1,
                void (this.autoConnect && this.open())) : new i(e,t)
            }
            var r = e("engine.io-client")
              , o = e("./socket")
              , a = e("component-emitter")
              , s = e("socket.io-parser")
              , c = e("./on")
              , l = e("component-bind")
              , u = e("debug")("socket.io-client:manager")
              , h = e("indexof")
              , d = e("backo2")
              , p = Object.prototype.hasOwnProperty;
            t.exports = i,
            i.prototype.emitAll = function() {
                this.emit.apply(this, arguments);
                for (var e in this.nsps)
                    p.call(this.nsps, e) && this.nsps[e].emit.apply(this.nsps[e], arguments)
            }
            ,
            i.prototype.updateSocketIds = function() {
                for (var e in this.nsps)
                    p.call(this.nsps, e) && (this.nsps[e].id = this.engine.id)
            }
            ,
            a(i.prototype),
            i.prototype.reconnection = function(e) {
                return arguments.length ? (this._reconnection = !!e,
                this) : this._reconnection
            }
            ,
            i.prototype.reconnectionAttempts = function(e) {
                return arguments.length ? (this._reconnectionAttempts = e,
                this) : this._reconnectionAttempts
            }
            ,
            i.prototype.reconnectionDelay = function(e) {
                return arguments.length ? (this._reconnectionDelay = e,
                this.backoff && this.backoff.setMin(e),
                this) : this._reconnectionDelay
            }
            ,
            i.prototype.randomizationFactor = function(e) {
                return arguments.length ? (this._randomizationFactor = e,
                this.backoff && this.backoff.setJitter(e),
                this) : this._randomizationFactor
            }
            ,
            i.prototype.reconnectionDelayMax = function(e) {
                return arguments.length ? (this._reconnectionDelayMax = e,
                this.backoff && this.backoff.setMax(e),
                this) : this._reconnectionDelayMax
            }
            ,
            i.prototype.timeout = function(e) {
                return arguments.length ? (this._timeout = e,
                this) : this._timeout
            }
            ,
            i.prototype.maybeReconnectOnOpen = function() {
                !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect()
            }
            ,
            i.prototype.open = i.prototype.connect = function(e) {
                if (u("readyState %s", this.readyState),
                ~this.readyState.indexOf("open"))
                    return this;
                u("opening %s", this.uri),
                this.engine = r(this.uri, this.opts);
                var t = this.engine
                  , n = this;
                this.readyState = "opening",
                this.skipReconnect = !1;
                var i = c(t, "open", function() {
                    n.onopen(),
                    e && e()
                })
                  , o = c(t, "error", function(t) {
                    if (u("connect_error"),
                    n.cleanup(),
                    n.readyState = "closed",
                    n.emitAll("connect_error", t),
                    e) {
                        var i = new Error("Connection error");
                        i.data = t,
                        e(i)
                    } else
                        n.maybeReconnectOnOpen()
                });
                if (!1 !== this._timeout) {
                    var a = this._timeout;
                    u("connect attempt will timeout after %d", a);
                    var s = setTimeout(function() {
                        u("connect attempt timed out after %d", a),
                        i.destroy(),
                        t.close(),
                        t.emit("error", "timeout"),
                        n.emitAll("connect_timeout", a)
                    }, a);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(s)
                        }
                    })
                }
                return this.subs.push(i),
                this.subs.push(o),
                this
            }
            ,
            i.prototype.onopen = function() {
                u("open"),
                this.cleanup(),
                this.readyState = "open",
                this.emit("open");
                var e = this.engine;
                this.subs.push(c(e, "data", l(this, "ondata"))),
                this.subs.push(c(e, "ping", l(this, "onping"))),
                this.subs.push(c(e, "pong", l(this, "onpong"))),
                this.subs.push(c(e, "error", l(this, "onerror"))),
                this.subs.push(c(e, "close", l(this, "onclose"))),
                this.subs.push(c(this.decoder, "decoded", l(this, "ondecoded")))
            }
            ,
            i.prototype.onping = function() {
                this.lastPing = new Date,
                this.emitAll("ping")
            }
            ,
            i.prototype.onpong = function() {
                this.emitAll("pong", new Date - this.lastPing)
            }
            ,
            i.prototype.ondata = function(e) {
                this.decoder.add(e)
            }
            ,
            i.prototype.ondecoded = function(e) {
                this.emit("packet", e)
            }
            ,
            i.prototype.onerror = function(e) {
                u("error", e),
                this.emitAll("error", e)
            }
            ,
            i.prototype.socket = function(e) {
                function t() {
                    ~h(i.connecting, n) || i.connecting.push(n)
                }
                var n = this.nsps[e];
                if (!n) {
                    n = new o(this,e),
                    this.nsps[e] = n;
                    var i = this;
                    n.on("connecting", t),
                    n.on("connect", function() {
                        n.id = i.engine.id
                    }),
                    this.autoConnect && t()
                }
                return n
            }
            ,
            i.prototype.destroy = function(e) {
                var t = h(this.connecting, e);
                ~t && this.connecting.splice(t, 1),
                this.connecting.length || this.close()
            }
            ,
            i.prototype.packet = function(e) {
                u("writing packet %j", e);
                var t = this;
                t.encoding ? t.packetBuffer.push(e) : (t.encoding = !0,
                this.encoder.encode(e, function(n) {
                    for (var i = 0; i < n.length; i++)
                        t.engine.write(n[i], e.options);
                    t.encoding = !1,
                    t.processPacketQueue()
                }))
            }
            ,
            i.prototype.processPacketQueue = function() {
                if (this.packetBuffer.length > 0 && !this.encoding) {
                    var e = this.packetBuffer.shift();
                    this.packet(e)
                }
            }
            ,
            i.prototype.cleanup = function() {
                u("cleanup");
                for (var e; e = this.subs.shift(); )
                    e.destroy();
                this.packetBuffer = [],
                this.encoding = !1,
                this.lastPing = null,
                this.decoder.destroy()
            }
            ,
            i.prototype.close = i.prototype.disconnect = function() {
                u("disconnect"),
                this.skipReconnect = !0,
                this.reconnecting = !1,
                "opening" == this.readyState && this.cleanup(),
                this.backoff.reset(),
                this.readyState = "closed",
                this.engine && this.engine.close()
            }
            ,
            i.prototype.onclose = function(e) {
                u("onclose"),
                this.cleanup(),
                this.backoff.reset(),
                this.readyState = "closed",
                this.emit("close", e),
                this._reconnection && !this.skipReconnect && this.reconnect()
            }
            ,
            i.prototype.reconnect = function() {
                if (this.reconnecting || this.skipReconnect)
                    return this;
                var e = this;
                if (this.backoff.attempts >= this._reconnectionAttempts)
                    u("reconnect failed"),
                    this.backoff.reset(),
                    this.emitAll("reconnect_failed"),
                    this.reconnecting = !1;
                else {
                    var t = this.backoff.duration();
                    u("will wait %dms before reconnect attempt", t),
                    this.reconnecting = !0;
                    var n = setTimeout(function() {
                        e.skipReconnect || (u("attempting reconnect"),
                        e.emitAll("reconnect_attempt", e.backoff.attempts),
                        e.emitAll("reconnecting", e.backoff.attempts),
                        e.skipReconnect || e.open(function(t) {
                            t ? (u("reconnect attempt error"),
                            e.reconnecting = !1,
                            e.reconnect(),
                            e.emitAll("reconnect_error", t.data)) : (u("reconnect success"),
                            e.onreconnect())
                        }))
                    }, t);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(n)
                        }
                    })
                }
            }
            ,
            i.prototype.onreconnect = function() {
                var e = this.backoff.attempts;
                this.reconnecting = !1,
                this.backoff.reset(),
                this.updateSocketIds(),
                this.emitAll("reconnect", e)
            }
        }
        , {
            "./on": 33,
            "./socket": 34,
            backo2: 36,
            "component-bind": 37,
            "component-emitter": 38,
            debug: 39,
            "engine.io-client": 1,
            indexof: 42,
            "socket.io-parser": 47
        }],
        33: [function(e, t, n) {
            function i(e, t, n) {
                return e.on(t, n),
                {
                    destroy: function() {
                        e.removeListener(t, n)
                    }
                }
            }
            t.exports = i
        }
        , {}],
        34: [function(e, t, n) {
            function i(e, t) {
                this.io = e,
                this.nsp = t,
                this.json = this,
                this.ids = 0,
                this.acks = {},
                this.receiveBuffer = [],
                this.sendBuffer = [],
                this.connected = !1,
                this.disconnected = !0,
                this.io.autoConnect && this.open()
            }
            var r = e("socket.io-parser")
              , o = e("component-emitter")
              , a = e("to-array")
              , s = e("./on")
              , c = e("component-bind")
              , l = e("debug")("socket.io-client:socket")
              , u = e("has-binary");
            t.exports = n = i;
            var h = {
                connect: 1,
                connect_error: 1,
                connect_timeout: 1,
                connecting: 1,
                disconnect: 1,
                error: 1,
                reconnect: 1,
                reconnect_attempt: 1,
                reconnect_failed: 1,
                reconnect_error: 1,
                reconnecting: 1,
                ping: 1,
                pong: 1
            }
              , d = o.prototype.emit;
            o(i.prototype),
            i.prototype.subEvents = function() {
                if (!this.subs) {
                    var e = this.io;
                    this.subs = [s(e, "open", c(this, "onopen")), s(e, "packet", c(this, "onpacket")), s(e, "close", c(this, "onclose"))]
                }
            }
            ,
            i.prototype.open = i.prototype.connect = function() {
                return this.connected ? this : (this.subEvents(),
                this.io.open(),
                "open" == this.io.readyState && this.onopen(),
                this.emit("connecting"),
                this)
            }
            ,
            i.prototype.send = function() {
                var e = a(arguments);
                return e.unshift("message"),
                this.emit.apply(this, e),
                this
            }
            ,
            i.prototype.emit = function(e) {
                if (h.hasOwnProperty(e))
                    return d.apply(this, arguments),
                    this;
                var t = a(arguments)
                  , n = r.EVENT;
                u(t) && (n = r.BINARY_EVENT);
                var i = {
                    type: n,
                    data: t
                };
                return i.options = {},
                i.options.compress = !this.flags || !1 !== this.flags.compress,
                "function" == typeof t[t.length - 1] && (l("emitting packet with ack id %d", this.ids),
                this.acks[this.ids] = t.pop(),
                i.id = this.ids++),
                this.connected ? this.packet(i) : this.sendBuffer.push(i),
                delete this.flags,
                this
            }
            ,
            i.prototype.packet = function(e) {
                e.nsp = this.nsp,
                this.io.packet(e)
            }
            ,
            i.prototype.onopen = function() {
                l("transport is open - connecting"),
                "/" != this.nsp && this.packet({
                    type: r.CONNECT
                })
            }
            ,
            i.prototype.onclose = function(e) {
                l("close (%s)", e),
                this.connected = !1,
                this.disconnected = !0,
                delete this.id,
                this.emit("disconnect", e)
            }
            ,
            i.prototype.onpacket = function(e) {
                if (e.nsp == this.nsp)
                    switch (e.type) {
                    case r.CONNECT:
                        this.onconnect();
                        break;
                    case r.EVENT:
                        this.onevent(e);
                        break;
                    case r.BINARY_EVENT:
                        this.onevent(e);
                        break;
                    case r.ACK:
                        this.onack(e);
                        break;
                    case r.BINARY_ACK:
                        this.onack(e);
                        break;
                    case r.DISCONNECT:
                        this.ondisconnect();
                        break;
                    case r.ERROR:
                        this.emit("error", e.data)
                    }
            }
            ,
            i.prototype.onevent = function(e) {
                var t = e.data || [];
                l("emitting event %j", t),
                null != e.id && (l("attaching ack callback to event"),
                t.push(this.ack(e.id))),
                this.connected ? d.apply(this, t) : this.receiveBuffer.push(t)
            }
            ,
            i.prototype.ack = function(e) {
                var t = this
                  , n = !1;
                return function() {
                    if (!n) {
                        n = !0;
                        var i = a(arguments);
                        l("sending ack %j", i);
                        var o = u(i) ? r.BINARY_ACK : r.ACK;
                        t.packet({
                            type: o,
                            id: e,
                            data: i
                        })
                    }
                }
            }
            ,
            i.prototype.onack = function(e) {
                var t = this.acks[e.id];
                "function" == typeof t ? (l("calling ack %s with %j", e.id, e.data),
                t.apply(this, e.data),
                delete this.acks[e.id]) : l("bad ack %s", e.id)
            }
            ,
            i.prototype.onconnect = function() {
                this.connected = !0,
                this.disconnected = !1,
                this.emit("connect"),
                this.emitBuffered()
            }
            ,
            i.prototype.emitBuffered = function() {
                var e;
                for (e = 0; e < this.receiveBuffer.length; e++)
                    d.apply(this, this.receiveBuffer[e]);
                for (this.receiveBuffer = [],
                e = 0; e < this.sendBuffer.length; e++)
                    this.packet(this.sendBuffer[e]);
                this.sendBuffer = []
            }
            ,
            i.prototype.ondisconnect = function() {
                l("server disconnect (%s)", this.nsp),
                this.destroy(),
                this.onclose("io server disconnect")
            }
            ,
            i.prototype.destroy = function() {
                if (this.subs) {
                    for (var e = 0; e < this.subs.length; e++)
                        this.subs[e].destroy();
                    this.subs = null
                }
                this.io.destroy(this)
            }
            ,
            i.prototype.close = i.prototype.disconnect = function() {
                return this.connected && (l("performing disconnect (%s)", this.nsp),
                this.packet({
                    type: r.DISCONNECT
                })),
                this.destroy(),
                this.connected && this.onclose("io client disconnect"),
                this
            }
            ,
            i.prototype.compress = function(e) {
                return this.flags = this.flags || {},
                this.flags.compress = e,
                this
            }
        }
        , {
            "./on": 33,
            "component-bind": 37,
            "component-emitter": 38,
            debug: 39,
            "has-binary": 41,
            "socket.io-parser": 47,
            "to-array": 51
        }],
        35: [function(e, t, n) {
            (function(n) {
                function i(e, t) {
                    var i = e
                      , t = t || n.location;
                    null == e && (e = t.protocol + "//" + t.host),
                    "string" == typeof e && ("/" == e.charAt(0) && (e = "/" == e.charAt(1) ? t.protocol + e : t.host + e),
                    /^(https?|wss?):\/\//.test(e) || (o("protocol-less url %s", e),
                    e = "undefined" != typeof t ? t.protocol + "//" + e : "https://" + e),
                    o("parse %s", e),
                    i = r(e)),
                    i.port || (/^(http|ws)$/.test(i.protocol) ? i.port = "80" : /^(http|ws)s$/.test(i.protocol) && (i.port = "443")),
                    i.path = i.path || "/";
                    var a = i.host.indexOf(":") !== -1
                      , s = a ? "[" + i.host + "]" : i.host;
                    return i.id = i.protocol + "://" + s + ":" + i.port,
                    i.href = i.protocol + "://" + s + (t && t.port == i.port ? "" : ":" + i.port),
                    i
                }
                var r = e("parseuri")
                  , o = e("debug")("socket.io-client:url");
                t.exports = i
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            debug: 39,
            parseuri: 45
        }],
        36: [function(e, t, n) {
            function i(e) {
                e = e || {},
                this.ms = e.min || 100,
                this.max = e.max || 1e4,
                this.factor = e.factor || 2,
                this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0,
                this.attempts = 0
            }
            t.exports = i,
            i.prototype.duration = function() {
                var e = this.ms * Math.pow(this.factor, this.attempts++);
                if (this.jitter) {
                    var t = Math.random()
                      , n = Math.floor(t * this.jitter * e);
                    e = 0 == (1 & Math.floor(10 * t)) ? e - n : e + n
                }
                return 0 | Math.min(e, this.max)
            }
            ,
            i.prototype.reset = function() {
                this.attempts = 0
            }
            ,
            i.prototype.setMin = function(e) {
                this.ms = e
            }
            ,
            i.prototype.setMax = function(e) {
                this.max = e
            }
            ,
            i.prototype.setJitter = function(e) {
                this.jitter = e
            }
        }
        , {}],
        37: [function(e, t, n) {
            var i = [].slice;
            t.exports = function(e, t) {
                if ("string" == typeof t && (t = e[t]),
                "function" != typeof t)
                    throw new Error("bind() requires a function");
                var n = i.call(arguments, 2);
                return function() {
                    return t.apply(e, n.concat(i.call(arguments)))
                }
            }
        }
        , {}],
        38: [function(e, t, n) {
            function i(e) {
                if (e)
                    return r(e)
            }
            function r(e) {
                for (var t in i.prototype)
                    e[t] = i.prototype[t];
                return e
            }
            t.exports = i,
            i.prototype.on = i.prototype.addEventListener = function(e, t) {
                return this._callbacks = this._callbacks || {},
                (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t),
                this
            }
            ,
            i.prototype.once = function(e, t) {
                function n() {
                    this.off(e, n),
                    t.apply(this, arguments)
                }
                return n.fn = t,
                this.on(e, n),
                this
            }
            ,
            i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function(e, t) {
                if (this._callbacks = this._callbacks || {},
                0 == arguments.length)
                    return this._callbacks = {},
                    this;
                var n = this._callbacks["$" + e];
                if (!n)
                    return this;
                if (1 == arguments.length)
                    return delete this._callbacks["$" + e],
                    this;
                for (var i, r = 0; r < n.length; r++)
                    if (i = n[r],
                    i === t || i.fn === t) {
                        n.splice(r, 1);
                        break
                    }
                return this
            }
            ,
            i.prototype.emit = function(e) {
                this._callbacks = this._callbacks || {};
                var t = [].slice.call(arguments, 1)
                  , n = this._callbacks["$" + e];
                if (n) {
                    n = n.slice(0);
                    for (var i = 0, r = n.length; i < r; ++i)
                        n[i].apply(this, t)
                }
                return this
            }
            ,
            i.prototype.listeners = function(e) {
                return this._callbacks = this._callbacks || {},
                this._callbacks["$" + e] || []
            }
            ,
            i.prototype.hasListeners = function(e) {
                return !!this.listeners(e).length
            }
        }
        , {}],
        39: [function(e, t, n) {
            arguments[4][17][0].apply(n, arguments)
        }
        , {
            "./debug": 40,
            dup: 17
        }],
        40: [function(e, t, n) {
            arguments[4][18][0].apply(n, arguments)
        }
        , {
            dup: 18,
            ms: 44
        }],
        41: [function(e, t, n) {
            (function(n) {
                function i(e) {
                    function t(e) {
                        if (!e)
                            return !1;
                        if (n.Buffer && n.Buffer.isBuffer && n.Buffer.isBuffer(e) || n.ArrayBuffer && e instanceof ArrayBuffer || n.Blob && e instanceof Blob || n.File && e instanceof File)
                            return !0;
                        if (r(e)) {
                            for (var i = 0; i < e.length; i++)
                                if (t(e[i]))
                                    return !0
                        } else if (e && "object" == typeof e) {
                            e.toJSON && "function" == typeof e.toJSON && (e = e.toJSON());
                            for (var o in e)
                                if (Object.prototype.hasOwnProperty.call(e, o) && t(e[o]))
                                    return !0
                        }
                        return !1
                    }
                    return t(e)
                }
                var r = e("isarray");
                t.exports = i
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            isarray: 43
        }],
        42: [function(e, t, n) {
            arguments[4][23][0].apply(n, arguments)
        }
        , {
            dup: 23
        }],
        43: [function(e, t, n) {
            arguments[4][24][0].apply(n, arguments)
        }
        , {
            dup: 24
        }],
        44: [function(e, t, n) {
            arguments[4][25][0].apply(n, arguments)
        }
        , {
            dup: 25
        }],
        45: [function(e, t, n) {
            arguments[4][28][0].apply(n, arguments)
        }
        , {
            dup: 28
        }],
        46: [function(e, t, n) {
            (function(t) {
                var i = e("isarray")
                  , r = e("./is-buffer");
                n.deconstructPacket = function(e) {
                    function t(e) {
                        if (!e)
                            return e;
                        if (r(e)) {
                            var o = {
                                _placeholder: !0,
                                num: n.length
                            };
                            return n.push(e),
                            o
                        }
                        if (i(e)) {
                            for (var a = new Array(e.length), s = 0; s < e.length; s++)
                                a[s] = t(e[s]);
                            return a
                        }
                        if ("object" == typeof e && !(e instanceof Date)) {
                            var a = {};
                            for (var c in e)
                                a[c] = t(e[c]);
                            return a
                        }
                        return e
                    }
                    var n = []
                      , o = e.data
                      , a = e;
                    return a.data = t(o),
                    a.attachments = n.length,
                    {
                        packet: a,
                        buffers: n
                    }
                }
                ,
                n.reconstructPacket = function(e, t) {
                    function n(e) {
                        if (e && e._placeholder) {
                            var r = t[e.num];
                            return r
                        }
                        if (i(e)) {
                            for (var o = 0; o < e.length; o++)
                                e[o] = n(e[o]);
                            return e
                        }
                        if (e && "object" == typeof e) {
                            for (var a in e)
                                e[a] = n(e[a]);
                            return e
                        }
                        return e
                    }
                    return e.data = n(e.data),
                    e.attachments = void 0,
                    e
                }
                ,
                n.removeBlobs = function(e, n) {
                    function o(e, c, l) {
                        if (!e)
                            return e;
                        if (t.Blob && e instanceof Blob || t.File && e instanceof File) {
                            a++;
                            var u = new FileReader;
                            u.onload = function() {
                                l ? l[c] = this.result : s = this.result,
                                --a || n(s)
                            }
                            ,
                            u.readAsArrayBuffer(e)
                        } else if (i(e))
                            for (var h = 0; h < e.length; h++)
                                o(e[h], h, e);
                        else if (e && "object" == typeof e && !r(e))
                            for (var d in e)
                                o(e[d], d, e)
                    }
                    var a = 0
                      , s = e;
                    o(s),
                    a || n(s)
                }
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {
            "./is-buffer": 48,
            isarray: 43
        }],
        47: [function(e, t, n) {
            function i() {}
            function r(e) {
                var t = ""
                  , i = !1;
                return t += e.type,
                n.BINARY_EVENT != e.type && n.BINARY_ACK != e.type || (t += e.attachments,
                t += "-"),
                e.nsp && "/" != e.nsp && (i = !0,
                t += e.nsp),
                null != e.id && (i && (t += ",",
                i = !1),
                t += e.id),
                null != e.data && (i && (t += ","),
                t += h.stringify(e.data)),
                u("encoded %j as %s", e, t),
                t
            }
            function o(e, t) {
                function n(e) {
                    var n = p.deconstructPacket(e)
                      , i = r(n.packet)
                      , o = n.buffers;
                    o.unshift(i),
                    t(o)
                }
                p.removeBlobs(e, n)
            }
            function a() {
                this.reconstructor = null
            }
            function s(e) {
                var t = {}
                  , i = 0;
                if (t.type = Number(e.charAt(0)),
                null == n.types[t.type])
                    return l();
                if (n.BINARY_EVENT == t.type || n.BINARY_ACK == t.type) {
                    for (var r = ""; "-" != e.charAt(++i) && (r += e.charAt(i),
                    i != e.length); )
                        ;
                    if (r != Number(r) || "-" != e.charAt(i))
                        throw new Error("Illegal attachments");
                    t.attachments = Number(r)
                }
                if ("/" == e.charAt(i + 1))
                    for (t.nsp = ""; ++i; ) {
                        var o = e.charAt(i);
                        if ("," == o)
                            break;
                        if (t.nsp += o,
                        i == e.length)
                            break
                    }
                else
                    t.nsp = "/";
                var a = e.charAt(i + 1);
                if ("" !== a && Number(a) == a) {
                    for (t.id = ""; ++i; ) {
                        var o = e.charAt(i);
                        if (null == o || Number(o) != o) {
                            --i;
                            break
                        }
                        if (t.id += e.charAt(i),
                        i == e.length)
                            break
                    }
                    t.id = Number(t.id)
                }
                if (e.charAt(++i))
                    try {
                        t.data = h.parse(e.substr(i))
                    } catch (e) {
                        return l()
                    }
                return u("decoded %s as %j", e, t),
                t
            }
            function c(e) {
                this.reconPack = e,
                this.buffers = []
            }
            function l(e) {
                return {
                    type: n.ERROR,
                    data: "parser error"
                }
            }
            var u = e("debug")("socket.io-parser")
              , h = e("json3")
              , d = (e("isarray"),
            e("component-emitter"))
              , p = e("./binary")
              , f = e("./is-buffer");
            n.protocol = 4,
            n.types = ["CONNECT", "DISCONNECT", "EVENT", "BINARY_EVENT", "ACK", "BINARY_ACK", "ERROR"],
            n.CONNECT = 0,
            n.DISCONNECT = 1,
            n.EVENT = 2,
            n.ACK = 3,
            n.ERROR = 4,
            n.BINARY_EVENT = 5,
            n.BINARY_ACK = 6,
            n.Encoder = i,
            n.Decoder = a,
            i.prototype.encode = function(e, t) {
                if (u("encoding packet %j", e),
                n.BINARY_EVENT == e.type || n.BINARY_ACK == e.type)
                    o(e, t);
                else {
                    var i = r(e);
                    t([i])
                }
            }
            ,
            d(a.prototype),
            a.prototype.add = function(e) {
                var t;
                if ("string" == typeof e)
                    t = s(e),
                    n.BINARY_EVENT == t.type || n.BINARY_ACK == t.type ? (this.reconstructor = new c(t),
                    0 === this.reconstructor.reconPack.attachments && this.emit("decoded", t)) : this.emit("decoded", t);
                else {
                    if (!f(e) && !e.base64)
                        throw new Error("Unknown type: " + e);
                    if (!this.reconstructor)
                        throw new Error("got binary data when not reconstructing a packet");
                    t = this.reconstructor.takeBinaryData(e),
                    t && (this.reconstructor = null,
                    this.emit("decoded", t))
                }
            }
            ,
            a.prototype.destroy = function() {
                this.reconstructor && this.reconstructor.finishedReconstruction()
            }
            ,
            c.prototype.takeBinaryData = function(e) {
                if (this.buffers.push(e),
                this.buffers.length == this.reconPack.attachments) {
                    var t = p.reconstructPacket(this.reconPack, this.buffers);
                    return this.finishedReconstruction(),
                    t
                }
                return null
            }
            ,
            c.prototype.finishedReconstruction = function() {
                this.reconPack = null,
                this.buffers = []
            }
        }
        , {
            "./binary": 46,
            "./is-buffer": 48,
            "component-emitter": 49,
            debug: 39,
            isarray: 43,
            json3: 50
        }],
        48: [function(e, t, n) {
            (function(e) {
                function n(t) {
                    return e.Buffer && e.Buffer.isBuffer(t) || e.ArrayBuffer && t instanceof ArrayBuffer
                }
                t.exports = n
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {}],
        49: [function(e, t, n) {
            arguments[4][15][0].apply(n, arguments)
        }
        , {
            dup: 15
        }],
        50: [function(t, n, i) {
            (function(t) {
                (function() {
                    function r(e, t) {
                        function n(e) {
                            if (n[e] !== g)
                                return n[e];
                            var r;
                            if ("bug-string-char-index" == e)
                                r = "a" != "a"[0];
                            else if ("json" == e)
                                r = n("json-stringify") && n("json-parse");
                            else {
                                var a, s = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                                if ("json-stringify" == e) {
                                    var c = t.stringify
                                      , u = "function" == typeof c && y;
                                    if (u) {
                                        (a = function() {
                                            return 1
                                        }
                                        ).toJSON = a;
                                        try {
                                            u = "0" === c(0) && "0" === c(new i) && '""' == c(new o) && c(E) === g && c(g) === g && c() === g && "1" === c(a) && "[1]" == c([a]) && "[null]" == c([g]) && "null" == c(null) && "[null,null,null]" == c([g, E, null]) && c({
                                                a: [a, !0, !1, null, "\0\b\n\f\r\t"]
                                            }) == s && "1" === c(null, a) && "[\n 1,\n 2\n]" == c([1, 2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == c(new l(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == c(new l(864e13)) && '"-000001-01-01T00:00:00.000Z"' == c(new l(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == c(new l(-1))
                                        } catch (e) {
                                            u = !1
                                        }
                                    }
                                    r = u
                                }
                                if ("json-parse" == e) {
                                    var h = t.parse;
                                    if ("function" == typeof h)
                                        try {
                                            if (0 === h("0") && !h(!1)) {
                                                a = h(s);
                                                var d = 5 == a.a.length && 1 === a.a[0];
                                                if (d) {
                                                    try {
                                                        d = !h('"\t"')
                                                    } catch (e) {}
                                                    if (d)
                                                        try {
                                                            d = 1 !== h("01")
                                                        } catch (e) {}
                                                    if (d)
                                                        try {
                                                            d = 1 !== h("1.")
                                                        } catch (e) {}
                                                }
                                            }
                                        } catch (e) {
                                            d = !1
                                        }
                                    r = d
                                }
                            }
                            return n[e] = !!r
                        }
                        e || (e = c.Object()),
                        t || (t = c.Object());
                        var i = e.Number || c.Number
                          , o = e.String || c.String
                          , s = e.Object || c.Object
                          , l = e.Date || c.Date
                          , u = e.SyntaxError || c.SyntaxError
                          , h = e.TypeError || c.TypeError
                          , d = e.Math || c.Math
                          , p = e.JSON || c.JSON;
                        "object" == typeof p && p && (t.stringify = p.stringify,
                        t.parse = p.parse);
                        var f, m, g, v = s.prototype, E = v.toString, y = new l(-0xc782b5b800cec);
                        try {
                            y = y.getUTCFullYear() == -109252 && 0 === y.getUTCMonth() && 1 === y.getUTCDate() && 10 == y.getUTCHours() && 37 == y.getUTCMinutes() && 6 == y.getUTCSeconds() && 708 == y.getUTCMilliseconds()
                        } catch (e) {}
                        if (!n("json")) {
                            var b = "[object Function]"
                              , T = "[object Date]"
                              , x = "[object Number]"
                              , R = "[object String]"
                              , w = "[object Array]"
                              , H = "[object Boolean]"
                              , M = n("bug-string-char-index");
                            if (!y)
                                var S = d.floor
                                  , _ = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
                                  , C = function(e, t) {
                                    return _[t] + 365 * (e - 1970) + S((e - 1969 + (t = +(t > 1))) / 4) - S((e - 1901 + t) / 100) + S((e - 1601 + t) / 400)
                                };
                            if ((f = v.hasOwnProperty) || (f = function(e) {
                                var t, n = {};
                                return (n.__proto__ = null,
                                n.__proto__ = {
                                    toString: 1
                                },
                                n).toString != E ? f = function(e) {
                                    var t = this.__proto__
                                      , n = e in (this.__proto__ = null,
                                    this);
                                    return this.__proto__ = t,
                                    n
                                }
                                : (t = n.constructor,
                                f = function(e) {
                                    var n = (this.constructor || t).prototype;
                                    return e in this && !(e in n && this[e] === n[e])
                                }
                                ),
                                n = null,
                                f.call(this, e)
                            }
                            ),
                            m = function(e, t) {
                                var n, i, r, o = 0;
                                (n = function() {
                                    this.valueOf = 0
                                }
                                ).prototype.valueOf = 0,
                                i = new n;
                                for (r in i)
                                    f.call(i, r) && o++;
                                return n = i = null,
                                o ? m = 2 == o ? function(e, t) {
                                    var n, i = {}, r = E.call(e) == b;
                                    for (n in e)
                                        r && "prototype" == n || f.call(i, n) || !(i[n] = 1) || !f.call(e, n) || t(n)
                                }
                                : function(e, t) {
                                    var n, i, r = E.call(e) == b;
                                    for (n in e)
                                        r && "prototype" == n || !f.call(e, n) || (i = "constructor" === n) || t(n);
                                    (i || f.call(e, n = "constructor")) && t(n)
                                }
                                : (i = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"],
                                m = function(e, t) {
                                    var n, r, o = E.call(e) == b, s = !o && "function" != typeof e.constructor && a[typeof e.hasOwnProperty] && e.hasOwnProperty || f;
                                    for (n in e)
                                        o && "prototype" == n || !s.call(e, n) || t(n);
                                    for (r = i.length; n = i[--r]; s.call(e, n) && t(n))
                                        ;
                                }
                                ),
                                m(e, t)
                            }
                            ,
                            !n("json-stringify")) {
                                var A = {
                                    92: "\\\\",
                                    34: '\\"',
                                    8: "\\b",
                                    12: "\\f",
                                    10: "\\n",
                                    13: "\\r",
                                    9: "\\t"
                                }
                                  , P = "000000"
                                  , L = function(e, t) {
                                    return (P + (t || 0)).slice(-e)
                                }
                                  , k = "\\u00"
                                  , D = function(e) {
                                    for (var t = '"', n = 0, i = e.length, r = !M || i > 10, o = r && (M ? e.split("") : e); n < i; n++) {
                                        var a = e.charCodeAt(n);
                                        switch (a) {
                                        case 8:
                                        case 9:
                                        case 10:
                                        case 12:
                                        case 13:
                                        case 34:
                                        case 92:
                                            t += A[a];
                                            break;
                                        default:
                                            if (a < 32) {
                                                t += k + L(2, a.toString(16));
                                                break
                                            }
                                            t += r ? o[n] : e.charAt(n)
                                        }
                                    }
                                    return t + '"'
                                }
                                  , I = function(e, t, n, i, r, o, a) {
                                    var s, c, l, u, d, p, v, y, b, M, _, A, P, k, O, B;
                                    try {
                                        s = t[e]
                                    } catch (e) {}
                                    if ("object" == typeof s && s)
                                        if (c = E.call(s),
                                        c != T || f.call(s, "toJSON"))
                                            "function" == typeof s.toJSON && (c != x && c != R && c != w || f.call(s, "toJSON")) && (s = s.toJSON(e));
                                        else if (s > -1 / 0 && s < 1 / 0) {
                                            if (C) {
                                                for (d = S(s / 864e5),
                                                l = S(d / 365.2425) + 1970 - 1; C(l + 1, 0) <= d; l++)
                                                    ;
                                                for (u = S((d - C(l, 0)) / 30.42); C(l, u + 1) <= d; u++)
                                                    ;
                                                d = 1 + d - C(l, u),
                                                p = (s % 864e5 + 864e5) % 864e5,
                                                v = S(p / 36e5) % 24,
                                                y = S(p / 6e4) % 60,
                                                b = S(p / 1e3) % 60,
                                                M = p % 1e3
                                            } else
                                                l = s.getUTCFullYear(),
                                                u = s.getUTCMonth(),
                                                d = s.getUTCDate(),
                                                v = s.getUTCHours(),
                                                y = s.getUTCMinutes(),
                                                b = s.getUTCSeconds(),
                                                M = s.getUTCMilliseconds();
                                            s = (l <= 0 || l >= 1e4 ? (l < 0 ? "-" : "+") + L(6, l < 0 ? -l : l) : L(4, l)) + "-" + L(2, u + 1) + "-" + L(2, d) + "T" + L(2, v) + ":" + L(2, y) + ":" + L(2, b) + "." + L(3, M) + "Z"
                                        } else
                                            s = null;
                                    if (n && (s = n.call(t, e, s)),
                                    null === s)
                                        return "null";
                                    if (c = E.call(s),
                                    c == H)
                                        return "" + s;
                                    if (c == x)
                                        return s > -1 / 0 && s < 1 / 0 ? "" + s : "null";
                                    if (c == R)
                                        return D("" + s);
                                    if ("object" == typeof s) {
                                        for (k = a.length; k--; )
                                            if (a[k] === s)
                                                throw h();
                                        if (a.push(s),
                                        _ = [],
                                        O = o,
                                        o += r,
                                        c == w) {
                                            for (P = 0,
                                            k = s.length; P < k; P++)
                                                A = I(P, s, n, i, r, o, a),
                                                _.push(A === g ? "null" : A);
                                            B = _.length ? r ? "[\n" + o + _.join(",\n" + o) + "\n" + O + "]" : "[" + _.join(",") + "]" : "[]"
                                        } else
                                            m(i || s, function(e) {
                                                var t = I(e, s, n, i, r, o, a);
                                                t !== g && _.push(D(e) + ":" + (r ? " " : "") + t)
                                            }),
                                            B = _.length ? r ? "{\n" + o + _.join(",\n" + o) + "\n" + O + "}" : "{" + _.join(",") + "}" : "{}";
                                        return a.pop(),
                                        B
                                    }
                                };
                                t.stringify = function(e, t, n) {
                                    var i, r, o, s;
                                    if (a[typeof t] && t)
                                        if ((s = E.call(t)) == b)
                                            r = t;
                                        else if (s == w) {
                                            o = {};
                                            for (var c, l = 0, u = t.length; l < u; c = t[l++],
                                            s = E.call(c),
                                            (s == R || s == x) && (o[c] = 1))
                                                ;
                                        }
                                    if (n)
                                        if ((s = E.call(n)) == x) {
                                            if ((n -= n % 1) > 0)
                                                for (i = "",
                                                n > 10 && (n = 10); i.length < n; i += " ")
                                                    ;
                                        } else
                                            s == R && (i = n.length <= 10 ? n : n.slice(0, 10));
                                    return I("", (c = {},
                                    c[""] = e,
                                    c), r, o, i, "", [])
                                }
                            }
                            if (!n("json-parse")) {
                                var O, B, F = o.fromCharCode, N = {
                                    92: "\\",
                                    34: '"',
                                    47: "/",
                                    98: "\b",
                                    116: "\t",
                                    110: "\n",
                                    102: "\f",
                                    114: "\r"
                                }, U = function() {
                                    throw O = B = null,
                                    u()
                                }, z = function() {
                                    for (var e, t, n, i, r, o = B, a = o.length; O < a; )
                                        switch (r = o.charCodeAt(O)) {
                                        case 9:
                                        case 10:
                                        case 13:
                                        case 32:
                                            O++;
                                            break;
                                        case 123:
                                        case 125:
                                        case 91:
                                        case 93:
                                        case 58:
                                        case 44:
                                            return e = M ? o.charAt(O) : o[O],
                                            O++,
                                            e;
                                        case 34:
                                            for (e = "@",
                                            O++; O < a; )
                                                if (r = o.charCodeAt(O),
                                                r < 32)
                                                    U();
                                                else if (92 == r)
                                                    switch (r = o.charCodeAt(++O)) {
                                                    case 92:
                                                    case 34:
                                                    case 47:
                                                    case 98:
                                                    case 116:
                                                    case 110:
                                                    case 102:
                                                    case 114:
                                                        e += N[r],
                                                        O++;
                                                        break;
                                                    case 117:
                                                        for (t = ++O,
                                                        n = O + 4; O < n; O++)
                                                            r = o.charCodeAt(O),
                                                            r >= 48 && r <= 57 || r >= 97 && r <= 102 || r >= 65 && r <= 70 || U();
                                                        e += F("0x" + o.slice(t, O));
                                                        break;
                                                    default:
                                                        U()
                                                    }
                                                else {
                                                    if (34 == r)
                                                        break;
                                                    for (r = o.charCodeAt(O),
                                                    t = O; r >= 32 && 92 != r && 34 != r; )
                                                        r = o.charCodeAt(++O);
                                                    e += o.slice(t, O)
                                                }
                                            if (34 == o.charCodeAt(O))
                                                return O++,
                                                e;
                                            U();
                                        default:
                                            if (t = O,
                                            45 == r && (i = !0,
                                            r = o.charCodeAt(++O)),
                                            r >= 48 && r <= 57) {
                                                for (48 == r && (r = o.charCodeAt(O + 1),
                                                r >= 48 && r <= 57) && U(),
                                                i = !1; O < a && (r = o.charCodeAt(O),
                                                r >= 48 && r <= 57); O++)
                                                    ;
                                                if (46 == o.charCodeAt(O)) {
                                                    for (n = ++O; n < a && (r = o.charCodeAt(n),
                                                    r >= 48 && r <= 57); n++)
                                                        ;
                                                    n == O && U(),
                                                    O = n
                                                }
                                                if (r = o.charCodeAt(O),
                                                101 == r || 69 == r) {
                                                    for (r = o.charCodeAt(++O),
                                                    43 != r && 45 != r || O++,
                                                    n = O; n < a && (r = o.charCodeAt(n),
                                                    r >= 48 && r <= 57); n++)
                                                        ;
                                                    n == O && U(),
                                                    O = n
                                                }
                                                return +o.slice(t, O)
                                            }
                                            if (i && U(),
                                            "true" == o.slice(O, O + 4))
                                                return O += 4,
                                                !0;
                                            if ("false" == o.slice(O, O + 5))
                                                return O += 5,
                                                !1;
                                            if ("null" == o.slice(O, O + 4))
                                                return O += 4,
                                                null;
                                            U()
                                        }
                                    return "$"
                                }, j = function(e) {
                                    var t, n;
                                    if ("$" == e && U(),
                                    "string" == typeof e) {
                                        if ("@" == (M ? e.charAt(0) : e[0]))
                                            return e.slice(1);
                                        if ("[" == e) {
                                            for (t = []; e = z(),
                                            "]" != e; n || (n = !0))
                                                n && ("," == e ? (e = z(),
                                                "]" == e && U()) : U()),
                                                "," == e && U(),
                                                t.push(j(e));
                                            return t
                                        }
                                        if ("{" == e) {
                                            for (t = {}; e = z(),
                                            "}" != e; n || (n = !0))
                                                n && ("," == e ? (e = z(),
                                                "}" == e && U()) : U()),
                                                "," != e && "string" == typeof e && "@" == (M ? e.charAt(0) : e[0]) && ":" == z() || U(),
                                                t[e.slice(1)] = j(z());
                                            return t
                                        }
                                        U()
                                    }
                                    return e
                                }, V = function(e, t, n) {
                                    var i = G(e, t, n);
                                    i === g ? delete e[t] : e[t] = i
                                }, G = function(e, t, n) {
                                    var i, r = e[t];
                                    if ("object" == typeof r && r)
                                        if (E.call(r) == w)
                                            for (i = r.length; i--; )
                                                V(r, i, n);
                                        else
                                            m(r, function(e) {
                                                V(r, e, n)
                                            });
                                    return n.call(e, t, r)
                                };
                                t.parse = function(e, t) {
                                    var n, i;
                                    return O = 0,
                                    B = "" + e,
                                    n = j(z()),
                                    "$" != z() && U(),
                                    O = B = null,
                                    t && E.call(t) == b ? G((i = {},
                                    i[""] = n,
                                    i), "", t) : n
                                }
                            }
                        }
                        return t.runInContext = r,
                        t
                    }
                    var o = "function" == typeof e && e.amd
                      , a = {
                        function: !0,
                        object: !0
                    }
                      , s = a[typeof i] && i && !i.nodeType && i
                      , c = a[typeof window] && window || this
                      , l = s && a[typeof n] && n && !n.nodeType && "object" == typeof t && t;
                    if (!l || l.global !== l && l.window !== l && l.self !== l || (c = l),
                    s && !o)
                        r(c, s);
                    else {
                        var u = c.JSON
                          , h = c.JSON3
                          , d = !1
                          , p = r(c, c.JSON3 = {
                            noConflict: function() {
                                return d || (d = !0,
                                c.JSON = u,
                                c.JSON3 = h,
                                u = h = null),
                                p
                            }
                        });
                        c.JSON = {
                            parse: p.parse,
                            stringify: p.stringify
                        }
                    }
                    o && e(function() {
                        return p
                    })
                }
                ).call(this)
            }
            ).call(this, "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {})
        }
        , {}],
        51: [function(e, t, n) {
            function i(e, t) {
                var n = [];
                t = t || 0;
                for (var i = t || 0; i < e.length; i++)
                    n[i - t] = e[i];
                return n
            }
            t.exports = i
        }
        , {}]
    }, {}, [31])(31)
}),
function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document)
            throw new Error("jQuery requires a window with a document");
        return t(e)
    }
    : t(e)
}("undefined" != typeof window ? window : this, function(e, t) {
    function n(e, t) {
        t = t || J;
        var n = t.createElement("script");
        n.text = e,
        t.head.appendChild(n).parentNode.removeChild(n)
    }
    function i(e) {
        var t = !!e && "length"in e && e.length
          , n = de.type(e);
        return "function" !== n && !de.isWindow(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e)
    }
    function r(e, t, n) {
        if (de.isFunction(t))
            return de.grep(e, function(e, i) {
                return !!t.call(e, i, e) !== n
            });
        if (t.nodeType)
            return de.grep(e, function(e) {
                return e === t !== n
            });
        if ("string" == typeof t) {
            if (xe.test(t))
                return de.filter(t, e, n);
            t = de.filter(t, e)
        }
        return de.grep(e, function(e) {
            return re.call(t, e) > -1 !== n && 1 === e.nodeType
        })
    }
    function o(e, t) {
        for (; (e = e[t]) && 1 !== e.nodeType; )
            ;
        return e
    }
    function a(e) {
        var t = {};
        return de.each(e.match(_e) || [], function(e, n) {
            t[n] = !0
        }),
        t
    }
    function s(e) {
        return e
    }
    function c(e) {
        throw e
    }
    function l(e, t, n) {
        var i;
        try {
            e && de.isFunction(i = e.promise) ? i.call(e).done(t).fail(n) : e && de.isFunction(i = e.then) ? i.call(e, t, n) : t.call(void 0, e)
        } catch (e) {
            n.call(void 0, e)
        }
    }
    function u() {
        J.removeEventListener("DOMContentLoaded", u),
        e.removeEventListener("load", u),
        de.ready()
    }
    function h() {
        this.expando = de.expando + h.uid++
    }
    function d(e, t, n) {
        var i;
        if (void 0 === n && 1 === e.nodeType)
            if (i = "data-" + t.replace(Oe, "-$&").toLowerCase(),
            n = e.getAttribute(i),
            "string" == typeof n) {
                try {
                    n = "true" === n || "false" !== n && ("null" === n ? null : +n + "" === n ? +n : Ie.test(n) ? JSON.parse(n) : n)
                } catch (e) {}
                De.set(e, t, n)
            } else
                n = void 0;
        return n
    }
    function p(e, t, n, i) {
        var r, o = 1, a = 20, s = i ? function() {
            return i.cur()
        }
        : function() {
            return de.css(e, t, "")
        }
        , c = s(), l = n && n[3] || (de.cssNumber[t] ? "" : "px"), u = (de.cssNumber[t] || "px" !== l && +c) && Fe.exec(de.css(e, t));
        if (u && u[3] !== l) {
            l = l || u[3],
            n = n || [],
            u = +c || 1;
            do
                o = o || ".5",
                u /= o,
                de.style(e, t, u + l);
            while (o !== (o = s() / c) && 1 !== o && --a)
        }
        return n && (u = +u || +c || 0,
        r = n[1] ? u + (n[1] + 1) * n[2] : +n[2],
        i && (i.unit = l,
        i.start = u,
        i.end = r)),
        r
    }
    function f(e) {
        var t, n = e.ownerDocument, i = e.nodeName, r = je[i];
        return r ? r : (t = n.body.appendChild(n.createElement(i)),
        r = de.css(t, "display"),
        t.parentNode.removeChild(t),
        "none" === r && (r = "block"),
        je[i] = r,
        r)
    }
    function m(e, t) {
        for (var n, i, r = [], o = 0, a = e.length; o < a; o++)
            i = e[o],
            i.style && (n = i.style.display,
            t ? ("none" === n && (r[o] = ke.get(i, "display") || null,
            r[o] || (i.style.display = "")),
            "" === i.style.display && Ue(i) && (r[o] = f(i))) : "none" !== n && (r[o] = "none",
            ke.set(i, "display", n)));
        for (o = 0; o < a; o++)
            null != r[o] && (e[o].style.display = r[o]);
        return e
    }
    function g(e, t) {
        var n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [];
        return void 0 === t || t && de.nodeName(e, t) ? de.merge([e], n) : n
    }
    function v(e, t) {
        for (var n = 0, i = e.length; n < i; n++)
            ke.set(e[n], "globalEval", !t || ke.get(t[n], "globalEval"))
    }
    function E(e, t, n, i, r) {
        for (var o, a, s, c, l, u, h = t.createDocumentFragment(), d = [], p = 0, f = e.length; p < f; p++)
            if (o = e[p],
            o || 0 === o)
                if ("object" === de.type(o))
                    de.merge(d, o.nodeType ? [o] : o);
                else if (Xe.test(o)) {
                    for (a = a || h.appendChild(t.createElement("div")),
                    s = (Ge.exec(o) || ["", ""])[1].toLowerCase(),
                    c = qe[s] || qe._default,
                    a.innerHTML = c[1] + de.htmlPrefilter(o) + c[2],
                    u = c[0]; u--; )
                        a = a.lastChild;
                    de.merge(d, a.childNodes),
                    a = h.firstChild,
                    a.textContent = ""
                } else
                    d.push(t.createTextNode(o));
        for (h.textContent = "",
        p = 0; o = d[p++]; )
            if (i && de.inArray(o, i) > -1)
                r && r.push(o);
            else if (l = de.contains(o.ownerDocument, o),
            a = g(h.appendChild(o), "script"),
            l && v(a),
            n)
                for (u = 0; o = a[u++]; )
                    We.test(o.type || "") && n.push(o);
        return h
    }
    function y() {
        return !0
    }
    function b() {
        return !1
    }
    function T() {
        try {
            return J.activeElement
        } catch (e) {}
    }
    function x(e, t, n, i, r, o) {
        var a, s;
        if ("object" == typeof t) {
            "string" != typeof n && (i = i || n,
            n = void 0);
            for (s in t)
                x(e, s, n, i, t[s], o);
            return e
        }
        if (null == i && null == r ? (r = n,
        i = n = void 0) : null == r && ("string" == typeof n ? (r = i,
        i = void 0) : (r = i,
        i = n,
        n = void 0)),
        r === !1)
            r = b;
        else if (!r)
            return e;
        return 1 === o && (a = r,
        r = function(e) {
            return de().off(e),
            a.apply(this, arguments)
        }
        ,
        r.guid = a.guid || (a.guid = de.guid++)),
        e.each(function() {
            de.event.add(this, t, r, i, n)
        })
    }
    function R(e, t) {
        return de.nodeName(e, "table") && de.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e : e
    }
    function w(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type,
        e
    }
    function H(e) {
        var t = tt.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"),
        e
    }
    function M(e, t) {
        var n, i, r, o, a, s, c, l;
        if (1 === t.nodeType) {
            if (ke.hasData(e) && (o = ke.access(e),
            a = ke.set(t, o),
            l = o.events)) {
                delete a.handle,
                a.events = {};
                for (r in l)
                    for (n = 0,
                    i = l[r].length; n < i; n++)
                        de.event.add(t, r, l[r][n])
            }
            De.hasData(e) && (s = De.access(e),
            c = de.extend({}, s),
            De.set(t, c))
        }
    }
    function S(e, t) {
        var n = t.nodeName.toLowerCase();
        "input" === n && Ve.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue)
    }
    function _(e, t, i, r) {
        t = ne.apply([], t);
        var o, a, s, c, l, u, h = 0, d = e.length, p = d - 1, f = t[0], m = de.isFunction(f);
        if (m || d > 1 && "string" == typeof f && !ue.checkClone && et.test(f))
            return e.each(function(n) {
                var o = e.eq(n);
                m && (t[0] = f.call(this, n, o.html())),
                _(o, t, i, r)
            });
        if (d && (o = E(t, e[0].ownerDocument, !1, e, r),
        a = o.firstChild,
        1 === o.childNodes.length && (o = a),
        a || r)) {
            for (s = de.map(g(o, "script"), w),
            c = s.length; h < d; h++)
                l = o,
                h !== p && (l = de.clone(l, !0, !0),
                c && de.merge(s, g(l, "script"))),
                i.call(e[h], l, h);
            if (c)
                for (u = s[s.length - 1].ownerDocument,
                de.map(s, H),
                h = 0; h < c; h++)
                    l = s[h],
                    We.test(l.type || "") && !ke.access(l, "globalEval") && de.contains(u, l) && (l.src ? de._evalUrl && de._evalUrl(l.src) : n(l.textContent.replace(nt, ""), u))
        }
        return e
    }
    function C(e, t, n) {
        for (var i, r = t ? de.filter(t, e) : e, o = 0; null != (i = r[o]); o++)
            n || 1 !== i.nodeType || de.cleanData(g(i)),
            i.parentNode && (n && de.contains(i.ownerDocument, i) && v(g(i, "script")),
            i.parentNode.removeChild(i));
        return e
    }
    function A(e, t, n) {
        var i, r, o, a, s = e.style;
        return n = n || ot(e),
        n && (a = n.getPropertyValue(t) || n[t],
        "" !== a || de.contains(e.ownerDocument, e) || (a = de.style(e, t)),
        !ue.pixelMarginRight() && rt.test(a) && it.test(t) && (i = s.width,
        r = s.minWidth,
        o = s.maxWidth,
        s.minWidth = s.maxWidth = s.width = a,
        a = n.width,
        s.width = i,
        s.minWidth = r,
        s.maxWidth = o)),
        void 0 !== a ? a + "" : a
    }
    function P(e, t) {
        return {
            get: function() {
                return e() ? void delete this.get : (this.get = t).apply(this, arguments)
            }
        }
    }
    function L(e) {
        if (e in ut)
            return e;
        for (var t = e[0].toUpperCase() + e.slice(1), n = lt.length; n--; )
            if (e = lt[n] + t,
            e in ut)
                return e
    }
    function k(e, t, n) {
        var i = Fe.exec(t);
        return i ? Math.max(0, i[2] - (n || 0)) + (i[3] || "px") : t
    }
    function D(e, t, n, i, r) {
        for (var o = n === (i ? "border" : "content") ? 4 : "width" === t ? 1 : 0, a = 0; o < 4; o += 2)
            "margin" === n && (a += de.css(e, n + Ne[o], !0, r)),
            i ? ("content" === n && (a -= de.css(e, "padding" + Ne[o], !0, r)),
            "margin" !== n && (a -= de.css(e, "border" + Ne[o] + "Width", !0, r))) : (a += de.css(e, "padding" + Ne[o], !0, r),
            "padding" !== n && (a += de.css(e, "border" + Ne[o] + "Width", !0, r)));
        return a
    }
    function I(e, t, n) {
        var i, r = !0, o = ot(e), a = "border-box" === de.css(e, "boxSizing", !1, o);
        if (e.getClientRects().length && (i = e.getBoundingClientRect()[t]),
        i <= 0 || null == i) {
            if (i = A(e, t, o),
            (i < 0 || null == i) && (i = e.style[t]),
            rt.test(i))
                return i;
            r = a && (ue.boxSizingReliable() || i === e.style[t]),
            i = parseFloat(i) || 0
        }
        return i + D(e, t, n || (a ? "border" : "content"), r, o) + "px"
    }
    function O(e, t, n, i, r) {
        return new O.prototype.init(e,t,n,i,r)
    }
    function B() {
        dt && (e.requestAnimationFrame(B),
        de.fx.tick())
    }
    function F() {
        return e.setTimeout(function() {
            ht = void 0
        }),
        ht = de.now()
    }
    function N(e, t) {
        var n, i = 0, r = {
            height: e
        };
        for (t = t ? 1 : 0; i < 4; i += 2 - t)
            n = Ne[i],
            r["margin" + n] = r["padding" + n] = e;
        return t && (r.opacity = r.width = e),
        r
    }
    function U(e, t, n) {
        for (var i, r = (V.tweeners[t] || []).concat(V.tweeners["*"]), o = 0, a = r.length; o < a; o++)
            if (i = r[o].call(n, t, e))
                return i
    }
    function z(e, t, n) {
        var i, r, o, a, s, c, l, u, h = "width"in t || "height"in t, d = this, p = {}, f = e.style, g = e.nodeType && Ue(e), v = ke.get(e, "fxshow");
        n.queue || (a = de._queueHooks(e, "fx"),
        null == a.unqueued && (a.unqueued = 0,
        s = a.empty.fire,
        a.empty.fire = function() {
            a.unqueued || s()
        }
        ),
        a.unqueued++,
        d.always(function() {
            d.always(function() {
                a.unqueued--,
                de.queue(e, "fx").length || a.empty.fire()
            })
        }));
        for (i in t)
            if (r = t[i],
            pt.test(r)) {
                if (delete t[i],
                o = o || "toggle" === r,
                r === (g ? "hide" : "show")) {
                    if ("show" !== r || !v || void 0 === v[i])
                        continue;
                    g = !0
                }
                p[i] = v && v[i] || de.style(e, i)
            }
        if (c = !de.isEmptyObject(t),
        c || !de.isEmptyObject(p)) {
            h && 1 === e.nodeType && (n.overflow = [f.overflow, f.overflowX, f.overflowY],
            l = v && v.display,
            null == l && (l = ke.get(e, "display")),
            u = de.css(e, "display"),
            "none" === u && (l ? u = l : (m([e], !0),
            l = e.style.display || l,
            u = de.css(e, "display"),
            m([e]))),
            ("inline" === u || "inline-block" === u && null != l) && "none" === de.css(e, "float") && (c || (d.done(function() {
                f.display = l
            }),
            null == l && (u = f.display,
            l = "none" === u ? "" : u)),
            f.display = "inline-block")),
            n.overflow && (f.overflow = "hidden",
            d.always(function() {
                f.overflow = n.overflow[0],
                f.overflowX = n.overflow[1],
                f.overflowY = n.overflow[2]
            })),
            c = !1;
            for (i in p)
                c || (v ? "hidden"in v && (g = v.hidden) : v = ke.access(e, "fxshow", {
                    display: l
                }),
                o && (v.hidden = !g),
                g && m([e], !0),
                d.done(function() {
                    g || m([e]),
                    ke.remove(e, "fxshow");
                    for (i in p)
                        de.style(e, i, p[i])
                })),
                c = U(g ? v[i] : 0, i, d),
                i in v || (v[i] = c.start,
                g && (c.end = c.start,
                c.start = 0))
        }
    }
    function j(e, t) {
        var n, i, r, o, a;
        for (n in e)
            if (i = de.camelCase(n),
            r = t[i],
            o = e[n],
            de.isArray(o) && (r = o[1],
            o = e[n] = o[0]),
            n !== i && (e[i] = o,
            delete e[n]),
            a = de.cssHooks[i],
            a && "expand"in a) {
                o = a.expand(o),
                delete e[i];
                for (n in o)
                    n in e || (e[n] = o[n],
                    t[n] = r)
            } else
                t[i] = r
    }
    function V(e, t, n) {
        var i, r, o = 0, a = V.prefilters.length, s = de.Deferred().always(function() {
            delete c.elem
        }), c = function() {
            if (r)
                return !1;
            for (var t = ht || F(), n = Math.max(0, l.startTime + l.duration - t), i = n / l.duration || 0, o = 1 - i, a = 0, c = l.tweens.length; a < c; a++)
                l.tweens[a].run(o);
            return s.notifyWith(e, [l, o, n]),
            o < 1 && c ? n : (s.resolveWith(e, [l]),
            !1)
        }, l = s.promise({
            elem: e,
            props: de.extend({}, t),
            opts: de.extend(!0, {
                specialEasing: {},
                easing: de.easing._default
            }, n),
            originalProperties: t,
            originalOptions: n,
            startTime: ht || F(),
            duration: n.duration,
            tweens: [],
            createTween: function(t, n) {
                var i = de.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing);
                return l.tweens.push(i),
                i
            },
            stop: function(t) {
                var n = 0
                  , i = t ? l.tweens.length : 0;
                if (r)
                    return this;
                for (r = !0; n < i; n++)
                    l.tweens[n].run(1);
                return t ? (s.notifyWith(e, [l, 1, 0]),
                s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]),
                this
            }
        }), u = l.props;
        for (j(u, l.opts.specialEasing); o < a; o++)
            if (i = V.prefilters[o].call(l, e, u, l.opts))
                return de.isFunction(i.stop) && (de._queueHooks(l.elem, l.opts.queue).stop = de.proxy(i.stop, i)),
                i;
        return de.map(u, U, l),
        de.isFunction(l.opts.start) && l.opts.start.call(e, l),
        de.fx.timer(de.extend(c, {
            elem: e,
            anim: l,
            queue: l.opts.queue
        })),
        l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always)
    }
    function G(e) {
        return e.getAttribute && e.getAttribute("class") || ""
    }
    function W(e, t, n, i) {
        var r;
        if (de.isArray(t))
            de.each(t, function(t, r) {
                n || Mt.test(e) ? i(e, r) : W(e + "[" + ("object" == typeof r && null != r ? t : "") + "]", r, n, i)
            });
        else if (n || "object" !== de.type(t))
            i(e, t);
        else
            for (r in t)
                W(e + "[" + r + "]", t[r], n, i)
    }
    function q(e) {
        return function(t, n) {
            "string" != typeof t && (n = t,
            t = "*");
            var i, r = 0, o = t.toLowerCase().match(_e) || [];
            if (de.isFunction(n))
                for (; i = o[r++]; )
                    "+" === i[0] ? (i = i.slice(1) || "*",
                    (e[i] = e[i] || []).unshift(n)) : (e[i] = e[i] || []).push(n)
        }
    }
    function X(e, t, n, i) {
        function r(s) {
            var c;
            return o[s] = !0,
            de.each(e[s] || [], function(e, s) {
                var l = s(t, n, i);
                return "string" != typeof l || a || o[l] ? a ? !(c = l) : void 0 : (t.dataTypes.unshift(l),
                r(l),
                !1)
            }),
            c
        }
        var o = {}
          , a = e === Ft;
        return r(t.dataTypes[0]) || !o["*"] && r("*")
    }
    function Y(e, t) {
        var n, i, r = de.ajaxSettings.flatOptions || {};
        for (n in t)
            void 0 !== t[n] && ((r[n] ? e : i || (i = {}))[n] = t[n]);
        return i && de.extend(!0, e, i),
        e
    }
    function K(e, t, n) {
        for (var i, r, o, a, s = e.contents, c = e.dataTypes; "*" === c[0]; )
            c.shift(),
            void 0 === i && (i = e.mimeType || t.getResponseHeader("Content-Type"));
        if (i)
            for (r in s)
                if (s[r] && s[r].test(i)) {
                    c.unshift(r);
                    break
                }
        if (c[0]in n)
            o = c[0];
        else {
            for (r in n) {
                if (!c[0] || e.converters[r + " " + c[0]]) {
                    o = r;
                    break
                }
                a || (a = r)
            }
            o = o || a
        }
        if (o)
            return o !== c[0] && c.unshift(o),
            n[o]
    }
    function Z(e, t, n, i) {
        var r, o, a, s, c, l = {}, u = e.dataTypes.slice();
        if (u[1])
            for (a in e.converters)
                l[a.toLowerCase()] = e.converters[a];
        for (o = u.shift(); o; )
            if (e.responseFields[o] && (n[e.responseFields[o]] = t),
            !c && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
            c = o,
            o = u.shift())
                if ("*" === o)
                    o = c;
                else if ("*" !== c && c !== o) {
                    if (a = l[c + " " + o] || l["* " + o],
                    !a)
                        for (r in l)
                            if (s = r.split(" "),
                            s[1] === o && (a = l[c + " " + s[0]] || l["* " + s[0]])) {
                                a === !0 ? a = l[r] : l[r] !== !0 && (o = s[0],
                                u.unshift(s[1]));
                                break
                            }
                    if (a !== !0)
                        if (a && e.throws)
                            t = a(t);
                        else
                            try {
                                t = a(t)
                            } catch (e) {
                                return {
                                    state: "parsererror",
                                    error: a ? e : "No conversion from " + c + " to " + o
                                }
                            }
                }
        return {
            state: "success",
            data: t
        }
    }
    function $(e) {
        return de.isWindow(e) ? e : 9 === e.nodeType && e.defaultView
    }
    var Q = []
      , J = e.document
      , ee = Object.getPrototypeOf
      , te = Q.slice
      , ne = Q.concat
      , ie = Q.push
      , re = Q.indexOf
      , oe = {}
      , ae = oe.toString
      , se = oe.hasOwnProperty
      , ce = se.toString
      , le = ce.call(Object)
      , ue = {}
      , he = "3.1.0"
      , de = function(e, t) {
        return new de.fn.init(e,t)
    }
      , pe = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
      , fe = /^-ms-/
      , me = /-([a-z])/g
      , ge = function(e, t) {
        return t.toUpperCase()
    };
    de.fn = de.prototype = {
        jquery: he,
        constructor: de,
        length: 0,
        toArray: function() {
            return te.call(this)
        },
        get: function(e) {
            return null != e ? e < 0 ? this[e + this.length] : this[e] : te.call(this)
        },
        pushStack: function(e) {
            var t = de.merge(this.constructor(), e);
            return t.prevObject = this,
            t
        },
        each: function(e) {
            return de.each(this, e)
        },
        map: function(e) {
            return this.pushStack(de.map(this, function(t, n) {
                return e.call(t, n, t)
            }))
        },
        slice: function() {
            return this.pushStack(te.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(e) {
            var t = this.length
              , n = +e + (e < 0 ? t : 0);
            return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor()
        },
        push: ie,
        sort: Q.sort,
        splice: Q.splice
    },
    de.extend = de.fn.extend = function() {
        var e, t, n, i, r, o, a = arguments[0] || {}, s = 1, c = arguments.length, l = !1;
        for ("boolean" == typeof a && (l = a,
        a = arguments[s] || {},
        s++),
        "object" == typeof a || de.isFunction(a) || (a = {}),
        s === c && (a = this,
        s--); s < c; s++)
            if (null != (e = arguments[s]))
                for (t in e)
                    n = a[t],
                    i = e[t],
                    a !== i && (l && i && (de.isPlainObject(i) || (r = de.isArray(i))) ? (r ? (r = !1,
                    o = n && de.isArray(n) ? n : []) : o = n && de.isPlainObject(n) ? n : {},
                    a[t] = de.extend(l, o, i)) : void 0 !== i && (a[t] = i));
        return a
    }
    ,
    de.extend({
        expando: "jQuery" + (he + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e)
        },
        noop: function() {},
        isFunction: function(e) {
            return "function" === de.type(e)
        },
        isArray: Array.isArray,
        isWindow: function(e) {
            return null != e && e === e.window
        },
        isNumeric: function(e) {
            var t = de.type(e);
            return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
        },
        isPlainObject: function(e) {
            var t, n;
            return !(!e || "[object Object]" !== ae.call(e)) && (!(t = ee(e)) || (n = se.call(t, "constructor") && t.constructor,
            "function" == typeof n && ce.call(n) === le))
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e)
                return !1;
            return !0
        },
        type: function(e) {
            return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? oe[ae.call(e)] || "object" : typeof e
        },
        globalEval: function(e) {
            n(e)
        },
        camelCase: function(e) {
            return e.replace(fe, "ms-").replace(me, ge)
        },
        nodeName: function(e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
        },
        each: function(e, t) {
            var n, r = 0;
            if (i(e))
                for (n = e.length; r < n && t.call(e[r], r, e[r]) !== !1; r++)
                    ;
            else
                for (r in e)
                    if (t.call(e[r], r, e[r]) === !1)
                        break;
            return e
        },
        trim: function(e) {
            return null == e ? "" : (e + "").replace(pe, "")
        },
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (i(Object(e)) ? de.merge(n, "string" == typeof e ? [e] : e) : ie.call(n, e)),
            n
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : re.call(t, e, n)
        },
        merge: function(e, t) {
            for (var n = +t.length, i = 0, r = e.length; i < n; i++)
                e[r++] = t[i];
            return e.length = r,
            e
        },
        grep: function(e, t, n) {
            for (var i, r = [], o = 0, a = e.length, s = !n; o < a; o++)
                i = !t(e[o], o),
                i !== s && r.push(e[o]);
            return r
        },
        map: function(e, t, n) {
            var r, o, a = 0, s = [];
            if (i(e))
                for (r = e.length; a < r; a++)
                    o = t(e[a], a, n),
                    null != o && s.push(o);
            else
                for (a in e)
                    o = t(e[a], a, n),
                    null != o && s.push(o);
            return ne.apply([], s)
        },
        guid: 1,
        proxy: function(e, t) {
            var n, i, r;
            if ("string" == typeof t && (n = e[t],
            t = e,
            e = n),
            de.isFunction(e))
                return i = te.call(arguments, 2),
                r = function() {
                    return e.apply(t || this, i.concat(te.call(arguments)))
                }
                ,
                r.guid = e.guid = e.guid || de.guid++,
                r
        },
        now: Date.now,
        support: ue
    }),
    "function" == typeof Symbol && (de.fn[Symbol.iterator] = Q[Symbol.iterator]),
    de.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        oe["[object " + t + "]"] = t.toLowerCase()
    });
    var ve = function(e) {
        function t(e, t, n, i) {
            var r, o, a, s, c, l, u, d = t && t.ownerDocument, f = t ? t.nodeType : 9;
            if (n = n || [],
            "string" != typeof e || !e || 1 !== f && 9 !== f && 11 !== f)
                return n;
            if (!i && ((t ? t.ownerDocument || t : z) !== k && L(t),
            t = t || k,
            I)) {
                if (11 !== f && (c = ve.exec(e)))
                    if (r = c[1]) {
                        if (9 === f) {
                            if (!(a = t.getElementById(r)))
                                return n;
                            if (a.id === r)
                                return n.push(a),
                                n
                        } else if (d && (a = d.getElementById(r)) && N(t, a) && a.id === r)
                            return n.push(a),
                            n
                    } else {
                        if (c[2])
                            return Q.apply(n, t.getElementsByTagName(e)),
                            n;
                        if ((r = c[3]) && x.getElementsByClassName && t.getElementsByClassName)
                            return Q.apply(n, t.getElementsByClassName(r)),
                            n
                    }
                if (x.qsa && !q[e + " "] && (!O || !O.test(e))) {
                    if (1 !== f)
                        d = t,
                        u = e;
                    else if ("object" !== t.nodeName.toLowerCase()) {
                        for ((s = t.getAttribute("id")) ? s = s.replace(Te, xe) : t.setAttribute("id", s = U),
                        l = M(e),
                        o = l.length; o--; )
                            l[o] = "#" + s + " " + p(l[o]);
                        u = l.join(","),
                        d = Ee.test(e) && h(t.parentNode) || t
                    }
                    if (u)
                        try {
                            return Q.apply(n, d.querySelectorAll(u)),
                            n
                        } catch (e) {} finally {
                            s === U && t.removeAttribute("id")
                        }
                }
            }
            return _(e.replace(se, "$1"), t, n, i)
        }
        function n() {
            function e(n, i) {
                return t.push(n + " ") > R.cacheLength && delete e[t.shift()],
                e[n + " "] = i
            }
            var t = [];
            return e
        }
        function i(e) {
            return e[U] = !0,
            e
        }
        function r(e) {
            var t = k.createElement("fieldset");
            try {
                return !!e(t)
            } catch (e) {
                return !1
            } finally {
                t.parentNode && t.parentNode.removeChild(t),
                t = null
            }
        }
        function o(e, t) {
            for (var n = e.split("|"), i = n.length; i--; )
                R.attrHandle[n[i]] = t
        }
        function a(e, t) {
            var n = t && e
              , i = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
            if (i)
                return i;
            if (n)
                for (; n = n.nextSibling; )
                    if (n === t)
                        return -1;
            return e ? 1 : -1
        }
        function s(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return "input" === n && t.type === e
            }
        }
        function c(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return ("input" === n || "button" === n) && t.type === e
            }
        }
        function l(e) {
            return function(t) {
                return "label"in t && t.disabled === e || "form"in t && t.disabled === e || "form"in t && t.disabled === !1 && (t.isDisabled === e || t.isDisabled !== !e && ("label"in t || !we(t)) !== e)
            }
        }
        function u(e) {
            return i(function(t) {
                return t = +t,
                i(function(n, i) {
                    for (var r, o = e([], n.length, t), a = o.length; a--; )
                        n[r = o[a]] && (n[r] = !(i[r] = n[r]))
                })
            })
        }
        function h(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e
        }
        function d() {}
        function p(e) {
            for (var t = 0, n = e.length, i = ""; t < n; t++)
                i += e[t].value;
            return i
        }
        function f(e, t, n) {
            var i = t.dir
              , r = t.next
              , o = r || i
              , a = n && "parentNode" === o
              , s = V++;
            return t.first ? function(t, n, r) {
                for (; t = t[i]; )
                    if (1 === t.nodeType || a)
                        return e(t, n, r)
            }
            : function(t, n, c) {
                var l, u, h, d = [j, s];
                if (c) {
                    for (; t = t[i]; )
                        if ((1 === t.nodeType || a) && e(t, n, c))
                            return !0
                } else
                    for (; t = t[i]; )
                        if (1 === t.nodeType || a)
                            if (h = t[U] || (t[U] = {}),
                            u = h[t.uniqueID] || (h[t.uniqueID] = {}),
                            r && r === t.nodeName.toLowerCase())
                                t = t[i] || t;
                            else {
                                if ((l = u[o]) && l[0] === j && l[1] === s)
                                    return d[2] = l[2];
                                if (u[o] = d,
                                d[2] = e(t, n, c))
                                    return !0
                            }
            }
        }
        function m(e) {
            return e.length > 1 ? function(t, n, i) {
                for (var r = e.length; r--; )
                    if (!e[r](t, n, i))
                        return !1;
                return !0
            }
            : e[0]
        }
        function g(e, n, i) {
            for (var r = 0, o = n.length; r < o; r++)
                t(e, n[r], i);
            return i
        }
        function v(e, t, n, i, r) {
            for (var o, a = [], s = 0, c = e.length, l = null != t; s < c; s++)
                (o = e[s]) && (n && !n(o, i, r) || (a.push(o),
                l && t.push(s)));
            return a
        }
        function E(e, t, n, r, o, a) {
            return r && !r[U] && (r = E(r)),
            o && !o[U] && (o = E(o, a)),
            i(function(i, a, s, c) {
                var l, u, h, d = [], p = [], f = a.length, m = i || g(t || "*", s.nodeType ? [s] : s, []), E = !e || !i && t ? m : v(m, d, e, s, c), y = n ? o || (i ? e : f || r) ? [] : a : E;
                if (n && n(E, y, s, c),
                r)
                    for (l = v(y, p),
                    r(l, [], s, c),
                    u = l.length; u--; )
                        (h = l[u]) && (y[p[u]] = !(E[p[u]] = h));
                if (i) {
                    if (o || e) {
                        if (o) {
                            for (l = [],
                            u = y.length; u--; )
                                (h = y[u]) && l.push(E[u] = h);
                            o(null, y = [], l, c)
                        }
                        for (u = y.length; u--; )
                            (h = y[u]) && (l = o ? ee(i, h) : d[u]) > -1 && (i[l] = !(a[l] = h))
                    }
                } else
                    y = v(y === a ? y.splice(f, y.length) : y),
                    o ? o(null, a, y, c) : Q.apply(a, y)
            })
        }
        function y(e) {
            for (var t, n, i, r = e.length, o = R.relative[e[0].type], a = o || R.relative[" "], s = o ? 1 : 0, c = f(function(e) {
                return e === t
            }, a, !0), l = f(function(e) {
                return ee(t, e) > -1
            }, a, !0), u = [function(e, n, i) {
                var r = !o && (i || n !== C) || ((t = n).nodeType ? c(e, n, i) : l(e, n, i));
                return t = null,
                r
            }
            ]; s < r; s++)
                if (n = R.relative[e[s].type])
                    u = [f(m(u), n)];
                else {
                    if (n = R.filter[e[s].type].apply(null, e[s].matches),
                    n[U]) {
                        for (i = ++s; i < r && !R.relative[e[i].type]; i++)
                            ;
                        return E(s > 1 && m(u), s > 1 && p(e.slice(0, s - 1).concat({
                            value: " " === e[s - 2].type ? "*" : ""
                        })).replace(se, "$1"), n, s < i && y(e.slice(s, i)), i < r && y(e = e.slice(i)), i < r && p(e))
                    }
                    u.push(n)
                }
            return m(u)
        }
        function b(e, n) {
            var r = n.length > 0
              , o = e.length > 0
              , a = function(i, a, s, c, l) {
                var u, h, d, p = 0, f = "0", m = i && [], g = [], E = C, y = i || o && R.find.TAG("*", l), b = j += null == E ? 1 : Math.random() || .1, T = y.length;
                for (l && (C = a === k || a || l); f !== T && null != (u = y[f]); f++) {
                    if (o && u) {
                        for (h = 0,
                        a || u.ownerDocument === k || (L(u),
                        s = !I); d = e[h++]; )
                            if (d(u, a || k, s)) {
                                c.push(u);
                                break
                            }
                        l && (j = b)
                    }
                    r && ((u = !d && u) && p--,
                    i && m.push(u))
                }
                if (p += f,
                r && f !== p) {
                    for (h = 0; d = n[h++]; )
                        d(m, g, a, s);
                    if (i) {
                        if (p > 0)
                            for (; f--; )
                                m[f] || g[f] || (g[f] = Z.call(c));
                        g = v(g)
                    }
                    Q.apply(c, g),
                    l && !i && g.length > 0 && p + n.length > 1 && t.uniqueSort(c)
                }
                return l && (j = b,
                C = E),
                m
            };
            return r ? i(a) : a
        }
        var T, x, R, w, H, M, S, _, C, A, P, L, k, D, I, O, B, F, N, U = "sizzle" + 1 * new Date, z = e.document, j = 0, V = 0, G = n(), W = n(), q = n(), X = function(e, t) {
            return e === t && (P = !0),
            0
        }, Y = {}.hasOwnProperty, K = [], Z = K.pop, $ = K.push, Q = K.push, J = K.slice, ee = function(e, t) {
            for (var n = 0, i = e.length; n < i; n++)
                if (e[n] === t)
                    return n;
            return -1
        }, te = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", ne = "[\\x20\\t\\r\\n\\f]", ie = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", re = "\\[" + ne + "*(" + ie + ")(?:" + ne + "*([*^$|!~]?=)" + ne + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + ie + "))|)" + ne + "*\\]", oe = ":(" + ie + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + re + ")*)|.*)\\)|)", ae = new RegExp(ne + "+","g"), se = new RegExp("^" + ne + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ne + "+$","g"), ce = new RegExp("^" + ne + "*," + ne + "*"), le = new RegExp("^" + ne + "*([>+~]|" + ne + ")" + ne + "*"), ue = new RegExp("=" + ne + "*([^\\]'\"]*?)" + ne + "*\\]","g"), he = new RegExp(oe), de = new RegExp("^" + ie + "$"), pe = {
            ID: new RegExp("^#(" + ie + ")"),
            CLASS: new RegExp("^\\.(" + ie + ")"),
            TAG: new RegExp("^(" + ie + "|[*])"),
            ATTR: new RegExp("^" + re),
            PSEUDO: new RegExp("^" + oe),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ne + "*(even|odd|(([+-]|)(\\d*)n|)" + ne + "*(?:([+-]|)" + ne + "*(\\d+)|))" + ne + "*\\)|)","i"),
            bool: new RegExp("^(?:" + te + ")$","i"),
            needsContext: new RegExp("^" + ne + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ne + "*((?:-\\d)?\\d*)" + ne + "*\\)|)(?=[^-]|$)","i")
        }, fe = /^(?:input|select|textarea|button)$/i, me = /^h\d$/i, ge = /^[^{]+\{\s*\[native \w/, ve = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, Ee = /[+~]/, ye = new RegExp("\\\\([\\da-f]{1,6}" + ne + "?|(" + ne + ")|.)","ig"), be = function(e, t, n) {
            var i = "0x" + t - 65536;
            return i !== i || n ? t : i < 0 ? String.fromCharCode(i + 65536) : String.fromCharCode(i >> 10 | 55296, 1023 & i | 56320)
        }, Te = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, xe = function(e, t) {
            return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
        }, Re = function() {
            L()
        }, we = f(function(e) {
            return e.disabled === !0
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            Q.apply(K = J.call(z.childNodes), z.childNodes),
            K[z.childNodes.length].nodeType
        } catch (e) {
            Q = {
                apply: K.length ? function(e, t) {
                    $.apply(e, J.call(t))
                }
                : function(e, t) {
                    for (var n = e.length, i = 0; e[n++] = t[i++]; )
                        ;
                    e.length = n - 1
                }
            }
        }
        x = t.support = {},
        H = t.isXML = function(e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return !!t && "HTML" !== t.nodeName
        }
        ,
        L = t.setDocument = function(e) {
            var t, n, i = e ? e.ownerDocument || e : z;
            return i !== k && 9 === i.nodeType && i.documentElement ? (k = i,
            D = k.documentElement,
            I = !H(k),
            z !== k && (n = k.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", Re, !1) : n.attachEvent && n.attachEvent("onunload", Re)),
            x.attributes = r(function(e) {
                return e.className = "i",
                !e.getAttribute("className")
            }),
            x.getElementsByTagName = r(function(e) {
                return e.appendChild(k.createComment("")),
                !e.getElementsByTagName("*").length
            }),
            x.getElementsByClassName = ge.test(k.getElementsByClassName),
            x.getById = r(function(e) {
                return D.appendChild(e).id = U,
                !k.getElementsByName || !k.getElementsByName(U).length
            }),
            x.getById ? (R.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && I) {
                    var n = t.getElementById(e);
                    return n ? [n] : []
                }
            }
            ,
            R.filter.ID = function(e) {
                var t = e.replace(ye, be);
                return function(e) {
                    return e.getAttribute("id") === t
                }
            }
            ) : (delete R.find.ID,
            R.filter.ID = function(e) {
                var t = e.replace(ye, be);
                return function(e) {
                    var n = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return n && n.value === t
                }
            }
            ),
            R.find.TAG = x.getElementsByTagName ? function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : x.qsa ? t.querySelectorAll(e) : void 0
            }
            : function(e, t) {
                var n, i = [], r = 0, o = t.getElementsByTagName(e);
                if ("*" === e) {
                    for (; n = o[r++]; )
                        1 === n.nodeType && i.push(n);
                    return i
                }
                return o
            }
            ,
            R.find.CLASS = x.getElementsByClassName && function(e, t) {
                if ("undefined" != typeof t.getElementsByClassName && I)
                    return t.getElementsByClassName(e)
            }
            ,
            B = [],
            O = [],
            (x.qsa = ge.test(k.querySelectorAll)) && (r(function(e) {
                D.appendChild(e).innerHTML = "<a id='" + U + "'></a><select id='" + U + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                e.querySelectorAll("[msallowcapture^='']").length && O.push("[*^$]=" + ne + "*(?:''|\"\")"),
                e.querySelectorAll("[selected]").length || O.push("\\[" + ne + "*(?:value|" + te + ")"),
                e.querySelectorAll("[id~=" + U + "-]").length || O.push("~="),
                e.querySelectorAll(":checked").length || O.push(":checked"),
                e.querySelectorAll("a#" + U + "+*").length || O.push(".#.+[+~]")
            }),
            r(function(e) {
                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var t = k.createElement("input");
                t.setAttribute("type", "hidden"),
                e.appendChild(t).setAttribute("name", "D"),
                e.querySelectorAll("[name=d]").length && O.push("name" + ne + "*[*^$|!~]?="),
                2 !== e.querySelectorAll(":enabled").length && O.push(":enabled", ":disabled"),
                D.appendChild(e).disabled = !0,
                2 !== e.querySelectorAll(":disabled").length && O.push(":enabled", ":disabled"),
                e.querySelectorAll("*,:x"),
                O.push(",.*:")
            })),
            (x.matchesSelector = ge.test(F = D.matches || D.webkitMatchesSelector || D.mozMatchesSelector || D.oMatchesSelector || D.msMatchesSelector)) && r(function(e) {
                x.disconnectedMatch = F.call(e, "*"),
                F.call(e, "[s!='']:x"),
                B.push("!=", oe)
            }),
            O = O.length && new RegExp(O.join("|")),
            B = B.length && new RegExp(B.join("|")),
            t = ge.test(D.compareDocumentPosition),
            N = t || ge.test(D.contains) ? function(e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e
                  , i = t && t.parentNode;
                return e === i || !(!i || 1 !== i.nodeType || !(n.contains ? n.contains(i) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i)))
            }
            : function(e, t) {
                if (t)
                    for (; t = t.parentNode; )
                        if (t === e)
                            return !0;
                return !1
            }
            ,
            X = t ? function(e, t) {
                if (e === t)
                    return P = !0,
                    0;
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return n ? n : (n = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1,
                1 & n || !x.sortDetached && t.compareDocumentPosition(e) === n ? e === k || e.ownerDocument === z && N(z, e) ? -1 : t === k || t.ownerDocument === z && N(z, t) ? 1 : A ? ee(A, e) - ee(A, t) : 0 : 4 & n ? -1 : 1)
            }
            : function(e, t) {
                if (e === t)
                    return P = !0,
                    0;
                var n, i = 0, r = e.parentNode, o = t.parentNode, s = [e], c = [t];
                if (!r || !o)
                    return e === k ? -1 : t === k ? 1 : r ? -1 : o ? 1 : A ? ee(A, e) - ee(A, t) : 0;
                if (r === o)
                    return a(e, t);
                for (n = e; n = n.parentNode; )
                    s.unshift(n);
                for (n = t; n = n.parentNode; )
                    c.unshift(n);
                for (; s[i] === c[i]; )
                    i++;
                return i ? a(s[i], c[i]) : s[i] === z ? -1 : c[i] === z ? 1 : 0
            }
            ,
            k) : k
        }
        ,
        t.matches = function(e, n) {
            return t(e, null, null, n)
        }
        ,
        t.matchesSelector = function(e, n) {
            if ((e.ownerDocument || e) !== k && L(e),
            n = n.replace(ue, "='$1']"),
            x.matchesSelector && I && !q[n + " "] && (!B || !B.test(n)) && (!O || !O.test(n)))
                try {
                    var i = F.call(e, n);
                    if (i || x.disconnectedMatch || e.document && 11 !== e.document.nodeType)
                        return i
                } catch (e) {}
            return t(n, k, null, [e]).length > 0
        }
        ,
        t.contains = function(e, t) {
            return (e.ownerDocument || e) !== k && L(e),
            N(e, t)
        }
        ,
        t.attr = function(e, t) {
            (e.ownerDocument || e) !== k && L(e);
            var n = R.attrHandle[t.toLowerCase()]
              , i = n && Y.call(R.attrHandle, t.toLowerCase()) ? n(e, t, !I) : void 0;
            return void 0 !== i ? i : x.attributes || !I ? e.getAttribute(t) : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
        }
        ,
        t.escape = function(e) {
            return (e + "").replace(Te, xe)
        }
        ,
        t.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        }
        ,
        t.uniqueSort = function(e) {
            var t, n = [], i = 0, r = 0;
            if (P = !x.detectDuplicates,
            A = !x.sortStable && e.slice(0),
            e.sort(X),
            P) {
                for (; t = e[r++]; )
                    t === e[r] && (i = n.push(r));
                for (; i--; )
                    e.splice(n[i], 1)
            }
            return A = null,
            e
        }
        ,
        w = t.getText = function(e) {
            var t, n = "", i = 0, r = e.nodeType;
            if (r) {
                if (1 === r || 9 === r || 11 === r) {
                    if ("string" == typeof e.textContent)
                        return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling)
                        n += w(e)
                } else if (3 === r || 4 === r)
                    return e.nodeValue
            } else
                for (; t = e[i++]; )
                    n += w(t);
            return n
        }
        ,
        R = t.selectors = {
            cacheLength: 50,
            createPseudo: i,
            match: pe,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(ye, be),
                    e[3] = (e[3] || e[4] || e[5] || "").replace(ye, be),
                    "~=" === e[2] && (e[3] = " " + e[3] + " "),
                    e.slice(0, 4)
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(),
                    "nth" === e[1].slice(0, 3) ? (e[3] || t.error(e[0]),
                    e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])),
                    e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && t.error(e[0]),
                    e
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    return pe.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && he.test(n) && (t = M(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t),
                    e[2] = n.slice(0, t)),
                    e.slice(0, 3))
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(ye, be).toLowerCase();
                    return "*" === e ? function() {
                        return !0
                    }
                    : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t
                    }
                },
                CLASS: function(e) {
                    var t = G[e + " "];
                    return t || (t = new RegExp("(^|" + ne + ")" + e + "(" + ne + "|$)")) && G(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "")
                    })
                },
                ATTR: function(e, n, i) {
                    return function(r) {
                        var o = t.attr(r, e);
                        return null == o ? "!=" === n : !n || (o += "",
                        "=" === n ? o === i : "!=" === n ? o !== i : "^=" === n ? i && 0 === o.indexOf(i) : "*=" === n ? i && o.indexOf(i) > -1 : "$=" === n ? i && o.slice(-i.length) === i : "~=" === n ? (" " + o.replace(ae, " ") + " ").indexOf(i) > -1 : "|=" === n && (o === i || o.slice(0, i.length + 1) === i + "-"))
                    }
                },
                CHILD: function(e, t, n, i, r) {
                    var o = "nth" !== e.slice(0, 3)
                      , a = "last" !== e.slice(-4)
                      , s = "of-type" === t;
                    return 1 === i && 0 === r ? function(e) {
                        return !!e.parentNode
                    }
                    : function(t, n, c) {
                        var l, u, h, d, p, f, m = o !== a ? "nextSibling" : "previousSibling", g = t.parentNode, v = s && t.nodeName.toLowerCase(), E = !c && !s, y = !1;
                        if (g) {
                            if (o) {
                                for (; m; ) {
                                    for (d = t; d = d[m]; )
                                        if (s ? d.nodeName.toLowerCase() === v : 1 === d.nodeType)
                                            return !1;
                                    f = m = "only" === e && !f && "nextSibling"
                                }
                                return !0
                            }
                            if (f = [a ? g.firstChild : g.lastChild],
                            a && E) {
                                for (d = g,
                                h = d[U] || (d[U] = {}),
                                u = h[d.uniqueID] || (h[d.uniqueID] = {}),
                                l = u[e] || [],
                                p = l[0] === j && l[1],
                                y = p && l[2],
                                d = p && g.childNodes[p]; d = ++p && d && d[m] || (y = p = 0) || f.pop(); )
                                    if (1 === d.nodeType && ++y && d === t) {
                                        u[e] = [j, p, y];
                                        break
                                    }
                            } else if (E && (d = t,
                            h = d[U] || (d[U] = {}),
                            u = h[d.uniqueID] || (h[d.uniqueID] = {}),
                            l = u[e] || [],
                            p = l[0] === j && l[1],
                            y = p),
                            y === !1)
                                for (; (d = ++p && d && d[m] || (y = p = 0) || f.pop()) && ((s ? d.nodeName.toLowerCase() !== v : 1 !== d.nodeType) || !++y || (E && (h = d[U] || (d[U] = {}),
                                u = h[d.uniqueID] || (h[d.uniqueID] = {}),
                                u[e] = [j, y]),
                                d !== t)); )
                                    ;
                            return y -= r,
                            y === i || y % i === 0 && y / i >= 0
                        }
                    }
                },
                PSEUDO: function(e, n) {
                    var r, o = R.pseudos[e] || R.setFilters[e.toLowerCase()] || t.error("unsupported pseudo: " + e);
                    return o[U] ? o(n) : o.length > 1 ? (r = [e, e, "", n],
                    R.setFilters.hasOwnProperty(e.toLowerCase()) ? i(function(e, t) {
                        for (var i, r = o(e, n), a = r.length; a--; )
                            i = ee(e, r[a]),
                            e[i] = !(t[i] = r[a])
                    }) : function(e) {
                        return o(e, 0, r)
                    }
                    ) : o
                }
            },
            pseudos: {
                not: i(function(e) {
                    var t = []
                      , n = []
                      , r = S(e.replace(se, "$1"));
                    return r[U] ? i(function(e, t, n, i) {
                        for (var o, a = r(e, null, i, []), s = e.length; s--; )
                            (o = a[s]) && (e[s] = !(t[s] = o))
                    }) : function(e, i, o) {
                        return t[0] = e,
                        r(t, null, o, n),
                        t[0] = null,
                        !n.pop()
                    }
                }),
                has: i(function(e) {
                    return function(n) {
                        return t(e, n).length > 0
                    }
                }),
                contains: i(function(e) {
                    return e = e.replace(ye, be),
                    function(t) {
                        return (t.textContent || t.innerText || w(t)).indexOf(e) > -1
                    }
                }),
                lang: i(function(e) {
                    return de.test(e || "") || t.error("unsupported lang: " + e),
                    e = e.replace(ye, be).toLowerCase(),
                    function(t) {
                        var n;
                        do
                            if (n = I ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                                return n = n.toLowerCase(),
                                n === e || 0 === n.indexOf(e + "-");
                        while ((t = t.parentNode) && 1 === t.nodeType);return !1
                    }
                }),
                target: function(t) {
                    var n = e.location && e.location.hash;
                    return n && n.slice(1) === t.id
                },
                root: function(e) {
                    return e === D
                },
                focus: function(e) {
                    return e === k.activeElement && (!k.hasFocus || k.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                },
                enabled: l(!1),
                disabled: l(!0),
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex,
                    e.selected === !0
                },
                empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                        if (e.nodeType < 6)
                            return !1;
                    return !0
                },
                parent: function(e) {
                    return !R.pseudos.empty(e)
                },
                header: function(e) {
                    return me.test(e.nodeName)
                },
                input: function(e) {
                    return fe.test(e.nodeName)
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t
                },
                text: function(e) {
                    var t;
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                },
                first: u(function() {
                    return [0]
                }),
                last: u(function(e, t) {
                    return [t - 1]
                }),
                eq: u(function(e, t, n) {
                    return [n < 0 ? n + t : n]
                }),
                even: u(function(e, t) {
                    for (var n = 0; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                odd: u(function(e, t) {
                    for (var n = 1; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                lt: u(function(e, t, n) {
                    for (var i = n < 0 ? n + t : n; --i >= 0; )
                        e.push(i);
                    return e
                }),
                gt: u(function(e, t, n) {
                    for (var i = n < 0 ? n + t : n; ++i < t; )
                        e.push(i);
                    return e
                })
            }
        },
        R.pseudos.nth = R.pseudos.eq;
        for (T in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })
            R.pseudos[T] = s(T);
        for (T in {
            submit: !0,
            reset: !0
        })
            R.pseudos[T] = c(T);
        return d.prototype = R.filters = R.pseudos,
        R.setFilters = new d,
        M = t.tokenize = function(e, n) {
            var i, r, o, a, s, c, l, u = W[e + " "];
            if (u)
                return n ? 0 : u.slice(0);
            for (s = e,
            c = [],
            l = R.preFilter; s; ) {
                i && !(r = ce.exec(s)) || (r && (s = s.slice(r[0].length) || s),
                c.push(o = [])),
                i = !1,
                (r = le.exec(s)) && (i = r.shift(),
                o.push({
                    value: i,
                    type: r[0].replace(se, " ")
                }),
                s = s.slice(i.length));
                for (a in R.filter)
                    !(r = pe[a].exec(s)) || l[a] && !(r = l[a](r)) || (i = r.shift(),
                    o.push({
                        value: i,
                        type: a,
                        matches: r
                    }),
                    s = s.slice(i.length));
                if (!i)
                    break
            }
            return n ? s.length : s ? t.error(e) : W(e, c).slice(0)
        }
        ,
        S = t.compile = function(e, t) {
            var n, i = [], r = [], o = q[e + " "];
            if (!o) {
                for (t || (t = M(e)),
                n = t.length; n--; )
                    o = y(t[n]),
                    o[U] ? i.push(o) : r.push(o);
                o = q(e, b(r, i)),
                o.selector = e
            }
            return o
        }
        ,
        _ = t.select = function(e, t, n, i) {
            var r, o, a, s, c, l = "function" == typeof e && e, u = !i && M(e = l.selector || e);
            if (n = n || [],
            1 === u.length) {
                if (o = u[0] = u[0].slice(0),
                o.length > 2 && "ID" === (a = o[0]).type && x.getById && 9 === t.nodeType && I && R.relative[o[1].type]) {
                    if (t = (R.find.ID(a.matches[0].replace(ye, be), t) || [])[0],
                    !t)
                        return n;
                    l && (t = t.parentNode),
                    e = e.slice(o.shift().value.length)
                }
                for (r = pe.needsContext.test(e) ? 0 : o.length; r-- && (a = o[r],
                !R.relative[s = a.type]); )
                    if ((c = R.find[s]) && (i = c(a.matches[0].replace(ye, be), Ee.test(o[0].type) && h(t.parentNode) || t))) {
                        if (o.splice(r, 1),
                        e = i.length && p(o),
                        !e)
                            return Q.apply(n, i),
                            n;
                        break
                    }
            }
            return (l || S(e, u))(i, t, !I, n, !t || Ee.test(e) && h(t.parentNode) || t),
            n
        }
        ,
        x.sortStable = U.split("").sort(X).join("") === U,
        x.detectDuplicates = !!P,
        L(),
        x.sortDetached = r(function(e) {
            return 1 & e.compareDocumentPosition(k.createElement("fieldset"))
        }),
        r(function(e) {
            return e.innerHTML = "<a href='#'></a>",
            "#" === e.firstChild.getAttribute("href")
        }) || o("type|href|height|width", function(e, t, n) {
            if (!n)
                return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
        }),
        x.attributes && r(function(e) {
            return e.innerHTML = "<input/>",
            e.firstChild.setAttribute("value", ""),
            "" === e.firstChild.getAttribute("value")
        }) || o("value", function(e, t, n) {
            if (!n && "input" === e.nodeName.toLowerCase())
                return e.defaultValue
        }),
        r(function(e) {
            return null == e.getAttribute("disabled")
        }) || o(te, function(e, t, n) {
            var i;
            if (!n)
                return e[t] === !0 ? t.toLowerCase() : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
        }),
        t
    }(e);
    de.find = ve,
    de.expr = ve.selectors,
    de.expr[":"] = de.expr.pseudos,
    de.uniqueSort = de.unique = ve.uniqueSort,
    de.text = ve.getText,
    de.isXMLDoc = ve.isXML,
    de.contains = ve.contains,
    de.escapeSelector = ve.escape;
    var Ee = function(e, t, n) {
        for (var i = [], r = void 0 !== n; (e = e[t]) && 9 !== e.nodeType; )
            if (1 === e.nodeType) {
                if (r && de(e).is(n))
                    break;
                i.push(e)
            }
        return i
    }
      , ye = function(e, t) {
        for (var n = []; e; e = e.nextSibling)
            1 === e.nodeType && e !== t && n.push(e);
        return n
    }
      , be = de.expr.match.needsContext
      , Te = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i
      , xe = /^.[^:#\[\.,]*$/;
    de.filter = function(e, t, n) {
        var i = t[0];
        return n && (e = ":not(" + e + ")"),
        1 === t.length && 1 === i.nodeType ? de.find.matchesSelector(i, e) ? [i] : [] : de.find.matches(e, de.grep(t, function(e) {
            return 1 === e.nodeType
        }))
    }
    ,
    de.fn.extend({
        find: function(e) {
            var t, n, i = this.length, r = this;
            if ("string" != typeof e)
                return this.pushStack(de(e).filter(function() {
                    for (t = 0; t < i; t++)
                        if (de.contains(r[t], this))
                            return !0
                }));
            for (n = this.pushStack([]),
            t = 0; t < i; t++)
                de.find(e, r[t], n);
            return i > 1 ? de.uniqueSort(n) : n
        },
        filter: function(e) {
            return this.pushStack(r(this, e || [], !1))
        },
        not: function(e) {
            return this.pushStack(r(this, e || [], !0))
        },
        is: function(e) {
            return !!r(this, "string" == typeof e && be.test(e) ? de(e) : e || [], !1).length
        }
    });
    var Re, we = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, He = de.fn.init = function(e, t, n) {
        var i, r;
        if (!e)
            return this;
        if (n = n || Re,
        "string" == typeof e) {
            if (i = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : we.exec(e),
            !i || !i[1] && t)
                return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (i[1]) {
                if (t = t instanceof de ? t[0] : t,
                de.merge(this, de.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : J, !0)),
                Te.test(i[1]) && de.isPlainObject(t))
                    for (i in t)
                        de.isFunction(this[i]) ? this[i](t[i]) : this.attr(i, t[i]);
                return this
            }
            return r = J.getElementById(i[2]),
            r && (this[0] = r,
            this.length = 1),
            this
        }
        return e.nodeType ? (this[0] = e,
        this.length = 1,
        this) : de.isFunction(e) ? void 0 !== n.ready ? n.ready(e) : e(de) : de.makeArray(e, this)
    }
    ;
    He.prototype = de.fn,
    Re = de(J);
    var Me = /^(?:parents|prev(?:Until|All))/
      , Se = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    de.fn.extend({
        has: function(e) {
            var t = de(e, this)
              , n = t.length;
            return this.filter(function() {
                for (var e = 0; e < n; e++)
                    if (de.contains(this, t[e]))
                        return !0
            })
        },
        closest: function(e, t) {
            var n, i = 0, r = this.length, o = [], a = "string" != typeof e && de(e);
            if (!be.test(e))
                for (; i < r; i++)
                    for (n = this[i]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (a ? a.index(n) > -1 : 1 === n.nodeType && de.find.matchesSelector(n, e))) {
                            o.push(n);
                            break
                        }
            return this.pushStack(o.length > 1 ? de.uniqueSort(o) : o)
        },
        index: function(e) {
            return e ? "string" == typeof e ? re.call(de(e), this[0]) : re.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(e, t) {
            return this.pushStack(de.uniqueSort(de.merge(this.get(), de(e, t))))
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    }),
    de.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(e) {
            return Ee(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return Ee(e, "parentNode", n)
        },
        next: function(e) {
            return o(e, "nextSibling")
        },
        prev: function(e) {
            return o(e, "previousSibling")
        },
        nextAll: function(e) {
            return Ee(e, "nextSibling")
        },
        prevAll: function(e) {
            return Ee(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return Ee(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return Ee(e, "previousSibling", n)
        },
        siblings: function(e) {
            return ye((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return ye(e.firstChild)
        },
        contents: function(e) {
            return e.contentDocument || de.merge([], e.childNodes)
        }
    }, function(e, t) {
        de.fn[e] = function(n, i) {
            var r = de.map(this, t, n);
            return "Until" !== e.slice(-5) && (i = n),
            i && "string" == typeof i && (r = de.filter(i, r)),
            this.length > 1 && (Se[e] || de.uniqueSort(r),
            Me.test(e) && r.reverse()),
            this.pushStack(r)
        }
    });
    var _e = /\S+/g;
    de.Callbacks = function(e) {
        e = "string" == typeof e ? a(e) : de.extend({}, e);
        var t, n, i, r, o = [], s = [], c = -1, l = function() {
            for (r = e.once,
            i = t = !0; s.length; c = -1)
                for (n = s.shift(); ++c < o.length; )
                    o[c].apply(n[0], n[1]) === !1 && e.stopOnFalse && (c = o.length,
                    n = !1);
            e.memory || (n = !1),
            t = !1,
            r && (o = n ? [] : "")
        }, u = {
            add: function() {
                return o && (n && !t && (c = o.length - 1,
                s.push(n)),
                function t(n) {
                    de.each(n, function(n, i) {
                        de.isFunction(i) ? e.unique && u.has(i) || o.push(i) : i && i.length && "string" !== de.type(i) && t(i)
                    })
                }(arguments),
                n && !t && l()),
                this
            },
            remove: function() {
                return de.each(arguments, function(e, t) {
                    for (var n; (n = de.inArray(t, o, n)) > -1; )
                        o.splice(n, 1),
                        n <= c && c--
                }),
                this
            },
            has: function(e) {
                return e ? de.inArray(e, o) > -1 : o.length > 0
            },
            empty: function() {
                return o && (o = []),
                this
            },
            disable: function() {
                return r = s = [],
                o = n = "",
                this
            },
            disabled: function() {
                return !o
            },
            lock: function() {
                return r = s = [],
                n || t || (o = n = ""),
                this
            },
            locked: function() {
                return !!r
            },
            fireWith: function(e, n) {
                return r || (n = n || [],
                n = [e, n.slice ? n.slice() : n],
                s.push(n),
                t || l()),
                this
            },
            fire: function() {
                return u.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!i
            }
        };
        return u
    }
    ,
    de.extend({
        Deferred: function(t) {
            var n = [["notify", "progress", de.Callbacks("memory"), de.Callbacks("memory"), 2], ["resolve", "done", de.Callbacks("once memory"), de.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", de.Callbacks("once memory"), de.Callbacks("once memory"), 1, "rejected"]]
              , i = "pending"
              , r = {
                state: function() {
                    return i
                },
                always: function() {
                    return o.done(arguments).fail(arguments),
                    this
                },
                catch: function(e) {
                    return r.then(null, e)
                },
                pipe: function() {
                    var e = arguments;
                    return de.Deferred(function(t) {
                        de.each(n, function(n, i) {
                            var r = de.isFunction(e[i[4]]) && e[i[4]];
                            o[i[1]](function() {
                                var e = r && r.apply(this, arguments);
                                e && de.isFunction(e.promise) ? e.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[i[0] + "With"](this, r ? [e] : arguments)
                            })
                        }),
                        e = null
                    }).promise()
                },
                then: function(t, i, r) {
                    function o(t, n, i, r) {
                        return function() {
                            var l = this
                              , u = arguments
                              , h = function() {
                                var e, h;
                                if (!(t < a)) {
                                    if (e = i.apply(l, u),
                                    e === n.promise())
                                        throw new TypeError("Thenable self-resolution");
                                    h = e && ("object" == typeof e || "function" == typeof e) && e.then,
                                    de.isFunction(h) ? r ? h.call(e, o(a, n, s, r), o(a, n, c, r)) : (a++,
                                    h.call(e, o(a, n, s, r), o(a, n, c, r), o(a, n, s, n.notifyWith))) : (i !== s && (l = void 0,
                                    u = [e]),
                                    (r || n.resolveWith)(l, u))
                                }
                            }
                              , d = r ? h : function() {
                                try {
                                    h()
                                } catch (e) {
                                    de.Deferred.exceptionHook && de.Deferred.exceptionHook(e, d.stackTrace),
                                    t + 1 >= a && (i !== c && (l = void 0,
                                    u = [e]),
                                    n.rejectWith(l, u))
                                }
                            }
                            ;
                            t ? d() : (de.Deferred.getStackHook && (d.stackTrace = de.Deferred.getStackHook()),
                            e.setTimeout(d))
                        }
                    }
                    var a = 0;
                    return de.Deferred(function(e) {
                        n[0][3].add(o(0, e, de.isFunction(r) ? r : s, e.notifyWith)),
                        n[1][3].add(o(0, e, de.isFunction(t) ? t : s)),
                        n[2][3].add(o(0, e, de.isFunction(i) ? i : c))
                    }).promise()
                },
                promise: function(e) {
                    return null != e ? de.extend(e, r) : r
                }
            }
              , o = {};
            return de.each(n, function(e, t) {
                var a = t[2]
                  , s = t[5];
                r[t[1]] = a.add,
                s && a.add(function() {
                    i = s
                }, n[3 - e][2].disable, n[0][2].lock),
                a.add(t[3].fire),
                o[t[0]] = function() {
                    return o[t[0] + "With"](this === o ? void 0 : this, arguments),
                    this
                }
                ,
                o[t[0] + "With"] = a.fireWith
            }),
            r.promise(o),
            t && t.call(o, o),
            o
        },
        when: function(e) {
            var t = arguments.length
              , n = t
              , i = Array(n)
              , r = te.call(arguments)
              , o = de.Deferred()
              , a = function(e) {
                return function(n) {
                    i[e] = this,
                    r[e] = arguments.length > 1 ? te.call(arguments) : n,
                    --t || o.resolveWith(i, r)
                }
            };
            if (t <= 1 && (l(e, o.done(a(n)).resolve, o.reject),
            "pending" === o.state() || de.isFunction(r[n] && r[n].then)))
                return o.then();
            for (; n--; )
                l(r[n], a(n), o.reject);
            return o.promise()
        }
    });
    var Ce = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    de.Deferred.exceptionHook = function(t, n) {
        e.console && e.console.warn && t && Ce.test(t.name) && e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, n)
    }
    ,
    de.readyException = function(t) {
        e.setTimeout(function() {
            throw t
        })
    }
    ;
    var Ae = de.Deferred();
    de.fn.ready = function(e) {
        return Ae.then(e).catch(function(e) {
            de.readyException(e)
        }),
        this
    }
    ,
    de.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(e) {
            e ? de.readyWait++ : de.ready(!0)
        },
        ready: function(e) {
            (e === !0 ? --de.readyWait : de.isReady) || (de.isReady = !0,
            e !== !0 && --de.readyWait > 0 || Ae.resolveWith(J, [de]))
        }
    }),
    de.ready.then = Ae.then,
    "complete" === J.readyState || "loading" !== J.readyState && !J.documentElement.doScroll ? e.setTimeout(de.ready) : (J.addEventListener("DOMContentLoaded", u),
    e.addEventListener("load", u));
    var Pe = function(e, t, n, i, r, o, a) {
        var s = 0
          , c = e.length
          , l = null == n;
        if ("object" === de.type(n)) {
            r = !0;
            for (s in n)
                Pe(e, t, s, n[s], !0, o, a)
        } else if (void 0 !== i && (r = !0,
        de.isFunction(i) || (a = !0),
        l && (a ? (t.call(e, i),
        t = null) : (l = t,
        t = function(e, t, n) {
            return l.call(de(e), n)
        }
        )),
        t))
            for (; s < c; s++)
                t(e[s], n, a ? i : i.call(e[s], s, t(e[s], n)));
        return r ? e : l ? t.call(e) : c ? t(e[0], n) : o
    }
      , Le = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
    };
    h.uid = 1,
    h.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {},
            Le(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))),
            t
        },
        set: function(e, t, n) {
            var i, r = this.cache(e);
            if ("string" == typeof t)
                r[de.camelCase(t)] = n;
            else
                for (i in t)
                    r[de.camelCase(i)] = t[i];
            return r
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][de.camelCase(t)]
        },
        access: function(e, t, n) {
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n),
            void 0 !== n ? n : t)
        },
        remove: function(e, t) {
            var n, i = e[this.expando];
            if (void 0 !== i) {
                if (void 0 !== t) {
                    de.isArray(t) ? t = t.map(de.camelCase) : (t = de.camelCase(t),
                    t = t in i ? [t] : t.match(_e) || []),
                    n = t.length;
                    for (; n--; )
                        delete i[t[n]]
                }
                (void 0 === t || de.isEmptyObject(i)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !de.isEmptyObject(t)
        }
    };
    var ke = new h
      , De = new h
      , Ie = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , Oe = /[A-Z]/g;
    de.extend({
        hasData: function(e) {
            return De.hasData(e) || ke.hasData(e)
        },
        data: function(e, t, n) {
            return De.access(e, t, n)
        },
        removeData: function(e, t) {
            De.remove(e, t)
        },
        _data: function(e, t, n) {
            return ke.access(e, t, n)
        },
        _removeData: function(e, t) {
            ke.remove(e, t)
        }
    }),
    de.fn.extend({
        data: function(e, t) {
            var n, i, r, o = this[0], a = o && o.attributes;
            if (void 0 === e) {
                if (this.length && (r = De.get(o),
                1 === o.nodeType && !ke.get(o, "hasDataAttrs"))) {
                    for (n = a.length; n--; )
                        a[n] && (i = a[n].name,
                        0 === i.indexOf("data-") && (i = de.camelCase(i.slice(5)),
                        d(o, i, r[i])));
                    ke.set(o, "hasDataAttrs", !0)
                }
                return r
            }
            return "object" == typeof e ? this.each(function() {
                De.set(this, e)
            }) : Pe(this, function(t) {
                var n;
                if (o && void 0 === t) {
                    if (n = De.get(o, e),
                    void 0 !== n)
                        return n;
                    if (n = d(o, e),
                    void 0 !== n)
                        return n
                } else
                    this.each(function() {
                        De.set(this, e, t)
                    })
            }, null, t, arguments.length > 1, null, !0)
        },
        removeData: function(e) {
            return this.each(function() {
                De.remove(this, e)
            })
        }
    }),
    de.extend({
        queue: function(e, t, n) {
            var i;
            if (e)
                return t = (t || "fx") + "queue",
                i = ke.get(e, t),
                n && (!i || de.isArray(n) ? i = ke.access(e, t, de.makeArray(n)) : i.push(n)),
                i || []
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = de.queue(e, t)
              , i = n.length
              , r = n.shift()
              , o = de._queueHooks(e, t)
              , a = function() {
                de.dequeue(e, t)
            };
            "inprogress" === r && (r = n.shift(),
            i--),
            r && ("fx" === t && n.unshift("inprogress"),
            delete o.stop,
            r.call(e, a, o)),
            !i && o && o.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return ke.get(e, n) || ke.access(e, n, {
                empty: de.Callbacks("once memory").add(function() {
                    ke.remove(e, [t + "queue", n])
                })
            })
        }
    }),
    de.fn.extend({
        queue: function(e, t) {
            var n = 2;
            return "string" != typeof e && (t = e,
            e = "fx",
            n--),
            arguments.length < n ? de.queue(this[0], e) : void 0 === t ? this : this.each(function() {
                var n = de.queue(this, e, t);
                de._queueHooks(this, e),
                "fx" === e && "inprogress" !== n[0] && de.dequeue(this, e)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                de.dequeue(this, e)
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, t) {
            var n, i = 1, r = de.Deferred(), o = this, a = this.length, s = function() {
                --i || r.resolveWith(o, [o])
            };
            for ("string" != typeof e && (t = e,
            e = void 0),
            e = e || "fx"; a--; )
                n = ke.get(o[a], e + "queueHooks"),
                n && n.empty && (i++,
                n.empty.add(s));
            return s(),
            r.promise(t)
        }
    });
    var Be = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , Fe = new RegExp("^(?:([+-])=|)(" + Be + ")([a-z%]*)$","i")
      , Ne = ["Top", "Right", "Bottom", "Left"]
      , Ue = function(e, t) {
        return e = t || e,
        "none" === e.style.display || "" === e.style.display && de.contains(e.ownerDocument, e) && "none" === de.css(e, "display")
    }
      , ze = function(e, t, n, i) {
        var r, o, a = {};
        for (o in t)
            a[o] = e.style[o],
            e.style[o] = t[o];
        r = n.apply(e, i || []);
        for (o in t)
            e.style[o] = a[o];
        return r
    }
      , je = {};
    de.fn.extend({
        show: function() {
            return m(this, !0)
        },
        hide: function() {
            return m(this)
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                Ue(this) ? de(this).show() : de(this).hide()
            })
        }
    });
    var Ve = /^(?:checkbox|radio)$/i
      , Ge = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i
      , We = /^$|\/(?:java|ecma)script/i
      , qe = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    qe.optgroup = qe.option,
    qe.tbody = qe.tfoot = qe.colgroup = qe.caption = qe.thead,
    qe.th = qe.td;
    var Xe = /<|&#?\w+;/;
    !function() {
        var e = J.createDocumentFragment()
          , t = e.appendChild(J.createElement("div"))
          , n = J.createElement("input");
        n.setAttribute("type", "radio"),
        n.setAttribute("checked", "checked"),
        n.setAttribute("name", "t"),
        t.appendChild(n),
        ue.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked,
        t.innerHTML = "<textarea>x</textarea>",
        ue.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue
    }();
    var Ye = J.documentElement
      , Ke = /^key/
      , Ze = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
      , $e = /^([^.]*)(?:\.(.+)|)/;
    de.event = {
        global: {},
        add: function(e, t, n, i, r) {
            var o, a, s, c, l, u, h, d, p, f, m, g = ke.get(e);
            if (g)
                for (n.handler && (o = n,
                n = o.handler,
                r = o.selector),
                r && de.find.matchesSelector(Ye, r),
                n.guid || (n.guid = de.guid++),
                (c = g.events) || (c = g.events = {}),
                (a = g.handle) || (a = g.handle = function(t) {
                    return "undefined" != typeof de && de.event.triggered !== t.type ? de.event.dispatch.apply(e, arguments) : void 0
                }
                ),
                t = (t || "").match(_e) || [""],
                l = t.length; l--; )
                    s = $e.exec(t[l]) || [],
                    p = m = s[1],
                    f = (s[2] || "").split(".").sort(),
                    p && (h = de.event.special[p] || {},
                    p = (r ? h.delegateType : h.bindType) || p,
                    h = de.event.special[p] || {},
                    u = de.extend({
                        type: p,
                        origType: m,
                        data: i,
                        handler: n,
                        guid: n.guid,
                        selector: r,
                        needsContext: r && de.expr.match.needsContext.test(r),
                        namespace: f.join(".")
                    }, o),
                    (d = c[p]) || (d = c[p] = [],
                    d.delegateCount = 0,
                    h.setup && h.setup.call(e, i, f, a) !== !1 || e.addEventListener && e.addEventListener(p, a)),
                    h.add && (h.add.call(e, u),
                    u.handler.guid || (u.handler.guid = n.guid)),
                    r ? d.splice(d.delegateCount++, 0, u) : d.push(u),
                    de.event.global[p] = !0)
        },
        remove: function(e, t, n, i, r) {
            var o, a, s, c, l, u, h, d, p, f, m, g = ke.hasData(e) && ke.get(e);
            if (g && (c = g.events)) {
                for (t = (t || "").match(_e) || [""],
                l = t.length; l--; )
                    if (s = $e.exec(t[l]) || [],
                    p = m = s[1],
                    f = (s[2] || "").split(".").sort(),
                    p) {
                        for (h = de.event.special[p] || {},
                        p = (i ? h.delegateType : h.bindType) || p,
                        d = c[p] || [],
                        s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        a = o = d.length; o--; )
                            u = d[o],
                            !r && m !== u.origType || n && n.guid !== u.guid || s && !s.test(u.namespace) || i && i !== u.selector && ("**" !== i || !u.selector) || (d.splice(o, 1),
                            u.selector && d.delegateCount--,
                            h.remove && h.remove.call(e, u));
                        a && !d.length && (h.teardown && h.teardown.call(e, f, g.handle) !== !1 || de.removeEvent(e, p, g.handle),
                        delete c[p])
                    } else
                        for (p in c)
                            de.event.remove(e, p + t[l], n, i, !0);
                de.isEmptyObject(c) && ke.remove(e, "handle events")
            }
        },
        dispatch: function(e) {
            var t, n, i, r, o, a, s = de.event.fix(e), c = new Array(arguments.length), l = (ke.get(this, "events") || {})[s.type] || [], u = de.event.special[s.type] || {};
            for (c[0] = s,
            t = 1; t < arguments.length; t++)
                c[t] = arguments[t];
            if (s.delegateTarget = this,
            !u.preDispatch || u.preDispatch.call(this, s) !== !1) {
                for (a = de.event.handlers.call(this, s, l),
                t = 0; (r = a[t++]) && !s.isPropagationStopped(); )
                    for (s.currentTarget = r.elem,
                    n = 0; (o = r.handlers[n++]) && !s.isImmediatePropagationStopped(); )
                        s.rnamespace && !s.rnamespace.test(o.namespace) || (s.handleObj = o,
                        s.data = o.data,
                        i = ((de.event.special[o.origType] || {}).handle || o.handler).apply(r.elem, c),
                        void 0 !== i && (s.result = i) === !1 && (s.preventDefault(),
                        s.stopPropagation()));
                return u.postDispatch && u.postDispatch.call(this, s),
                s.result
            }
        },
        handlers: function(e, t) {
            var n, i, r, o, a = [], s = t.delegateCount, c = e.target;
            if (s && c.nodeType && ("click" !== e.type || isNaN(e.button) || e.button < 1))
                for (; c !== this; c = c.parentNode || this)
                    if (1 === c.nodeType && (c.disabled !== !0 || "click" !== e.type)) {
                        for (i = [],
                        n = 0; n < s; n++)
                            o = t[n],
                            r = o.selector + " ",
                            void 0 === i[r] && (i[r] = o.needsContext ? de(r, this).index(c) > -1 : de.find(r, this, null, [c]).length),
                            i[r] && i.push(o);
                        i.length && a.push({
                            elem: c,
                            handlers: i
                        })
                    }
            return s < t.length && a.push({
                elem: this,
                handlers: t.slice(s)
            }),
            a
        },
        addProp: function(e, t) {
            Object.defineProperty(de.Event.prototype, e, {
                enumerable: !0,
                configurable: !0,
                get: de.isFunction(t) ? function() {
                    if (this.originalEvent)
                        return t(this.originalEvent)
                }
                : function() {
                    if (this.originalEvent)
                        return this.originalEvent[e]
                }
                ,
                set: function(t) {
                    Object.defineProperty(this, e, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    })
                }
            })
        },
        fix: function(e) {
            return e[de.expando] ? e : new de.Event(e)
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== T() && this.focus)
                        return this.focus(),
                        !1
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    if (this === T() && this.blur)
                        return this.blur(),
                        !1
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    if ("checkbox" === this.type && this.click && de.nodeName(this, "input"))
                        return this.click(),
                        !1
                },
                _default: function(e) {
                    return de.nodeName(e.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                }
            }
        }
    },
    de.removeEvent = function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n)
    }
    ,
    de.Event = function(e, t) {
        return this instanceof de.Event ? (e && e.type ? (this.originalEvent = e,
        this.type = e.type,
        this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && e.returnValue === !1 ? y : b,
        this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target,
        this.currentTarget = e.currentTarget,
        this.relatedTarget = e.relatedTarget) : this.type = e,
        t && de.extend(this, t),
        this.timeStamp = e && e.timeStamp || de.now(),
        void (this[de.expando] = !0)) : new de.Event(e,t)
    }
    ,
    de.Event.prototype = {
        constructor: de.Event,
        isDefaultPrevented: b,
        isPropagationStopped: b,
        isImmediatePropagationStopped: b,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = y,
            e && !this.isSimulated && e.preventDefault()
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = y,
            e && !this.isSimulated && e.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = y,
            e && !this.isSimulated && e.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    de.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(e) {
            var t = e.button;
            return null == e.which && Ke.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Ze.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which
        }
    }, de.event.addProp),
    de.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, t) {
        de.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var n, i = this, r = e.relatedTarget, o = e.handleObj;
                return r && (r === i || de.contains(i, r)) || (e.type = o.origType,
                n = o.handler.apply(this, arguments),
                e.type = t),
                n
            }
        }
    }),
    de.fn.extend({
        on: function(e, t, n, i) {
            return x(this, e, t, n, i)
        },
        one: function(e, t, n, i) {
            return x(this, e, t, n, i, 1)
        },
        off: function(e, t, n) {
            var i, r;
            if (e && e.preventDefault && e.handleObj)
                return i = e.handleObj,
                de(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler),
                this;
            if ("object" == typeof e) {
                for (r in e)
                    this.off(r, t, e[r]);
                return this
            }
            return t !== !1 && "function" != typeof t || (n = t,
            t = void 0),
            n === !1 && (n = b),
            this.each(function() {
                de.event.remove(this, e, n, t)
            })
        }
    });
    var Qe = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi
      , Je = /<script|<style|<link/i
      , et = /checked\s*(?:[^=]|=\s*.checked.)/i
      , tt = /^true\/(.*)/
      , nt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    de.extend({
        htmlPrefilter: function(e) {
            return e.replace(Qe, "<$1></$2>")
        },
        clone: function(e, t, n) {
            var i, r, o, a, s = e.cloneNode(!0), c = de.contains(e.ownerDocument, e);
            if (!(ue.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || de.isXMLDoc(e)))
                for (a = g(s),
                o = g(e),
                i = 0,
                r = o.length; i < r; i++)
                    S(o[i], a[i]);
            if (t)
                if (n)
                    for (o = o || g(e),
                    a = a || g(s),
                    i = 0,
                    r = o.length; i < r; i++)
                        M(o[i], a[i]);
                else
                    M(e, s);
            return a = g(s, "script"),
            a.length > 0 && v(a, !c && g(e, "script")),
            s
        },
        cleanData: function(e) {
            for (var t, n, i, r = de.event.special, o = 0; void 0 !== (n = e[o]); o++)
                if (Le(n)) {
                    if (t = n[ke.expando]) {
                        if (t.events)
                            for (i in t.events)
                                r[i] ? de.event.remove(n, i) : de.removeEvent(n, i, t.handle);
                        n[ke.expando] = void 0
                    }
                    n[De.expando] && (n[De.expando] = void 0)
                }
        }
    }),
    de.fn.extend({
        detach: function(e) {
            return C(this, e, !0)
        },
        remove: function(e) {
            return C(this, e)
        },
        text: function(e) {
            return Pe(this, function(e) {
                return void 0 === e ? de.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                })
            }, null, e, arguments.length)
        },
        append: function() {
            return _(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = R(this, e);
                    t.appendChild(e)
                }
            })
        },
        prepend: function() {
            return _(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = R(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function() {
            return _(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function() {
            return _(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++)
                1 === e.nodeType && (de.cleanData(g(e, !1)),
                e.textContent = "");
            return this
        },
        clone: function(e, t) {
            return e = null != e && e,
            t = null == t ? e : t,
            this.map(function() {
                return de.clone(this, e, t)
            })
        },
        html: function(e) {
            return Pe(this, function(e) {
                var t = this[0] || {}
                  , n = 0
                  , i = this.length;
                if (void 0 === e && 1 === t.nodeType)
                    return t.innerHTML;
                if ("string" == typeof e && !Je.test(e) && !qe[(Ge.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = de.htmlPrefilter(e);
                    try {
                        for (; n < i; n++)
                            t = this[n] || {},
                            1 === t.nodeType && (de.cleanData(g(t, !1)),
                            t.innerHTML = e);
                        t = 0
                    } catch (e) {}
                }
                t && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function() {
            var e = [];
            return _(this, arguments, function(t) {
                var n = this.parentNode;
                de.inArray(this, e) < 0 && (de.cleanData(g(this)),
                n && n.replaceChild(t, this))
            }, e)
        }
    }),
    de.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        de.fn[e] = function(e) {
            for (var n, i = [], r = de(e), o = r.length - 1, a = 0; a <= o; a++)
                n = a === o ? this : this.clone(!0),
                de(r[a])[t](n),
                ie.apply(i, n.get());
            return this.pushStack(i)
        }
    });
    var it = /^margin/
      , rt = new RegExp("^(" + Be + ")(?!px)[a-z%]+$","i")
      , ot = function(t) {
        var n = t.ownerDocument.defaultView;
        return n && n.opener || (n = e),
        n.getComputedStyle(t)
    };
    !function() {
        function t() {
            if (s) {
                s.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",
                s.innerHTML = "",
                Ye.appendChild(a);
                var t = e.getComputedStyle(s);
                n = "1%" !== t.top,
                o = "2px" === t.marginLeft,
                i = "4px" === t.width,
                s.style.marginRight = "50%",
                r = "4px" === t.marginRight,
                Ye.removeChild(a),
                s = null
            }
        }
        var n, i, r, o, a = J.createElement("div"), s = J.createElement("div");
        s.style && (s.style.backgroundClip = "content-box",
        s.cloneNode(!0).style.backgroundClip = "",
        ue.clearCloneStyle = "content-box" === s.style.backgroundClip,
        a.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",
        a.appendChild(s),
        de.extend(ue, {
            pixelPosition: function() {
                return t(),
                n
            },
            boxSizingReliable: function() {
                return t(),
                i
            },
            pixelMarginRight: function() {
                return t(),
                r
            },
            reliableMarginLeft: function() {
                return t(),
                o
            }
        }))
    }();
    var at = /^(none|table(?!-c[ea]).+)/
      , st = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }
      , ct = {
        letterSpacing: "0",
        fontWeight: "400"
    }
      , lt = ["Webkit", "Moz", "ms"]
      , ut = J.createElement("div").style;
    de.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = A(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            float: "cssFloat"
        },
        style: function(e, t, n, i) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var r, o, a, s = de.camelCase(t), c = e.style;
                return t = de.cssProps[s] || (de.cssProps[s] = L(s) || s),
                a = de.cssHooks[t] || de.cssHooks[s],
                void 0 === n ? a && "get"in a && void 0 !== (r = a.get(e, !1, i)) ? r : c[t] : (o = typeof n,
                "string" === o && (r = Fe.exec(n)) && r[1] && (n = p(e, t, r),
                o = "number"),
                null != n && n === n && ("number" === o && (n += r && r[3] || (de.cssNumber[s] ? "" : "px")),
                ue.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (c[t] = "inherit"),
                a && "set"in a && void 0 === (n = a.set(e, n, i)) || (c[t] = n)),
                void 0)
            }
        },
        css: function(e, t, n, i) {
            var r, o, a, s = de.camelCase(t);
            return t = de.cssProps[s] || (de.cssProps[s] = L(s) || s),
            a = de.cssHooks[t] || de.cssHooks[s],
            a && "get"in a && (r = a.get(e, !0, n)),
            void 0 === r && (r = A(e, t, i)),
            "normal" === r && t in ct && (r = ct[t]),
            "" === n || n ? (o = parseFloat(r),
            n === !0 || isFinite(o) ? o || 0 : r) : r
        }
    }),
    de.each(["height", "width"], function(e, t) {
        de.cssHooks[t] = {
            get: function(e, n, i) {
                if (n)
                    return !at.test(de.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? I(e, t, i) : ze(e, st, function() {
                        return I(e, t, i)
                    })
            },
            set: function(e, n, i) {
                var r, o = i && ot(e), a = i && D(e, t, i, "border-box" === de.css(e, "boxSizing", !1, o), o);
                return a && (r = Fe.exec(n)) && "px" !== (r[3] || "px") && (e.style[t] = n,
                n = de.css(e, t)),
                k(e, n, a)
            }
        }
    }),
    de.cssHooks.marginLeft = P(ue.reliableMarginLeft, function(e, t) {
        if (t)
            return (parseFloat(A(e, "marginLeft")) || e.getBoundingClientRect().left - ze(e, {
                marginLeft: 0
            }, function() {
                return e.getBoundingClientRect().left
            })) + "px"
    }),
    de.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        de.cssHooks[e + t] = {
            expand: function(n) {
                for (var i = 0, r = {}, o = "string" == typeof n ? n.split(" ") : [n]; i < 4; i++)
                    r[e + Ne[i] + t] = o[i] || o[i - 2] || o[0];
                return r
            }
        },
        it.test(e) || (de.cssHooks[e + t].set = k)
    }),
    de.fn.extend({
        css: function(e, t) {
            return Pe(this, function(e, t, n) {
                var i, r, o = {}, a = 0;
                if (de.isArray(t)) {
                    for (i = ot(e),
                    r = t.length; a < r; a++)
                        o[t[a]] = de.css(e, t[a], !1, i);
                    return o
                }
                return void 0 !== n ? de.style(e, t, n) : de.css(e, t)
            }, e, t, arguments.length > 1)
        }
    }),
    de.Tween = O,
    O.prototype = {
        constructor: O,
        init: function(e, t, n, i, r, o) {
            this.elem = e,
            this.prop = n,
            this.easing = r || de.easing._default,
            this.options = t,
            this.start = this.now = this.cur(),
            this.end = i,
            this.unit = o || (de.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = O.propHooks[this.prop];
            return e && e.get ? e.get(this) : O.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = O.propHooks[this.prop];
            return this.options.duration ? this.pos = t = de.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
            this.now = (this.end - this.start) * t + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            n && n.set ? n.set(this) : O.propHooks._default.set(this),
            this
        }
    },
    O.prototype.init.prototype = O.prototype,
    O.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = de.css(e.elem, e.prop, ""),
                t && "auto" !== t ? t : 0)
            },
            set: function(e) {
                de.fx.step[e.prop] ? de.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[de.cssProps[e.prop]] && !de.cssHooks[e.prop] ? e.elem[e.prop] = e.now : de.style(e.elem, e.prop, e.now + e.unit)
            }
        }
    },
    O.propHooks.scrollTop = O.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    },
    de.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2
        },
        _default: "swing"
    },
    de.fx = O.prototype.init,
    de.fx.step = {};
    var ht, dt, pt = /^(?:toggle|show|hide)$/, ft = /queueHooks$/;
    de.Animation = de.extend(V, {
        tweeners: {
            "*": [function(e, t) {
                var n = this.createTween(e, t);
                return p(n.elem, e, Fe.exec(t), n),
                n
            }
            ]
        },
        tweener: function(e, t) {
            de.isFunction(e) ? (t = e,
            e = ["*"]) : e = e.match(_e);
            for (var n, i = 0, r = e.length; i < r; i++)
                n = e[i],
                V.tweeners[n] = V.tweeners[n] || [],
                V.tweeners[n].unshift(t)
        },
        prefilters: [z],
        prefilter: function(e, t) {
            t ? V.prefilters.unshift(e) : V.prefilters.push(e)
        }
    }),
    de.speed = function(e, t, n) {
        var i = e && "object" == typeof e ? de.extend({}, e) : {
            complete: n || !n && t || de.isFunction(e) && e,
            duration: e,
            easing: n && t || t && !de.isFunction(t) && t
        };
        return de.fx.off || J.hidden ? i.duration = 0 : i.duration = "number" == typeof i.duration ? i.duration : i.duration in de.fx.speeds ? de.fx.speeds[i.duration] : de.fx.speeds._default,
        null != i.queue && i.queue !== !0 || (i.queue = "fx"),
        i.old = i.complete,
        i.complete = function() {
            de.isFunction(i.old) && i.old.call(this),
            i.queue && de.dequeue(this, i.queue)
        }
        ,
        i
    }
    ,
    de.fn.extend({
        fadeTo: function(e, t, n, i) {
            return this.filter(Ue).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, i)
        },
        animate: function(e, t, n, i) {
            var r = de.isEmptyObject(e)
              , o = de.speed(t, n, i)
              , a = function() {
                var t = V(this, de.extend({}, e), o);
                (r || ke.get(this, "finish")) && t.stop(!0)
            };
            return a.finish = a,
            r || o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(e, t, n) {
            var i = function(e) {
                var t = e.stop;
                delete e.stop,
                t(n)
            };
            return "string" != typeof e && (n = t,
            t = e,
            e = void 0),
            t && e !== !1 && this.queue(e || "fx", []),
            this.each(function() {
                var t = !0
                  , r = null != e && e + "queueHooks"
                  , o = de.timers
                  , a = ke.get(this);
                if (r)
                    a[r] && a[r].stop && i(a[r]);
                else
                    for (r in a)
                        a[r] && a[r].stop && ft.test(r) && i(a[r]);
                for (r = o.length; r--; )
                    o[r].elem !== this || null != e && o[r].queue !== e || (o[r].anim.stop(n),
                    t = !1,
                    o.splice(r, 1));
                !t && n || de.dequeue(this, e)
            })
        },
        finish: function(e) {
            return e !== !1 && (e = e || "fx"),
            this.each(function() {
                var t, n = ke.get(this), i = n[e + "queue"], r = n[e + "queueHooks"], o = de.timers, a = i ? i.length : 0;
                for (n.finish = !0,
                de.queue(this, e, []),
                r && r.stop && r.stop.call(this, !0),
                t = o.length; t--; )
                    o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0),
                    o.splice(t, 1));
                for (t = 0; t < a; t++)
                    i[t] && i[t].finish && i[t].finish.call(this);
                delete n.finish
            })
        }
    }),
    de.each(["toggle", "show", "hide"], function(e, t) {
        var n = de.fn[t];
        de.fn[t] = function(e, i, r) {
            return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(N(t, !0), e, i, r)
        }
    }),
    de.each({
        slideDown: N("show"),
        slideUp: N("hide"),
        slideToggle: N("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, t) {
        de.fn[e] = function(e, n, i) {
            return this.animate(t, e, n, i)
        }
    }),
    de.timers = [],
    de.fx.tick = function() {
        var e, t = 0, n = de.timers;
        for (ht = de.now(); t < n.length; t++)
            e = n[t],
            e() || n[t] !== e || n.splice(t--, 1);
        n.length || de.fx.stop(),
        ht = void 0
    }
    ,
    de.fx.timer = function(e) {
        de.timers.push(e),
        e() ? de.fx.start() : de.timers.pop()
    }
    ,
    de.fx.interval = 13,
    de.fx.start = function() {
        dt || (dt = e.requestAnimationFrame ? e.requestAnimationFrame(B) : e.setInterval(de.fx.tick, de.fx.interval))
    }
    ,
    de.fx.stop = function() {
        e.cancelAnimationFrame ? e.cancelAnimationFrame(dt) : e.clearInterval(dt),
        dt = null
    }
    ,
    de.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    de.fn.delay = function(t, n) {
        return t = de.fx ? de.fx.speeds[t] || t : t,
        n = n || "fx",
        this.queue(n, function(n, i) {
            var r = e.setTimeout(n, t);
            i.stop = function() {
                e.clearTimeout(r)
            }
        })
    }
    ,
    function() {
        var e = J.createElement("input")
          , t = J.createElement("select")
          , n = t.appendChild(J.createElement("option"));
        e.type = "checkbox",
        ue.checkOn = "" !== e.value,
        ue.optSelected = n.selected,
        e = J.createElement("input"),
        e.value = "t",
        e.type = "radio",
        ue.radioValue = "t" === e.value
    }();
    var mt, gt = de.expr.attrHandle;
    de.fn.extend({
        attr: function(e, t) {
            return Pe(this, de.attr, e, t, arguments.length > 1)
        },
        removeAttr: function(e) {
            return this.each(function() {
                de.removeAttr(this, e)
            })
        }
    }),
    de.extend({
        attr: function(e, t, n) {
            var i, r, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return "undefined" == typeof e.getAttribute ? de.prop(e, t, n) : (1 === o && de.isXMLDoc(e) || (r = de.attrHooks[t.toLowerCase()] || (de.expr.match.bool.test(t) ? mt : void 0)),
                void 0 !== n ? null === n ? void de.removeAttr(e, t) : r && "set"in r && void 0 !== (i = r.set(e, n, t)) ? i : (e.setAttribute(t, n + ""),
                n) : r && "get"in r && null !== (i = r.get(e, t)) ? i : (i = de.find.attr(e, t),
                null == i ? void 0 : i))
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!ue.radioValue && "radio" === t && de.nodeName(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t),
                        n && (e.value = n),
                        t
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, i = 0, r = t && t.match(_e);
            if (r && 1 === e.nodeType)
                for (; n = r[i++]; )
                    e.removeAttribute(n)
        }
    }),
    mt = {
        set: function(e, t, n) {
            return t === !1 ? de.removeAttr(e, n) : e.setAttribute(n, n),
            n
        }
    },
    de.each(de.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var n = gt[t] || de.find.attr;
        gt[t] = function(e, t, i) {
            var r, o, a = t.toLowerCase();
            return i || (o = gt[a],
            gt[a] = r,
            r = null != n(e, t, i) ? a : null,
            gt[a] = o),
            r
        }
    });
    var vt = /^(?:input|select|textarea|button)$/i
      , Et = /^(?:a|area)$/i;
    de.fn.extend({
        prop: function(e, t) {
            return Pe(this, de.prop, e, t, arguments.length > 1)
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[de.propFix[e] || e]
            })
        }
    }),
    de.extend({
        prop: function(e, t, n) {
            var i, r, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return 1 === o && de.isXMLDoc(e) || (t = de.propFix[t] || t,
                r = de.propHooks[t]),
                void 0 !== n ? r && "set"in r && void 0 !== (i = r.set(e, n, t)) ? i : e[t] = n : r && "get"in r && null !== (i = r.get(e, t)) ? i : e[t]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = de.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : vt.test(e.nodeName) || Et.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }),
    ue.optSelected || (de.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex,
            null
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex,
            t.parentNode && t.parentNode.selectedIndex)
        }
    }),
    de.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        de.propFix[this.toLowerCase()] = this
    });
    var yt = /[\t\r\n\f]/g;
    de.fn.extend({
        addClass: function(e) {
            var t, n, i, r, o, a, s, c = 0;
            if (de.isFunction(e))
                return this.each(function(t) {
                    de(this).addClass(e.call(this, t, G(this)))
                });
            if ("string" == typeof e && e)
                for (t = e.match(_e) || []; n = this[c++]; )
                    if (r = G(n),
                    i = 1 === n.nodeType && (" " + r + " ").replace(yt, " ")) {
                        for (a = 0; o = t[a++]; )
                            i.indexOf(" " + o + " ") < 0 && (i += o + " ");
                        s = de.trim(i),
                        r !== s && n.setAttribute("class", s)
                    }
            return this
        },
        removeClass: function(e) {
            var t, n, i, r, o, a, s, c = 0;
            if (de.isFunction(e))
                return this.each(function(t) {
                    de(this).removeClass(e.call(this, t, G(this)))
                });
            if (!arguments.length)
                return this.attr("class", "");
            if ("string" == typeof e && e)
                for (t = e.match(_e) || []; n = this[c++]; )
                    if (r = G(n),
                    i = 1 === n.nodeType && (" " + r + " ").replace(yt, " ")) {
                        for (a = 0; o = t[a++]; )
                            for (; i.indexOf(" " + o + " ") > -1; )
                                i = i.replace(" " + o + " ", " ");
                        s = de.trim(i),
                        r !== s && n.setAttribute("class", s)
                    }
            return this
        },
        toggleClass: function(e, t) {
            var n = typeof e;
            return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : de.isFunction(e) ? this.each(function(n) {
                de(this).toggleClass(e.call(this, n, G(this), t), t)
            }) : this.each(function() {
                var t, i, r, o;
                if ("string" === n)
                    for (i = 0,
                    r = de(this),
                    o = e.match(_e) || []; t = o[i++]; )
                        r.hasClass(t) ? r.removeClass(t) : r.addClass(t);
                else
                    void 0 !== e && "boolean" !== n || (t = G(this),
                    t && ke.set(this, "__className__", t),
                    this.setAttribute && this.setAttribute("class", t || e === !1 ? "" : ke.get(this, "__className__") || ""))
            })
        },
        hasClass: function(e) {
            var t, n, i = 0;
            for (t = " " + e + " "; n = this[i++]; )
                if (1 === n.nodeType && (" " + G(n) + " ").replace(yt, " ").indexOf(t) > -1)
                    return !0;
            return !1
        }
    });
    var bt = /\r/g
      , Tt = /[\x20\t\r\n\f]+/g;
    de.fn.extend({
        val: function(e) {
            var t, n, i, r = this[0];
            {
                if (arguments.length)
                    return i = de.isFunction(e),
                    this.each(function(n) {
                        var r;
                        1 === this.nodeType && (r = i ? e.call(this, n, de(this).val()) : e,
                        null == r ? r = "" : "number" == typeof r ? r += "" : de.isArray(r) && (r = de.map(r, function(e) {
                            return null == e ? "" : e + ""
                        })),
                        t = de.valHooks[this.type] || de.valHooks[this.nodeName.toLowerCase()],
                        t && "set"in t && void 0 !== t.set(this, r, "value") || (this.value = r))
                    });
                if (r)
                    return t = de.valHooks[r.type] || de.valHooks[r.nodeName.toLowerCase()],
                    t && "get"in t && void 0 !== (n = t.get(r, "value")) ? n : (n = r.value,
                    "string" == typeof n ? n.replace(bt, "") : null == n ? "" : n)
            }
        }
    }),
    de.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = de.find.attr(e, "value");
                    return null != t ? t : de.trim(de.text(e)).replace(Tt, " ")
                }
            },
            select: {
                get: function(e) {
                    for (var t, n, i = e.options, r = e.selectedIndex, o = "select-one" === e.type, a = o ? null : [], s = o ? r + 1 : i.length, c = r < 0 ? s : o ? r : 0; c < s; c++)
                        if (n = i[c],
                        (n.selected || c === r) && !n.disabled && (!n.parentNode.disabled || !de.nodeName(n.parentNode, "optgroup"))) {
                            if (t = de(n).val(),
                            o)
                                return t;
                            a.push(t)
                        }
                    return a
                },
                set: function(e, t) {
                    for (var n, i, r = e.options, o = de.makeArray(t), a = r.length; a--; )
                        i = r[a],
                        (i.selected = de.inArray(de.valHooks.option.get(i), o) > -1) && (n = !0);
                    return n || (e.selectedIndex = -1),
                    o
                }
            }
        }
    }),
    de.each(["radio", "checkbox"], function() {
        de.valHooks[this] = {
            set: function(e, t) {
                if (de.isArray(t))
                    return e.checked = de.inArray(de(e).val(), t) > -1
            }
        },
        ue.checkOn || (de.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value
        }
        )
    });
    var xt = /^(?:focusinfocus|focusoutblur)$/;
    de.extend(de.event, {
        trigger: function(t, n, i, r) {
            var o, a, s, c, l, u, h, d = [i || J], p = se.call(t, "type") ? t.type : t, f = se.call(t, "namespace") ? t.namespace.split(".") : [];
            if (a = s = i = i || J,
            3 !== i.nodeType && 8 !== i.nodeType && !xt.test(p + de.event.triggered) && (p.indexOf(".") > -1 && (f = p.split("."),
            p = f.shift(),
            f.sort()),
            l = p.indexOf(":") < 0 && "on" + p,
            t = t[de.expando] ? t : new de.Event(p,"object" == typeof t && t),
            t.isTrigger = r ? 2 : 3,
            t.namespace = f.join("."),
            t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
            t.result = void 0,
            t.target || (t.target = i),
            n = null == n ? [t] : de.makeArray(n, [t]),
            h = de.event.special[p] || {},
            r || !h.trigger || h.trigger.apply(i, n) !== !1)) {
                if (!r && !h.noBubble && !de.isWindow(i)) {
                    for (c = h.delegateType || p,
                    xt.test(c + p) || (a = a.parentNode); a; a = a.parentNode)
                        d.push(a),
                        s = a;
                    s === (i.ownerDocument || J) && d.push(s.defaultView || s.parentWindow || e)
                }
                for (o = 0; (a = d[o++]) && !t.isPropagationStopped(); )
                    t.type = o > 1 ? c : h.bindType || p,
                    u = (ke.get(a, "events") || {})[t.type] && ke.get(a, "handle"),
                    u && u.apply(a, n),
                    u = l && a[l],
                    u && u.apply && Le(a) && (t.result = u.apply(a, n),
                    t.result === !1 && t.preventDefault());
                return t.type = p,
                r || t.isDefaultPrevented() || h._default && h._default.apply(d.pop(), n) !== !1 || !Le(i) || l && de.isFunction(i[p]) && !de.isWindow(i) && (s = i[l],
                s && (i[l] = null),
                de.event.triggered = p,
                i[p](),
                de.event.triggered = void 0,
                s && (i[l] = s)),
                t.result
            }
        },
        simulate: function(e, t, n) {
            var i = de.extend(new de.Event, n, {
                type: e,
                isSimulated: !0
            });
            de.event.trigger(i, null, t)
        }
    }),
    de.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                de.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n)
                return de.event.trigger(e, t, n, !0)
        }
    }),
    de.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, t) {
        de.fn[t] = function(e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
        }
    }),
    de.fn.extend({
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        }
    }),
    ue.focusin = "onfocusin"in e,
    ue.focusin || de.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        var n = function(e) {
            de.event.simulate(t, e.target, de.event.fix(e))
        };
        de.event.special[t] = {
            setup: function() {
                var i = this.ownerDocument || this
                  , r = ke.access(i, t);
                r || i.addEventListener(e, n, !0),
                ke.access(i, t, (r || 0) + 1)
            },
            teardown: function() {
                var i = this.ownerDocument || this
                  , r = ke.access(i, t) - 1;
                r ? ke.access(i, t, r) : (i.removeEventListener(e, n, !0),
                ke.remove(i, t))
            }
        }
    });
    var Rt = e.location
      , wt = de.now()
      , Ht = /\?/;
    de.parseXML = function(t) {
        var n;
        if (!t || "string" != typeof t)
            return null;
        try {
            n = (new e.DOMParser).parseFromString(t, "text/xml")
        } catch (e) {
            n = void 0
        }
        return n && !n.getElementsByTagName("parsererror").length || de.error("Invalid XML: " + t),
        n
    }
    ;
    var Mt = /\[\]$/
      , St = /\r?\n/g
      , _t = /^(?:submit|button|image|reset|file)$/i
      , Ct = /^(?:input|select|textarea|keygen)/i;
    de.param = function(e, t) {
        var n, i = [], r = function(e, t) {
            var n = de.isFunction(t) ? t() : t;
            i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
        };
        if (de.isArray(e) || e.jquery && !de.isPlainObject(e))
            de.each(e, function() {
                r(this.name, this.value)
            });
        else
            for (n in e)
                W(n, e[n], t, r);
        return i.join("&")
    }
    ,
    de.fn.extend({
        serialize: function() {
            return de.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var e = de.prop(this, "elements");
                return e ? de.makeArray(e) : this
            }).filter(function() {
                var e = this.type;
                return this.name && !de(this).is(":disabled") && Ct.test(this.nodeName) && !_t.test(e) && (this.checked || !Ve.test(e))
            }).map(function(e, t) {
                var n = de(this).val();
                return null == n ? null : de.isArray(n) ? de.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(St, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(St, "\r\n")
                }
            }).get()
        }
    });
    var At = /%20/g
      , Pt = /#.*$/
      , Lt = /([?&])_=[^&]*/
      , kt = /^(.*?):[ \t]*([^\r\n]*)$/gm
      , Dt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/
      , It = /^(?:GET|HEAD)$/
      , Ot = /^\/\//
      , Bt = {}
      , Ft = {}
      , Nt = "*/".concat("*")
      , Ut = J.createElement("a");
    Ut.href = Rt.href,
    de.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Rt.href,
            type: "GET",
            isLocal: Dt.test(Rt.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Nt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": de.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? Y(Y(e, de.ajaxSettings), t) : Y(de.ajaxSettings, e)
        },
        ajaxPrefilter: q(Bt),
        ajaxTransport: q(Ft),
        ajax: function(t, n) {
            function i(t, n, i, s) {
                var l, d, p, b, T, x = n;
                u || (u = !0,
                c && e.clearTimeout(c),
                r = void 0,
                a = s || "",
                R.readyState = t > 0 ? 4 : 0,
                l = t >= 200 && t < 300 || 304 === t,
                i && (b = K(f, R, i)),
                b = Z(f, b, R, l),
                l ? (f.ifModified && (T = R.getResponseHeader("Last-Modified"),
                T && (de.lastModified[o] = T),
                T = R.getResponseHeader("etag"),
                T && (de.etag[o] = T)),
                204 === t || "HEAD" === f.type ? x = "nocontent" : 304 === t ? x = "notmodified" : (x = b.state,
                d = b.data,
                p = b.error,
                l = !p)) : (p = x,
                !t && x || (x = "error",
                t < 0 && (t = 0))),
                R.status = t,
                R.statusText = (n || x) + "",
                l ? v.resolveWith(m, [d, x, R]) : v.rejectWith(m, [R, x, p]),
                R.statusCode(y),
                y = void 0,
                h && g.trigger(l ? "ajaxSuccess" : "ajaxError", [R, f, l ? d : p]),
                E.fireWith(m, [R, x]),
                h && (g.trigger("ajaxComplete", [R, f]),
                --de.active || de.event.trigger("ajaxStop")))
            }
            "object" == typeof t && (n = t,
            t = void 0),
            n = n || {};
            var r, o, a, s, c, l, u, h, d, p, f = de.ajaxSetup({}, n), m = f.context || f, g = f.context && (m.nodeType || m.jquery) ? de(m) : de.event, v = de.Deferred(), E = de.Callbacks("once memory"), y = f.statusCode || {}, b = {}, T = {}, x = "canceled", R = {
                readyState: 0,
                getResponseHeader: function(e) {
                    var t;
                    if (u) {
                        if (!s)
                            for (s = {}; t = kt.exec(a); )
                                s[t[1].toLowerCase()] = t[2];
                        t = s[e.toLowerCase()]
                    }
                    return null == t ? null : t
                },
                getAllResponseHeaders: function() {
                    return u ? a : null
                },
                setRequestHeader: function(e, t) {
                    return null == u && (e = T[e.toLowerCase()] = T[e.toLowerCase()] || e,
                    b[e] = t),
                    this
                },
                overrideMimeType: function(e) {
                    return null == u && (f.mimeType = e),
                    this
                },
                statusCode: function(e) {
                    var t;
                    if (e)
                        if (u)
                            R.always(e[R.status]);
                        else
                            for (t in e)
                                y[t] = [y[t], e[t]];
                    return this
                },
                abort: function(e) {
                    var t = e || x;
                    return r && r.abort(t),
                    i(0, t),
                    this
                }
            };
            if (v.promise(R),
            f.url = ((t || f.url || Rt.href) + "").replace(Ot, Rt.protocol + "//"),
            f.type = n.method || n.type || f.method || f.type,
            f.dataTypes = (f.dataType || "*").toLowerCase().match(_e) || [""],
            null == f.crossDomain) {
                l = J.createElement("a");
                try {
                    l.href = f.url,
                    l.href = l.href,
                    f.crossDomain = Ut.protocol + "//" + Ut.host != l.protocol + "//" + l.host
                } catch (e) {
                    f.crossDomain = !0
                }
            }
            if (f.data && f.processData && "string" != typeof f.data && (f.data = de.param(f.data, f.traditional)),
            X(Bt, f, n, R),
            u)
                return R;
            h = de.event && f.global,
            h && 0 === de.active++ && de.event.trigger("ajaxStart"),
            f.type = f.type.toUpperCase(),
            f.hasContent = !It.test(f.type),
            o = f.url.replace(Pt, ""),
            f.hasContent ? f.data && f.processData && 0 === (f.contentType || "").indexOf("application/x-www-form-urlencoded") && (f.data = f.data.replace(At, "+")) : (p = f.url.slice(o.length),
            f.data && (o += (Ht.test(o) ? "&" : "?") + f.data,
            delete f.data),
            f.cache === !1 && (o = o.replace(Lt, ""),
            p = (Ht.test(o) ? "&" : "?") + "_=" + wt++ + p),
            f.url = o + p),
            f.ifModified && (de.lastModified[o] && R.setRequestHeader("If-Modified-Since", de.lastModified[o]),
            de.etag[o] && R.setRequestHeader("If-None-Match", de.etag[o])),
            (f.data && f.hasContent && f.contentType !== !1 || n.contentType) && R.setRequestHeader("Content-Type", f.contentType),
            R.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + Nt + "; q=0.01" : "") : f.accepts["*"]);
            for (d in f.headers)
                R.setRequestHeader(d, f.headers[d]);
            if (f.beforeSend && (f.beforeSend.call(m, R, f) === !1 || u))
                return R.abort();
            if (x = "abort",
            E.add(f.complete),
            R.done(f.success),
            R.fail(f.error),
            r = X(Ft, f, n, R)) {
                if (R.readyState = 1,
                h && g.trigger("ajaxSend", [R, f]),
                u)
                    return R;
                f.async && f.timeout > 0 && (c = e.setTimeout(function() {
                    R.abort("timeout")
                }, f.timeout));
                try {
                    u = !1,
                    r.send(b, i)
                } catch (e) {
                    if (u)
                        throw e;
                    i(-1, e)
                }
            } else
                i(-1, "No Transport");
            return R
        },
        getJSON: function(e, t, n) {
            return de.get(e, t, n, "json")
        },
        getScript: function(e, t) {
            return de.get(e, void 0, t, "script")
        }
    }),
    de.each(["get", "post"], function(e, t) {
        de[t] = function(e, n, i, r) {
            return de.isFunction(n) && (r = r || i,
            i = n,
            n = void 0),
            de.ajax(de.extend({
                url: e,
                type: t,
                dataType: r,
                data: n,
                success: i
            }, de.isPlainObject(e) && e))
        }
    }),
    de._evalUrl = function(e) {
        return de.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            throws: !0
        })
    }
    ,
    de.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (de.isFunction(e) && (e = e.call(this[0])),
            t = de(e, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && t.insertBefore(this[0]),
            t.map(function() {
                for (var e = this; e.firstElementChild; )
                    e = e.firstElementChild;
                return e
            }).append(this)),
            this
        },
        wrapInner: function(e) {
            return de.isFunction(e) ? this.each(function(t) {
                de(this).wrapInner(e.call(this, t))
            }) : this.each(function() {
                var t = de(this)
                  , n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e)
            })
        },
        wrap: function(e) {
            var t = de.isFunction(e);
            return this.each(function(n) {
                de(this).wrapAll(t ? e.call(this, n) : e)
            })
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                de(this).replaceWith(this.childNodes)
            }),
            this
        }
    }),
    de.expr.pseudos.hidden = function(e) {
        return !de.expr.pseudos.visible(e)
    }
    ,
    de.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
    }
    ,
    de.ajaxSettings.xhr = function() {
        try {
            return new e.XMLHttpRequest
        } catch (e) {}
    }
    ;
    var zt = {
        0: 200,
        1223: 204
    }
      , jt = de.ajaxSettings.xhr();
    ue.cors = !!jt && "withCredentials"in jt,
    ue.ajax = jt = !!jt,
    de.ajaxTransport(function(t) {
        var n, i;
        if (ue.cors || jt && !t.crossDomain)
            return {
                send: function(r, o) {
                    var a, s = t.xhr();
                    if (s.open(t.type, t.url, t.async, t.username, t.password),
                    t.xhrFields)
                        for (a in t.xhrFields)
                            s[a] = t.xhrFields[a];
                    t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType),
                    t.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                    for (a in r)
                        s.setRequestHeader(a, r[a]);
                    n = function(e) {
                        return function() {
                            n && (n = i = s.onload = s.onerror = s.onabort = s.onreadystatechange = null,
                            "abort" === e ? s.abort() : "error" === e ? "number" != typeof s.status ? o(0, "error") : o(s.status, s.statusText) : o(zt[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? {
                                binary: s.response
                            } : {
                                text: s.responseText
                            }, s.getAllResponseHeaders()))
                        }
                    }
                    ,
                    s.onload = n(),
                    i = s.onerror = n("error"),
                    void 0 !== s.onabort ? s.onabort = i : s.onreadystatechange = function() {
                        4 === s.readyState && e.setTimeout(function() {
                            n && i()
                        })
                    }
                    ,
                    n = n("abort");
                    try {
                        s.send(t.hasContent && t.data || null)
                    } catch (e) {
                        if (n)
                            throw e
                    }
                },
                abort: function() {
                    n && n()
                }
            }
    }),
    de.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1)
    }),
    de.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return de.globalEval(e),
                e
            }
        }
    }),
    de.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1),
        e.crossDomain && (e.type = "GET")
    }),
    de.ajaxTransport("script", function(e) {
        if (e.crossDomain) {
            var t, n;
            return {
                send: function(i, r) {
                    t = de("<script>").prop({
                        charset: e.scriptCharset,
                        src: e.url
                    }).on("load error", n = function(e) {
                        t.remove(),
                        n = null,
                        e && r("error" === e.type ? 404 : 200, e.type)
                    }
                    ),
                    J.head.appendChild(t[0])
                },
                abort: function() {
                    n && n()
                }
            }
        }
    });
    var Vt = []
      , Gt = /(=)\?(?=&|$)|\?\?/;
    de.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Vt.pop() || de.expando + "_" + wt++;
            return this[e] = !0,
            e
        }
    }),
    de.ajaxPrefilter("json jsonp", function(t, n, i) {
        var r, o, a, s = t.jsonp !== !1 && (Gt.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Gt.test(t.data) && "data");
        if (s || "jsonp" === t.dataTypes[0])
            return r = t.jsonpCallback = de.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback,
            s ? t[s] = t[s].replace(Gt, "$1" + r) : t.jsonp !== !1 && (t.url += (Ht.test(t.url) ? "&" : "?") + t.jsonp + "=" + r),
            t.converters["script json"] = function() {
                return a || de.error(r + " was not called"),
                a[0]
            }
            ,
            t.dataTypes[0] = "json",
            o = e[r],
            e[r] = function() {
                a = arguments
            }
            ,
            i.always(function() {
                void 0 === o ? de(e).removeProp(r) : e[r] = o,
                t[r] && (t.jsonpCallback = n.jsonpCallback,
                Vt.push(r)),
                a && de.isFunction(o) && o(a[0]),
                a = o = void 0
            }),
            "script"
    }),
    ue.createHTMLDocument = function() {
        var e = J.implementation.createHTMLDocument("").body;
        return e.innerHTML = "<form></form><form></form>",
        2 === e.childNodes.length
    }(),
    de.parseHTML = function(e, t, n) {
        if ("string" != typeof e)
            return [];
        "boolean" == typeof t && (n = t,
        t = !1);
        var i, r, o;
        return t || (ue.createHTMLDocument ? (t = J.implementation.createHTMLDocument(""),
        i = t.createElement("base"),
        i.href = J.location.href,
        t.head.appendChild(i)) : t = J),
        r = Te.exec(e),
        o = !n && [],
        r ? [t.createElement(r[1])] : (r = E([e], t, o),
        o && o.length && de(o).remove(),
        de.merge([], r.childNodes))
    }
    ,
    de.fn.load = function(e, t, n) {
        var i, r, o, a = this, s = e.indexOf(" ");
        return s > -1 && (i = de.trim(e.slice(s)),
        e = e.slice(0, s)),
        de.isFunction(t) ? (n = t,
        t = void 0) : t && "object" == typeof t && (r = "POST"),
        a.length > 0 && de.ajax({
            url: e,
            type: r || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments,
            a.html(i ? de("<div>").append(de.parseHTML(e)).find(i) : e)
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, o || [e.responseText, t, e])
            })
        }
        ),
        this
    }
    ,
    de.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
        de.fn[t] = function(e) {
            return this.on(t, e)
        }
    }),
    de.expr.pseudos.animated = function(e) {
        return de.grep(de.timers, function(t) {
            return e === t.elem
        }).length
    }
    ,
    de.offset = {
        setOffset: function(e, t, n) {
            var i, r, o, a, s, c, l, u = de.css(e, "position"), h = de(e), d = {};
            "static" === u && (e.style.position = "relative"),
            s = h.offset(),
            o = de.css(e, "top"),
            c = de.css(e, "left"),
            l = ("absolute" === u || "fixed" === u) && (o + c).indexOf("auto") > -1,
            l ? (i = h.position(),
            a = i.top,
            r = i.left) : (a = parseFloat(o) || 0,
            r = parseFloat(c) || 0),
            de.isFunction(t) && (t = t.call(e, n, de.extend({}, s))),
            null != t.top && (d.top = t.top - s.top + a),
            null != t.left && (d.left = t.left - s.left + r),
            "using"in t ? t.using.call(e, d) : h.css(d)
        }
    },
    de.fn.extend({
        offset: function(e) {
            if (arguments.length)
                return void 0 === e ? this : this.each(function(t) {
                    de.offset.setOffset(this, e, t)
                });
            var t, n, i, r, o = this[0];
            if (o)
                return o.getClientRects().length ? (i = o.getBoundingClientRect(),
                i.width || i.height ? (r = o.ownerDocument,
                n = $(r),
                t = r.documentElement,
                {
                    top: i.top + n.pageYOffset - t.clientTop,
                    left: i.left + n.pageXOffset - t.clientLeft
                }) : i) : {
                    top: 0,
                    left: 0
                }
        },
        position: function() {
            if (this[0]) {
                var e, t, n = this[0], i = {
                    top: 0,
                    left: 0
                };
                return "fixed" === de.css(n, "position") ? t = n.getBoundingClientRect() : (e = this.offsetParent(),
                t = this.offset(),
                de.nodeName(e[0], "html") || (i = e.offset()),
                i = {
                    top: i.top + de.css(e[0], "borderTopWidth", !0),
                    left: i.left + de.css(e[0], "borderLeftWidth", !0)
                }),
                {
                    top: t.top - i.top - de.css(n, "marginTop", !0),
                    left: t.left - i.left - de.css(n, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var e = this.offsetParent; e && "static" === de.css(e, "position"); )
                    e = e.offsetParent;
                return e || Ye
            })
        }
    }),
    de.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, t) {
        var n = "pageYOffset" === t;
        de.fn[e] = function(i) {
            return Pe(this, function(e, i, r) {
                var o = $(e);
                return void 0 === r ? o ? o[t] : e[i] : void (o ? o.scrollTo(n ? o.pageXOffset : r, n ? r : o.pageYOffset) : e[i] = r)
            }, e, i, arguments.length)
        }
    }),
    de.each(["top", "left"], function(e, t) {
        de.cssHooks[t] = P(ue.pixelPosition, function(e, n) {
            if (n)
                return n = A(e, t),
                rt.test(n) ? de(e).position()[t] + "px" : n
        })
    }),
    de.each({
        Height: "height",
        Width: "width"
    }, function(e, t) {
        de.each({
            padding: "inner" + e,
            content: t,
            "": "outer" + e
        }, function(n, i) {
            de.fn[i] = function(r, o) {
                var a = arguments.length && (n || "boolean" != typeof r)
                  , s = n || (r === !0 || o === !0 ? "margin" : "border");
                return Pe(this, function(t, n, r) {
                    var o;
                    return de.isWindow(t) ? 0 === i.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (o = t.documentElement,
                    Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e])) : void 0 === r ? de.css(t, n, s) : de.style(t, n, r, s)
                }, t, a ? r : void 0, a)
            }
        })
    }),
    de.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        delegate: function(e, t, n, i) {
            return this.on(t, e, n, i)
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        }
    }),
    de.parseJSON = JSON.parse,
    function(e, t, n, i) {
        e.site = e.fn.site = function(r) {
            var o, a, s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1), d = e.isPlainObject(r) ? e.extend(!0, {}, e.site.settings, r) : e.extend({}, e.site.settings), p = d.namespace, f = d.error, m = "module-" + p, g = e(n), v = g, E = this, y = v.data(m);
            return o = {
                initialize: function() {
                    o.instantiate()
                },
                instantiate: function() {
                    o.verbose("Storing instance of site", o),
                    y = o,
                    v.data(m, o)
                },
                normalize: function() {
                    o.fix.console(),
                    o.fix.requestAnimationFrame()
                },
                fix: {
                    console: function() {
                        o.debug("Normalizing window.console"),
                        console !== i && console.log !== i || (o.verbose("Console not available, normalizing events"),
                        o.disable.console()),
                        "undefined" != typeof console.group && "undefined" != typeof console.groupEnd && "undefined" != typeof console.groupCollapsed || (o.verbose("Console group not available, normalizing events"),
                        t.console.group = function() {}
                        ,
                        t.console.groupEnd = function() {}
                        ,
                        t.console.groupCollapsed = function() {}
                        ),
                        "undefined" == typeof console.markTimeline && (o.verbose("Mark timeline not available, normalizing events"),
                        t.console.markTimeline = function() {}
                        )
                    },
                    consoleClear: function() {
                        o.debug("Disabling programmatic console clearing"),
                        t.console.clear = function() {}
                    },
                    requestAnimationFrame: function() {
                        o.debug("Normalizing requestAnimationFrame"),
                        t.requestAnimationFrame === i && (o.debug("RequestAnimationFrame not available, normalizing event"),
                        t.requestAnimationFrame = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                            setTimeout(e, 0)
                        }
                        )
                    }
                },
                moduleExists: function(t) {
                    return e.fn[t] !== i && e.fn[t].settings !== i
                },
                enabled: {
                    modules: function(t) {
                        var n = [];
                        return t = t || d.modules,
                        e.each(t, function(e, t) {
                            o.moduleExists(t) && n.push(t)
                        }),
                        n
                    }
                },
                disabled: {
                    modules: function(t) {
                        var n = [];
                        return t = t || d.modules,
                        e.each(t, function(e, t) {
                            o.moduleExists(t) || n.push(t)
                        }),
                        n
                    }
                },
                change: {
                    setting: function(t, n, r, a) {
                        r = "string" == typeof r ? "all" === r ? d.modules : [r] : r || d.modules,
                        a = a === i || a,
                        e.each(r, function(i, r) {
                            var s, c = !o.moduleExists(r) || (e.fn[r].settings.namespace || !1);
                            o.moduleExists(r) && (o.verbose("Changing default setting", t, n, r),
                            e.fn[r].settings[t] = n,
                            a && c && (s = e(":data(module-" + c + ")"),
                            s.length > 0 && (o.verbose("Modifying existing settings", s),
                            s[r]("setting", t, n))))
                        })
                    },
                    settings: function(t, n, r) {
                        n = "string" == typeof n ? [n] : n || d.modules,
                        r = r === i || r,
                        e.each(n, function(n, i) {
                            var a;
                            o.moduleExists(i) && (o.verbose("Changing default setting", t, i),
                            e.extend(!0, e.fn[i].settings, t),
                            r && p && (a = e(":data(module-" + p + ")"),
                            a.length > 0 && (o.verbose("Modifying existing settings", a),
                            a[i]("setting", t))))
                        })
                    }
                },
                enable: {
                    console: function() {
                        o.console(!0)
                    },
                    debug: function(e, t) {
                        e = e || d.modules,
                        o.debug("Enabling debug for modules", e),
                        o.change.setting("debug", !0, e, t)
                    },
                    verbose: function(e, t) {
                        e = e || d.modules,
                        o.debug("Enabling verbose debug for modules", e),
                        o.change.setting("verbose", !0, e, t)
                    }
                },
                disable: {
                    console: function() {
                        o.console(!1)
                    },
                    debug: function(e, t) {
                        e = e || d.modules,
                        o.debug("Disabling debug for modules", e),
                        o.change.setting("debug", !1, e, t)
                    },
                    verbose: function(e, t) {
                        e = e || d.modules,
                        o.debug("Disabling verbose debug for modules", e),
                        o.change.setting("verbose", !1, e, t)
                    }
                },
                console: function(e) {
                    if (e) {
                        if (y.cache.console === i)
                            return void o.error(f.console);
                        o.debug("Restoring console function"),
                        t.console = y.cache.console
                    } else
                        o.debug("Disabling console function"),
                        y.cache.console = t.console,
                        t.console = {
                            clear: function() {},
                            error: function() {},
                            group: function() {},
                            groupCollapsed: function() {},
                            groupEnd: function() {},
                            info: function() {},
                            log: function() {},
                            markTimeline: function() {},
                            warn: function() {}
                        }
                },
                destroy: function() {
                    o.verbose("Destroying previous site for", v),
                    v.removeData(m)
                },
                cache: {},
                setting: function(t, n) {
                    if (e.isPlainObject(t))
                        e.extend(!0, d, t);
                    else {
                        if (n === i)
                            return d[t];
                        d[t] = n
                    }
                },
                internal: function(t, n) {
                    if (e.isPlainObject(t))
                        e.extend(!0, o, t);
                    else {
                        if (n === i)
                            return o[t];
                        o[t] = n
                    }
                },
                debug: function() {
                    d.debug && (d.performance ? o.performance.log(arguments) : (o.debug = Function.prototype.bind.call(console.info, console, d.name + ":"),
                    o.debug.apply(console, arguments)))
                },
                verbose: function() {
                    d.verbose && d.debug && (d.performance ? o.performance.log(arguments) : (o.verbose = Function.prototype.bind.call(console.info, console, d.name + ":"),
                    o.verbose.apply(console, arguments)))
                },
                error: function() {
                    o.error = Function.prototype.bind.call(console.error, console, d.name + ":"),
                    o.error.apply(console, arguments)
                },
                performance: {
                    log: function(e) {
                        var t, n, i;
                        d.performance && (t = (new Date).getTime(),
                        i = s || t,
                        n = t - i,
                        s = t,
                        c.push({
                            Element: E,
                            Name: e[0],
                            Arguments: [].slice.call(e, 1) || "",
                            "Execution Time": n
                        })),
                        clearTimeout(o.performance.timer),
                        o.performance.timer = setTimeout(o.performance.display, 500)
                    },
                    display: function() {
                        var t = d.name + ":"
                          , n = 0;
                        s = !1,
                        clearTimeout(o.performance.timer),
                        e.each(c, function(e, t) {
                            n += t["Execution Time"]
                        }),
                        t += " " + n + "ms",
                        (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                        console.table ? console.table(c) : e.each(c, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms")
                        }),
                        console.groupEnd()),
                        c = []
                    }
                },
                invoke: function(t, n, r) {
                    var s, c, l, u = y;
                    return n = n || h,
                    r = E || r,
                    "string" == typeof t && u !== i && (t = t.split(/[\. ]/),
                    s = t.length - 1,
                    e.each(t, function(n, r) {
                        var a = n != s ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                        if (e.isPlainObject(u[a]) && n != s)
                            u = u[a];
                        else {
                            if (u[a] !== i)
                                return c = u[a],
                                !1;
                            if (!e.isPlainObject(u[r]) || n == s)
                                return u[r] !== i ? (c = u[r],
                                !1) : (o.error(f.method, t),
                                !1);
                            u = u[r]
                        }
                    })),
                    e.isFunction(c) ? l = c.apply(r, n) : c !== i && (l = c),
                    e.isArray(a) ? a.push(l) : a !== i ? a = [a, l] : l !== i && (a = l),
                    c
                }
            },
            u ? (y === i && o.initialize(),
            o.invoke(l)) : (y !== i && o.destroy(),
            o.initialize()),
            a !== i ? a : this
        }
        ,
        e.site.settings = {
            name: "Site",
            namespace: "site",
            error: {
                console: "Console cannot be restored, most likely it was overwritten outside of module",
                method: "The method you called is not defined."
            },
            debug: !1,
            verbose: !1,
            performance: !0,
            modules: ["accordion", "api", "checkbox", "dimmer", "dropdown", "embed", "form", "modal", "nag", "popup", "rating", "shape", "sidebar", "state", "sticky", "tab", "transition", "visit", "visibility"],
            siteNamespace: "site",
            namespaceStub: {
                cache: {},
                config: {},
                sections: {},
                section: {},
                utilities: {}
            }
        },
        e.extend(e.expr[":"], {
            data: e.expr.createPseudo ? e.expr.createPseudo(function(t) {
                return function(n) {
                    return !!e.data(n, t)
                }
            }) : function(t, n, i) {
                return !!e.data(t, i[3])
            }
        })
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.form = function(t) {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = arguments[1], h = "string" == typeof l, d = [].slice.call(arguments, 1);
            return o.each(function() {
                var p, f, m, g, v, E, y, b, T, x, R, w, H, M, S, _, C, A, P = e(this), L = this, k = [], D = !1;
                A = {
                    initialize: function() {
                        A.get.settings(),
                        h ? (C === i && A.instantiate(),
                        A.invoke(l)) : (A.verbose("Initializing form validation", P, b),
                        A.bindEvents(),
                        A.set.defaults(),
                        A.instantiate())
                    },
                    instantiate: function() {
                        A.verbose("Storing instance of module", A),
                        C = A,
                        P.data(S, A)
                    },
                    destroy: function() {
                        A.verbose("Destroying previous module", C),
                        A.removeEvents(),
                        P.removeData(S)
                    },
                    refresh: function() {
                        A.verbose("Refreshing selector cache"),
                        p = P.find(R.field),
                        f = P.find(R.group),
                        m = P.find(R.message),
                        g = P.find(R.prompt),
                        v = P.find(R.submit),
                        E = P.find(R.clear),
                        y = P.find(R.reset)
                    },
                    submit: function() {
                        A.verbose("Submitting form", P),
                        P.submit()
                    },
                    attachEvents: function(t, n) {
                        n = n || "submit",
                        e(t).on("click" + _, function(e) {
                            A[n](),
                            e.preventDefault()
                        })
                    },
                    bindEvents: function() {
                        A.verbose("Attaching form events"),
                        P.on("submit" + _, A.validate.form).on("blur" + _, R.field, A.event.field.blur).on("click" + _, R.submit, A.submit).on("click" + _, R.reset, A.reset).on("click" + _, R.clear, A.clear),
                        b.keyboardShortcuts && P.on("keydown" + _, R.field, A.event.field.keydown),
                        p.each(function() {
                            var t = e(this)
                              , n = t.prop("type")
                              , i = A.get.changeEvent(n, t);
                            e(this).on(i + _, A.event.field.change)
                        })
                    },
                    clear: function() {
                        p.each(function() {
                            var t = e(this)
                              , n = t.parent()
                              , i = t.closest(f)
                              , r = i.find(R.prompt)
                              , o = t.data(x.defaultValue) || ""
                              , a = n.is(R.uiCheckbox)
                              , s = n.is(R.uiDropdown)
                              , c = i.hasClass(w.error);
                            c && (A.verbose("Resetting error on field", i),
                            i.removeClass(w.error),
                            r.remove()),
                            s ? (A.verbose("Resetting dropdown value", n, o),
                            n.dropdown("clear")) : a ? t.prop("checked", !1) : (A.verbose("Resetting field value", t, o),
                            t.val(""))
                        })
                    },
                    reset: function() {
                        p.each(function() {
                            var t = e(this)
                              , n = t.parent()
                              , r = t.closest(f)
                              , o = r.find(R.prompt)
                              , a = t.data(x.defaultValue)
                              , s = n.is(R.uiCheckbox)
                              , c = n.is(R.uiDropdown)
                              , l = r.hasClass(w.error);
                            a !== i && (l && (A.verbose("Resetting error on field", r),
                            r.removeClass(w.error),
                            o.remove()),
                            c ? (A.verbose("Resetting dropdown value", n, a),
                            n.dropdown("restore defaults")) : s ? (A.verbose("Resetting checkbox value", n, a),
                            t.prop("checked", a)) : (A.verbose("Resetting field value", t, a),
                            t.val(a)))
                        })
                    },
                    is: {
                        bracketedRule: function(e) {
                            return e.type && e.type.match(b.regExp.bracket)
                        },
                        valid: function() {
                            var t = !0;
                            return A.verbose("Checking if form is valid"),
                            e.each(T, function(e, n) {
                                A.validate.field(n, e) || (t = !1)
                            }),
                            t
                        }
                    },
                    removeEvents: function() {
                        P.off(_),
                        p.off(_),
                        v.off(_),
                        p.off(_)
                    },
                    event: {
                        field: {
                            keydown: function(t) {
                                var n = e(this)
                                  , i = t.which
                                  , r = {
                                    enter: 13,
                                    escape: 27
                                };
                                i == r.escape && (A.verbose("Escape key pressed blurring field"),
                                n.blur()),
                                !t.ctrlKey && i == r.enter && n.is(R.input) && n.not(R.checkbox).length > 0 && (D || (n.one("keyup" + _, A.event.field.keyup),
                                A.submit(),
                                A.debug("Enter pressed on input submitting form")),
                                D = !0)
                            },
                            keyup: function() {
                                D = !1
                            },
                            blur: function(t) {
                                var n = e(this)
                                  , i = n.closest(f)
                                  , r = A.get.validation(n);
                                i.hasClass(w.error) ? (A.debug("Revalidating field", n, r),
                                A.validate.form.call(A, t, !0)) : "blur" != b.on && "change" != b.on || r && A.validate.field(r)
                            },
                            change: function(t) {
                                var n = e(this)
                                  , i = n.closest(f);
                                ("change" == b.on || i.hasClass(w.error) && b.revalidate) && (clearTimeout(A.timer),
                                A.timer = setTimeout(function() {
                                    A.debug("Revalidating field", n, A.get.validation(n)),
                                    A.validate.form.call(A, t, !0)
                                }, b.delay))
                            }
                        }
                    },
                    get: {
                        ancillaryValue: function(e) {
                            return !(!e.type || !A.is.bracketedRule(e)) && e.type.match(b.regExp.bracket)[1] + ""
                        },
                        ruleName: function(e) {
                            return A.is.bracketedRule(e) ? e.type.replace(e.type.match(b.regExp.bracket)[0], "") : e.type
                        },
                        changeEvent: function(e, t) {
                            return "checkbox" == e || "radio" == e || "hidden" == e || t.is("select") ? "change" : A.get.inputEvent()
                        },
                        inputEvent: function() {
                            return n.createElement("input").oninput !== i ? "input" : n.createElement("input").onpropertychange !== i ? "propertychange" : "keyup"
                        },
                        prompt: function(e, t) {
                            var n, i, r, o = A.get.ruleName(e), a = A.get.ancillaryValue(e), s = e.prompt || b.prompt[o] || b.text.unspecifiedRule, c = s.search("{value}") !== -1, l = s.search("{name}") !== -1;
                            return (l || c) && (i = A.get.field(t.identifier)),
                            c && (s = s.replace("{value}", i.val())),
                            l && (n = i.closest(R.group).find("label").eq(0),
                            r = 1 == n.size() ? n.text() : i.prop("placeholder") || b.text.unspecifiedField,
                            s = s.replace("{name}", r)),
                            s = s.replace("{identifier}", t.identifier),
                            s = s.replace("{ruleValue}", a),
                            e.prompt || A.verbose("Using default validation prompt for type", s, o),
                            s
                        },
                        settings: function() {
                            if (e.isPlainObject(t)) {
                                var n, r = Object.keys(t), o = r.length > 0 && (t[r[0]].identifier !== i && t[r[0]].rules !== i);
                                o ? (b = e.extend(!0, {}, e.fn.form.settings, u),
                                T = e.extend({}, e.fn.form.settings.defaults, t),
                                A.error(b.error.oldSyntax, L),
                                A.verbose("Extending settings from legacy parameters", T, b)) : (t.fields && (n = Object.keys(t.fields),
                                ("string" == typeof t.fields[n[0]] || e.isArray(t.fields[n[0]])) && e.each(t.fields, function(n, i) {
                                    "string" == typeof i && (i = [i]),
                                    t.fields[n] = {
                                        rules: []
                                    },
                                    e.each(i, function(e, i) {
                                        t.fields[n].rules.push({
                                            type: i
                                        })
                                    })
                                })),
                                b = e.extend(!0, {}, e.fn.form.settings, t),
                                T = e.extend({}, e.fn.form.settings.defaults, b.fields),
                                A.verbose("Extending settings", T, b))
                            } else
                                b = e.fn.form.settings,
                                T = e.fn.form.settings.defaults,
                                A.verbose("Using default form validation", T, b);
                            M = b.namespace,
                            x = b.metadata,
                            R = b.selector,
                            w = b.className,
                            H = b.error,
                            S = "module-" + M,
                            _ = "." + M,
                            C = P.data(S),
                            A.refresh()
                        },
                        field: function(t) {
                            return A.verbose("Finding field with identifier", t),
                            p.filter("#" + t).length > 0 ? p.filter("#" + t) : p.filter('[name="' + t + '"]').length > 0 ? p.filter('[name="' + t + '"]') : p.filter('[name="' + t + '[]"]').length > 0 ? p.filter('[name="' + t + '[]"]') : p.filter("[data-" + x.validate + '="' + t + '"]').length > 0 ? p.filter("[data-" + x.validate + '="' + t + '"]') : e("<input/>")
                        },
                        fields: function(t) {
                            var n = e();
                            return e.each(t, function(e, t) {
                                n = n.add(A.get.field(t))
                            }),
                            n
                        },
                        validation: function(t) {
                            var n, i;
                            return !!T && (e.each(T, function(e, r) {
                                i = r.identifier || e,
                                A.get.field(i)[0] == t[0] && (r.identifier = i,
                                n = r)
                            }),
                            n || !1)
                        },
                        value: function(e) {
                            var t, n = [];
                            return n.push(e),
                            t = A.get.values.call(L, n),
                            t[e]
                        },
                        values: function(t) {
                            var n = e.isArray(t) ? A.get.fields(t) : p
                              , i = {};
                            return n.each(function(t, n) {
                                var r = e(n)
                                  , o = (r.prop("type"),
                                r.prop("name"))
                                  , a = r.val()
                                  , s = r.is(R.checkbox)
                                  , c = r.is(R.radio)
                                  , l = o.indexOf("[]") !== -1
                                  , u = !!s && r.is(":checked");
                                o && (l ? (o = o.replace("[]", ""),
                                i[o] || (i[o] = []),
                                s ? u ? i[o].push(a || !0) : i[o].push(!1) : i[o].push(a)) : c ? u && (i[o] = a) : s ? u ? i[o] = a || !0 : i[o] = !1 : i[o] = a)
                            }),
                            i
                        }
                    },
                    has: {
                        field: function(e) {
                            return A.verbose("Checking for existence of a field with identifier", e),
                            "string" != typeof e && A.error(H.identifier, e),
                            p.filter("#" + e).length > 0 || (p.filter('[name="' + e + '"]').length > 0 || p.filter("[data-" + x.validate + '="' + e + '"]').length > 0)
                        }
                    },
                    add: {
                        prompt: function(t, n) {
                            var r = A.get.field(t)
                              , o = r.closest(f)
                              , a = o.children(R.prompt)
                              , s = 0 !== a.length;
                            n = "string" == typeof n ? [n] : n,
                            A.verbose("Adding field error state", t),
                            o.addClass(w.error),
                            b.inline && (s || (a = b.templates.prompt(n),
                            a.appendTo(o)),
                            a.html(n[0]),
                            s ? A.verbose("Inline errors are disabled, no inline error added", t) : b.transition && e.fn.transition !== i && P.transition("is supported") ? (A.verbose("Displaying error with css transition", b.transition),
                            a.transition(b.transition + " in", b.duration)) : (A.verbose("Displaying error with fallback javascript animation"),
                            a.fadeIn(b.duration)))
                        },
                        errors: function(e) {
                            A.debug("Adding form error messages", e),
                            A.set.error(),
                            m.html(b.templates.error(e))
                        }
                    },
                    remove: {
                        prompt: function(t) {
                            var n = A.get.field(t)
                              , r = n.closest(f)
                              , o = r.children(R.prompt);
                            r.removeClass(w.error),
                            b.inline && o.is(":visible") && (A.verbose("Removing prompt for field", t),
                            b.transition && e.fn.transition !== i && P.transition("is supported") ? o.transition(b.transition + " out", b.duration, function() {
                                o.remove()
                            }) : o.fadeOut(b.duration, function() {
                                o.remove()
                            }))
                        }
                    },
                    set: {
                        success: function() {
                            P.removeClass(w.error).addClass(w.success)
                        },
                        defaults: function() {
                            p.each(function() {
                                var t = e(this)
                                  , n = t.filter(R.checkbox).length > 0
                                  , i = n ? t.is(":checked") : t.val();
                                t.data(x.defaultValue, i)
                            })
                        },
                        error: function() {
                            P.removeClass(w.success).addClass(w.error)
                        },
                        value: function(e, t) {
                            var n = {};
                            return n[e] = t,
                            A.set.values.call(L, n)
                        },
                        values: function(t) {
                            e.isEmptyObject(t) || e.each(t, function(t, n) {
                                var i, r = A.get.field(t), o = r.parent(), a = e.isArray(n), s = o.is(R.uiCheckbox), c = o.is(R.uiDropdown), l = r.is(R.radio) && s, u = r.length > 0;
                                u && (a && s ? (A.verbose("Selecting multiple", n, r),
                                o.checkbox("uncheck"),
                                e.each(n, function(e, t) {
                                    i = r.filter('[value="' + t + '"]'),
                                    o = i.parent(),
                                    i.length > 0 && o.checkbox("check")
                                })) : l ? (A.verbose("Selecting radio value", n, r),
                                r.filter('[value="' + n + '"]').parent(R.uiCheckbox).checkbox("check")) : s ? (A.verbose("Setting checkbox value", n, o),
                                n === !0 ? o.checkbox("check") : o.checkbox("uncheck")) : c ? (A.verbose("Setting dropdown value", n, o),
                                o.dropdown("set selected", n)) : (A.verbose("Setting field value", n, r),
                                r.val(n)))
                            })
                        }
                    },
                    validate: {
                        form: function(e, t) {
                            var n = A.get.values();
                            if (D)
                                return !1;
                            if (k = [],
                            A.is.valid()) {
                                if (A.debug("Form has no validation errors, submitting"),
                                A.set.success(),
                                t !== !0)
                                    return b.onSuccess.call(L, e, n)
                            } else if (A.debug("Form has errors"),
                            A.set.error(),
                            b.inline || A.add.errors(k),
                            P.data("moduleApi") !== i && e.stopImmediatePropagation(),
                            t !== !0)
                                return b.onFailure.call(L, k, n)
                        },
                        field: function(t, n) {
                            var r = t.identifier || n
                              , o = A.get.field(r)
                              , a = !0
                              , s = [];
                            return t.identifier || (A.debug("Using field name as identifier", r),
                            t.identifier = r),
                            o.prop("disabled") ? (A.debug("Field is disabled. Skipping", r),
                            a = !0) : t.optional && "" === e.trim(o.val()) ? (A.debug("Field is optional and empty. Skipping", r),
                            a = !0) : t.rules !== i && e.each(t.rules, function(e, n) {
                                A.has.field(r) && !A.validate.rule(t, n) && (A.debug("Field is invalid", r, n.type),
                                s.push(A.get.prompt(n, t)),
                                a = !1)
                            }),
                            a ? (A.remove.prompt(r, s),
                            b.onValid.call(o),
                            !0) : (k = k.concat(s),
                            A.add.prompt(r, s),
                            b.onInvalid.call(o, s),
                            !1)
                        },
                        rule: function(t, n) {
                            var r = A.get.field(t.identifier)
                              , o = (n.type,
                            r.val())
                              , a = A.get.ancillaryValue(n)
                              , s = A.get.ruleName(n)
                              , c = b.rules[s];
                            return e.isFunction(c) ? (o = o === i || "" === o || null === o ? "" : e.trim(o + ""),
                            c.call(r, o, a)) : void A.error(H.noRule, s)
                        }
                    },
                    setting: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, b, t);
                        else {
                            if (n === i)
                                return b[t];
                            b[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, A, t);
                        else {
                            if (n === i)
                                return A[t];
                            A[t] = n
                        }
                    },
                    debug: function() {
                        b.debug && (b.performance ? A.performance.log(arguments) : (A.debug = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        A.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        b.verbose && b.debug && (b.performance ? A.performance.log(arguments) : (A.verbose = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        A.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        A.error = Function.prototype.bind.call(console.error, console, b.name + ":"),
                        A.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            b.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: L,
                                "Execution Time": n
                            })),
                            clearTimeout(A.performance.timer),
                            A.performance.timer = setTimeout(A.performance.display, 500)
                        },
                        display: function() {
                            var t = b.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(A.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            o.length > 1 && (t += " (" + o.length + ")"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = C;
                        return n = n || d,
                        o = L || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                A.initialize()
            }),
            r !== i ? r : this
        }
        ,
        e.fn.form.settings = {
            name: "Form",
            namespace: "form",
            debug: !1,
            verbose: !1,
            performance: !0,
            fields: !1,
            keyboardShortcuts: !0,
            on: "submit",
            inline: !1,
            delay: 200,
            revalidate: !0,
            transition: "scale",
            duration: 200,
            onValid: function() {},
            onInvalid: function() {},
            onSuccess: function() {
                return !0
            },
            onFailure: function() {
                return !1
            },
            metadata: {
                defaultValue: "default",
                validate: "validate"
            },
            regExp: {
                bracket: /\[(.*)\]/i,
                decimal: /^\d*(\.)\d+/,
                email: "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
                escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
                flags: /^\/(.*)\/(.*)?/,
                integer: /^\-?\d+$/,
                number: /^\-?\d*(\.\d+)?$/,
                url: /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i
            },
            text: {
                unspecifiedRule: "Please enter a valid value",
                unspecifiedField: "This field"
            },
            prompt: {
                empty: "{name} must have a value",
                checked: "{name} must be checked",
                email: "{name} must be a valid e-mail",
                url: "{name} must be a valid url",
                regExp: "{name} is not formatted correctly",
                integer: "{name} must be an integer",
                decimal: "{name} must be a decimal number",
                number: "{name} must be set to a number",
                is: '{name} must be "{ruleValue}"',
                isExactly: '{name} must be exactly "{ruleValue}"',
                not: '{name} cannot be set to "{ruleValue}"',
                notExactly: '{name} cannot be set to exactly "{ruleValue}"',
                contain: '{name} cannot contain "{ruleValue}"',
                containExactly: '{name} cannot contain exactly "{ruleValue}"',
                doesntContain: '{name} must contain  "{ruleValue}"',
                doesntContainExactly: '{name} must contain exactly "{ruleValue}"',
                minLength: "{name} must be at least {ruleValue} characters",
                length: "{name} must be at least {ruleValue} characters",
                exactLength: "{name} must be exactly {ruleValue} characters",
                maxLength: "{name} cannot be longer than {ruleValue} characters",
                match: "{name} must match {ruleValue} field",
                different: "{name} must have a different value than {ruleValue} field",
                creditCard: "{name} must be a valid credit card number",
                minCount: "{name} must have at least {ruleValue} choices",
                exactCount: "{name} must have exactly {ruleValue} choices",
                maxCount: "{name} must have {ruleValue} or less choices"
            },
            selector: {
                checkbox: 'input[type="checkbox"], input[type="radio"]',
                clear: ".clear",
                field: "input, textarea, select",
                group: ".field",
                input: "input",
                message: ".error.message",
                prompt: ".prompt.label",
                radio: 'input[type="radio"]',
                reset: '.reset:not([type="reset"])',
                submit: '.submit:not([type="submit"])',
                uiCheckbox: ".ui.checkbox",
                uiDropdown: ".ui.dropdown"
            },
            className: {
                error: "error",
                label: "ui prompt label",
                pressed: "down",
                success: "success"
            },
            error: {
                identifier: "You must specify a string identifier for each field",
                method: "The method you called is not defined.",
                noRule: "There is no rule matching the one you specified",
                oldSyntax: "Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically."
            },
            templates: {
                error: function(t) {
                    var n = '<ul class="list">';
                    return e.each(t, function(e, t) {
                        n += "<li>" + t + "</li>"
                    }),
                    n += "</ul>",
                    e(n)
                },
                prompt: function(t) {
                    return e("<div/>").addClass("ui basic red pointing prompt label").html(t[0])
                }
            },
            rules: {
                empty: function(t) {
                    return !(t === i || "" === t || e.isArray(t) && 0 === t.length)
                },
                checked: function() {
                    return e(this).filter(":checked").length > 0
                },
                email: function(t) {
                    var n = new RegExp(e.fn.form.settings.regExp.email,"i");
                    return n.test(t)
                },
                url: function(t) {
                    return e.fn.form.settings.regExp.url.test(t)
                },
                regExp: function(t, n) {
                    var i, r = n.match(e.fn.form.settings.regExp.flags);
                    return r && (n = r.length >= 2 ? r[1] : n,
                    i = r.length >= 3 ? r[2] : ""),
                    t.match(new RegExp(n,i))
                },
                integer: function(t, n) {
                    var r, o, a, s = e.fn.form.settings.regExp.integer;
                    return n && ["", ".."].indexOf(n) === -1 && (n.indexOf("..") == -1 ? s.test(n) && (r = o = n - 0) : (a = n.split("..", 2),
                    s.test(a[0]) && (r = a[0] - 0),
                    s.test(a[1]) && (o = a[1] - 0))),
                    s.test(t) && (r === i || t >= r) && (o === i || t <= o)
                },
                decimal: function(t) {
                    return e.fn.form.settings.regExp.decimal.test(t)
                },
                number: function(t) {
                    return e.fn.form.settings.regExp.number.test(t)
                },
                is: function(e, t) {
                    return t = "string" == typeof t ? t.toLowerCase() : t,
                    e = "string" == typeof e ? e.toLowerCase() : e,
                    e == t
                },
                isExactly: function(e, t) {
                    return e == t
                },
                not: function(e, t) {
                    return e = "string" == typeof e ? e.toLowerCase() : e,
                    t = "string" == typeof t ? t.toLowerCase() : t,
                    e != t
                },
                notExactly: function(e, t) {
                    return e != t
                },
                contains: function(t, n) {
                    return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"),
                    t.search(new RegExp(n,"i")) !== -1
                },
                containsExactly: function(t, n) {
                    return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"),
                    t.search(new RegExp(n)) !== -1
                },
                doesntContain: function(t, n) {
                    return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"),
                    t.search(new RegExp(n,"i")) === -1
                },
                doesntContainExactly: function(t, n) {
                    return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"),
                    t.search(new RegExp(n)) === -1
                },
                minLength: function(e, t) {
                    return e !== i && e.length >= t
                },
                length: function(e, t) {
                    return e !== i && e.length >= t
                },
                exactLength: function(e, t) {
                    return e !== i && e.length == t
                },
                maxLength: function(e, t) {
                    return e !== i && e.length <= t
                },
                match: function(t, n) {
                    var r;
                    e(this);
                    return e('[data-validate="' + n + '"]').length > 0 ? r = e('[data-validate="' + n + '"]').val() : e("#" + n).length > 0 ? r = e("#" + n).val() : e('[name="' + n + '"]').length > 0 ? r = e('[name="' + n + '"]').val() : e('[name="' + n + '[]"]').length > 0 && (r = e('[name="' + n + '[]"]')),
                    r !== i && t.toString() == r.toString()
                },
                different: function(t, n) {
                    var r;
                    e(this);
                    return e('[data-validate="' + n + '"]').length > 0 ? r = e('[data-validate="' + n + '"]').val() : e("#" + n).length > 0 ? r = e("#" + n).val() : e('[name="' + n + '"]').length > 0 ? r = e('[name="' + n + '"]').val() : e('[name="' + n + '[]"]').length > 0 && (r = e('[name="' + n + '[]"]')),
                    r !== i && t.toString() !== r.toString()
                },
                creditCard: function(t, n) {
                    var i, r, o = {
                        visa: {
                            pattern: /^4/,
                            length: [16]
                        },
                        amex: {
                            pattern: /^3[47]/,
                            length: [15]
                        },
                        mastercard: {
                            pattern: /^5[1-5]/,
                            length: [16]
                        },
                        discover: {
                            pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
                            length: [16]
                        },
                        unionPay: {
                            pattern: /^(62|88)/,
                            length: [16, 17, 18, 19]
                        },
                        jcb: {
                            pattern: /^35(2[89]|[3-8][0-9])/,
                            length: [16]
                        },
                        maestro: {
                            pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
                            length: [12, 13, 14, 15, 16, 17, 18, 19]
                        },
                        dinersClub: {
                            pattern: /^(30[0-5]|^36)/,
                            length: [14]
                        },
                        laser: {
                            pattern: /^(6304|670[69]|6771)/,
                            length: [16, 17, 18, 19]
                        },
                        visaElectron: {
                            pattern: /^(4026|417500|4508|4844|491(3|7))/,
                            length: [16]
                        }
                    }, a = {}, s = !1, c = "string" == typeof n && n.split(",");
                    if ("string" == typeof t && 0 !== t.length) {
                        if (c && (e.each(c, function(n, i) {
                            r = o[i],
                            r && (a = {
                                length: e.inArray(t.length, r.length) !== -1,
                                pattern: t.search(r.pattern) !== -1
                            },
                            a.length && a.pattern && (s = !0))
                        }),
                        !s))
                            return !1;
                        if (i = {
                            number: e.inArray(t.length, o.unionPay.length) !== -1,
                            pattern: t.search(o.unionPay.pattern) !== -1
                        },
                        i.number && i.pattern)
                            return !0;
                        for (var l = t.length, u = 0, h = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]], d = 0; l--; )
                            d += h[u][parseInt(t.charAt(l), 10)],
                            u ^= 1;
                        return d % 10 === 0 && d > 0
                    }
                },
                minCount: function(e, t) {
                    return 0 == t || (1 == t ? "" !== e : e.split(",").length >= t)
                },
                exactCount: function(e, t) {
                    return 0 == t ? "" === e : 1 == t ? "" !== e && e.search(",") === -1 : e.split(",").length == t
                },
                maxCount: function(e, t) {
                    return 0 != t && (1 == t ? e.search(",") === -1 : e.split(",").length <= t)
                }
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.accordion = function(n) {
            var r, o = e(this), a = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1);
            t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                setTimeout(e, 0)
            }
            ;
            return o.each(function() {
                var h, d, p = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.accordion.settings, n) : e.extend({}, e.fn.accordion.settings), f = p.className, m = p.namespace, g = p.selector, v = p.error, E = "." + m, y = "module-" + m, b = o.selector || "", T = e(this), x = T.find(g.title), R = T.find(g.content), w = this, H = T.data(y);
                d = {
                    initialize: function() {
                        d.debug("Initializing", T),
                        d.bind.events(),
                        p.observeChanges && d.observeChanges(),
                        d.instantiate()
                    },
                    instantiate: function() {
                        H = d,
                        T.data(y, d)
                    },
                    destroy: function() {
                        d.debug("Destroying previous instance", T),
                        T.off(E).removeData(y)
                    },
                    refresh: function() {
                        x = T.find(g.title),
                        R = T.find(g.content)
                    },
                    observeChanges: function() {
                        "MutationObserver"in t && (h = new MutationObserver(function(e) {
                            d.debug("DOM tree modified, updating selector cache"),
                            d.refresh()
                        }
                        ),
                        h.observe(w, {
                            childList: !0,
                            subtree: !0
                        }),
                        d.debug("Setting up mutation observer", h))
                    },
                    bind: {
                        events: function() {
                            d.debug("Binding delegated events"),
                            T.on(p.on + E, g.trigger, d.event.click)
                        }
                    },
                    event: {
                        click: function() {
                            d.toggle.call(this)
                        }
                    },
                    toggle: function(t) {
                        var n = t !== i ? "number" == typeof t ? x.eq(t) : e(t).closest(g.title) : e(this).closest(g.title)
                          , r = n.next(R)
                          , o = r.hasClass(f.animating)
                          , a = r.hasClass(f.active)
                          , s = a && !o
                          , c = !a && o;
                        d.debug("Toggling visibility of content", n),
                        s || c ? p.collapsible ? d.close.call(n) : d.debug("Cannot close accordion content collapsing is disabled") : d.open.call(n)
                    },
                    open: function(t) {
                        var n = t !== i ? "number" == typeof t ? x.eq(t) : e(t).closest(g.title) : e(this).closest(g.title)
                          , r = n.next(R)
                          , o = r.hasClass(f.animating)
                          , a = r.hasClass(f.active)
                          , s = a || o;
                        return s ? void d.debug("Accordion already open, skipping", r) : (d.debug("Opening accordion content", n),
                        p.onOpening.call(r),
                        p.exclusive && d.closeOthers.call(n),
                        n.addClass(f.active),
                        r.stop(!0, !0).addClass(f.animating),
                        p.animateChildren && (e.fn.transition !== i && T.transition("is supported") ? r.children().transition({
                            animation: "fade in",
                            queue: !1,
                            useFailSafe: !0,
                            debug: p.debug,
                            verbose: p.verbose,
                            duration: p.duration
                        }) : r.children().stop(!0, !0).animate({
                            opacity: 1
                        }, p.duration, d.resetOpacity)),
                        void r.slideDown(p.duration, p.easing, function() {
                            r.removeClass(f.animating).addClass(f.active),
                            d.reset.display.call(this),
                            p.onOpen.call(this),
                            p.onChange.call(this)
                        }))
                    },
                    close: function(t) {
                        var n = t !== i ? "number" == typeof t ? x.eq(t) : e(t).closest(g.title) : e(this).closest(g.title)
                          , r = n.next(R)
                          , o = r.hasClass(f.animating)
                          , a = r.hasClass(f.active)
                          , s = !a && o
                          , c = a && o;
                        !a && !s || c || (d.debug("Closing accordion content", r),
                        p.onClosing.call(r),
                        n.removeClass(f.active),
                        r.stop(!0, !0).addClass(f.animating),
                        p.animateChildren && (e.fn.transition !== i && T.transition("is supported") ? r.children().transition({
                            animation: "fade out",
                            queue: !1,
                            useFailSafe: !0,
                            debug: p.debug,
                            verbose: p.verbose,
                            duration: p.duration
                        }) : r.children().stop(!0, !0).animate({
                            opacity: 0
                        }, p.duration, d.resetOpacity)),
                        r.slideUp(p.duration, p.easing, function() {
                            r.removeClass(f.animating).removeClass(f.active),
                            d.reset.display.call(this),
                            p.onClose.call(this),
                            p.onChange.call(this)
                        }))
                    },
                    closeOthers: function(t) {
                        var n, r, o, a = t !== i ? x.eq(t) : e(this).closest(g.title), s = a.parents(g.content).prev(g.title), c = a.closest(g.accordion), l = g.title + "." + f.active + ":visible", u = g.content + "." + f.active + ":visible";
                        p.closeNested ? (n = c.find(l).not(s),
                        o = n.next(R)) : (n = c.find(l).not(s),
                        r = c.find(u).find(l).not(s),
                        n = n.not(r),
                        o = n.next(R)),
                        n.length > 0 && (d.debug("Exclusive enabled, closing other content", n),
                        n.removeClass(f.active),
                        o.removeClass(f.animating).stop(!0, !0),
                        p.animateChildren && (e.fn.transition !== i && T.transition("is supported") ? o.children().transition({
                            animation: "fade out",
                            useFailSafe: !0,
                            debug: p.debug,
                            verbose: p.verbose,
                            duration: p.duration
                        }) : o.children().stop(!0, !0).animate({
                            opacity: 0
                        }, p.duration, d.resetOpacity)),
                        o.slideUp(p.duration, p.easing, function() {
                            e(this).removeClass(f.active),
                            d.reset.display.call(this)
                        }))
                    },
                    reset: {
                        display: function() {
                            d.verbose("Removing inline display from element", this),
                            e(this).css("display", ""),
                            "" === e(this).attr("style") && e(this).attr("style", "").removeAttr("style")
                        },
                        opacity: function() {
                            d.verbose("Removing inline opacity from element", this),
                            e(this).css("opacity", ""),
                            "" === e(this).attr("style") && e(this).attr("style", "").removeAttr("style")
                        }
                    },
                    setting: function(t, n) {
                        if (d.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    internal: function(t, n) {
                        return d.debug("Changing internal", t, n),
                        n === i ? d[t] : void (e.isPlainObject(t) ? e.extend(!0, d, t) : d[t] = n)
                    },
                    debug: function() {
                        p.debug && (p.performance ? d.performance.log(arguments) : (d.debug = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        p.verbose && p.debug && (p.performance ? d.performance.log(arguments) : (d.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        d.error = Function.prototype.bind.call(console.error, console, p.name + ":"),
                        d.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            p.performance && (t = (new Date).getTime(),
                            i = a || t,
                            n = t - i,
                            a = t,
                            s.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: w,
                                "Execution Time": n
                            })),
                            clearTimeout(d.performance.timer),
                            d.performance.timer = setTimeout(d.performance.display, 500)
                        },
                        display: function() {
                            var t = p.name + ":"
                              , n = 0;
                            a = !1,
                            clearTimeout(d.performance.timer),
                            e.each(s, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            b && (t += " '" + b + "'"),
                            (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(s) : e.each(s, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            s = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = H;
                        return n = n || u,
                        o = w || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (d.error(v.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                l ? (H === i && d.initialize(),
                d.invoke(c)) : (H !== i && H.invoke("destroy"),
                d.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.accordion.settings = {
            name: "Accordion",
            namespace: "accordion",
            debug: !1,
            verbose: !1,
            performance: !0,
            on: "click",
            observeChanges: !0,
            exclusive: !0,
            collapsible: !0,
            closeNested: !1,
            animateChildren: !0,
            duration: 350,
            easing: "easeOutQuad",
            onOpening: function() {},
            onOpen: function() {},
            onClosing: function() {},
            onClose: function() {},
            onChange: function() {},
            error: {
                method: "The method you called is not defined"
            },
            className: {
                active: "active",
                animating: "animating"
            },
            selector: {
                accordion: ".accordion",
                title: ".title",
                trigger: ".title",
                content: ".content"
            }
        },
        e.extend(e.easing, {
            easeOutQuad: function(e, t, n, i, r) {
                return -i * (t /= r) * (t - 2) + n
            }
        })
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.checkbox = function(r) {
            var o, a = e(this), s = a.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], h = "string" == typeof u, d = [].slice.call(arguments, 1);
            return a.each(function() {
                var a, p, f = e.extend(!0, {}, e.fn.checkbox.settings, r), m = f.className, g = f.namespace, v = f.selector, E = f.error, y = "." + g, b = "module-" + g, T = e(this), x = e(this).children(v.label), R = e(this).children(v.input), w = R[0], H = !1, M = !1, S = T.data(b), _ = this;
                p = {
                    initialize: function() {
                        p.verbose("Initializing checkbox", f),
                        p.create.label(),
                        p.bind.events(),
                        p.set.tabbable(),
                        p.hide.input(),
                        p.observeChanges(),
                        p.instantiate(),
                        p.setup()
                    },
                    instantiate: function() {
                        p.verbose("Storing instance of module", p),
                        S = p,
                        T.data(b, p)
                    },
                    destroy: function() {
                        p.verbose("Destroying module"),
                        p.unbind.events(),
                        p.show.input(),
                        T.removeData(b)
                    },
                    fix: {
                        reference: function() {
                            T.is(v.input) && (p.debug("Behavior called on <input> adjusting invoked element"),
                            T = T.closest(v.checkbox),
                            p.refresh())
                        }
                    },
                    setup: function() {
                        p.set.initialLoad(),
                        p.is.indeterminate() ? (p.debug("Initial value is indeterminate"),
                        p.indeterminate()) : p.is.checked() ? (p.debug("Initial value is checked"),
                        p.check()) : (p.debug("Initial value is unchecked"),
                        p.uncheck()),
                        p.remove.initialLoad()
                    },
                    refresh: function() {
                        x = T.children(v.label),
                        R = T.children(v.input),
                        w = R[0]
                    },
                    hide: {
                        input: function() {
                            p.verbose("Modfying <input> z-index to be unselectable"),
                            R.addClass(m.hidden)
                        }
                    },
                    show: {
                        input: function() {
                            p.verbose("Modfying <input> z-index to be selectable"),
                            R.removeClass(m.hidden)
                        }
                    },
                    observeChanges: function() {
                        "MutationObserver"in t && (a = new MutationObserver(function(e) {
                            p.debug("DOM tree modified, updating selector cache"),
                            p.refresh()
                        }
                        ),
                        a.observe(_, {
                            childList: !0,
                            subtree: !0
                        }),
                        p.debug("Setting up mutation observer", a))
                    },
                    attachEvents: function(t, n) {
                        var i = e(t);
                        n = e.isFunction(p[n]) ? p[n] : p.toggle,
                        i.length > 0 ? (p.debug("Attaching checkbox events to element", t, n),
                        i.on("click" + y, n)) : p.error(E.notFound)
                    },
                    event: {
                        click: function(t) {
                            var n = e(t.target);
                            return n.is(v.input) ? void p.verbose("Using default check action on initialized checkbox") : n.is(v.link) ? void p.debug("Clicking link inside checkbox, skipping toggle") : (p.toggle(),
                            R.focus(),
                            void t.preventDefault())
                        },
                        keydown: function(e) {
                            var t = e.which
                              , n = {
                                enter: 13,
                                space: 32,
                                escape: 27
                            };
                            t == n.escape ? (p.verbose("Escape key pressed blurring field"),
                            R.blur(),
                            M = !0) : e.ctrlKey || t != n.space && t != n.enter ? M = !1 : (p.verbose("Enter/space key pressed, toggling checkbox"),
                            p.toggle(),
                            M = !0)
                        },
                        keyup: function(e) {
                            M && e.preventDefault()
                        }
                    },
                    check: function() {
                        p.should.allowCheck() && (p.debug("Checking checkbox", R),
                        p.set.checked(),
                        p.should.ignoreCallbacks() || (f.onChecked.call(w),
                        f.onChange.call(w)))
                    },
                    uncheck: function() {
                        p.should.allowUncheck() && (p.debug("Unchecking checkbox"),
                        p.set.unchecked(),
                        p.should.ignoreCallbacks() || (f.onUnchecked.call(w),
                        f.onChange.call(w)))
                    },
                    indeterminate: function() {
                        return p.should.allowIndeterminate() ? void p.debug("Checkbox is already indeterminate") : (p.debug("Making checkbox indeterminate"),
                        p.set.indeterminate(),
                        void (p.should.ignoreCallbacks() || (f.onIndeterminate.call(w),
                        f.onChange.call(w))))
                    },
                    determinate: function() {
                        return p.should.allowDeterminate() ? void p.debug("Checkbox is already determinate") : (p.debug("Making checkbox determinate"),
                        p.set.determinate(),
                        void (p.should.ignoreCallbacks() || (f.onDeterminate.call(w),
                        f.onChange.call(w))))
                    },
                    enable: function() {
                        return p.is.enabled() ? void p.debug("Checkbox is already enabled") : (p.debug("Enabling checkbox"),
                        p.set.enabled(),
                        void f.onEnabled.call(w))
                    },
                    disable: function() {
                        return p.is.disabled() ? void p.debug("Checkbox is already disabled") : (p.debug("Disabling checkbox"),
                        p.set.disabled(),
                        void f.onDisabled.call(w))
                    },
                    get: {
                        radios: function() {
                            var t = p.get.name();
                            return e('input[name="' + t + '"]').closest(v.checkbox)
                        },
                        otherRadios: function() {
                            return p.get.radios().not(T)
                        },
                        name: function() {
                            return R.attr("name")
                        }
                    },
                    is: {
                        initialLoad: function() {
                            return H
                        },
                        radio: function() {
                            return R.hasClass(m.radio) || "radio" == R.attr("type")
                        },
                        indeterminate: function() {
                            return R.prop("indeterminate") !== i && R.prop("indeterminate")
                        },
                        checked: function() {
                            return R.prop("checked") !== i && R.prop("checked")
                        },
                        disabled: function() {
                            return R.prop("disabled") !== i && R.prop("disabled")
                        },
                        enabled: function() {
                            return !p.is.disabled()
                        },
                        determinate: function() {
                            return !p.is.indeterminate()
                        },
                        unchecked: function() {
                            return !p.is.checked()
                        }
                    },
                    should: {
                        allowCheck: function() {
                            return p.is.determinate() && p.is.checked() && !p.should.forceCallbacks() ? (p.debug("Should not allow check, checkbox is already checked"),
                            !1) : f.beforeChecked.apply(w) !== !1 || (p.debug("Should not allow check, beforeChecked cancelled"),
                            !1)
                        },
                        allowUncheck: function() {
                            return p.is.determinate() && p.is.unchecked() && !p.should.forceCallbacks() ? (p.debug("Should not allow uncheck, checkbox is already unchecked"),
                            !1) : f.beforeUnchecked.apply(w) !== !1 || (p.debug("Should not allow uncheck, beforeUnchecked cancelled"),
                            !1)
                        },
                        allowIndeterminate: function() {
                            return p.is.indeterminate() && !p.should.forceCallbacks() ? (p.debug("Should not allow indeterminate, checkbox is already indeterminate"),
                            !1) : f.beforeIndeterminate.apply(w) !== !1 || (p.debug("Should not allow indeterminate, beforeIndeterminate cancelled"),
                            !1)
                        },
                        allowDeterminate: function() {
                            return p.is.determinate() && !p.should.forceCallbacks() ? (p.debug("Should not allow determinate, checkbox is already determinate"),
                            !1) : f.beforeDeterminate.apply(w) !== !1 || (p.debug("Should not allow determinate, beforeDeterminate cancelled"),
                            !1)
                        },
                        forceCallbacks: function() {
                            return p.is.initialLoad() && f.fireOnInit
                        },
                        ignoreCallbacks: function() {
                            return H && !f.fireOnInit
                        }
                    },
                    can: {
                        change: function() {
                            return !(T.hasClass(m.disabled) || T.hasClass(m.readOnly) || R.prop("disabled") || R.prop("readonly"))
                        },
                        uncheck: function() {
                            return "boolean" == typeof f.uncheckable ? f.uncheckable : !p.is.radio()
                        }
                    },
                    set: {
                        initialLoad: function() {
                            H = !0
                        },
                        checked: function() {
                            return p.verbose("Setting class to checked"),
                            T.removeClass(m.indeterminate).addClass(m.checked),
                            p.is.radio() && p.uncheckOthers(),
                            !p.is.indeterminate() && p.is.checked() ? void p.debug("Input is already checked, skipping input property change") : (p.verbose("Setting state to checked", w),
                            R.prop("indeterminate", !1).prop("checked", !0),
                            void p.trigger.change())
                        },
                        unchecked: function() {
                            return p.verbose("Removing checked class"),
                            T.removeClass(m.indeterminate).removeClass(m.checked),
                            !p.is.indeterminate() && p.is.unchecked() ? void p.debug("Input is already unchecked") : (p.debug("Setting state to unchecked"),
                            R.prop("indeterminate", !1).prop("checked", !1),
                            void p.trigger.change())
                        },
                        indeterminate: function() {
                            return p.verbose("Setting class to indeterminate"),
                            T.addClass(m.indeterminate),
                            p.is.indeterminate() ? void p.debug("Input is already indeterminate, skipping input property change") : (p.debug("Setting state to indeterminate"),
                            R.prop("indeterminate", !0),
                            void p.trigger.change())
                        },
                        determinate: function() {
                            return p.verbose("Removing indeterminate class"),
                            T.removeClass(m.indeterminate),
                            p.is.determinate() ? void p.debug("Input is already determinate, skipping input property change") : (p.debug("Setting state to determinate"),
                            void R.prop("indeterminate", !1))
                        },
                        disabled: function() {
                            return p.verbose("Setting class to disabled"),
                            T.addClass(m.disabled),
                            p.is.disabled() ? void p.debug("Input is already disabled, skipping input property change") : (p.debug("Setting state to disabled"),
                            R.prop("disabled", "disabled"),
                            void p.trigger.change())
                        },
                        enabled: function() {
                            return p.verbose("Removing disabled class"),
                            T.removeClass(m.disabled),
                            p.is.enabled() ? void p.debug("Input is already enabled, skipping input property change") : (p.debug("Setting state to enabled"),
                            R.prop("disabled", !1),
                            void p.trigger.change())
                        },
                        tabbable: function() {
                            p.verbose("Adding tabindex to checkbox"),
                            R.attr("tabindex") === i && R.attr("tabindex", 0)
                        }
                    },
                    remove: {
                        initialLoad: function() {
                            H = !1
                        }
                    },
                    trigger: {
                        change: function() {
                            var e = n.createEvent("HTMLEvents")
                              , t = R[0];
                            t && (p.verbose("Triggering native change event"),
                            e.initEvent("change", !0, !1),
                            t.dispatchEvent(e))
                        }
                    },
                    create: {
                        label: function() {
                            R.prevAll(v.label).length > 0 ? (R.prev(v.label).detach().insertAfter(R),
                            p.debug("Moving existing label", x)) : p.has.label() || (x = e("<label>").insertAfter(R),
                            p.debug("Creating label", x))
                        }
                    },
                    has: {
                        label: function() {
                            return x.length > 0
                        }
                    },
                    bind: {
                        events: function() {
                            p.verbose("Attaching checkbox events"),
                            T.on("click" + y, p.event.click).on("keydown" + y, v.input, p.event.keydown).on("keyup" + y, v.input, p.event.keyup)
                        }
                    },
                    unbind: {
                        events: function() {
                            p.debug("Removing events"),
                            T.off(y)
                        }
                    },
                    uncheckOthers: function() {
                        var e = p.get.otherRadios();
                        p.debug("Unchecking other radios", e),
                        e.removeClass(m.checked)
                    },
                    toggle: function() {
                        return p.can.change() ? void (p.is.indeterminate() || p.is.unchecked() ? (p.debug("Currently unchecked"),
                        p.check()) : p.is.checked() && p.can.uncheck() && (p.debug("Currently checked"),
                        p.uncheck())) : void (p.is.radio() || p.debug("Checkbox is read-only or disabled, ignoring toggle"))
                    },
                    setting: function(t, n) {
                        if (p.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    debug: function() {
                        f.debug && (f.performance ? p.performance.log(arguments) : (p.debug = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        f.verbose && f.debug && (f.performance ? p.performance.log(arguments) : (p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        p.error = Function.prototype.bind.call(console.error, console, f.name + ":"),
                        p.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            f.performance && (t = (new Date).getTime(),
                            i = c || t,
                            n = t - i,
                            c = t,
                            l.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: _,
                                "Execution Time": n
                            })),
                            clearTimeout(p.performance.timer),
                            p.performance.timer = setTimeout(p.performance.display, 500)
                        },
                        display: function() {
                            var t = f.name + ":"
                              , n = 0;
                            c = !1,
                            clearTimeout(p.performance.timer),
                            e.each(l, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            s && (t += " '" + s + "'"),
                            (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(l) : e.each(l, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            l = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = S;
                        return n = n || d,
                        r = _ || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (p.error(E.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                h ? (S === i && p.initialize(),
                p.invoke(u)) : (S !== i && S.invoke("destroy"),
                p.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.checkbox.settings = {
            name: "Checkbox",
            namespace: "checkbox",
            debug: !1,
            verbose: !0,
            performance: !0,
            uncheckable: "auto",
            fireOnInit: !1,
            onChange: function() {},
            beforeChecked: function() {},
            beforeUnchecked: function() {},
            beforeDeterminate: function() {},
            beforeIndeterminate: function() {},
            onChecked: function() {},
            onUnchecked: function() {},
            onDeterminate: function() {},
            onIndeterminate: function() {},
            onEnable: function() {},
            onDisable: function() {},
            className: {
                checked: "checked",
                indeterminate: "indeterminate",
                disabled: "disabled",
                hidden: "hidden",
                radio: "radio",
                readOnly: "read-only"
            },
            error: {
                method: "The method you called is not defined"
            },
            selector: {
                checkbox: ".ui.checkbox",
                label: "label, .box",
                input: 'input[type="checkbox"], input[type="radio"]',
                link: "a[href]"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.dimmer = function(t) {
            var r, o = e(this), a = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1);
            return o.each(function() {
                var h, d, p, f = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.dimmer.settings, t) : e.extend({}, e.fn.dimmer.settings), m = f.selector, g = f.namespace, v = f.className, E = f.error, y = "." + g, b = "module-" + g, T = o.selector || "", x = "ontouchstart"in n.documentElement ? "touchstart" : "click", R = e(this), w = this, H = R.data(b);
                p = {
                    preinitialize: function() {
                        p.is.dimmer() ? (d = R.parent(),
                        h = R) : (d = R,
                        h = p.has.dimmer() ? f.dimmerName ? d.find(m.dimmer).filter("." + f.dimmerName) : d.find(m.dimmer) : p.create())
                    },
                    initialize: function() {
                        p.debug("Initializing dimmer", f),
                        p.bind.events(),
                        p.set.dimmable(),
                        p.instantiate()
                    },
                    instantiate: function() {
                        p.verbose("Storing instance of module", p),
                        H = p,
                        R.data(b, H)
                    },
                    destroy: function() {
                        p.verbose("Destroying previous module", h),
                        p.unbind.events(),
                        p.remove.variation(),
                        d.off(y)
                    },
                    bind: {
                        events: function() {
                            "hover" == f.on ? d.on("mouseenter" + y, p.show).on("mouseleave" + y, p.hide) : "click" == f.on && d.on(x + y, p.toggle),
                            p.is.page() && (p.debug("Setting as a page dimmer", d),
                            p.set.pageDimmer()),
                            p.is.closable() && (p.verbose("Adding dimmer close event", h),
                            d.on(x + y, m.dimmer, p.event.click))
                        }
                    },
                    unbind: {
                        events: function() {
                            R.removeData(b)
                        }
                    },
                    event: {
                        click: function(t) {
                            p.verbose("Determining if event occured on dimmer", t),
                            (0 === h.find(t.target).length || e(t.target).is(m.content)) && (p.hide(),
                            t.stopImmediatePropagation())
                        }
                    },
                    addContent: function(t) {
                        var n = e(t);
                        p.debug("Add content to dimmer", n),
                        n.parent()[0] !== h[0] && n.detach().appendTo(h)
                    },
                    create: function() {
                        var t = e(f.template.dimmer());
                        return f.variation && (p.debug("Creating dimmer with variation", f.variation),
                        t.addClass(f.variation)),
                        f.dimmerName && (p.debug("Creating named dimmer", f.dimmerName),
                        t.addClass(f.dimmerName)),
                        t.appendTo(d),
                        t
                    },
                    show: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        p.debug("Showing dimmer", h, f),
                        p.is.dimmed() && !p.is.animating() || !p.is.enabled() ? p.debug("Dimmer is already shown or disabled") : (p.animate.show(t),
                        f.onShow.call(w),
                        f.onChange.call(w))
                    },
                    hide: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        p.is.dimmed() || p.is.animating() ? (p.debug("Hiding dimmer", h),
                        p.animate.hide(t),
                        f.onHide.call(w),
                        f.onChange.call(w)) : p.debug("Dimmer is not visible")
                    },
                    toggle: function() {
                        p.verbose("Toggling dimmer visibility", h),
                        p.is.dimmed() ? p.hide() : p.show()
                    },
                    animate: {
                        show: function(t) {
                            t = e.isFunction(t) ? t : function() {}
                            ,
                            f.useCSS && e.fn.transition !== i && h.transition("is supported") ? ("auto" !== f.opacity && p.set.opacity(),
                            h.transition({
                                animation: f.transition + " in",
                                queue: !1,
                                duration: p.get.duration(),
                                useFailSafe: !0,
                                onStart: function() {
                                    p.set.dimmed()
                                },
                                onComplete: function() {
                                    p.set.active(),
                                    t()
                                }
                            })) : (p.verbose("Showing dimmer animation with javascript"),
                            p.set.dimmed(),
                            "auto" == f.opacity && (f.opacity = .8),
                            h.stop().css({
                                opacity: 0,
                                width: "100%",
                                height: "100%"
                            }).fadeTo(p.get.duration(), f.opacity, function() {
                                h.removeAttr("style"),
                                p.set.active(),
                                t()
                            }))
                        },
                        hide: function(t) {
                            t = e.isFunction(t) ? t : function() {}
                            ,
                            f.useCSS && e.fn.transition !== i && h.transition("is supported") ? (p.verbose("Hiding dimmer with css"),
                            h.transition({
                                animation: f.transition + " out",
                                queue: !1,
                                duration: p.get.duration(),
                                useFailSafe: !0,
                                onStart: function() {
                                    p.remove.dimmed()
                                },
                                onComplete: function() {
                                    p.remove.active(),
                                    t()
                                }
                            })) : (p.verbose("Hiding dimmer with javascript"),
                            p.remove.dimmed(),
                            h.stop().fadeOut(p.get.duration(), function() {
                                p.remove.active(),
                                h.removeAttr("style"),
                                t()
                            }))
                        }
                    },
                    get: {
                        dimmer: function() {
                            return h
                        },
                        duration: function() {
                            return "object" == typeof f.duration ? p.is.active() ? f.duration.hide : f.duration.show : f.duration
                        }
                    },
                    has: {
                        dimmer: function() {
                            return f.dimmerName ? R.find(m.dimmer).filter("." + f.dimmerName).length > 0 : R.find(m.dimmer).length > 0
                        }
                    },
                    is: {
                        active: function() {
                            return h.hasClass(v.active)
                        },
                        animating: function() {
                            return h.is(":animated") || h.hasClass(v.animating)
                        },
                        closable: function() {
                            return "auto" == f.closable ? "hover" != f.on : f.closable
                        },
                        dimmer: function() {
                            return R.hasClass(v.dimmer)
                        },
                        dimmable: function() {
                            return R.hasClass(v.dimmable)
                        },
                        dimmed: function() {
                            return d.hasClass(v.dimmed)
                        },
                        disabled: function() {
                            return d.hasClass(v.disabled)
                        },
                        enabled: function() {
                            return !p.is.disabled()
                        },
                        page: function() {
                            return d.is("body")
                        },
                        pageDimmer: function() {
                            return h.hasClass(v.pageDimmer)
                        }
                    },
                    can: {
                        show: function() {
                            return !h.hasClass(v.disabled)
                        }
                    },
                    set: {
                        opacity: function(e) {
                            var t = h.css("background-color")
                              , n = t.split(",")
                              , i = n && 4 == n.length;
                            e = 0 === f.opacity ? 0 : f.opacity || e,
                            i ? (n[3] = e + ")",
                            t = n.join(",")) : t = "rgba(0, 0, 0, " + e + ")",
                            p.debug("Setting opacity to", e),
                            h.css("background-color", t)
                        },
                        active: function() {
                            h.addClass(v.active)
                        },
                        dimmable: function() {
                            d.addClass(v.dimmable)
                        },
                        dimmed: function() {
                            d.addClass(v.dimmed)
                        },
                        pageDimmer: function() {
                            h.addClass(v.pageDimmer)
                        },
                        disabled: function() {
                            h.addClass(v.disabled)
                        },
                        variation: function(e) {
                            e = e || f.variation,
                            e && h.addClass(e)
                        }
                    },
                    remove: {
                        active: function() {
                            h.removeClass(v.active)
                        },
                        dimmed: function() {
                            d.removeClass(v.dimmed)
                        },
                        disabled: function() {
                            h.removeClass(v.disabled)
                        },
                        variation: function(e) {
                            e = e || f.variation,
                            e && h.removeClass(e)
                        }
                    },
                    setting: function(t, n) {
                        if (p.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    debug: function() {
                        f.debug && (f.performance ? p.performance.log(arguments) : (p.debug = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        f.verbose && f.debug && (f.performance ? p.performance.log(arguments) : (p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        p.error = Function.prototype.bind.call(console.error, console, f.name + ":"),
                        p.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            f.performance && (t = (new Date).getTime(),
                            i = a || t,
                            n = t - i,
                            a = t,
                            s.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: w,
                                "Execution Time": n
                            })),
                            clearTimeout(p.performance.timer),
                            p.performance.timer = setTimeout(p.performance.display, 500);
                        },
                        display: function() {
                            var t = f.name + ":"
                              , n = 0;
                            a = !1,
                            clearTimeout(p.performance.timer),
                            e.each(s, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            T && (t += " '" + T + "'"),
                            o.length > 1 && (t += " (" + o.length + ")"),
                            (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(s) : e.each(s, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            s = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = H;
                        return n = n || u,
                        o = w || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (p.error(E.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                p.preinitialize(),
                l ? (H === i && p.initialize(),
                p.invoke(c)) : (H !== i && H.invoke("destroy"),
                p.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.dimmer.settings = {
            name: "Dimmer",
            namespace: "dimmer",
            debug: !1,
            verbose: !1,
            performance: !0,
            dimmerName: !1,
            variation: !1,
            closable: "auto",
            useCSS: !0,
            transition: "fade",
            on: !1,
            opacity: "auto",
            duration: {
                show: 500,
                hide: 500
            },
            onChange: function() {},
            onShow: function() {},
            onHide: function() {},
            error: {
                method: "The method you called is not defined."
            },
            className: {
                active: "active",
                animating: "animating",
                dimmable: "dimmable",
                dimmed: "dimmed",
                dimmer: "dimmer",
                disabled: "disabled",
                hide: "hide",
                pageDimmer: "page",
                show: "show"
            },
            selector: {
                dimmer: "> .ui.dimmer",
                content: ".ui.dimmer > .content, .ui.dimmer > .content > .center"
            },
            template: {
                dimmer: function() {
                    return e("<div />").attr("class", "ui dimmer")
                }
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.dropdown = function(r) {
            var o, a = e(this), s = e(n), c = a.selector || "", l = "ontouchstart"in n.documentElement, u = (new Date).getTime(), h = [], d = arguments[0], p = "string" == typeof d, f = [].slice.call(arguments, 1);
            return a.each(function(m) {
                var g, v, E, y, b, T, x, R = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.dropdown.settings, r) : e.extend({}, e.fn.dropdown.settings), w = R.className, H = R.message, M = R.fields, S = R.keys, _ = R.metadata, C = R.namespace, A = R.regExp, P = R.selector, L = R.error, k = R.templates, D = "." + C, I = "module-" + C, O = e(this), B = e(R.context), F = O.find(P.text), N = O.find(P.search), U = O.find(P.input), z = O.find(P.icon), j = O.prev().find(P.text).length > 0 ? O.prev().find(P.text) : O.prev(), V = O.children(P.menu), G = V.find(P.item), W = !1, q = !1, X = !1, Y = this, K = O.data(I);
                x = {
                    initialize: function() {
                        x.debug("Initializing dropdown", R),
                        x.is.alreadySetup() ? x.setup.reference() : (x.setup.layout(),
                        x.refreshData(),
                        x.save.defaults(),
                        x.restore.selected(),
                        x.create.id(),
                        x.bind.events(),
                        x.observeChanges(),
                        x.instantiate())
                    },
                    instantiate: function() {
                        x.verbose("Storing instance of dropdown", x),
                        K = x,
                        O.data(I, x)
                    },
                    destroy: function() {
                        x.verbose("Destroying previous dropdown", O),
                        x.remove.tabbable(),
                        O.off(D).removeData(I),
                        V.off(D),
                        s.off(E),
                        b && b.disconnect(),
                        T && T.disconnect()
                    },
                    observeChanges: function() {
                        "MutationObserver"in t && (b = new MutationObserver(function(e) {
                            x.debug("<select> modified, recreating menu"),
                            x.setup.select()
                        }
                        ),
                        T = new MutationObserver(function(e) {
                            x.debug("Menu modified, updating selector cache"),
                            x.refresh()
                        }
                        ),
                        x.has.input() && b.observe(U[0], {
                            childList: !0,
                            subtree: !0
                        }),
                        x.has.menu() && T.observe(V[0], {
                            childList: !0,
                            subtree: !0
                        }),
                        x.debug("Setting up mutation observer", b, T))
                    },
                    create: {
                        id: function() {
                            y = (Math.random().toString(16) + "000000000").substr(2, 8),
                            E = "." + y,
                            x.verbose("Creating unique id for element", y)
                        },
                        userChoice: function(t) {
                            var n, r, o;
                            return !!(t = t || x.get.userValues()) && (t = e.isArray(t) ? t : [t],
                            e.each(t, function(t, a) {
                                x.get.item(a) === !1 && (o = R.templates.addition(x.add.variables(H.addResult, a)),
                                r = e("<div />").html(o).attr("data-" + _.value, a).attr("data-" + _.text, a).addClass(w.addition).addClass(w.item),
                                n = n === i ? r : n.add(r),
                                x.verbose("Creating user choices for value", a, r))
                            }),
                            n)
                        },
                        userLabels: function(t) {
                            var n = x.get.userValues();
                            n && (x.debug("Adding user labels", n),
                            e.each(n, function(e, t) {
                                x.verbose("Adding custom user value"),
                                x.add.label(t, t)
                            }))
                        },
                        menu: function() {
                            V = e("<div />").addClass(w.menu).appendTo(O)
                        }
                    },
                    search: function(e) {
                        e = e !== i ? e : x.get.query(),
                        x.verbose("Searching for query", e),
                        x.filter(e)
                    },
                    select: {
                        firstUnfiltered: function() {
                            x.verbose("Selecting first non-filtered element"),
                            x.remove.selectedItem(),
                            G.not(P.unselectable).eq(0).addClass(w.selected)
                        },
                        nextAvailable: function(e) {
                            e = e.eq(0);
                            var t = e.nextAll(P.item).not(P.unselectable).eq(0)
                              , n = e.prevAll(P.item).not(P.unselectable).eq(0)
                              , i = t.length > 0;
                            i ? (x.verbose("Moving selection to", t),
                            t.addClass(w.selected)) : (x.verbose("Moving selection to", n),
                            n.addClass(w.selected))
                        }
                    },
                    setup: {
                        api: function() {
                            var e = {
                                debug: R.debug,
                                on: !1
                            };
                            x.verbose("First request, initializing API"),
                            O.api(e)
                        },
                        layout: function() {
                            O.is("select") && (x.setup.select(),
                            x.setup.returnedObject()),
                            x.has.menu() || x.create.menu(),
                            x.is.search() && !x.has.search() && (x.verbose("Adding search input"),
                            N = e("<input />").addClass(w.search).prop("autocomplete", "off").insertBefore(F)),
                            R.allowTab && x.set.tabbable()
                        },
                        select: function() {
                            var t = x.get.selectValues();
                            x.debug("Dropdown initialized on a select", t),
                            O.is("select") && (U = O),
                            U.parent(P.dropdown).length > 0 ? (x.debug("UI dropdown already exists. Creating dropdown menu only"),
                            O = U.closest(P.dropdown),
                            x.has.menu() || x.create.menu(),
                            V = O.children(P.menu),
                            x.setup.menu(t)) : (x.debug("Creating entire dropdown from select"),
                            O = e("<div />").attr("class", U.attr("class")).addClass(w.selection).addClass(w.dropdown).html(k.dropdown(t)).insertBefore(U),
                            U.hasClass(w.multiple) && U.prop("multiple") === !1 && (x.error(L.missingMultiple),
                            U.prop("multiple", !0)),
                            U.is("[multiple]") && x.set.multiple(),
                            U.prop("disabled") && (x.debug("Disabling dropdown"),
                            O.addClass(w.disabled)),
                            U.removeAttr("class").detach().prependTo(O)),
                            x.refresh()
                        },
                        menu: function(e) {
                            V.html(k.menu(e, M)),
                            G = V.find(P.item)
                        },
                        reference: function() {
                            x.debug("Dropdown behavior was called on select, replacing with closest dropdown"),
                            O = O.parent(P.dropdown),
                            x.refresh(),
                            x.setup.returnedObject(),
                            p && (K = x,
                            x.invoke(d))
                        },
                        returnedObject: function() {
                            var e = a.slice(0, m)
                              , t = a.slice(m + 1);
                            a = e.add(O).add(t)
                        }
                    },
                    refresh: function() {
                        x.refreshSelectors(),
                        x.refreshData()
                    },
                    refreshSelectors: function() {
                        x.verbose("Refreshing selector cache"),
                        F = O.find(P.text),
                        N = O.find(P.search),
                        U = O.find(P.input),
                        z = O.find(P.icon),
                        j = O.prev().find(P.text).length > 0 ? O.prev().find(P.text) : O.prev(),
                        V = O.children(P.menu),
                        G = V.find(P.item)
                    },
                    refreshData: function() {
                        x.verbose("Refreshing cached metadata"),
                        G.removeData(_.text).removeData(_.value),
                        O.removeData(_.defaultText).removeData(_.defaultValue).removeData(_.placeholderText)
                    },
                    toggle: function() {
                        x.verbose("Toggling menu visibility"),
                        x.is.active() ? x.hide() : x.show()
                    },
                    show: function(t) {
                        if (t = e.isFunction(t) ? t : function() {}
                        ,
                        x.can.show() && !x.is.active()) {
                            if (x.debug("Showing dropdown"),
                            x.is.multiple() && !x.has.search() && x.is.allFiltered())
                                return !0;
                            !x.has.message() || x.has.maxSelections() || x.has.allResultsFiltered() || x.remove.message(),
                            R.onShow.call(Y) !== !1 && x.animate.show(function() {
                                x.can.click() && x.bind.intent(),
                                x.set.visible(),
                                t.call(Y)
                            })
                        }
                    },
                    hide: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        x.is.active() && (x.debug("Hiding dropdown"),
                        R.onHide.call(Y) !== !1 && x.animate.hide(function() {
                            x.remove.visible(),
                            t.call(Y)
                        }))
                    },
                    hideOthers: function() {
                        x.verbose("Finding other dropdowns to hide"),
                        a.not(O).has(P.menu + "." + w.visible).dropdown("hide")
                    },
                    hideMenu: function() {
                        x.verbose("Hiding menu  instantaneously"),
                        x.remove.active(),
                        x.remove.visible(),
                        V.transition("hide")
                    },
                    hideSubMenus: function() {
                        var e = V.children(P.item).find(P.menu);
                        x.verbose("Hiding sub menus", e),
                        e.transition("hide")
                    },
                    bind: {
                        events: function() {
                            l && x.bind.touchEvents(),
                            x.bind.keyboardEvents(),
                            x.bind.inputEvents(),
                            x.bind.mouseEvents()
                        },
                        touchEvents: function() {
                            x.debug("Touch device detected binding additional touch events"),
                            x.is.searchSelection() || x.is.single() && O.on("touchstart" + D, x.event.test.toggle),
                            V.on("touchstart" + D, P.item, x.event.item.mouseenter)
                        },
                        keyboardEvents: function() {
                            x.verbose("Binding keyboard events"),
                            O.on("keydown" + D, x.event.keydown),
                            x.has.search() && O.on(x.get.inputEvent() + D, P.search, x.event.input),
                            x.is.multiple() && s.on("keydown" + E, x.event.document.keydown)
                        },
                        inputEvents: function() {
                            x.verbose("Binding input change events"),
                            O.on("change" + D, P.input, x.event.change)
                        },
                        mouseEvents: function() {
                            x.verbose("Binding mouse events"),
                            x.is.multiple() && O.on("click" + D, P.label, x.event.label.click).on("click" + D, P.remove, x.event.remove.click),
                            x.is.searchSelection() ? (O.on("mousedown" + D, P.menu, x.event.menu.mousedown).on("mouseup" + D, P.menu, x.event.menu.mouseup).on("click" + D, P.icon, x.event.icon.click).on("click" + D, P.search, x.show).on("focus" + D, P.search, x.event.search.focus).on("blur" + D, P.search, x.event.search.blur).on("click" + D, P.text, x.event.text.focus),
                            x.is.multiple() && O.on("click" + D, x.event.click)) : ("click" == R.on ? O.on("click" + D, P.icon, x.event.icon.click).on("click" + D, x.event.test.toggle) : "hover" == R.on ? O.on("mouseenter" + D, x.delay.show).on("mouseleave" + D, x.delay.hide) : O.on(R.on + D, x.toggle),
                            O.on("mousedown" + D, x.event.mousedown).on("mouseup" + D, x.event.mouseup).on("focus" + D, x.event.focus).on("blur" + D, x.event.blur)),
                            V.on("mouseenter" + D, P.item, x.event.item.mouseenter).on("mouseleave" + D, P.item, x.event.item.mouseleave).on("click" + D, P.item, x.event.item.click)
                        },
                        intent: function() {
                            x.verbose("Binding hide intent event to document"),
                            l && s.on("touchstart" + E, x.event.test.touch).on("touchmove" + E, x.event.test.touch),
                            s.on("click" + E, x.event.test.hide)
                        }
                    },
                    unbind: {
                        intent: function() {
                            x.verbose("Removing hide intent event from document"),
                            l && s.off("touchstart" + E).off("touchmove" + E),
                            s.off("click" + E)
                        }
                    },
                    filter: function(e) {
                        var t = e !== i ? e : x.get.query()
                          , n = function() {
                            x.is.multiple() && x.filterActive(),
                            x.select.firstUnfiltered(),
                            x.has.allResultsFiltered() ? R.onNoResults.call(Y, t) ? R.allowAdditions || (x.verbose("All items filtered, showing message", t),
                            x.add.message(H.noResults)) : (x.verbose("All items filtered, hiding dropdown", t),
                            x.hideMenu()) : x.remove.message(),
                            R.allowAdditions && x.add.userSuggestion(e),
                            x.is.searchSelection() && x.can.show() && x.is.focusedOnSearch() && x.show()
                        };
                        R.useLabels && x.has.maxSelections() || (R.apiSettings ? x.can.useAPI() ? x.queryRemote(t, function() {
                            n()
                        }) : x.error(L.noAPI) : (x.filterItems(t),
                        n()))
                    },
                    queryRemote: function(t, n) {
                        var i = {
                            errorDuration: !1,
                            throttle: R.throttle,
                            urlData: {
                                query: t
                            },
                            onError: function() {
                                x.add.message(H.serverError),
                                n()
                            },
                            onFailure: function() {
                                x.add.message(H.serverError),
                                n()
                            },
                            onSuccess: function(e) {
                                x.remove.message(),
                                x.setup.menu({
                                    values: e[M.remoteValues]
                                }),
                                n()
                            }
                        };
                        O.api("get request") || x.setup.api(),
                        i = e.extend(!0, {}, i, R.apiSettings),
                        O.api("setting", i).api("query")
                    },
                    filterItems: function(t) {
                        var n = t !== i ? t : x.get.query()
                          , r = null
                          , o = x.escape.regExp(n)
                          , a = new RegExp("^" + o,"igm");
                        x.has.query() && (r = [],
                        x.verbose("Searching for matching values", n),
                        G.each(function() {
                            var t, i, o = e(this);
                            if ("both" == R.match || "text" == R.match) {
                                if (t = String(x.get.choiceText(o, !1)),
                                t.search(a) !== -1)
                                    return r.push(this),
                                    !0;
                                if (R.fullTextSearch && x.fuzzySearch(n, t))
                                    return r.push(this),
                                    !0
                            }
                            if ("both" == R.match || "value" == R.match) {
                                if (i = String(x.get.choiceValue(o, t)),
                                i.search(a) !== -1)
                                    return r.push(this),
                                    !0;
                                if (R.fullTextSearch && x.fuzzySearch(n, i))
                                    return r.push(this),
                                    !0
                            }
                        })),
                        x.debug("Showing only matched items", n),
                        x.remove.filteredItem(),
                        r && G.not(r).addClass(w.filtered)
                    },
                    fuzzySearch: function(e, t) {
                        var n = t.length
                          , i = e.length;
                        if (e = e.toLowerCase(),
                        t = t.toLowerCase(),
                        i > n)
                            return !1;
                        if (i === n)
                            return e === t;
                        e: for (var r = 0, o = 0; r < i; r++) {
                            for (var a = e.charCodeAt(r); o < n; )
                                if (t.charCodeAt(o++) === a)
                                    continue e;
                            return !1
                        }
                        return !0
                    },
                    filterActive: function() {
                        R.useLabels && G.filter("." + w.active).addClass(w.filtered)
                    },
                    focusSearch: function() {
                        x.is.search() && !x.is.focusedOnSearch() && N[0].focus()
                    },
                    forceSelection: function() {
                        var e = G.not(w.filtered).filter("." + w.selected).eq(0)
                          , t = G.not(w.filtered).filter("." + w.active).eq(0)
                          , n = e.length > 0 ? e : t
                          , i = n.size() > 0;
                        if (x.has.query()) {
                            if (i)
                                return x.debug("Forcing partial selection to selected item", n),
                                void x.event.item.click.call(n);
                            x.remove.searchTerm()
                        }
                        x.hide()
                    },
                    event: {
                        change: function() {
                            X || (x.debug("Input changed, updating selection"),
                            x.set.selected())
                        },
                        focus: function() {
                            R.showOnFocus && !W && x.is.hidden() && !v && x.show()
                        },
                        click: function(t) {
                            var n = e(t.target);
                            n.is(O) && !x.is.focusedOnSearch() && x.focusSearch()
                        },
                        blur: function(e) {
                            v = n.activeElement === this,
                            W || v || (x.remove.activeLabel(),
                            x.hide())
                        },
                        mousedown: function() {
                            W = !0
                        },
                        mouseup: function() {
                            W = !1
                        },
                        search: {
                            focus: function() {
                                W = !0,
                                x.is.multiple() && x.remove.activeLabel(),
                                R.showOnFocus && (x.search(),
                                x.show())
                            },
                            blur: function(e) {
                                v = n.activeElement === this,
                                q || v ? v && R.forceSelection && x.forceSelection() : x.is.multiple() ? (x.remove.activeLabel(),
                                x.hide()) : R.forceSelection ? x.forceSelection() : x.hide()
                            }
                        },
                        icon: {
                            click: function(e) {
                                x.toggle(),
                                e.stopPropagation()
                            }
                        },
                        text: {
                            focus: function(e) {
                                W = !0,
                                x.focusSearch()
                            }
                        },
                        input: function(e) {
                            (x.is.multiple() || x.is.searchSelection()) && x.set.filtered(),
                            clearTimeout(x.timer),
                            x.timer = setTimeout(x.search, R.delay.search)
                        },
                        label: {
                            click: function(t) {
                                var n = e(this)
                                  , i = O.find(P.label)
                                  , r = i.filter("." + w.active)
                                  , o = n.nextAll("." + w.active)
                                  , a = n.prevAll("." + w.active)
                                  , s = o.length > 0 ? n.nextUntil(o).add(r).add(n) : n.prevUntil(a).add(r).add(n);
                                t.shiftKey ? (r.removeClass(w.active),
                                s.addClass(w.active)) : t.ctrlKey ? n.toggleClass(w.active) : (r.removeClass(w.active),
                                n.addClass(w.active)),
                                R.onLabelSelect.apply(this, i.filter("." + w.active))
                            }
                        },
                        remove: {
                            click: function() {
                                var t = e(this).parent();
                                t.hasClass(w.active) ? x.remove.activeLabels() : x.remove.activeLabels(t)
                            }
                        },
                        test: {
                            toggle: function(e) {
                                var t = x.is.multiple() ? x.show : x.toggle;
                                x.determine.eventOnElement(e, t) && e.preventDefault()
                            },
                            touch: function(e) {
                                x.determine.eventOnElement(e, function() {
                                    "touchstart" == e.type ? x.timer = setTimeout(function() {
                                        x.hide()
                                    }, R.delay.touch) : "touchmove" == e.type && clearTimeout(x.timer)
                                }),
                                e.stopPropagation()
                            },
                            hide: function(e) {
                                x.determine.eventInModule(e, x.hide)
                            }
                        },
                        menu: {
                            mousedown: function() {
                                q = !0
                            },
                            mouseup: function() {
                                q = !1
                            }
                        },
                        item: {
                            mouseenter: function(t) {
                                var n = e(this).children(P.menu)
                                  , i = e(this).siblings(P.item).children(P.menu);
                                n.length > 0 && (clearTimeout(x.itemTimer),
                                x.itemTimer = setTimeout(function() {
                                    x.verbose("Showing sub-menu", n),
                                    e.each(i, function() {
                                        x.animate.hide(!1, e(this))
                                    }),
                                    x.animate.show(!1, n)
                                }, R.delay.show),
                                t.preventDefault())
                            },
                            mouseleave: function(t) {
                                var n = e(this).children(P.menu);
                                n.length > 0 && (clearTimeout(x.itemTimer),
                                x.itemTimer = setTimeout(function() {
                                    x.verbose("Hiding sub-menu", n),
                                    x.animate.hide(!1, n)
                                }, R.delay.hide))
                            },
                            touchend: function() {},
                            click: function(t) {
                                var n = e(this)
                                  , i = e(t ? t.target : "")
                                  , r = n.find(P.menu)
                                  , o = x.get.choiceText(n)
                                  , a = x.get.choiceValue(n, o)
                                  , s = r.length > 0
                                  , c = r.find(i).length > 0;
                                c || s && !R.allowCategorySelection || (R.useLabels || (x.remove.filteredItem(),
                                x.remove.searchTerm(),
                                x.set.scrollPosition(n)),
                                x.determine.selectAction.call(this, o, a))
                            }
                        },
                        document: {
                            keydown: function(e) {
                                var t = e.which
                                  , n = x.is.inObject(t, S);
                                if (n) {
                                    var i = O.find(P.label)
                                      , r = i.filter("." + w.active)
                                      , o = (r.data(_.value),
                                    i.index(r))
                                      , a = i.length
                                      , s = r.length > 0
                                      , c = r.length > 1
                                      , l = 0 === o
                                      , u = o + 1 == a
                                      , h = x.is.searchSelection()
                                      , d = x.is.focusedOnSearch()
                                      , p = x.is.focused()
                                      , f = d && 0 === x.get.caretPosition();
                                    if (h && !s && !d)
                                        return;
                                    t == S.leftArrow ? !p && !f || s ? s && (e.shiftKey ? x.verbose("Adding previous label to selection") : (x.verbose("Selecting previous label"),
                                    i.removeClass(w.active)),
                                    l && !c ? r.addClass(w.active) : r.prev(P.siblingLabel).addClass(w.active).end(),
                                    e.preventDefault()) : (x.verbose("Selecting previous label"),
                                    i.last().addClass(w.active)) : t == S.rightArrow ? (p && !s && i.first().addClass(w.active),
                                    s && (e.shiftKey ? x.verbose("Adding next label to selection") : (x.verbose("Selecting next label"),
                                    i.removeClass(w.active)),
                                    u ? h ? d ? i.removeClass(w.active) : x.focusSearch() : c ? r.next(P.siblingLabel).addClass(w.active) : r.addClass(w.active) : r.next(P.siblingLabel).addClass(w.active),
                                    e.preventDefault())) : t == S.deleteKey || t == S.backspace ? s ? (x.verbose("Removing active labels"),
                                    u && h && !d && x.focusSearch(),
                                    r.last().next(P.siblingLabel).addClass(w.active),
                                    x.remove.activeLabels(r),
                                    e.preventDefault()) : f && !s && t == S.backspace && (x.verbose("Removing last label on input backspace"),
                                    r = i.last().addClass(w.active),
                                    x.remove.activeLabels(r)) : r.removeClass(w.active)
                                }
                            }
                        },
                        keydown: function(e) {
                            var t = e.which
                              , n = x.is.inObject(t, S);
                            if (n) {
                                var i, r, o = G.not(P.unselectable).filter("." + w.selected).eq(0), a = V.children("." + w.active).eq(0), s = o.length > 0 ? o : a, c = s.length > 0 ? s.siblings(":not(." + w.filtered + ")").andSelf() : V.children(":not(." + w.filtered + ")"), l = s.children(P.menu), u = s.closest(P.menu), h = u.hasClass(w.visible) || u.hasClass(w.animating) || u.parent(P.menu).length > 0, d = l.length > 0, p = s.length > 0, f = s.not(P.unselectable).length > 0, m = t == S.delimiter && R.allowAdditions && x.is.multiple();
                                if (x.is.visible()) {
                                    if ((t == S.enter || m) && (t == S.enter && p && d && !R.allowCategorySelection ? (x.verbose("Pressed enter on unselectable category, opening sub menu"),
                                    t = S.rightArrow) : f && (x.verbose("Selecting item from keyboard shortcut", s),
                                    x.event.item.click.call(s, e),
                                    x.is.searchSelection() && x.remove.searchTerm()),
                                    e.preventDefault()),
                                    t == S.leftArrow && (r = u[0] !== V[0],
                                    r && (x.verbose("Left key pressed, closing sub-menu"),
                                    x.animate.hide(!1, u),
                                    s.removeClass(w.selected),
                                    u.closest(P.item).addClass(w.selected),
                                    e.preventDefault())),
                                    t == S.rightArrow && d && (x.verbose("Right key pressed, opening sub-menu"),
                                    x.animate.show(!1, l),
                                    s.removeClass(w.selected),
                                    l.find(P.item).eq(0).addClass(w.selected),
                                    e.preventDefault()),
                                    t == S.upArrow) {
                                        if (i = p && h ? s.prevAll(P.item + ":not(" + P.unselectable + ")").eq(0) : G.eq(0),
                                        c.index(i) < 0)
                                            return x.verbose("Up key pressed but reached top of current menu"),
                                            void e.preventDefault();
                                        x.verbose("Up key pressed, changing active item"),
                                        s.removeClass(w.selected),
                                        i.addClass(w.selected),
                                        x.set.scrollPosition(i),
                                        e.preventDefault()
                                    }
                                    if (t == S.downArrow) {
                                        if (i = p && h ? i = s.nextAll(P.item + ":not(" + P.unselectable + ")").eq(0) : G.eq(0),
                                        0 === i.length)
                                            return x.verbose("Down key pressed but reached bottom of current menu"),
                                            void e.preventDefault();
                                        x.verbose("Down key pressed, changing active item"),
                                        G.removeClass(w.selected),
                                        i.addClass(w.selected),
                                        x.set.scrollPosition(i),
                                        e.preventDefault()
                                    }
                                    t == S.pageUp && (x.scrollPage("up"),
                                    e.preventDefault()),
                                    t == S.pageDown && (x.scrollPage("down"),
                                    e.preventDefault()),
                                    t == S.escape && (x.verbose("Escape key pressed, closing dropdown"),
                                    x.hide())
                                } else
                                    m && e.preventDefault(),
                                    t == S.downArrow && (x.verbose("Down key pressed, showing dropdown"),
                                    x.show(),
                                    e.preventDefault())
                            } else
                                x.is.selection() && !x.is.search() && x.set.selectedLetter(String.fromCharCode(t))
                        }
                    },
                    trigger: {
                        change: function() {
                            var e = n.createEvent("HTMLEvents")
                              , t = U[0];
                            t && (x.verbose("Triggering native change event"),
                            e.initEvent("change", !0, !1),
                            t.dispatchEvent(e))
                        }
                    },
                    determine: {
                        selectAction: function(t, n) {
                            x.verbose("Determining action", R.action),
                            e.isFunction(x.action[R.action]) ? (x.verbose("Triggering preset action", R.action, t, n),
                            x.action[R.action].call(this, t, n)) : e.isFunction(R.action) ? (x.verbose("Triggering user action", R.action, t, n),
                            R.action.call(this, t, n)) : x.error(L.action, R.action)
                        },
                        eventInModule: function(t, i) {
                            var r = e(t.target)
                              , o = r.closest(n.documentElement).length > 0
                              , a = r.closest(O).length > 0;
                            return i = e.isFunction(i) ? i : function() {}
                            ,
                            o && !a ? (x.verbose("Triggering event", i),
                            i(),
                            !0) : (x.verbose("Event occurred in dropdown, canceling callback"),
                            !1)
                        },
                        eventOnElement: function(t, n) {
                            var i = e(t.target)
                              , r = i.closest(P.siblingLabel)
                              , o = 0 === O.find(r).length
                              , a = 0 === i.closest(V).length;
                            return n = e.isFunction(n) ? n : function() {}
                            ,
                            o && a ? (x.verbose("Triggering event", n),
                            n(),
                            !0) : (x.verbose("Event occurred in dropdown menu, canceling callback"),
                            !1)
                        }
                    },
                    action: {
                        nothing: function() {},
                        activate: function(t, n) {
                            if (n = n !== i ? n : t,
                            x.can.activate(e(this))) {
                                if (x.set.selected(n, e(this)),
                                x.is.multiple() && !x.is.allFiltered())
                                    return;
                                x.hideAndClear()
                            }
                        },
                        select: function(e, t) {
                            x.action.activate.call(this)
                        },
                        combo: function(t, n) {
                            n = n !== i ? n : t,
                            x.set.selected(n, e(this)),
                            x.hideAndClear()
                        },
                        hide: function(e, t) {
                            x.set.value(t),
                            x.hideAndClear()
                        }
                    },
                    get: {
                        id: function() {
                            return y
                        },
                        defaultText: function() {
                            return O.data(_.defaultText)
                        },
                        defaultValue: function() {
                            return O.data(_.defaultValue)
                        },
                        placeholderText: function() {
                            return O.data(_.placeholderText) || ""
                        },
                        text: function() {
                            return F.text()
                        },
                        query: function() {
                            return e.trim(N.val())
                        },
                        searchWidth: function(e) {
                            return e * R.glyphWidth + "em"
                        },
                        selectionCount: function() {
                            var t, n = x.get.values();
                            return t = x.is.multiple() ? e.isArray(n) ? n.length : 0 : "" !== x.get.value() ? 1 : 0
                        },
                        transition: function(e) {
                            return "auto" == R.transition ? x.is.upward(e) ? "slide up" : "slide down" : R.transition
                        },
                        userValues: function() {
                            var t = x.get.values();
                            return !!t && (t = e.isArray(t) ? t : [t],
                            e.grep(t, function(e) {
                                return x.get.item(e) === !1
                            }))
                        },
                        uniqueArray: function(t) {
                            return e.grep(t, function(n, i) {
                                return e.inArray(n, t) === i
                            })
                        },
                        caretPosition: function() {
                            var e, t, i = N.get(0);
                            return "selectionStart"in i ? i.selectionStart : n.selection ? (i.focus(),
                            e = n.selection.createRange(),
                            t = e.text.length,
                            e.moveStart("character", -i.value.length),
                            e.text.length - t) : void 0
                        },
                        value: function() {
                            var t = U.length > 0 ? U.val() : O.data(_.value);
                            return e.isArray(t) && 1 === t.length && "" === t[0] ? "" : t
                        },
                        values: function() {
                            var e = x.get.value();
                            return "" === e ? "" : !x.has.selectInput() && x.is.multiple() ? "string" == typeof e ? e.split(R.delimiter) : "" : e
                        },
                        remoteValues: function() {
                            var t = x.get.values()
                              , n = !1;
                            return t && ("string" == typeof t && (t = [t]),
                            n = {},
                            e.each(t, function(e, t) {
                                var i = x.read.remoteData(t);
                                x.verbose("Restoring value from session data", i, t),
                                n[t] = i ? i : t
                            })),
                            n
                        },
                        choiceText: function(t, n) {
                            if (n = n !== i ? n : R.preserveHTML,
                            t)
                                return t.find(P.menu).length > 0 && (x.verbose("Retreiving text of element with sub-menu"),
                                t = t.clone(),
                                t.find(P.menu).remove(),
                                t.find(P.menuIcon).remove()),
                                t.data(_.text) !== i ? t.data(_.text) : n ? e.trim(t.html()) : e.trim(t.text())
                        },
                        choiceValue: function(t, n) {
                            return n = n || x.get.choiceText(t),
                            !!t && (t.data(_.value) !== i ? String(t.data(_.value)) : "string" == typeof n ? e.trim(n.toLowerCase()) : String(n))
                        },
                        inputEvent: function() {
                            var e = N[0];
                            return !!e && (e.oninput !== i ? "input" : e.onpropertychange !== i ? "propertychange" : "keyup")
                        },
                        selectValues: function() {
                            var t = {};
                            return t.values = [],
                            O.find("option").each(function() {
                                var n = e(this)
                                  , r = n.html()
                                  , o = n.attr("disabled")
                                  , a = n.attr("value") !== i ? n.attr("value") : r;
                                "auto" === R.placeholder && "" === a ? t.placeholder = r : t.values.push({
                                    name: r,
                                    value: a,
                                    disabled: o
                                })
                            }),
                            R.placeholder && "auto" !== R.placeholder && (x.debug("Setting placeholder value to", R.placeholder),
                            t.placeholder = R.placeholder),
                            R.sortSelect ? (t.values.sort(function(e, t) {
                                return e.name > t.name ? 1 : -1
                            }),
                            x.debug("Retrieved and sorted values from select", t)) : x.debug("Retreived values from select", t),
                            t
                        },
                        activeItem: function() {
                            return G.filter("." + w.active)
                        },
                        selectedItem: function() {
                            var e = G.not(P.unselectable).filter("." + w.selected);
                            return e.length > 0 ? e : G.eq(0)
                        },
                        itemWithAdditions: function(e) {
                            var t = x.get.item(e)
                              , n = x.create.userChoice(e)
                              , i = n && n.length > 0;
                            return i && (t = t.length > 0 ? t.add(n) : n),
                            t
                        },
                        item: function(t, n) {
                            var r, o, a = !1;
                            return t = t !== i ? t : x.get.values() !== i ? x.get.values() : x.get.text(),
                            r = o ? t.length > 0 : t !== i && null !== t,
                            o = x.is.multiple() && e.isArray(t),
                            n = "" === t || 0 === t || (n || !1),
                            r && G.each(function() {
                                var r = e(this)
                                  , s = x.get.choiceText(r)
                                  , c = x.get.choiceValue(r, s);
                                if (null !== c && c !== i)
                                    if (o)
                                        e.inArray(String(c), t) === -1 && e.inArray(s, t) === -1 || (a = a ? a.add(r) : r);
                                    else if (n) {
                                        if (x.verbose("Ambiguous dropdown value using strict type check", r, t),
                                        c === t || s === t)
                                            return a = r,
                                            !0
                                    } else if (String(c) == String(t) || s == t)
                                        return x.verbose("Found select item by value", c, t),
                                        a = r,
                                        !0
                            }),
                            a
                        }
                    },
                    check: {
                        maxSelections: function(e) {
                            return !R.maxSelections || (e = e !== i ? e : x.get.selectionCount(),
                            e >= R.maxSelections ? (x.debug("Maximum selection count reached"),
                            R.useLabels && (G.addClass(w.filtered),
                            x.add.message(H.maxSelections)),
                            !0) : (x.verbose("No longer at maximum selection count"),
                            x.remove.message(),
                            x.remove.filteredItem(),
                            x.is.searchSelection() && x.filterItems(),
                            !1))
                        }
                    },
                    restore: {
                        defaults: function() {
                            x.clear(),
                            x.restore.defaultText(),
                            x.restore.defaultValue()
                        },
                        defaultText: function() {
                            var e = x.get.defaultText()
                              , t = x.get.placeholderText;
                            e === t ? (x.debug("Restoring default placeholder text", e),
                            x.set.placeholderText(e)) : (x.debug("Restoring default text", e),
                            x.set.text(e))
                        },
                        defaultValue: function() {
                            var e = x.get.defaultValue();
                            e !== i && (x.debug("Restoring default value", e),
                            "" !== e ? (x.set.value(e),
                            x.set.selected()) : (x.remove.activeItem(),
                            x.remove.selectedItem()))
                        },
                        labels: function() {
                            R.allowAdditions && (R.useLabels || (x.error(L.labels),
                            R.useLabels = !0),
                            x.debug("Restoring selected values"),
                            x.create.userLabels()),
                            x.check.maxSelections()
                        },
                        selected: function() {
                            x.restore.values(),
                            x.is.multiple() ? (x.debug("Restoring previously selected values and labels"),
                            x.restore.labels()) : x.debug("Restoring previously selected values")
                        },
                        values: function() {
                            x.set.initialLoad(),
                            R.apiSettings ? R.saveRemoteData ? x.restore.remoteValues() : x.clearValue() : x.set.selected(),
                            x.remove.initialLoad()
                        },
                        remoteValues: function() {
                            var t = x.get.remoteValues();
                            x.debug("Recreating selected from session data", t),
                            t && (x.is.single() ? e.each(t, function(e, t) {
                                x.set.text(t)
                            }) : e.each(t, function(e, t) {
                                x.add.label(e, t)
                            }))
                        }
                    },
                    read: {
                        remoteData: function(e) {
                            var n;
                            return t.Storage === i ? void x.error(L.noStorage) : (n = sessionStorage.getItem(e),
                            n !== i && n)
                        }
                    },
                    save: {
                        defaults: function() {
                            x.save.defaultText(),
                            x.save.placeholderText(),
                            x.save.defaultValue()
                        },
                        defaultValue: function() {
                            var e = x.get.value();
                            x.verbose("Saving default value as", e),
                            O.data(_.defaultValue, e)
                        },
                        defaultText: function() {
                            var e = x.get.text();
                            x.verbose("Saving default text as", e),
                            O.data(_.defaultText, e)
                        },
                        placeholderText: function() {
                            var e;
                            R.placeholder !== !1 && F.hasClass(w.placeholder) && (e = x.get.text(),
                            x.verbose("Saving placeholder text as", e),
                            O.data(_.placeholderText, e))
                        },
                        remoteData: function(e, n) {
                            return t.Storage === i ? void x.error(L.noStorage) : (x.verbose("Saving remote data to session storage", n, e),
                            void sessionStorage.setItem(n, e))
                        }
                    },
                    clear: function() {
                        x.is.multiple() ? x.remove.labels() : (x.remove.activeItem(),
                        x.remove.selectedItem()),
                        x.set.placeholderText(),
                        x.clearValue()
                    },
                    clearValue: function() {
                        x.set.value("")
                    },
                    scrollPage: function(e, t) {
                        var n, i, r, o = t || x.get.selectedItem(), a = o.closest(P.menu), s = a.outerHeight(), c = a.scrollTop(), l = G.eq(0).outerHeight(), u = Math.floor(s / l), h = (a.prop("scrollHeight"),
                        "up" == e ? c - l * u : c + l * u), d = G.not(P.unselectable);
                        r = "up" == e ? d.index(o) - u : d.index(o) + u,
                        n = "up" == e ? r >= 0 : r < d.length,
                        i = n ? d.eq(r) : "up" == e ? d.first() : d.last(),
                        i.length > 0 && (x.debug("Scrolling page", e, i),
                        o.removeClass(w.selected),
                        i.addClass(w.selected),
                        a.scrollTop(h))
                    },
                    set: {
                        filtered: function() {
                            var e = x.is.multiple()
                              , t = x.is.searchSelection()
                              , n = e && t
                              , i = t ? x.get.query() : ""
                              , r = "string" == typeof i && i.length > 0
                              , o = x.get.searchWidth(i.length)
                              , a = "" !== i;
                            e && r && (x.verbose("Adjusting input width", o, R.glyphWidth),
                            N.css("width", o)),
                            r || n && a ? (x.verbose("Hiding placeholder text"),
                            F.addClass(w.filtered)) : (!e || n && !a) && (x.verbose("Showing placeholder text"),
                            F.removeClass(w.filtered))
                        },
                        loading: function() {
                            O.addClass(w.loading)
                        },
                        placeholderText: function(e) {
                            e = e || x.get.placeholderText(),
                            x.debug("Setting placeholder text", e),
                            x.set.text(e),
                            F.addClass(w.placeholder)
                        },
                        tabbable: function() {
                            x.has.search() ? (x.debug("Added tabindex to searchable dropdown"),
                            N.val("").attr("tabindex", 0),
                            V.attr("tabindex", -1)) : (x.debug("Added tabindex to dropdown"),
                            O.attr("tabindex") === i && (O.attr("tabindex", 0),
                            V.attr("tabindex", -1)))
                        },
                        initialLoad: function() {
                            x.verbose("Setting initial load"),
                            g = !0
                        },
                        activeItem: function(e) {
                            R.allowAdditions && e.filter(P.addition).length > 0 ? e.addClass(w.filtered) : e.addClass(w.active)
                        },
                        scrollPosition: function(e, t) {
                            var n, r, o, a, s, c, l, u, h, d = 5;
                            e = e || x.get.selectedItem(),
                            n = e.closest(P.menu),
                            r = e && e.length > 0,
                            t = t !== i && t,
                            e && n.length > 0 && r && (a = e.position().top,
                            n.addClass(w.loading),
                            c = n.scrollTop(),
                            s = n.offset().top,
                            a = e.offset().top,
                            o = c - s + a,
                            t || (l = n.height(),
                            h = c + l < o + d,
                            u = o - d < c),
                            x.debug("Scrolling to active item", o),
                            (t || u || h) && n.scrollTop(o),
                            n.removeClass(w.loading))
                        },
                        text: function(e) {
                            "select" !== R.action && ("combo" == R.action ? (x.debug("Changing combo button text", e, j),
                            R.preserveHTML ? j.html(e) : j.text(e)) : (e !== x.get.placeholderText() && F.removeClass(w.placeholder),
                            x.debug("Changing text", e, F),
                            F.removeClass(w.filtered),
                            R.preserveHTML ? F.html(e) : F.text(e)))
                        },
                        selectedLetter: function(t) {
                            var n, i = G.filter("." + w.selected), r = i.length > 0 && x.has.firstLetter(i, t), o = !1;
                            r && (n = i.nextAll(G).eq(0),
                            x.has.firstLetter(n, t) && (o = n)),
                            o || G.each(function() {
                                if (x.has.firstLetter(e(this), t))
                                    return o = e(this),
                                    !1
                            }),
                            o && (x.verbose("Scrolling to next value with letter", t),
                            x.set.scrollPosition(o),
                            i.removeClass(w.selected),
                            o.addClass(w.selected))
                        },
                        direction: function(e) {
                            "auto" == R.direction ? x.is.onScreen(e) ? x.remove.upward(e) : x.set.upward(e) : "upward" == R.direction && x.set.upward(e)
                        },
                        upward: function(e) {
                            var t = e || O;
                            t.addClass(w.upward)
                        },
                        value: function(e, t, n) {
                            var r = U.length > 0
                              , o = (!x.has.value(e),
                            x.get.values())
                              , a = e !== i ? String(e) : e;
                            if (r) {
                                if (a == o && (x.verbose("Skipping value update already same value", e, o),
                                !x.is.initialLoad()))
                                    return;
                                x.is.single() && x.has.selectInput() && x.can.extendSelect() && (x.debug("Adding user option", e),
                                x.add.optionValue(e)),
                                x.debug("Updating input value", e, o),
                                X = !0,
                                U.val(e),
                                R.fireOnInit === !1 && x.is.initialLoad() ? x.debug("Input native change event ignored on initial load") : x.trigger.change(),
                                X = !1
                            } else
                                x.verbose("Storing value in metadata", e, U),
                                e !== o && O.data(_.value, a);
                            R.fireOnInit === !1 && x.is.initialLoad() ? x.verbose("No callback on initial load", R.onChange) : R.onChange.call(Y, e, t, n)
                        },
                        active: function() {
                            O.addClass(w.active)
                        },
                        multiple: function() {
                            O.addClass(w.multiple)
                        },
                        visible: function() {
                            O.addClass(w.visible)
                        },
                        exactly: function(e, t) {
                            x.debug("Setting selected to exact values"),
                            x.clear(),
                            x.set.selected(e, t)
                        },
                        selected: function(t, n) {
                            var i = x.is.multiple();
                            n = R.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t),
                            n && (x.debug("Setting selected menu item to", n),
                            x.is.single() ? (x.remove.activeItem(),
                            x.remove.selectedItem()) : R.useLabels && x.remove.selectedItem(),
                            n.each(function() {
                                var t = e(this)
                                  , r = x.get.choiceText(t)
                                  , o = x.get.choiceValue(t, r)
                                  , a = t.hasClass(w.filtered)
                                  , s = t.hasClass(w.active)
                                  , c = t.hasClass(w.addition)
                                  , l = i && 1 == n.length;
                                i ? !s || c ? (R.apiSettings && R.saveRemoteData && x.save.remoteData(r, o),
                                R.useLabels ? (x.add.value(o, r, t),
                                x.add.label(o, r, l),
                                x.set.activeItem(t),
                                x.filterActive(),
                                x.select.nextAvailable(n)) : (x.add.value(o, r, t),
                                x.set.text(x.add.variables(H.count)),
                                x.set.activeItem(t))) : a || (x.debug("Selected active value, removing label"),
                                x.remove.selected(o)) : (R.apiSettings && R.saveRemoteData && x.save.remoteData(r, o),
                                x.set.text(r),
                                x.set.value(o, r, t),
                                t.addClass(w.active).addClass(w.selected))
                            }))
                        }
                    },
                    add: {
                        label: function(t, n, i) {
                            var r, o = x.is.searchSelection() ? N : F;
                            return r = e("<a />").addClass(w.label).attr("data-value", t).html(k.label(t, n)),
                            r = R.onLabelCreate.call(r, t, n),
                            x.has.label(t) ? void x.debug("Label already exists, skipping", t) : (R.label.variation && r.addClass(R.label.variation),
                            void (i === !0 ? (x.debug("Animating in label", r),
                            r.addClass(w.hidden).insertBefore(o).transition(R.label.transition, R.label.duration)) : (x.debug("Adding selection label", r),
                            r.insertBefore(o))))
                        },
                        message: function(t) {
                            var n = V.children(P.message)
                              , i = R.templates.message(x.add.variables(t));
                            n.length > 0 ? n.html(i) : n = e("<div/>").html(i).addClass(w.message).appendTo(V)
                        },
                        optionValue: function(t) {
                            var n = U.find('option[value="' + t + '"]')
                              , i = n.length > 0;
                            i || (b && (b.disconnect(),
                            x.verbose("Temporarily disconnecting mutation observer", t)),
                            x.is.single() && (x.verbose("Removing previous user addition"),
                            U.find("option." + w.addition).remove()),
                            e("<option/>").prop("value", t).addClass(w.addition).html(t).appendTo(U),
                            x.verbose("Adding user addition as an <option>", t),
                            b && b.observe(U[0], {
                                childList: !0,
                                subtree: !0
                            }))
                        },
                        userSuggestion: function(e) {
                            var t, n = V.children(P.addition), i = x.get.item(e), r = i && i.not(P.addition).length, o = n.length > 0;
                            if (!R.useLabels || !x.has.maxSelections()) {
                                if ("" === e || r)
                                    return void n.remove();
                                G.removeClass(w.selected),
                                o ? (t = R.templates.addition(x.add.variables(H.addResult, e)),
                                n.html(t).attr("data-" + _.value, e).attr("data-" + _.text, e).removeClass(w.filtered).addClass(w.selected),
                                x.verbose("Replacing user suggestion with new value", n)) : (n = x.create.userChoice(e),
                                n.prependTo(V).addClass(w.selected),
                                x.verbose("Adding item choice to menu corresponding with user choice addition", n))
                            }
                        },
                        variables: function(e, t) {
                            var n, i, r = e.search("{count}") !== -1, o = e.search("{maxCount}") !== -1, a = e.search("{term}") !== -1;
                            return x.verbose("Adding templated variables to message", e),
                            r && (n = x.get.selectionCount(),
                            e = e.replace("{count}", n)),
                            o && (n = x.get.selectionCount(),
                            e = e.replace("{maxCount}", R.maxSelections)),
                            a && (i = t || x.get.query(),
                            e = e.replace("{term}", i)),
                            e
                        },
                        value: function(t, n, i) {
                            var r, o = x.get.values();
                            return "" === t ? void x.debug("Cannot select blank values from multiselect") : (e.isArray(o) ? (r = o.concat([t]),
                            r = x.get.uniqueArray(r)) : r = [t],
                            x.has.selectInput() ? x.can.extendSelect() && (x.debug("Adding value to select", t, r, U),
                            x.add.optionValue(t)) : (r = r.join(R.delimiter),
                            x.debug("Setting hidden input to delimited value", r, U)),
                            R.fireOnInit === !1 && x.is.initialLoad() ? x.verbose("Skipping onadd callback on initial load", R.onAdd) : R.onAdd.call(Y, t, n, i),
                            x.set.value(r, t, n, i),
                            void x.check.maxSelections())
                        }
                    },
                    remove: {
                        active: function() {
                            O.removeClass(w.active)
                        },
                        activeLabel: function() {
                            O.find(P.label).removeClass(w.active)
                        },
                        loading: function() {
                            O.removeClass(w.loading)
                        },
                        initialLoad: function() {
                            g = !1
                        },
                        upward: function(e) {
                            var t = e || O;
                            t.removeClass(w.upward)
                        },
                        visible: function() {
                            O.removeClass(w.visible)
                        },
                        activeItem: function() {
                            G.removeClass(w.active)
                        },
                        filteredItem: function() {
                            R.useLabels && x.has.maxSelections() || (R.useLabels && x.is.multiple() ? G.not("." + w.active).removeClass(w.filtered) : G.removeClass(w.filtered))
                        },
                        optionValue: function(e) {
                            var t = U.find('option[value="' + e + '"]')
                              , n = t.length > 0;
                            n && t.hasClass(w.addition) && (b && (b.disconnect(),
                            x.verbose("Temporarily disconnecting mutation observer", e)),
                            t.remove(),
                            x.verbose("Removing user addition as an <option>", e),
                            b && b.observe(U[0], {
                                childList: !0,
                                subtree: !0
                            }))
                        },
                        message: function() {
                            V.children(P.message).remove()
                        },
                        searchTerm: function() {
                            x.verbose("Cleared search term"),
                            N.val(""),
                            x.set.filtered()
                        },
                        selected: function(t, n) {
                            return !!(n = R.allowAdditions ? n || x.get.itemWithAdditions(t) : n || x.get.item(t)) && void n.each(function() {
                                var t = e(this)
                                  , n = x.get.choiceText(t)
                                  , i = x.get.choiceValue(t, n);
                                x.is.multiple() ? R.useLabels ? (x.remove.value(i, n, t),
                                x.remove.label(i)) : (x.remove.value(i, n, t),
                                0 === x.get.selectionCount() ? x.set.placeholderText() : x.set.text(x.add.variables(H.count))) : x.remove.value(i, n, t),
                                t.removeClass(w.filtered).removeClass(w.active),
                                R.useLabels && t.removeClass(w.selected)
                            })
                        },
                        selectedItem: function() {
                            G.removeClass(w.selected)
                        },
                        value: function(e, t, n) {
                            var i, r = x.get.values();
                            x.has.selectInput() ? (x.verbose("Input is <select> removing selected option", e),
                            i = x.remove.arrayValue(e, r),
                            x.remove.optionValue(e)) : (x.verbose("Removing from delimited values", e),
                            i = x.remove.arrayValue(e, r),
                            i = i.join(R.delimiter)),
                            R.fireOnInit === !1 && x.is.initialLoad() ? x.verbose("No callback on initial load", R.onRemove) : R.onRemove.call(Y, e, t, n),
                            x.set.value(i, t, n),
                            x.check.maxSelections()
                        },
                        arrayValue: function(t, n) {
                            return e.isArray(n) || (n = [n]),
                            n = e.grep(n, function(e) {
                                return t != e
                            }),
                            x.verbose("Removed value from delimited string", t, n),
                            n
                        },
                        label: function(e, t) {
                            var n = O.find(P.label)
                              , i = n.filter('[data-value="' + e + '"]');
                            x.verbose("Removing label", i),
                            i.remove()
                        },
                        activeLabels: function(e) {
                            e = e || O.find(P.label).filter("." + w.active),
                            x.verbose("Removing active label selections", e),
                            x.remove.labels(e)
                        },
                        labels: function(t) {
                            t = t || O.find(P.label),
                            x.verbose("Removing labels", t),
                            t.each(function() {
                                var t = e(this)
                                  , n = t.data(_.value)
                                  , r = n !== i ? String(n) : n
                                  , o = x.is.userValue(r);
                                return R.onLabelRemove.call(t, n) === !1 ? void x.debug("Label remove callback cancelled removal") : void (o ? (x.remove.value(r),
                                x.remove.label(r)) : x.remove.selected(r))
                            })
                        },
                        tabbable: function() {
                            x.has.search() ? (x.debug("Searchable dropdown initialized"),
                            N.removeAttr("tabindex"),
                            V.removeAttr("tabindex")) : (x.debug("Simple selection dropdown initialized"),
                            O.removeAttr("tabindex"),
                            V.removeAttr("tabindex"))
                        }
                    },
                    has: {
                        search: function() {
                            return N.length > 0
                        },
                        selectInput: function() {
                            return U.is("select")
                        },
                        firstLetter: function(e, t) {
                            var n, i;
                            return !(!e || 0 === e.length || "string" != typeof t) && (n = x.get.choiceText(e, !1),
                            t = t.toLowerCase(),
                            i = String(n).charAt(0).toLowerCase(),
                            t == i)
                        },
                        input: function() {
                            return U.length > 0
                        },
                        items: function() {
                            return G.length > 0
                        },
                        menu: function() {
                            return V.length > 0
                        },
                        message: function() {
                            return 0 !== V.children(P.message).length
                        },
                        label: function(e) {
                            var t = O.find(P.label);
                            return t.filter('[data-value="' + e + '"]').length > 0
                        },
                        maxSelections: function() {
                            return R.maxSelections && x.get.selectionCount() >= R.maxSelections
                        },
                        allResultsFiltered: function() {
                            return G.filter(P.unselectable).length === G.length
                        },
                        query: function() {
                            return "" !== x.get.query()
                        },
                        value: function(t) {
                            var n = x.get.values()
                              , i = e.isArray(n) ? n && e.inArray(t, n) !== -1 : n == t;
                            return !!i
                        }
                    },
                    is: {
                        active: function() {
                            return O.hasClass(w.active)
                        },
                        alreadySetup: function() {
                            return O.is("select") && O.parent(P.dropdown).length > 0 && 0 === O.prev().length
                        },
                        animating: function(e) {
                            return e ? e.transition && e.transition("is animating") : V.transition && V.transition("is animating")
                        },
                        disabled: function() {
                            return O.hasClass(w.disabled)
                        },
                        focused: function() {
                            return n.activeElement === O[0]
                        },
                        focusedOnSearch: function() {
                            return n.activeElement === N[0]
                        },
                        allFiltered: function() {
                            return (x.is.multiple() || x.has.search()) && !x.has.message() && x.has.allResultsFiltered()
                        },
                        hidden: function(e) {
                            return !x.is.visible(e)
                        },
                        initialLoad: function() {
                            return g
                        },
                        onScreen: function(e) {
                            var t, n = e || V, i = !0, r = {};
                            return n.addClass(w.loading),
                            t = {
                                context: {
                                    scrollTop: B.scrollTop(),
                                    height: B.outerHeight()
                                },
                                menu: {
                                    offset: n.offset(),
                                    height: n.outerHeight()
                                }
                            },
                            r = {
                                above: t.context.scrollTop <= t.menu.offset.top - t.menu.height,
                                below: t.context.scrollTop + t.context.height >= t.menu.offset.top + t.menu.height
                            },
                            r.below ? (x.verbose("Dropdown can fit in context downward", r),
                            i = !0) : r.below || r.above ? (x.verbose("Dropdown cannot fit below, opening upward", r),
                            i = !1) : (x.verbose("Dropdown cannot fit in either direction, favoring downward", r),
                            i = !0),
                            n.removeClass(w.loading),
                            i
                        },
                        inObject: function(t, n) {
                            var i = !1;
                            return e.each(n, function(e, n) {
                                if (n == t)
                                    return i = !0,
                                    !0
                            }),
                            i
                        },
                        multiple: function() {
                            return O.hasClass(w.multiple)
                        },
                        single: function() {
                            return !x.is.multiple()
                        },
                        selectMutation: function(t) {
                            var n = !1;
                            return e.each(t, function(t, i) {
                                if (i.target && e(i.target).is("select"))
                                    return n = !0,
                                    !0
                            }),
                            n
                        },
                        search: function() {
                            return O.hasClass(w.search)
                        },
                        searchSelection: function() {
                            return x.has.search() && 1 === N.parent(P.dropdown).length
                        },
                        selection: function() {
                            return O.hasClass(w.selection)
                        },
                        userValue: function(t) {
                            return e.inArray(t, x.get.userValues()) !== -1
                        },
                        upward: function(e) {
                            var t = e || O;
                            return t.hasClass(w.upward)
                        },
                        visible: function(e) {
                            return e ? e.hasClass(w.visible) : V.hasClass(w.visible)
                        }
                    },
                    can: {
                        activate: function(e) {
                            return !!R.useLabels || (!x.has.maxSelections() || !(!x.has.maxSelections() || !e.hasClass(w.active)))
                        },
                        click: function() {
                            return l || "click" == R.on
                        },
                        extendSelect: function() {
                            return R.allowAdditions || R.apiSettings
                        },
                        show: function() {
                            return !x.is.disabled() && (x.has.items() || x.has.message())
                        },
                        useAPI: function() {
                            return e.fn.api !== i
                        }
                    },
                    animate: {
                        show: function(t, n) {
                            var r, o = n || V, a = n ? function() {}
                            : function() {
                                x.hideSubMenus(),
                                x.hideOthers(),
                                x.set.active()
                            }
                            ;
                            t = e.isFunction(t) ? t : function() {}
                            ,
                            x.verbose("Doing menu show animation", o),
                            x.set.direction(n),
                            r = x.get.transition(n),
                            x.is.selection() && x.set.scrollPosition(x.get.selectedItem(), !0),
                            (x.is.hidden(o) || x.is.animating(o)) && ("none" == r ? (a(),
                            o.transition("show"),
                            t.call(Y)) : e.fn.transition !== i && O.transition("is supported") ? o.transition({
                                animation: r + " in",
                                debug: R.debug,
                                verbose: R.verbose,
                                duration: R.duration,
                                queue: !0,
                                onStart: a,
                                onComplete: function() {
                                    t.call(Y)
                                }
                            }) : x.error(L.noTransition, r))
                        },
                        hide: function(t, n) {
                            var r = n || V
                              , o = (n ? .9 * R.duration : R.duration,
                            n ? function() {}
                            : function() {
                                x.can.click() && x.unbind.intent(),
                                x.remove.active()
                            }
                            )
                              , a = x.get.transition(n);
                            t = e.isFunction(t) ? t : function() {}
                            ,
                            (x.is.visible(r) || x.is.animating(r)) && (x.verbose("Doing menu hide animation", r),
                            "none" == a ? (o(),
                            r.transition("hide"),
                            t.call(Y)) : e.fn.transition !== i && O.transition("is supported") ? r.transition({
                                animation: a + " out",
                                duration: R.duration,
                                debug: R.debug,
                                verbose: R.verbose,
                                queue: !0,
                                onStart: o,
                                onComplete: function() {
                                    "auto" == R.direction && x.remove.upward(n),
                                    t.call(Y)
                                }
                            }) : x.error(L.transition))
                        }
                    },
                    hideAndClear: function() {
                        x.remove.searchTerm(),
                        x.has.maxSelections() || (x.has.search() ? x.hide(function() {
                            x.remove.filteredItem()
                        }) : x.hide())
                    },
                    delay: {
                        show: function() {
                            x.verbose("Delaying show event to ensure user intent"),
                            clearTimeout(x.timer),
                            x.timer = setTimeout(x.show, R.delay.show)
                        },
                        hide: function() {
                            x.verbose("Delaying hide event to ensure user intent"),
                            clearTimeout(x.timer),
                            x.timer = setTimeout(x.hide, R.delay.hide)
                        }
                    },
                    escape: {
                        regExp: function(e) {
                            return e = String(e),
                            e.replace(A.escape, "\\$&")
                        }
                    },
                    setting: function(t, n) {
                        if (x.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, R, t);
                        else {
                            if (n === i)
                                return R[t];
                            R[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, x, t);
                        else {
                            if (n === i)
                                return x[t];
                            x[t] = n
                        }
                    },
                    debug: function() {
                        R.debug && (R.performance ? x.performance.log(arguments) : (x.debug = Function.prototype.bind.call(console.info, console, R.name + ":"),
                        x.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        R.verbose && R.debug && (R.performance ? x.performance.log(arguments) : (x.verbose = Function.prototype.bind.call(console.info, console, R.name + ":"),
                        x.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        x.error = Function.prototype.bind.call(console.error, console, R.name + ":"),
                        x.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            R.performance && (t = (new Date).getTime(),
                            i = u || t,
                            n = t - i,
                            u = t,
                            h.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: Y,
                                "Execution Time": n
                            })),
                            clearTimeout(x.performance.timer),
                            x.performance.timer = setTimeout(x.performance.display, 500)
                        },
                        display: function() {
                            var t = R.name + ":"
                              , n = 0;
                            u = !1,
                            clearTimeout(x.performance.timer),
                            e.each(h, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            c && (t += " '" + c + "'"),
                            (console.group !== i || console.table !== i) && h.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(h) : e.each(h, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            h = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = K;
                        return n = n || f,
                        r = Y || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (x.error(L.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                p ? (K === i && x.initialize(),
                x.invoke(d)) : (K !== i && K.invoke("destroy"),
                x.initialize())
            }),
            o !== i ? o : a
        }
        ,
        e.fn.dropdown.settings = {
            debug: !1,
            verbose: !1,
            performance: !0,
            on: "click",
            action: "activate",
            apiSettings: !1,
            saveRemoteData: !0,
            throttle: 200,
            context: t,
            direction: "auto",
            keepOnScreen: !0,
            match: "both",
            fullTextSearch: !1,
            placeholder: "auto",
            preserveHTML: !0,
            sortSelect: !1,
            forceSelection: !0,
            allowAdditions: !1,
            maxSelections: !1,
            useLabels: !0,
            delimiter: ",",
            showOnFocus: !0,
            allowTab: !0,
            allowCategorySelection: !1,
            fireOnInit: !1,
            transition: "auto",
            duration: 200,
            glyphWidth: 1.0714,
            label: {
                transition: "scale",
                duration: 200,
                variation: !1
            },
            delay: {
                hide: 300,
                show: 200,
                search: 20,
                touch: 50
            },
            onChange: function(e, t, n) {},
            onAdd: function(e, t, n) {},
            onRemove: function(e, t, n) {},
            onLabelSelect: function(e) {},
            onLabelCreate: function(t, n) {
                return e(this)
            },
            onLabelRemove: function(e) {
                return !0
            },
            onNoResults: function(e) {
                return !0
            },
            onShow: function() {},
            onHide: function() {},
            name: "Dropdown",
            namespace: "dropdown",
            message: {
                addResult: "Add <b>{term}</b>",
                count: "{count} selected",
                maxSelections: "Max {maxCount} selections",
                noResults: "No results found.",
                serverError: "There was an error contacting the server"
            },
            error: {
                action: "You called a dropdown action that was not defined",
                alreadySetup: "Once a select has been initialized behaviors must be called on the created ui dropdown",
                labels: "Allowing user additions currently requires the use of labels.",
                missingMultiple: "<select> requires multiple property to be set to correctly preserve multiple values",
                method: "The method you called is not defined.",
                noAPI: "The API module is required to load resources remotely",
                noStorage: "Saving remote data requires session storage",
                noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>"
            },
            regExp: {
                escape: /[-[\]{}()*+?.,\\^$|#\s]/g
            },
            metadata: {
                defaultText: "defaultText",
                defaultValue: "defaultValue",
                placeholderText: "placeholder",
                text: "text",
                value: "value"
            },
            fields: {
                remoteValues: "results",
                values: "values",
                name: "name",
                value: "value"
            },
            keys: {
                backspace: 8,
                delimiter: 188,
                deleteKey: 46,
                enter: 13,
                escape: 27,
                pageUp: 33,
                pageDown: 34,
                leftArrow: 37,
                upArrow: 38,
                rightArrow: 39,
                downArrow: 40
            },
            selector: {
                addition: ".addition",
                dropdown: ".ui.dropdown",
                icon: "> .dropdown.icon",
                input: '> input[type="hidden"], > select',
                item: ".item",
                label: "> .label",
                remove: "> .label > .delete.icon",
                siblingLabel: ".label",
                menu: ".menu",
                message: ".message",
                menuIcon: ".dropdown.icon",
                search: "input.search, .menu > .search > input",
                text: "> .text:not(.icon)",
                unselectable: ".disabled, .filtered"
            },
            className: {
                active: "active",
                addition: "addition",
                animating: "animating",
                disabled: "disabled",
                dropdown: "ui dropdown",
                filtered: "filtered",
                hidden: "hidden transition",
                item: "item",
                label: "ui label",
                loading: "loading",
                menu: "menu",
                message: "message",
                multiple: "multiple",
                placeholder: "default",
                search: "search",
                selected: "selected",
                selection: "selection",
                upward: "upward",
                visible: "visible"
            }
        },
        e.fn.dropdown.settings.templates = {
            dropdown: function(t) {
                var n = t.placeholder || !1
                  , i = (t.values || {},
                "");
                return i += '<i class="dropdown icon"></i>',
                i += t.placeholder ? '<div class="default text">' + n + "</div>" : '<div class="text"></div>',
                i += '<div class="menu">',
                e.each(t.values, function(e, t) {
                    i += t.disabled ? '<div class="disabled item" data-value="' + t.value + '">' + t.name + "</div>" : '<div class="item" data-value="' + t.value + '">' + t.name + "</div>"
                }),
                i += "</div>"
            },
            menu: function(t, n) {
                var i = t[n.values] || {}
                  , r = "";
                return e.each(i, function(e, t) {
                    r += '<div class="item" data-value="' + t[n.value] + '">' + t[n.name] + "</div>"
                }),
                r
            },
            label: function(e, t) {
                return t + '<i class="delete icon"></i>'
            },
            message: function(e) {
                return e
            },
            addition: function(e) {
                return e
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.embed = function(n) {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var d, p = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.embed.settings, n) : e.extend({}, e.fn.embed.settings), f = p.selector, m = p.className, g = p.sources, v = p.error, E = p.metadata, y = p.namespace, b = p.templates, T = "." + y, x = "module-" + y, R = (e(t),
                e(this)), w = R.find(f.placeholder), H = R.find(f.icon), M = R.find(f.embed), S = this, _ = R.data(x);
                d = {
                    initialize: function() {
                        d.debug("Initializing embed"),
                        d.determine.autoplay(),
                        d.create(),
                        d.bind.events(),
                        d.instantiate()
                    },
                    instantiate: function() {
                        d.verbose("Storing instance of module", d),
                        _ = d,
                        R.data(x, d)
                    },
                    destroy: function() {
                        d.verbose("Destroying previous instance of embed"),
                        d.reset(),
                        R.removeData(x).off(T)
                    },
                    refresh: function() {
                        d.verbose("Refreshing selector cache"),
                        w = R.find(f.placeholder),
                        H = R.find(f.icon),
                        M = R.find(f.embed)
                    },
                    bind: {
                        events: function() {
                            d.has.placeholder() && (d.debug("Adding placeholder events"),
                            R.on("click" + T, f.placeholder, d.createAndShow).on("click" + T, f.icon, d.createAndShow))
                        }
                    },
                    create: function() {
                        var e = d.get.placeholder();
                        e ? d.createPlaceholder() : d.createAndShow()
                    },
                    createPlaceholder: function(e) {
                        var t = d.get.icon()
                          , n = d.get.url();
                        d.generate.embed(n);
                        e = e || d.get.placeholder(),
                        R.html(b.placeholder(e, t)),
                        d.debug("Creating placeholder for embed", e, t)
                    },
                    createEmbed: function(t) {
                        d.refresh(),
                        t = t || d.get.url(),
                        M = e("<div/>").addClass(m.embed).html(d.generate.embed(t)).appendTo(R),
                        p.onCreate.call(S, t),
                        d.debug("Creating embed object", M)
                    },
                    createAndShow: function() {
                        d.createEmbed(),
                        d.show()
                    },
                    change: function(e, t, n) {
                        d.debug("Changing video to ", e, t, n),
                        R.data(E.source, e).data(E.id, t).data(E.url, n),
                        d.create()
                    },
                    reset: function() {
                        d.debug("Clearing embed and showing placeholder"),
                        d.remove.active(),
                        d.remove.embed(),
                        d.showPlaceholder(),
                        p.onReset.call(S)
                    },
                    show: function() {
                        d.debug("Showing embed"),
                        d.set.active(),
                        p.onDisplay.call(S)
                    },
                    hide: function() {
                        d.debug("Hiding embed"),
                        d.showPlaceholder()
                    },
                    showPlaceholder: function() {
                        d.debug("Showing placeholder image"),
                        d.remove.active(),
                        p.onPlaceholderDisplay.call(S)
                    },
                    get: {
                        id: function() {
                            return p.id || R.data(E.id)
                        },
                        placeholder: function() {
                            return p.placeholder || R.data(E.placeholder)
                        },
                        icon: function() {
                            return p.icon ? p.icon : R.data(E.icon) !== i ? R.data(E.icon) : d.determine.icon()
                        },
                        source: function(e) {
                            return p.source ? p.source : R.data(E.source) !== i ? R.data(E.source) : d.determine.source()
                        },
                        type: function() {
                            var e = d.get.source();
                            return g[e] !== i && g[e].type
                        },
                        url: function() {
                            return p.url ? p.url : R.data(E.url) !== i ? R.data(E.url) : d.determine.url()
                        }
                    },
                    determine: {
                        autoplay: function() {
                            d.should.autoplay() && (p.autoplay = !0)
                        },
                        source: function(t) {
                            var n = !1;
                            return t = t || d.get.url(),
                            t && e.each(g, function(e, i) {
                                if (t.search(i.domain) !== -1)
                                    return n = e,
                                    !1
                            }),
                            n
                        },
                        icon: function() {
                            var e = d.get.source();
                            return g[e] !== i && g[e].icon
                        },
                        url: function() {
                            var e, t = p.id || R.data(E.id), n = p.source || R.data(E.source);
                            return e = g[n] !== i && g[n].url.replace("{id}", t),
                            e && R.data(E.url, e),
                            e
                        }
                    },
                    set: {
                        active: function() {
                            R.addClass(m.active)
                        }
                    },
                    remove: {
                        active: function() {
                            R.removeClass(m.active)
                        },
                        embed: function() {
                            M.empty()
                        }
                    },
                    encode: {
                        parameters: function(e) {
                            var t, n = [];
                            for (t in e)
                                n.push(encodeURIComponent(t) + "=" + encodeURIComponent(e[t]));
                            return n.join("&amp;")
                        }
                    },
                    generate: {
                        embed: function(e) {
                            d.debug("Generating embed html");
                            var t, n, i = d.get.source();
                            return e = d.get.url(e),
                            e ? (n = d.generate.parameters(i),
                            t = b.iframe(e, n)) : d.error(v.noURL, R),
                            t
                        },
                        parameters: function(t, n) {
                            var r = g[t] && g[t].parameters !== i ? g[t].parameters(p) : {};
                            return n = n || p.parameters,
                            n && (r = e.extend({}, r, n)),
                            r = p.onEmbed(r),
                            d.encode.parameters(r)
                        }
                    },
                    has: {
                        placeholder: function() {
                            return p.placeholder || R.data(E.placeholder)
                        }
                    },
                    should: {
                        autoplay: function() {
                            return "auto" === p.autoplay ? p.placeholder || R.data(E.placeholder) !== i : p.autoplay
                        }
                    },
                    is: {
                        video: function() {
                            return "video" == d.get.type()
                        }
                    },
                    setting: function(t, n) {
                        if (d.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, d, t);
                        else {
                            if (n === i)
                                return d[t];
                            d[t] = n
                        }
                    },
                    debug: function() {
                        p.debug && (p.performance ? d.performance.log(arguments) : (d.debug = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        p.verbose && p.debug && (p.performance ? d.performance.log(arguments) : (d.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        d.error = Function.prototype.bind.call(console.error, console, p.name + ":"),
                        d.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            p.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: S,
                                "Execution Time": n
                            })),
                            clearTimeout(d.performance.timer),
                            d.performance.timer = setTimeout(d.performance.display, 500)
                        },
                        display: function() {
                            var t = p.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(d.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            o.length > 1 && (t += " (" + o.length + ")"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = _;
                        return n = n || h,
                        o = S || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (d.error(v.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                u ? (_ === i && d.initialize(),
                d.invoke(l)) : (_ !== i && _.invoke("destroy"),
                d.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.embed.settings = {
            name: "Embed",
            namespace: "embed",
            debug: !1,
            verbose: !1,
            performance: !0,
            icon: !1,
            source: !1,
            url: !1,
            id: !1,
            autoplay: "auto",
            color: "#444444",
            hd: !0,
            brandedUI: !1,
            parameters: !1,
            onDisplay: function() {},
            onPlaceholderDisplay: function() {},
            onReset: function() {},
            onCreate: function(e) {},
            onEmbed: function(e) {
                return e
            },
            metadata: {
                id: "id",
                icon: "icon",
                placeholder: "placeholder",
                source: "source",
                url: "url"
            },
            error: {
                noURL: "No URL specified",
                method: "The method you called is not defined"
            },
            className: {
                active: "active",
                embed: "embed"
            },
            selector: {
                embed: ".embed",
                placeholder: ".placeholder",
                icon: ".icon"
            },
            sources: {
                youtube: {
                    name: "youtube",
                    type: "video",
                    icon: "video play",
                    domain: "youtube.com",
                    url: "//www.youtube.com/embed/{id}",
                    parameters: function(e) {
                        return {
                            autohide: !e.brandedUI,
                            autoplay: e.autoplay,
                            color: e.colors || i,
                            hq: e.hd,
                            jsapi: e.api,
                            modestbranding: !e.brandedUI
                        }
                    }
                },
                vimeo: {
                    name: "vimeo",
                    type: "video",
                    icon: "video play",
                    domain: "vimeo.com",
                    url: "//player.vimeo.com/video/{id}",
                    parameters: function(e) {
                        return {
                            api: e.api,
                            autoplay: e.autoplay,
                            byline: e.brandedUI,
                            color: e.colors || i,
                            portrait: e.brandedUI,
                            title: e.brandedUI
                        }
                    }
                }
            },
            templates: {
                iframe: function(e, t) {
                    return '<iframe src="' + e + "?" + t + '" width="100%" height="100%" frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
                },
                placeholder: function(e, t) {
                    var n = "";
                    return t && (n += '<i class="' + t + ' icon"></i>'),
                    e && (n += '<img class="placeholder" src="' + e + '">'),
                    n
                }
            },
            api: !0,
            onPause: function() {},
            onPlay: function() {},
            onStop: function() {}
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.modal = function(r) {
            var o, a = e(this), s = e(t), c = e(n), l = e("body"), u = a.selector || "", h = (new Date).getTime(), d = [], p = arguments[0], f = "string" == typeof p, m = [].slice.call(arguments, 1), g = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                setTimeout(e, 0)
            }
            ;
            return a.each(function() {
                var a, v, E, y, b, T, x, R, w, H = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.modal.settings, r) : e.extend({}, e.fn.modal.settings), M = H.selector, S = H.className, _ = H.namespace, C = H.error, A = "." + _, P = "module-" + _, L = e(this), k = e(H.context), D = L.find(M.close), I = this, O = L.data(P);
                w = {
                    initialize: function() {
                        w.verbose("Initializing dimmer", k),
                        w.create.id(),
                        w.create.dimmer(),
                        w.refreshModals(),
                        w.bind.events(),
                        H.observeChanges && w.observeChanges(),
                        w.instantiate()
                    },
                    instantiate: function() {
                        w.verbose("Storing instance of modal"),
                        O = w,
                        L.data(P, O)
                    },
                    create: {
                        dimmer: function() {
                            var t = {
                                debug: H.debug,
                                dimmerName: "modals",
                                duration: {
                                    show: H.duration,
                                    hide: H.duration
                                }
                            }
                              , n = e.extend(!0, t, H.dimmerSettings);
                            return H.inverted && (n.variation = n.variation !== i ? n.variation + " inverted" : "inverted"),
                            e.fn.dimmer === i ? void w.error(C.dimmer) : (w.debug("Creating dimmer with settings", n),
                            y = k.dimmer(n),
                            H.detachable ? (w.verbose("Modal is detachable, moving content into dimmer"),
                            y.dimmer("add content", L)) : w.set.undetached(),
                            H.blurring && y.addClass(S.blurring),
                            void (b = y.dimmer("get dimmer")))
                        },
                        id: function() {
                            x = (Math.random().toString(16) + "000000000").substr(2, 8),
                            T = "." + x,
                            w.verbose("Creating unique id for element", x)
                        }
                    },
                    destroy: function() {
                        w.verbose("Destroying previous modal"),
                        L.removeData(P).off(A),
                        s.off(T),
                        D.off(A),
                        k.dimmer("destroy")
                    },
                    observeChanges: function() {
                        "MutationObserver"in t && (R = new MutationObserver(function(e) {
                            w.debug("DOM tree modified, refreshing"),
                            w.refresh()
                        }
                        ),
                        R.observe(I, {
                            childList: !0,
                            subtree: !0
                        }),
                        w.debug("Setting up mutation observer", R))
                    },
                    refresh: function() {
                        w.remove.scrolling(),
                        w.cacheSizes(),
                        w.set.screenHeight(),
                        w.set.type(),
                        w.set.position()
                    },
                    refreshModals: function() {
                        v = L.siblings(M.modal),
                        a = v.add(L)
                    },
                    attachEvents: function(t, n) {
                        var i = e(t);
                        n = e.isFunction(w[n]) ? w[n] : w.toggle,
                        i.length > 0 ? (w.debug("Attaching modal events to element", t, n),
                        i.off(A).on("click" + A, n)) : w.error(C.notFound, t)
                    },
                    bind: {
                        events: function() {
                            w.verbose("Attaching events"),
                            L.on("click" + A, M.close, w.event.close).on("click" + A, M.approve, w.event.approve).on("click" + A, M.deny, w.event.deny),
                            s.on("resize" + T, w.event.resize)
                        }
                    },
                    get: {
                        id: function() {
                            return (Math.random().toString(16) + "000000000").substr(2, 8)
                        }
                    },
                    event: {
                        approve: function() {
                            return H.onApprove.call(I, e(this)) === !1 ? void w.verbose("Approve callback returned false cancelling hide") : void w.hide()
                        },
                        deny: function() {
                            return H.onDeny.call(I, e(this)) === !1 ? void w.verbose("Deny callback returned false cancelling hide") : void w.hide()
                        },
                        close: function() {
                            w.hide()
                        },
                        click: function(t) {
                            var i = e(t.target)
                              , r = i.closest(M.modal).length > 0
                              , o = e.contains(n.documentElement, t.target);
                            !r && o && (w.debug("Dimmer clicked, hiding all modals"),
                            w.is.active() && (w.remove.clickaway(),
                            H.allowMultiple ? w.hide() : w.hideAll()))
                        },
                        debounce: function(e, t) {
                            clearTimeout(w.timer),
                            w.timer = setTimeout(e, t)
                        },
                        keyboard: function(e) {
                            var t = e.which
                              , n = 27;
                            t == n && (H.closable ? (w.debug("Escape key pressed hiding modal"),
                            w.hide()) : w.debug("Escape key pressed, but closable is set to false"),
                            e.preventDefault())
                        },
                        resize: function() {
                            y.dimmer("is active") && g(w.refresh)
                        }
                    },
                    toggle: function() {
                        w.is.active() || w.is.animating() ? w.hide() : w.show()
                    },
                    show: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        w.refreshModals(),
                        w.showModal(t)
                    },
                    hide: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        w.refreshModals(),
                        w.hideModal(t)
                    },
                    showModal: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        w.is.animating() || !w.is.active() ? (w.showDimmer(),
                        w.cacheSizes(),
                        w.set.position(),
                        w.set.screenHeight(),
                        w.set.type(),
                        w.set.clickaway(),
                        !H.allowMultiple && w.others.active() ? w.hideOthers(w.showModal) : (H.onShow.call(I),
                        H.transition && e.fn.transition !== i && L.transition("is supported") ? (w.debug("Showing modal with css animations"),
                        L.transition({
                            debug: H.debug,
                            animation: H.transition + " in",
                            queue: H.queue,
                            duration: H.duration,
                            useFailSafe: !0,
                            onComplete: function() {
                                H.onVisible.apply(I),
                                w.add.keyboardShortcuts(),
                                w.save.focus(),
                                w.set.active(),
                                H.autofocus && w.set.autofocus(),
                                t()
                            }
                        })) : w.error(C.noTransition))) : w.debug("Modal is already visible")
                    },
                    hideModal: function(t, n) {
                        return t = e.isFunction(t) ? t : function() {}
                        ,
                        w.debug("Hiding modal"),
                        H.onHide.call(I, e(this)) === !1 ? void w.verbose("Hide callback returned false cancelling hide") : void ((w.is.animating() || w.is.active()) && (H.transition && e.fn.transition !== i && L.transition("is supported") ? (w.remove.active(),
                        L.transition({
                            debug: H.debug,
                            animation: H.transition + " out",
                            queue: H.queue,
                            duration: H.duration,
                            useFailSafe: !0,
                            onStart: function() {
                                w.others.active() || n || w.hideDimmer(),
                                w.remove.keyboardShortcuts()
                            },
                            onComplete: function() {
                                H.onHidden.call(I),
                                w.restore.focus(),
                                t()
                            }
                        })) : w.error(C.noTransition)))
                    },
                    showDimmer: function() {
                        y.dimmer("is animating") || !y.dimmer("is active") ? (w.debug("Showing dimmer"),
                        y.dimmer("show")) : w.debug("Dimmer already visible")
                    },
                    hideDimmer: function() {
                        return y.dimmer("is animating") || y.dimmer("is active") ? void y.dimmer("hide", function() {
                            w.remove.clickaway(),
                            w.remove.screenHeight()
                        }) : void w.debug("Dimmer is not visible cannot hide")
                    },
                    hideAll: function(t) {
                        var n = a.filter("." + S.active + ", ." + S.animating);
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        n.length > 0 && (w.debug("Hiding all visible modals"),
                        w.hideDimmer(),
                        n.modal("hide modal", t))
                    },
                    hideOthers: function(t) {
                        var n = v.filter("." + S.active + ", ." + S.animating);
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        n.length > 0 && (w.debug("Hiding other modals", v),
                        n.modal("hide modal", t, !0))
                    },
                    others: {
                        active: function() {
                            return v.filter("." + S.active).length > 0
                        },
                        animating: function() {
                            return v.filter("." + S.animating).length > 0
                        }
                    },
                    add: {
                        keyboardShortcuts: function() {
                            w.verbose("Adding keyboard shortcuts"),
                            c.on("keyup" + A, w.event.keyboard)
                        }
                    },
                    save: {
                        focus: function() {
                            E = e(n.activeElement).blur()
                        }
                    },
                    restore: {
                        focus: function() {
                            E && E.length > 0 && E.focus()
                        }
                    },
                    remove: {
                        active: function() {
                            L.removeClass(S.active)
                        },
                        clickaway: function() {
                            H.closable && b.off("click" + T)
                        },
                        bodyStyle: function() {
                            "" === l.attr("style") && (w.verbose("Removing style attribute"),
                            l.removeAttr("style"))
                        },
                        screenHeight: function() {
                            w.debug("Removing page height"),
                            l.css("height", "")
                        },
                        keyboardShortcuts: function() {
                            w.verbose("Removing keyboard shortcuts"),
                            c.off("keyup" + A)
                        },
                        scrolling: function() {
                            y.removeClass(S.scrolling),
                            L.removeClass(S.scrolling)
                        }
                    },
                    cacheSizes: function() {
                        var r = L.outerHeight();
                        w.cache !== i && 0 === r || (w.cache = {
                            pageHeight: e(n).outerHeight(),
                            height: r + H.offset,
                            contextHeight: "body" == H.context ? e(t).height() : y.height()
                        }),
                        w.debug("Caching modal and container sizes", w.cache)
                    },
                    can: {
                        fit: function() {
                            return w.cache.height + 2 * H.padding < w.cache.contextHeight
                        }
                    },
                    is: {
                        active: function() {
                            return L.hasClass(S.active)
                        },
                        animating: function() {
                            return L.transition("is supported") ? L.transition("is animating") : L.is(":visible")
                        },
                        scrolling: function() {
                            return y.hasClass(S.scrolling)
                        },
                        modernBrowser: function() {
                            return !(t.ActiveXObject || "ActiveXObject"in t)
                        }
                    },
                    set: {
                        autofocus: function() {
                            var e = L.find(":input").filter(":visible")
                              , t = e.filter("[autofocus]")
                              , n = t.length > 0 ? t.first() : e.first();
                            n.length > 0 && n.focus()
                        },
                        clickaway: function() {
                            H.closable && b.on("click" + T, w.event.click)
                        },
                        screenHeight: function() {
                            w.can.fit() ? l.css("height", "") : (w.debug("Modal is taller than page content, resizing page height"),
                            l.css("height", w.cache.height + 2 * H.padding))
                        },
                        active: function() {
                            L.addClass(S.active)
                        },
                        scrolling: function() {
                            y.addClass(S.scrolling),
                            L.addClass(S.scrolling)
                        },
                        type: function() {
                            w.can.fit() ? (w.verbose("Modal fits on screen"),
                            w.others.active() || w.others.animating() || w.remove.scrolling()) : (w.verbose("Modal cannot fit on screen setting to scrolling"),
                            w.set.scrolling())
                        },
                        position: function() {
                            w.verbose("Centering modal on page", w.cache),
                            w.can.fit() ? L.css({
                                top: "",
                                marginTop: -(w.cache.height / 2)
                            }) : L.css({
                                marginTop: "",
                                top: c.scrollTop()
                            })
                        },
                        undetached: function() {
                            y.addClass(S.undetached)
                        }
                    },
                    setting: function(t, n) {
                        if (w.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, H, t);
                        else {
                            if (n === i)
                                return H[t];
                            H[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, w, t);
                        else {
                            if (n === i)
                                return w[t];
                            w[t] = n
                        }
                    },
                    debug: function() {
                        H.debug && (H.performance ? w.performance.log(arguments) : (w.debug = Function.prototype.bind.call(console.info, console, H.name + ":"),
                        w.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        H.verbose && H.debug && (H.performance ? w.performance.log(arguments) : (w.verbose = Function.prototype.bind.call(console.info, console, H.name + ":"),
                        w.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        w.error = Function.prototype.bind.call(console.error, console, H.name + ":"),
                        w.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            H.performance && (t = (new Date).getTime(),
                            i = h || t,
                            n = t - i,
                            h = t,
                            d.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: I,
                                "Execution Time": n
                            })),
                            clearTimeout(w.performance.timer),
                            w.performance.timer = setTimeout(w.performance.display, 500)
                        },
                        display: function() {
                            var t = H.name + ":"
                              , n = 0;
                            h = !1,
                            clearTimeout(w.performance.timer),
                            e.each(d, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            u && (t += " '" + u + "'"),
                            (console.group !== i || console.table !== i) && d.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(d) : e.each(d, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            d = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = O;
                        return n = n || m,
                        r = I || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                f ? (O === i && w.initialize(),
                w.invoke(p)) : (O !== i && O.invoke("destroy"),
                w.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.modal.settings = {
            name: "Modal",
            namespace: "modal",
            debug: !1,
            verbose: !1,
            performance: !0,
            observeChanges: !1,
            allowMultiple: !1,
            detachable: !0,
            closable: !0,
            autofocus: !0,
            inverted: !1,
            blurring: !1,
            dimmerSettings: {
                closable: !1,
                useCSS: !0
            },
            context: "body",
            queue: !1,
            duration: 500,
            offset: 0,
            transition: "scale",
            padding: 50,
            onShow: function() {},
            onVisible: function() {},
            onHide: function() {
                return !0
            },
            onHidden: function() {},
            onApprove: function() {
                return !0
            },
            onDeny: function() {
                return !0
            },
            selector: {
                close: "> .close",
                approve: ".actions .positive, .actions .approve, .actions .ok",
                deny: ".actions .negative, .actions .deny, .actions .cancel",
                modal: ".ui.modal"
            },
            error: {
                dimmer: "UI Dimmer, a required component is not included in this page",
                method: "The method you called is not defined.",
                notFound: "The element you specified could not be found"
            },
            className: {
                active: "active",
                animating: "animating",
                blurring: "blurring",
                scrolling: "scrolling",
                undetached: "undetached"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.nag = function(n) {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var o, d = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.nag.settings, n) : e.extend({}, e.fn.nag.settings), p = (d.className,
                d.selector), f = d.error, m = d.namespace, g = "." + m, v = m + "-module", E = e(this), y = (E.find(p.close),
                e(d.context ? d.context : "body")), b = this, T = E.data(v);
                t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                    setTimeout(e, 0)
                }
                ;
                o = {
                    initialize: function() {
                        o.verbose("Initializing element"),
                        E.on("click" + g, p.close, o.dismiss).data(v, o),
                        d.detachable && E.parent()[0] !== y[0] && E.detach().prependTo(y),
                        d.displayTime > 0 && setTimeout(o.hide, d.displayTime),
                        o.show()
                    },
                    destroy: function() {
                        o.verbose("Destroying instance"),
                        E.removeData(v).off(g)
                    },
                    show: function() {
                        o.should.show() && !E.is(":visible") && (o.debug("Showing nag", d.animation.show),
                        "fade" == d.animation.show ? E.fadeIn(d.duration, d.easing) : E.slideDown(d.duration, d.easing))
                    },
                    hide: function() {
                        o.debug("Showing nag", d.animation.hide),
                        "fade" == d.animation.show ? E.fadeIn(d.duration, d.easing) : E.slideUp(d.duration, d.easing)
                    },
                    onHide: function() {
                        o.debug("Removing nag", d.animation.hide),
                        E.remove(),
                        d.onHide && d.onHide()
                    },
                    dismiss: function(e) {
                        d.storageMethod && o.storage.set(d.key, d.value),
                        o.hide(),
                        e.stopImmediatePropagation(),
                        e.preventDefault()
                    },
                    should: {
                        show: function() {
                            return d.persist ? (o.debug("Persistent nag is set, can show nag"),
                            !0) : o.storage.get(d.key) != d.value.toString() ? (o.debug("Stored value is not set, can show nag", o.storage.get(d.key)),
                            !0) : (o.debug("Stored value is set, cannot show nag", o.storage.get(d.key)),
                            !1)
                        }
                    },
                    get: {
                        storageOptions: function() {
                            var e = {};
                            return d.expires && (e.expires = d.expires),
                            d.domain && (e.domain = d.domain),
                            d.path && (e.path = d.path),
                            e
                        }
                    },
                    clear: function() {
                        o.storage.remove(d.key)
                    },
                    storage: {
                        set: function(n, r) {
                            var a = o.get.storageOptions();
                            if ("localstorage" == d.storageMethod && t.localStorage !== i)
                                t.localStorage.setItem(n, r),
                                o.debug("Value stored using local storage", n, r);
                            else if ("sessionstorage" == d.storageMethod && t.sessionStorage !== i)
                                t.sessionStorage.setItem(n, r),
                                o.debug("Value stored using session storage", n, r);
                            else {
                                if (e.cookie === i)
                                    return void o.error(f.noCookieStorage);
                                e.cookie(n, r, a),
                                o.debug("Value stored using cookie", n, r, a)
                            }
                        },
                        get: function(n, r) {
                            var a;
                            return "localstorage" == d.storageMethod && t.localStorage !== i ? a = t.localStorage.getItem(n) : "sessionstorage" == d.storageMethod && t.sessionStorage !== i ? a = t.sessionStorage.getItem(n) : e.cookie !== i ? a = e.cookie(n) : o.error(f.noCookieStorage),
                            "undefined" != a && "null" != a && a !== i && null !== a || (a = i),
                            a
                        },
                        remove: function(n) {
                            var r = o.get.storageOptions();
                            "localstorage" == d.storageMethod && t.localStorage !== i ? t.localStorage.removeItem(n) : "sessionstorage" == d.storageMethod && t.sessionStorage !== i ? t.sessionStorage.removeItem(n) : e.cookie !== i ? e.removeCookie(n, r) : o.error(f.noStorage)
                        }
                    },
                    setting: function(t, n) {
                        if (o.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, d, t);
                        else {
                            if (n === i)
                                return d[t];
                            d[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, o, t);
                        else {
                            if (n === i)
                                return o[t];
                            o[t] = n
                        }
                    },
                    debug: function() {
                        d.debug && (d.performance ? o.performance.log(arguments) : (o.debug = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        o.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        d.verbose && d.debug && (d.performance ? o.performance.log(arguments) : (o.verbose = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        o.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        o.error = Function.prototype.bind.call(console.error, console, d.name + ":"),
                        o.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            d.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: b,
                                "Execution Time": n
                            })),
                            clearTimeout(o.performance.timer),
                            o.performance.timer = setTimeout(o.performance.display, 500)
                        },
                        display: function() {
                            var t = d.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(o.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, a) {
                        var s, c, l, u = T;
                        return n = n || h,
                        a = b || a,
                        "string" == typeof t && u !== i && (t = t.split(/[\. ]/),
                        s = t.length - 1,
                        e.each(t, function(n, r) {
                            var a = n != s ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(u[a]) && n != s)
                                u = u[a];
                            else {
                                if (u[a] !== i)
                                    return c = u[a],
                                    !1;
                                if (!e.isPlainObject(u[r]) || n == s)
                                    return u[r] !== i ? (c = u[r],
                                    !1) : (o.error(f.method, t),
                                    !1);
                                u = u[r]
                            }
                        })),
                        e.isFunction(c) ? l = c.apply(a, n) : c !== i && (l = c),
                        e.isArray(r) ? r.push(l) : r !== i ? r = [r, l] : l !== i && (r = l),
                        c
                    }
                },
                u ? (T === i && o.initialize(),
                o.invoke(l)) : (T !== i && T.invoke("destroy"),
                o.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.nag.settings = {
            name: "Nag",
            debug: !1,
            verbose: !1,
            performance: !0,
            namespace: "Nag",
            persist: !1,
            displayTime: 0,
            animation: {
                show: "slide",
                hide: "slide"
            },
            context: !1,
            detachable: !1,
            expires: 30,
            domain: !1,
            path: "/",
            storageMethod: "cookie",
            key: "nag",
            value: "dismiss",
            error: {
                noCookieStorage: "$.cookie is not included. A storage solution is required.",
                noStorage: "Neither $.cookie or store is defined. A storage solution is required for storing state",
                method: "The method you called is not defined."
            },
            className: {
                bottom: "bottom",
                fixed: "fixed"
            },
            selector: {
                close: ".close.icon"
            },
            speed: 500,
            easing: "easeOutQuad",
            onHide: function() {}
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.popup = function(r) {
            var o, a = e(this), s = e(n), c = e(t), l = e("body"), u = a.selector || "", h = !0, d = (new Date).getTime(), p = [], f = arguments[0], m = "string" == typeof f, g = [].slice.call(arguments, 1);
            return a.each(function() {
                var n, a, v, E, y, b = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.popup.settings, r) : e.extend({}, e.fn.popup.settings), T = b.selector, x = b.className, R = b.error, w = b.metadata, H = b.namespace, M = "." + b.namespace, S = "module-" + H, _ = e(this), C = e(b.context), A = b.target ? e(b.target) : _, P = 0, L = !1, k = !1, D = this, I = _.data(S);
                y = {
                    initialize: function() {
                        y.debug("Initializing", _),
                        y.createID(),
                        y.bind.events(),
                        !y.exists() && b.preserve && y.create(),
                        y.instantiate()
                    },
                    instantiate: function() {
                        y.verbose("Storing instance", y),
                        I = y,
                        _.data(S, I)
                    },
                    refresh: function() {
                        b.popup ? n = e(b.popup).eq(0) : b.inline && (n = A.nextAll(T.popup).eq(0),
                        b.popup = n),
                        b.popup ? (n.addClass(x.loading),
                        a = y.get.offsetParent(),
                        n.removeClass(x.loading),
                        b.movePopup && y.has.popup() && y.get.offsetParent(n)[0] !== a[0] && (y.debug("Moving popup to the same offset parent as activating element"),
                        n.detach().appendTo(a))) : a = b.inline ? y.get.offsetParent(A) : y.has.popup() ? y.get.offsetParent(n) : l,
                        a.is("html") && a[0] !== l[0] && (y.debug("Setting page as offset parent"),
                        a = l),
                        y.get.variation() && y.set.variation()
                    },
                    reposition: function() {
                        y.refresh(),
                        y.set.position()
                    },
                    destroy: function() {
                        y.debug("Destroying previous module"),
                        n && !b.preserve && y.removePopup(),
                        clearTimeout(y.hideTimer),
                        clearTimeout(y.showTimer),
                        c.off(v),
                        _.off(M).removeData(S)
                    },
                    event: {
                        start: function(t) {
                            var n = e.isPlainObject(b.delay) ? b.delay.show : b.delay;
                            clearTimeout(y.hideTimer),
                            k || (y.showTimer = setTimeout(y.show, n))
                        },
                        end: function() {
                            var t = e.isPlainObject(b.delay) ? b.delay.hide : b.delay;
                            clearTimeout(y.showTimer),
                            y.hideTimer = setTimeout(y.hide, t)
                        },
                        touchstart: function(e) {
                            k = !0,
                            y.show()
                        },
                        resize: function() {
                            y.is.visible() && y.set.position()
                        },
                        hideGracefully: function(t) {
                            t && 0 === e(t.target).closest(T.popup).length ? (y.debug("Click occurred outside popup hiding popup"),
                            y.hide()) : y.debug("Click was inside popup, keeping popup open")
                        }
                    },
                    create: function() {
                        var t = y.get.html()
                          , i = y.get.title()
                          , r = y.get.content();
                        t || r || i ? (y.debug("Creating pop-up html"),
                        t || (t = b.templates.popup({
                            title: i,
                            content: r
                        })),
                        n = e("<div/>").addClass(x.popup).data(w.activator, _).html(t),
                        b.inline ? (y.verbose("Inserting popup element inline", n),
                        n.insertAfter(_)) : (y.verbose("Appending popup element to body", n),
                        n.appendTo(C)),
                        y.refresh(),
                        y.set.variation(),
                        b.hoverable && y.bind.popup(),
                        b.onCreate.call(n, D)) : 0 !== A.next(T.popup).length ? (y.verbose("Pre-existing popup found"),
                        b.inline = !0,
                        b.popups = A.next(T.popup).data(w.activator, _),
                        y.refresh(),
                        b.hoverable && y.bind.popup()) : b.popup ? (e(b.popup).data(w.activator, _),
                        y.verbose("Used popup specified in settings"),
                        y.refresh(),
                        b.hoverable && y.bind.popup()) : y.debug("No content specified skipping display", D)
                    },
                    createID: function() {
                        E = (Math.random().toString(16) + "000000000").substr(2, 8),
                        v = "." + E,
                        y.verbose("Creating unique id for element", E)
                    },
                    toggle: function() {
                        y.debug("Toggling pop-up"),
                        y.is.hidden() ? (y.debug("Popup is hidden, showing pop-up"),
                        y.unbind.close(),
                        y.show()) : (y.debug("Popup is visible, hiding pop-up"),
                        y.hide())
                    },
                    show: function(e) {
                        if (e = e || function() {}
                        ,
                        y.debug("Showing pop-up", b.transition),
                        y.is.hidden() && (!y.is.active() || !y.is.dropdown())) {
                            if (y.exists() || y.create(),
                            b.onShow.call(n, D) === !1)
                                return void y.debug("onShow callback returned false, cancelling popup animation");
                            b.preserve || b.popup || y.refresh(),
                            n && y.set.position() && (y.save.conditions(),
                            b.exclusive && y.hideAll(),
                            y.animate.show(e))
                        }
                    },
                    hide: function(e) {
                        if (e = e || function() {}
                        ,
                        y.is.visible() || y.is.animating()) {
                            if (b.onHide.call(n, D) === !1)
                                return void y.debug("onHide callback returned false, cancelling popup animation");
                            y.remove.visible(),
                            y.unbind.close(),
                            y.restore.conditions(),
                            y.animate.hide(e)
                        }
                    },
                    hideAll: function() {
                        e(T.popup).filter("." + x.visible).each(function() {
                            e(this).data(w.activator).popup("hide")
                        })
                    },
                    exists: function() {
                        return !!n && (b.inline || b.popup ? y.has.popup() : n.closest(C).length >= 1)
                    },
                    removePopup: function() {
                        y.has.popup() && !b.popup && (y.debug("Removing popup", n),
                        n.remove(),
                        n = i,
                        b.onRemove.call(n, D))
                    },
                    save: {
                        conditions: function() {
                            y.cache = {
                                title: _.attr("title")
                            },
                            y.cache.title && _.removeAttr("title"),
                            y.verbose("Saving original attributes", y.cache.title)
                        }
                    },
                    restore: {
                        conditions: function() {
                            return y.cache && y.cache.title && (_.attr("title", y.cache.title),
                            y.verbose("Restoring original attributes", y.cache.title)),
                            !0
                        }
                    },
                    animate: {
                        show: function(t) {
                            t = e.isFunction(t) ? t : function() {}
                            ,
                            b.transition && e.fn.transition !== i && _.transition("is supported") ? (y.set.visible(),
                            n.transition({
                                animation: b.transition + " in",
                                queue: !1,
                                debug: b.debug,
                                verbose: b.verbose,
                                duration: b.duration,
                                onComplete: function() {
                                    y.bind.close(),
                                    t.call(n, D),
                                    b.onVisible.call(n, D)
                                }
                            })) : y.error(R.noTransition)
                        },
                        hide: function(t) {
                            return t = e.isFunction(t) ? t : function() {}
                            ,
                            y.debug("Hiding pop-up"),
                            b.onHide.call(n, D) === !1 ? void y.debug("onHide callback returned false, cancelling popup animation") : void (b.transition && e.fn.transition !== i && _.transition("is supported") ? n.transition({
                                animation: b.transition + " out",
                                queue: !1,
                                duration: b.duration,
                                debug: b.debug,
                                verbose: b.verbose,
                                onComplete: function() {
                                    y.reset(),
                                    t.call(n, D),
                                    b.onHidden.call(n, D)
                                }
                            }) : y.error(R.noTransition))
                        }
                    },
                    change: {
                        content: function(e) {
                            n.html(e)
                        }
                    },
                    get: {
                        html: function() {
                            return _.removeData(w.html),
                            _.data(w.html) || b.html
                        },
                        title: function() {
                            return _.removeData(w.title),
                            _.data(w.title) || b.title
                        },
                        content: function() {
                            return _.removeData(w.content),
                            _.data(w.content) || _.attr("title") || b.content
                        },
                        variation: function() {
                            return _.removeData(w.variation),
                            _.data(w.variation) || b.variation
                        },
                        popup: function() {
                            return n
                        },
                        popupOffset: function() {
                            return n.offset()
                        },
                        calculations: function() {
                            var e, i = A[0], r = b.inline || b.popup && b.movePopup ? A.position() : A.offset(), o = {};
                            return o = {
                                target: {
                                    element: A[0],
                                    width: A.outerWidth(),
                                    height: A.outerHeight(),
                                    top: r.top,
                                    left: r.left,
                                    margin: {}
                                },
                                popup: {
                                    width: n.outerWidth(),
                                    height: n.outerHeight()
                                },
                                parent: {
                                    width: a.outerWidth(),
                                    height: a.outerHeight()
                                },
                                screen: {
                                    scroll: {
                                        top: c.scrollTop(),
                                        left: c.scrollLeft()
                                    },
                                    width: c.width(),
                                    height: c.height()
                                }
                            },
                            b.setFluidWidth && y.is.fluid() && (o.container = {
                                width: n.parent().outerWidth()
                            },
                            o.popup.width = o.container.width),
                            o.target.margin.top = b.inline ? parseInt(t.getComputedStyle(i).getPropertyValue("margin-top"), 10) : 0,
                            o.target.margin.left = b.inline ? y.is.rtl() ? parseInt(t.getComputedStyle(i).getPropertyValue("margin-right"), 10) : parseInt(t.getComputedStyle(i).getPropertyValue("margin-left"), 10) : 0,
                            e = o.screen,
                            o.boundary = {
                                top: e.scroll.top,
                                bottom: e.scroll.top + e.height,
                                left: e.scroll.left,
                                right: e.scroll.left + e.width
                            },
                            o
                        },
                        id: function() {
                            return E
                        },
                        startEvent: function() {
                            return "hover" == b.on ? "mouseenter" : "focus" == b.on && "focus"
                        },
                        scrollEvent: function() {
                            return "scroll"
                        },
                        endEvent: function() {
                            return "hover" == b.on ? "mouseleave" : "focus" == b.on && "blur"
                        },
                        distanceFromBoundary: function(e, t) {
                            var n, i, r = {};
                            return e = e || y.get.offset(),
                            t = t || y.get.calculations(),
                            n = t.popup,
                            i = t.boundary,
                            e && (r = {
                                top: e.top - i.top,
                                left: e.left - i.left,
                                right: i.right - (e.left + n.width),
                                bottom: i.bottom - (e.top + n.height)
                            },
                            y.verbose("Distance from boundaries determined", e, r)),
                            r
                        },
                        offsetParent: function(t) {
                            var n = t !== i ? t[0] : _[0]
                              , r = n.parentNode
                              , o = e(r);
                            if (r)
                                for (var a = "none" === o.css("transform"), s = "static" === o.css("position"), c = o.is("html"); r && !c && s && a; )
                                    r = r.parentNode,
                                    o = e(r),
                                    a = "none" === o.css("transform"),
                                    s = "static" === o.css("position"),
                                    c = o.is("html");
                            return o && o.length > 0 ? o : e()
                        },
                        positions: function() {
                            return {
                                "top left": !1,
                                "top center": !1,
                                "top right": !1,
                                "bottom left": !1,
                                "bottom center": !1,
                                "bottom right": !1,
                                "left center": !1,
                                "right center": !1
                            }
                        },
                        nextPosition: function(e) {
                            var t = e.split(" ")
                              , n = t[0]
                              , i = t[1]
                              , r = {
                                top: "bottom",
                                bottom: "top",
                                left: "right",
                                right: "left"
                            }
                              , o = {
                                left: "center",
                                center: "right",
                                right: "left"
                            }
                              , a = {
                                "top left": "top center",
                                "top center": "top right",
                                "top right": "right center",
                                "right center": "bottom right",
                                "bottom right": "bottom center",
                                "bottom center": "bottom left",
                                "bottom left": "left center",
                                "left center": "top left"
                            }
                              , s = "top" == n || "bottom" == n
                              , c = !1
                              , l = !1
                              , u = !1;
                            return L || (y.verbose("All available positions available"),
                            L = y.get.positions()),
                            y.debug("Recording last position tried", e),
                            L[e] = !0,
                            "opposite" === b.prefer && (u = [r[n], i],
                            u = u.join(" "),
                            c = L[u] === !0,
                            y.debug("Trying opposite strategy", u)),
                            "adjacent" === b.prefer && s && (u = [n, o[i]],
                            u = u.join(" "),
                            l = L[u] === !0,
                            y.debug("Trying adjacent strategy", u)),
                            (l || c) && (y.debug("Using backup position", u),
                            u = a[e]),
                            u
                        }
                    },
                    set: {
                        position: function(e, t) {
                            if (0 === A.length || 0 === n.length)
                                return void y.error(R.notFound);
                            var r, o, a, s, c, l, u, h;
                            if (t = t || y.get.calculations(),
                            e = e || _.data(w.position) || b.position,
                            r = _.data(w.offset) || b.offset,
                            o = b.distanceAway,
                            a = t.target,
                            s = t.popup,
                            c = t.parent,
                            0 === a.width && 0 === a.height && !(a.element instanceof SVGGraphicsElement))
                                return y.debug("Popup target is hidden, no action taken"),
                                !1;
                            switch (b.inline && (y.debug("Adding margin to calculation", a.margin),
                            "left center" == e || "right center" == e ? (r += a.margin.top,
                            o += -a.margin.left) : "top left" == e || "top center" == e || "top right" == e ? (r += a.margin.left,
                            o -= a.margin.top) : (r += a.margin.left,
                            o += a.margin.top)),
                            y.debug("Determining popup position from calculations", e, t),
                            y.is.rtl() && (e = e.replace(/left|right/g, function(e) {
                                return "left" == e ? "right" : "left"
                            }),
                            y.debug("RTL: Popup position updated", e)),
                            P == b.maxSearchDepth && "string" == typeof b.lastResort && (e = b.lastResort),
                            e) {
                            case "top left":
                                l = {
                                    top: "auto",
                                    bottom: c.height - a.top + o,
                                    left: a.left + r,
                                    right: "auto"
                                };
                                break;
                            case "top center":
                                l = {
                                    bottom: c.height - a.top + o,
                                    left: a.left + a.width / 2 - s.width / 2 + r,
                                    top: "auto",
                                    right: "auto"
                                };
                                break;
                            case "top right":
                                l = {
                                    bottom: c.height - a.top + o,
                                    right: c.width - a.left - a.width - r,
                                    top: "auto",
                                    left: "auto"
                                };
                                break;
                            case "left center":
                                l = {
                                    top: a.top + a.height / 2 - s.height / 2 + r,
                                    right: c.width - a.left + o,
                                    left: "auto",
                                    bottom: "auto"
                                };
                                break;
                            case "right center":
                                l = {
                                    top: a.top + a.height / 2 - s.height / 2 + r,
                                    left: a.left + a.width + o,
                                    bottom: "auto",
                                    right: "auto"
                                };
                                break;
                            case "bottom left":
                                l = {
                                    top: a.top + a.height + o,
                                    left: a.left + r,
                                    bottom: "auto",
                                    right: "auto"
                                };
                                break;
                            case "bottom center":
                                l = {
                                    top: a.top + a.height + o,
                                    left: a.left + a.width / 2 - s.width / 2 + r,
                                    bottom: "auto",
                                    right: "auto"
                                };
                                break;
                            case "bottom right":
                                l = {
                                    top: a.top + a.height + o,
                                    right: c.width - a.left - a.width - r,
                                    left: "auto",
                                    bottom: "auto"
                                }
                            }
                            if (l === i && y.error(R.invalidPosition, e),
                            y.debug("Calculated popup positioning values", l),
                            n.css(l).removeClass(x.position).addClass(e).addClass(x.loading),
                            u = y.get.popupOffset(),
                            h = y.get.distanceFromBoundary(u, t),
                            y.is.offstage(h, e)) {
                                if (y.debug("Position is outside viewport", e),
                                P < b.maxSearchDepth)
                                    return P++,
                                    e = y.get.nextPosition(e),
                                    y.debug("Trying new position", e),
                                    !!n && y.set.position(e, t);
                                if (!b.lastResort)
                                    return y.debug("Popup could not find a position to display", n),
                                    y.error(R.cannotPlace, D),
                                    y.remove.attempts(),
                                    y.remove.loading(),
                                    y.reset(),
                                    b.onUnplaceable.call(n, D),
                                    !1;
                                y.debug("No position found, showing with last position")
                            }
                            return y.debug("Position is on stage", e),
                            y.remove.attempts(),
                            y.remove.loading(),
                            b.setFluidWidth && y.is.fluid() && y.set.fluidWidth(t),
                            !0
                        },
                        fluidWidth: function(e) {
                            e = e || y.get.calculations(),
                            y.debug("Automatically setting element width to parent width", e.parent.width),
                            n.css("width", e.container.width)
                        },
                        variation: function(e) {
                            e = e || y.get.variation(),
                            e && y.has.popup() && (y.verbose("Adding variation to popup", e),
                            n.addClass(e))
                        },
                        visible: function() {
                            _.addClass(x.visible)
                        }
                    },
                    remove: {
                        loading: function() {
                            n.removeClass(x.loading)
                        },
                        variation: function(e) {
                            e = e || y.get.variation(),
                            e && (y.verbose("Removing variation", e),
                            n.removeClass(e))
                        },
                        visible: function() {
                            _.removeClass(x.visible)
                        },
                        attempts: function() {
                            y.verbose("Resetting all searched positions"),
                            P = 0,
                            L = !1
                        }
                    },
                    bind: {
                        events: function() {
                            y.debug("Binding popup events to module"),
                            "click" == b.on && _.on("click" + M, y.toggle),
                            "hover" == b.on && h && _.on("touchstart" + M, y.event.touchstart),
                            y.get.startEvent() && _.on(y.get.startEvent() + M, y.event.start).on(y.get.endEvent() + M, y.event.end),
                            b.target && y.debug("Target set to element", A),
                            c.on("resize" + v, y.event.resize)
                        },
                        popup: function() {
                            y.verbose("Allowing hover events on popup to prevent closing"),
                            n && y.has.popup() && n.on("mouseenter" + M, y.event.start).on("mouseleave" + M, y.event.end)
                        },
                        close: function() {
                            (b.hideOnScroll === !0 || "auto" == b.hideOnScroll && "click" != b.on) && (s.one(y.get.scrollEvent() + v, y.event.hideGracefully),
                            C.one(y.get.scrollEvent() + v, y.event.hideGracefully)),
                            "hover" == b.on && k && (y.verbose("Binding popup close event to document"),
                            s.on("touchstart" + v, function(e) {
                                y.verbose("Touched away from popup"),
                                y.event.hideGracefully.call(D, e)
                            })),
                            "click" == b.on && b.closable && (y.verbose("Binding popup close event to document"),
                            s.on("click" + v, function(e) {
                                y.verbose("Clicked away from popup"),
                                y.event.hideGracefully.call(D, e)
                            }))
                        }
                    },
                    unbind: {
                        close: function() {
                            (b.hideOnScroll === !0 || "auto" == b.hideOnScroll && "click" != b.on) && (s.off("scroll" + v, y.hide),
                            C.off("scroll" + v, y.hide)),
                            "hover" == b.on && k && (s.off("touchstart" + v),
                            k = !1),
                            "click" == b.on && b.closable && (y.verbose("Removing close event from document"),
                            s.off("click" + v))
                        }
                    },
                    has: {
                        popup: function() {
                            return n && n.length > 0
                        }
                    },
                    is: {
                        offstage: function(t, n) {
                            var i = [];
                            return e.each(t, function(e, t) {
                                t < -b.jitter && (y.debug("Position exceeds allowable distance from edge", e, t, n),
                                i.push(e))
                            }),
                            i.length > 0
                        },
                        active: function() {
                            return _.hasClass(x.active)
                        },
                        animating: function() {
                            return n !== i && n.hasClass(x.animating)
                        },
                        fluid: function() {
                            return n !== i && n.hasClass(x.fluid)
                        },
                        visible: function() {
                            return n !== i && n.hasClass(x.visible)
                        },
                        dropdown: function() {
                            return _.hasClass(x.dropdown)
                        },
                        hidden: function() {
                            return !y.is.visible()
                        },
                        rtl: function() {
                            return "rtl" == _.css("direction")
                        }
                    },
                    reset: function() {
                        y.remove.visible(),
                        b.preserve ? e.fn.transition !== i && n.transition("remove transition") : y.removePopup()
                    },
                    setting: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, b, t);
                        else {
                            if (n === i)
                                return b[t];
                            b[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, y, t);
                        else {
                            if (n === i)
                                return y[t];
                            y[t] = n
                        }
                    },
                    debug: function() {
                        b.debug && (b.performance ? y.performance.log(arguments) : (y.debug = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        y.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        b.verbose && b.debug && (b.performance ? y.performance.log(arguments) : (y.verbose = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        y.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        y.error = Function.prototype.bind.call(console.error, console, b.name + ":"),
                        y.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            b.performance && (t = (new Date).getTime(),
                            i = d || t,
                            n = t - i,
                            d = t,
                            p.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: D,
                                "Execution Time": n
                            })),
                            clearTimeout(y.performance.timer),
                            y.performance.timer = setTimeout(y.performance.display, 500)
                        },
                        display: function() {
                            var t = b.name + ":"
                              , n = 0;
                            d = !1,
                            clearTimeout(y.performance.timer),
                            e.each(p, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            u && (t += " '" + u + "'"),
                            (console.group !== i || console.table !== i) && p.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(p) : e.each(p, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            p = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = I;
                        return n = n || g,
                        r = D || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                m ? (I === i && y.initialize(),
                y.invoke(f)) : (I !== i && I.invoke("destroy"),
                y.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.popup.settings = {
            name: "Popup",
            debug: !1,
            verbose: !1,
            performance: !0,
            namespace: "popup",
            onCreate: function() {},
            onRemove: function() {},
            onShow: function() {},
            onVisible: function() {},
            onHide: function() {},
            onUnplaceable: function() {},
            onHidden: function() {},
            on: "hover",
            addTouchEvents: !0,
            position: "top left",
            variation: "",
            movePopup: !0,
            target: !1,
            popup: !1,
            inline: !1,
            preserve: !1,
            hoverable: !1,
            content: !1,
            html: !1,
            title: !1,
            closable: !0,
            hideOnScroll: "auto",
            exclusive: !1,
            context: "body",
            prefer: "opposite",
            lastResort: !1,
            delay: {
                show: 50,
                hide: 70
            },
            setFluidWidth: !0,
            duration: 200,
            transition: "scale",
            distanceAway: 0,
            jitter: 2,
            offset: 0,
            maxSearchDepth: 15,
            error: {
                invalidPosition: "The position you specified is not a valid position",
                cannotPlace: "Popup does not fit within the boundaries of the viewport",
                method: "The method you called is not defined.",
                noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>",
                notFound: "The target or popup you specified does not exist on the page"
            },
            metadata: {
                activator: "activator",
                content: "content",
                html: "html",
                offset: "offset",
                position: "position",
                title: "title",
                variation: "variation"
            },
            className: {
                active: "active",
                animating: "animating",
                dropdown: "dropdown",
                fluid: "fluid",
                loading: "loading",
                popup: "ui popup",
                position: "top left center bottom right",
                visible: "visible"
            },
            selector: {
                popup: ".ui.popup"
            },
            templates: {
                escape: function(e) {
                    var t = /[&<>"'`]/g
                      , n = /[&<>"'`]/
                      , i = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    }
                      , r = function(e) {
                        return i[e]
                    };
                    return n.test(e) ? e.replace(t, r) : e
                },
                popup: function(t) {
                    var n = ""
                      , r = e.fn.popup.settings.templates.escape;
                    return typeof t !== i && (typeof t.title !== i && t.title && (t.title = r(t.title),
                    n += '<div class="header">' + t.title + "</div>"),
                    typeof t.content !== i && t.content && (t.content = r(t.content),
                    n += '<div class="content">' + t.content + "</div>")),
                    n
                }
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.progress = function(t) {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var o, d, p = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.progress.settings, t) : e.extend({}, e.fn.progress.settings), f = p.className, m = p.metadata, g = p.namespace, v = p.selector, E = p.error, y = "." + g, b = "module-" + g, T = e(this), x = e(this).find(v.bar), R = e(this).find(v.progress), w = e(this).find(v.label), H = this, M = T.data(b), S = !1;
                d = {
                    initialize: function() {
                        d.debug("Initializing progress bar", p),
                        d.set.duration(),
                        d.set.transitionEvent(),
                        d.read.metadata(),
                        d.read.settings(),
                        d.instantiate()
                    },
                    instantiate: function() {
                        d.verbose("Storing instance of progress", d),
                        M = d,
                        T.data(b, d)
                    },
                    destroy: function() {
                        d.verbose("Destroying previous progress for", T),
                        clearInterval(M.interval),
                        d.remove.state(),
                        T.removeData(b),
                        M = i
                    },
                    reset: function() {
                        d.set.percent(0),
                        d.set.value(0)
                    },
                    complete: function() {
                        (d.percent === i || d.percent < 100) && d.set.percent(100)
                    },
                    read: {
                        metadata: function() {
                            var e = {
                                percent: T.data(m.percent),
                                total: T.data(m.total),
                                value: T.data(m.value)
                            };
                            e.percent && (d.debug("Current percent value set from metadata", e.percent),
                            d.set.percent(e.percent)),
                            e.total && (d.debug("Total value set from metadata", e.total),
                            d.set.total(e.total)),
                            e.value && (d.debug("Current value set from metadata", e.value),
                            d.set.value(e.value),
                            d.set.progress(e.value))
                        },
                        settings: function() {
                            p.total !== !1 && (d.debug("Current total set in settings", p.total),
                            d.set.total(p.total)),
                            p.value !== !1 && (d.debug("Current value set in settings", p.value),
                            d.set.value(p.value),
                            d.set.progress(d.value)),
                            p.percent !== !1 && (d.debug("Current percent set in settings", p.percent),
                            d.set.percent(p.percent))
                        }
                    },
                    increment: function(e) {
                        var t, n, i;
                        d.has.total() ? (n = d.get.value(),
                        e = e || 1,
                        i = n + e,
                        t = d.get.total(),
                        d.debug("Incrementing value", n, i, t),
                        i > t && (d.debug("Value cannot increment above total", t),
                        i = t)) : (n = d.get.percent(),
                        e = e || d.get.randomValue(),
                        i = n + e,
                        t = 100,
                        d.debug("Incrementing percentage by", n, i),
                        i > t && (d.debug("Value cannot increment above 100 percent"),
                        i = t)),
                        d.set.progress(i)
                    },
                    decrement: function(e) {
                        var t, n, i = d.get.total();
                        i ? (t = d.get.value(),
                        e = e || 1,
                        n = t - e,
                        d.debug("Decrementing value by", e, t)) : (t = d.get.percent(),
                        e = e || d.get.randomValue(),
                        n = t - e,
                        d.debug("Decrementing percentage by", e, t)),
                        n < 0 && (d.debug("Value cannot decrement below 0"),
                        n = 0),
                        d.set.progress(n)
                    },
                    has: {
                        total: function() {
                            return d.get.total() !== !1
                        }
                    },
                    get: {
                        text: function(e) {
                            var t = d.value || 0
                              , n = d.total || 0
                              , i = S ? d.get.displayPercent() : d.percent || 0
                              , r = d.total > 0 ? n - t : 100 - i;
                            return e = e || "",
                            e = e.replace("{value}", t).replace("{total}", n).replace("{left}", r).replace("{percent}", i),
                            d.debug("Adding variables to progress bar text", e),
                            e
                        },
                        randomValue: function() {
                            return d.debug("Generating random increment percentage"),
                            Math.floor(Math.random() * p.random.max + p.random.min)
                        },
                        numericValue: function(e) {
                            return "string" == typeof e ? "" !== e.replace(/[^\d.]/g, "") && +e.replace(/[^\d.]/g, "") : e
                        },
                        transitionEnd: function() {
                            var e, t = n.createElement("element"), r = {
                                transition: "transitionend",
                                OTransition: "oTransitionEnd",
                                MozTransition: "transitionend",
                                WebkitTransition: "webkitTransitionEnd"
                            };
                            for (e in r)
                                if (t.style[e] !== i)
                                    return r[e]
                        },
                        displayPercent: function() {
                            var e = x.width()
                              , t = T.width()
                              , n = parseInt(x.css("min-width"), 10)
                              , i = e > n ? e / t * 100 : d.percent;
                            return p.precision > 0 ? Math.round(i * (10 * p.precision)) / (10 * p.precision) : Math.round(i)
                        },
                        percent: function() {
                            return d.percent || 0
                        },
                        value: function() {
                            return d.value || 0
                        },
                        total: function() {
                            return d.total || !1
                        }
                    },
                    is: {
                        success: function() {
                            return T.hasClass(f.success)
                        },
                        warning: function() {
                            return T.hasClass(f.warning)
                        },
                        error: function() {
                            return T.hasClass(f.error)
                        },
                        active: function() {
                            return T.hasClass(f.active)
                        },
                        visible: function() {
                            return T.is(":visible")
                        }
                    },
                    remove: {
                        state: function() {
                            d.verbose("Removing stored state"),
                            delete d.total,
                            delete d.percent,
                            delete d.value
                        },
                        active: function() {
                            d.verbose("Removing active state"),
                            T.removeClass(f.active)
                        },
                        success: function() {
                            d.verbose("Removing success state"),
                            T.removeClass(f.success)
                        },
                        warning: function() {
                            d.verbose("Removing warning state"),
                            T.removeClass(f.warning)
                        },
                        error: function() {
                            d.verbose("Removing error state"),
                            T.removeClass(f.error)
                        }
                    },
                    set: {
                        barWidth: function(e) {
                            e > 100 ? d.error(E.tooHigh, e) : e < 0 ? d.error(E.tooLow, e) : (x.css("width", e + "%"),
                            T.attr("data-percent", parseInt(e, 10)))
                        },
                        duration: function(e) {
                            e = e || p.duration,
                            e = "number" == typeof e ? e + "ms" : e,
                            d.verbose("Setting progress bar transition duration", e),
                            x.css({
                                "transition-duration": e
                            })
                        },
                        percent: function(e) {
                            e = "string" == typeof e ? +e.replace("%", "") : e,
                            e = p.precision > 0 ? Math.round(e * (10 * p.precision)) / (10 * p.precision) : Math.round(e),
                            d.percent = e,
                            d.has.total() || (d.value = p.precision > 0 ? Math.round(e / 100 * d.total * (10 * p.precision)) / (10 * p.precision) : Math.round(e / 100 * d.total * 10) / 10,
                            p.limitValues && (d.value = d.value > 100 ? 100 : d.value < 0 ? 0 : d.value)),
                            d.set.barWidth(e),
                            d.set.labelInterval(),
                            d.set.labels(),
                            p.onChange.call(H, e, d.value, d.total)
                        },
                        labelInterval: function() {
                            var e = function() {
                                d.verbose("Bar finished animating, removing continuous label updates"),
                                clearInterval(d.interval),
                                S = !1,
                                d.set.labels()
                            };
                            clearInterval(d.interval),
                            x.one(o + y, e),
                            d.timer = setTimeout(e, p.duration + 100),
                            S = !0,
                            d.interval = setInterval(d.set.labels, p.framerate)
                        },
                        labels: function() {
                            d.verbose("Setting both bar progress and outer label text"),
                            d.set.barLabel(),
                            d.set.state()
                        },
                        label: function(e) {
                            e = e || "",
                            e && (e = d.get.text(e),
                            d.debug("Setting label to text", e),
                            w.text(e))
                        },
                        state: function(e) {
                            e = e !== i ? e : d.percent,
                            100 === e ? !p.autoSuccess || d.is.warning() || d.is.error() ? (d.verbose("Reached 100% removing active state"),
                            d.remove.active()) : (d.set.success(),
                            d.debug("Automatically triggering success at 100%")) : e > 0 ? (d.verbose("Adjusting active progress bar label", e),
                            d.set.active()) : (d.remove.active(),
                            d.set.label(p.text.active))
                        },
                        barLabel: function(e) {
                            e !== i ? R.text(d.get.text(e)) : "ratio" == p.label && d.total ? (d.debug("Adding ratio to bar label"),
                            R.text(d.get.text(p.text.ratio))) : "percent" == p.label && (d.debug("Adding percentage to bar label"),
                            R.text(d.get.text(p.text.percent)))
                        },
                        active: function(e) {
                            e = e || p.text.active,
                            d.debug("Setting active state"),
                            p.showActivity && !d.is.active() && T.addClass(f.active),
                            d.remove.warning(),
                            d.remove.error(),
                            d.remove.success(),
                            e && d.set.label(e),
                            p.onActive.call(H, d.value, d.total)
                        },
                        success: function(e) {
                            e = e || p.text.success,
                            d.debug("Setting success state"),
                            T.addClass(f.success),
                            d.remove.active(),
                            d.remove.warning(),
                            d.remove.error(),
                            d.complete(),
                            e && d.set.label(e),
                            p.onSuccess.call(H, d.total)
                        },
                        warning: function(e) {
                            e = e || p.text.warning,
                            d.debug("Setting warning state"),
                            T.addClass(f.warning),
                            d.remove.active(),
                            d.remove.success(),
                            d.remove.error(),
                            d.complete(),
                            e && d.set.label(e),
                            p.onWarning.call(H, d.value, d.total)
                        },
                        error: function(e) {
                            e = e || p.text.error,
                            d.debug("Setting error state"),
                            T.addClass(f.error),
                            d.remove.active(),
                            d.remove.success(),
                            d.remove.warning(),
                            d.complete(),
                            e && d.set.label(e),
                            p.onError.call(H, d.value, d.total)
                        },
                        transitionEvent: function() {
                            o = d.get.transitionEnd()
                        },
                        total: function(e) {
                            d.total = e
                        },
                        value: function(e) {
                            d.value = e
                        },
                        progress: function(e) {
                            var t, n = d.get.numericValue(e);
                            n === !1 && d.error(E.nonNumeric, e),
                            d.has.total() ? (d.set.value(n),
                            t = n / d.total * 100,
                            d.debug("Calculating percent complete from total", t),
                            d.set.percent(t)) : (t = n,
                            d.debug("Setting value to exact percentage value", t),
                            d.set.percent(t))
                        }
                    },
                    setting: function(t, n) {
                        if (d.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, d, t);
                        else {
                            if (n === i)
                                return d[t];
                            d[t] = n
                        }
                    },
                    debug: function() {
                        p.debug && (p.performance ? d.performance.log(arguments) : (d.debug = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        p.verbose && p.debug && (p.performance ? d.performance.log(arguments) : (d.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        d.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        d.error = Function.prototype.bind.call(console.error, console, p.name + ":"),
                        d.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            p.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: H,
                                "Execution Time": n
                            })),
                            clearTimeout(d.performance.timer),
                            d.performance.timer = setTimeout(d.performance.display, 500)
                        },
                        display: function() {
                            var t = p.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(d.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = M;
                        return n = n || h,
                        o = H || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (d.error(E.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                u ? (M === i && d.initialize(),
                d.invoke(l)) : (M !== i && M.invoke("destroy"),
                d.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.progress.settings = {
            name: "Progress",
            namespace: "progress",
            debug: !1,
            verbose: !1,
            performance: !0,
            random: {
                min: 2,
                max: 5
            },
            duration: 300,
            autoSuccess: !0,
            showActivity: !0,
            limitValues: !0,
            label: "percent",
            precision: 0,
            framerate: 1e3 / 30,
            percent: !1,
            total: !1,
            value: !1,
            onChange: function(e, t, n) {},
            onSuccess: function(e) {},
            onActive: function(e, t) {},
            onError: function(e, t) {},
            onWarning: function(e, t) {},
            error: {
                method: "The method you called is not defined.",
                nonNumeric: "Progress value is non numeric",
                tooHigh: "Value specified is above 100%",
                tooLow: "Value specified is below 0%"
            },
            regExp: {
                variable: /\{\$*[A-z0-9]+\}/g
            },
            metadata: {
                percent: "percent",
                total: "total",
                value: "value"
            },
            selector: {
                bar: "> .bar",
                label: "> .label",
                progress: ".bar > .progress"
            },
            text: {
                active: !1,
                error: !1,
                success: !1,
                warning: !1,
                percent: "{percent}%",
                ratio: "{value} of {total}"
            },
            className: {
                active: "active",
                error: "error",
                success: "success",
                warning: "warning"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.rating = function(t) {
            var n, r = e(this), o = r.selector || "", a = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1);
            return r.each(function() {
                var h, d = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.rating.settings, t) : e.extend({}, e.fn.rating.settings), p = d.namespace, f = d.className, m = d.metadata, g = d.selector, v = (d.error,
                "." + p), E = "module-" + p, y = this, b = e(this).data(E), T = e(this), x = T.find(g.icon);
                h = {
                    initialize: function() {
                        h.verbose("Initializing rating module", d),
                        0 === x.length && h.setup.layout(),
                        d.interactive ? h.enable() : h.disable(),
                        h.set.rating(h.get.initialRating()),
                        h.instantiate()
                    },
                    instantiate: function() {
                        h.verbose("Instantiating module", d),
                        b = h,
                        T.data(E, h)
                    },
                    destroy: function() {
                        h.verbose("Destroying previous instance", b),
                        h.remove.events(),
                        T.removeData(E)
                    },
                    refresh: function() {
                        x = T.find(g.icon)
                    },
                    setup: {
                        layout: function() {
                            var t = h.get.maxRating()
                              , n = e.fn.rating.settings.templates.icon(t);
                            h.debug("Generating icon html dynamically"),
                            T.html(n),
                            h.refresh()
                        }
                    },
                    event: {
                        mouseenter: function() {
                            var t = e(this);
                            t.nextAll().removeClass(f.selected),
                            T.addClass(f.selected),
                            t.addClass(f.selected).prevAll().addClass(f.selected)
                        },
                        mouseleave: function() {
                            T.removeClass(f.selected),
                            x.removeClass(f.selected)
                        },
                        click: function() {
                            var t = e(this)
                              , n = h.get.rating()
                              , i = x.index(t) + 1
                              , r = "auto" == d.clearable ? 1 === x.length : d.clearable;
                            r && n == i ? h.clearRating() : h.set.rating(i)
                        }
                    },
                    clearRating: function() {
                        h.debug("Clearing current rating"),
                        h.set.rating(0)
                    },
                    bind: {
                        events: function() {
                            h.verbose("Binding events"),
                            T.on("mouseenter" + v, g.icon, h.event.mouseenter).on("mouseleave" + v, g.icon, h.event.mouseleave).on("click" + v, g.icon, h.event.click)
                        }
                    },
                    remove: {
                        events: function() {
                            h.verbose("Removing events"),
                            T.off(v)
                        }
                    },
                    enable: function() {
                        h.debug("Setting rating to interactive mode"),
                        h.bind.events(),
                        T.removeClass(f.disabled)
                    },
                    disable: function() {
                        h.debug("Setting rating to read-only mode"),
                        h.remove.events(),
                        T.addClass(f.disabled)
                    },
                    get: {
                        initialRating: function() {
                            return T.data(m.rating) !== i ? (T.removeData(m.rating),
                            T.data(m.rating)) : d.initialRating
                        },
                        maxRating: function() {
                            return T.data(m.maxRating) !== i ? (T.removeData(m.maxRating),
                            T.data(m.maxRating)) : d.maxRating
                        },
                        rating: function() {
                            var e = x.filter("." + f.active).length;
                            return h.verbose("Current rating retrieved", e),
                            e
                        }
                    },
                    set: {
                        rating: function(e) {
                            var t = e - 1 >= 0 ? e - 1 : 0
                              , n = x.eq(t);
                            T.removeClass(f.selected),
                            x.removeClass(f.selected).removeClass(f.active),
                            e > 0 && (h.verbose("Setting current rating to", e),
                            n.prevAll().andSelf().addClass(f.active)),
                            d.onRate.call(y, e)
                        }
                    },
                    setting: function(t, n) {
                        if (h.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, d, t);
                        else {
                            if (n === i)
                                return d[t];
                            d[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, h, t);
                        else {
                            if (n === i)
                                return h[t];
                            h[t] = n
                        }
                    },
                    debug: function() {
                        d.debug && (d.performance ? h.performance.log(arguments) : (h.debug = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        h.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        d.verbose && d.debug && (d.performance ? h.performance.log(arguments) : (h.verbose = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        h.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        h.error = Function.prototype.bind.call(console.error, console, d.name + ":"),
                        h.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            d.performance && (t = (new Date).getTime(),
                            i = a || t,
                            n = t - i,
                            a = t,
                            s.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: y,
                                "Execution Time": n
                            })),
                            clearTimeout(h.performance.timer),
                            h.performance.timer = setTimeout(h.performance.display, 500)
                        },
                        display: function() {
                            var t = d.name + ":"
                              , n = 0;
                            a = !1,
                            clearTimeout(h.performance.timer),
                            e.each(s, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            o && (t += " '" + o + "'"),
                            r.length > 1 && (t += " (" + r.length + ")"),
                            (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(s) : e.each(s, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            s = []
                        }
                    },
                    invoke: function(t, r, o) {
                        var a, s, c, l = b;
                        return r = r || u,
                        o = y || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, r) : s !== i && (c = s),
                        e.isArray(n) ? n.push(c) : n !== i ? n = [n, c] : c !== i && (n = c),
                        s
                    }
                },
                l ? (b === i && h.initialize(),
                h.invoke(c)) : (b !== i && b.invoke("destroy"),
                h.initialize())
            }),
            n !== i ? n : this
        }
        ,
        e.fn.rating.settings = {
            name: "Rating",
            namespace: "rating",
            debug: !1,
            verbose: !1,
            performance: !0,
            initialRating: 0,
            interactive: !0,
            maxRating: 4,
            clearable: "auto",
            onRate: function(e) {},
            error: {
                method: "The method you called is not defined",
                noMaximum: "No maximum rating specified. Cannot generate HTML automatically"
            },
            metadata: {
                rating: "rating",
                maxRating: "maxRating"
            },
            className: {
                active: "active",
                disabled: "disabled",
                selected: "selected",
                loading: "loading"
            },
            selector: {
                icon: ".icon"
            },
            templates: {
                icon: function(e) {
                    for (var t = 1, n = ""; t <= e; )
                        n += '<i class="icon"></i>',
                        t++;
                    return n
                }
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.search = function(r) {
            var o, a = e(this), s = a.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], h = "string" == typeof u, d = [].slice.call(arguments, 1);
            return e(this).each(function() {
                var p, f = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.search.settings, r) : e.extend({}, e.fn.search.settings), m = f.className, g = f.metadata, v = f.regExp, E = f.fields, y = f.selector, b = f.error, T = f.namespace, x = "." + T, R = T + "-module", w = e(this), H = w.find(y.prompt), M = w.find(y.searchButton), S = w.find(y.results), _ = (w.find(y.result),
                w.find(y.category),
                this), C = w.data(R);
                p = {
                    initialize: function() {
                        p.verbose("Initializing module"),
                        p.determine.searchFields(),
                        p.bind.events(),
                        p.set.type(),
                        p.create.results(),
                        p.instantiate()
                    },
                    instantiate: function() {
                        p.verbose("Storing instance of module", p),
                        C = p,
                        w.data(R, p)
                    },
                    destroy: function() {
                        p.verbose("Destroying instance"),
                        w.off(x).removeData(R)
                    },
                    bind: {
                        events: function() {
                            p.verbose("Binding events to search"),
                            f.automatic && (w.on(p.get.inputEvent() + x, y.prompt, p.event.input),
                            H.attr("autocomplete", "off")),
                            w.on("focus" + x, y.prompt, p.event.focus).on("blur" + x, y.prompt, p.event.blur).on("keydown" + x, y.prompt, p.handleKeyboard).on("click" + x, y.searchButton, p.query).on("mousedown" + x, y.results, p.event.result.mousedown).on("mouseup" + x, y.results, p.event.result.mouseup).on("click" + x, y.result, p.event.result.click)
                        }
                    },
                    determine: {
                        searchFields: function() {
                            r && r.searchFields !== i && (f.searchFields = r.searchFields)
                        }
                    },
                    event: {
                        input: function() {
                            clearTimeout(p.timer),
                            p.timer = setTimeout(p.query, f.searchDelay)
                        },
                        focus: function() {
                            p.set.focus(),
                            p.has.minimumCharacters() && (p.query(),
                            p.can.show() && p.showResults())
                        },
                        blur: function(e) {
                            var t = n.activeElement === this
                              , i = function() {
                                p.cancel.query(),
                                p.remove.focus(),
                                p.timer = setTimeout(p.hideResults, f.hideDelay)
                            };
                            t || (p.resultsClicked ? (p.debug("Determining if user action caused search to close"),
                            w.one("click", y.results, function(e) {
                                p.is.animating() || p.is.hidden() || i()
                            })) : (p.debug("Input blurred without user action, closing results"),
                            i()))
                        },
                        result: {
                            mousedown: function() {
                                p.resultsClicked = !0
                            },
                            mouseup: function() {
                                p.resultsClicked = !1
                            },
                            click: function(n) {
                                p.debug("Search result selected");
                                var i = e(this)
                                  , r = i.find(y.title).eq(0)
                                  , o = i.find("a[href]").eq(0)
                                  , a = o.attr("href") || !1
                                  , s = o.attr("target") || !1
                                  , c = (r.html(),
                                r.length > 0 && r.text())
                                  , l = p.get.results()
                                  , u = i.data(g.result) || p.get.result(c, l);
                                return e.isFunction(f.onSelect) && f.onSelect.call(_, u, l) === !1 ? void p.debug("Custom onSelect callback cancelled default select action") : (p.hideResults(),
                                c && p.set.value(c),
                                void (a && (p.verbose("Opening search link found in result", o),
                                "_blank" == s || n.ctrlKey ? t.open(a) : t.location.href = a)))
                            }
                        }
                    },
                    handleKeyboard: function(e) {
                        var t, n = w.find(y.result), i = w.find(y.category), r = n.index(n.filter("." + m.active)), o = n.length, a = e.which, s = {
                            backspace: 8,
                            enter: 13,
                            escape: 27,
                            upArrow: 38,
                            downArrow: 40
                        };
                        if (a == s.escape && (p.verbose("Escape key pressed, blurring search field"),
                        p.trigger.blur()),
                        p.is.visible())
                            if (a == s.enter) {
                                if (p.verbose("Enter key pressed, selecting active result"),
                                n.filter("." + m.active).length > 0)
                                    return p.event.result.click.call(n.filter("." + m.active), e),
                                    e.preventDefault(),
                                    !1
                            } else
                                a == s.upArrow ? (p.verbose("Up key pressed, changing active result"),
                                t = r - 1 < 0 ? r : r - 1,
                                i.removeClass(m.active),
                                n.removeClass(m.active).eq(t).addClass(m.active).closest(i).addClass(m.active),
                                e.preventDefault()) : a == s.downArrow && (p.verbose("Down key pressed, changing active result"),
                                t = r + 1 >= o ? r : r + 1,
                                i.removeClass(m.active),
                                n.removeClass(m.active).eq(t).addClass(m.active).closest(i).addClass(m.active),
                                e.preventDefault());
                        else
                            a == s.enter && (p.verbose("Enter key pressed, executing query"),
                            p.query(),
                            p.set.buttonPressed(),
                            H.one("keyup", p.remove.buttonFocus))
                    },
                    setup: {
                        api: function() {
                            var e = {
                                debug: f.debug,
                                on: !1,
                                cache: "local",
                                action: "search",
                                onError: p.error
                            };
                            p.verbose("First request, initializing API"),
                            w.api(e)
                        }
                    },
                    can: {
                        useAPI: function() {
                            return e.fn.api !== i
                        },
                        show: function() {
                            return p.is.focused() && !p.is.visible() && !p.is.empty()
                        },
                        transition: function() {
                            return f.transition && e.fn.transition !== i && w.transition("is supported")
                        }
                    },
                    is: {
                        animating: function() {
                            return S.hasClass(m.animating)
                        },
                        hidden: function() {
                            return S.hasClass(m.hidden)
                        },
                        empty: function() {
                            return "" === S.html()
                        },
                        visible: function() {
                            return S.filter(":visible").length > 0
                        },
                        focused: function() {
                            return H.filter(":focus").length > 0
                        }
                    },
                    trigger: {
                        blur: function() {
                            var e = n.createEvent("HTMLEvents")
                              , t = H[0];
                            t && (p.verbose("Triggering native blur event"),
                            e.initEvent("blur", !1, !1),
                            t.dispatchEvent(e))
                        }
                    },
                    get: {
                        inputEvent: function() {
                            var e = H[0]
                              , t = e !== i && e.oninput !== i ? "input" : e !== i && e.onpropertychange !== i ? "propertychange" : "keyup";
                            return t
                        },
                        value: function() {
                            return H.val()
                        },
                        results: function() {
                            var e = w.data(g.results);
                            return e
                        },
                        result: function(t, n) {
                            var r = ["title", "id"]
                              , o = !1;
                            return t = t !== i ? t : p.get.value(),
                            n = n !== i ? n : p.get.results(),
                            "category" === f.type ? (p.debug("Finding result that matches", t),
                            e.each(n, function(n, i) {
                                if (e.isArray(i.results) && (o = p.search.object(t, i.results, r)[0]))
                                    return !1
                            })) : (p.debug("Finding result in results object", t),
                            o = p.search.object(t, n, r)[0]),
                            o || !1
                        }
                    },
                    set: {
                        focus: function() {
                            w.addClass(m.focus)
                        },
                        loading: function() {
                            w.addClass(m.loading)
                        },
                        value: function(e) {
                            p.verbose("Setting search input value", e),
                            H.val(e)
                        },
                        type: function(e) {
                            e = e || f.type,
                            "category" == f.type && w.addClass(f.type)
                        },
                        buttonPressed: function() {
                            M.addClass(m.pressed)
                        }
                    },
                    remove: {
                        loading: function() {
                            w.removeClass(m.loading)
                        },
                        focus: function() {
                            w.removeClass(m.focus)
                        },
                        buttonPressed: function() {
                            M.removeClass(m.pressed)
                        }
                    },
                    query: function() {
                        var t = p.get.value()
                          , n = p.read.cache(t);
                        p.has.minimumCharacters() ? (n ? (p.debug("Reading result from cache", t),
                        p.save.results(n.results),
                        p.addResults(n.html),
                        p.inject.id(n.results)) : (p.debug("Querying for", t),
                        e.isPlainObject(f.source) || e.isArray(f.source) ? p.search.local(t) : p.can.useAPI() ? p.search.remote(t) : p.error(b.source)),
                        f.onSearchQuery.call(_, t)) : p.hideResults()
                    },
                    search: {
                        local: function(e) {
                            var t, n = p.search.object(e, f.content);
                            p.set.loading(),
                            p.save.results(n),
                            p.debug("Returned local search results", n),
                            t = p.generateResults({
                                results: n
                            }),
                            p.remove.loading(),
                            p.addResults(t),
                            p.inject.id(n),
                            p.write.cache(e, {
                                html: t,
                                results: n
                            })
                        },
                        remote: function(t) {
                            var n = {
                                onSuccess: function(e) {
                                    p.parse.response.call(_, e, t)
                                },
                                onFailure: function() {
                                    p.displayMessage(b.serverError)
                                },
                                urlData: {
                                    query: t
                                }
                            };
                            w.api("get request") || p.setup.api(),
                            e.extend(!0, n, f.apiSettings),
                            p.debug("Executing search", n),
                            p.cancel.query(),
                            w.api("setting", n).api("query")
                        },
                        object: function(t, n, r) {
                            var o = []
                              , a = []
                              , s = t.toString().replace(v.escape, "\\$&")
                              , c = new RegExp(v.beginsWith + s,"i")
                              , l = function(t, n) {
                                var i = e.inArray(n, o) == -1
                                  , r = e.inArray(n, a) == -1;
                                i && r && t.push(n)
                            };
                            return n = n || f.source,
                            r = r !== i ? r : f.searchFields,
                            e.isArray(r) || (r = [r]),
                            n === i || n === !1 ? (p.error(b.source),
                            []) : (e.each(r, function(i, r) {
                                e.each(n, function(e, n) {
                                    var i = "string" == typeof n[r];
                                    i && (n[r].search(c) !== -1 ? l(o, n) : f.searchFullText && p.fuzzySearch(t, n[r]) && l(a, n))
                                })
                            }),
                            e.merge(o, a))
                        }
                    },
                    fuzzySearch: function(e, t) {
                        var n = t.length
                          , i = e.length;
                        if ("string" != typeof e)
                            return !1;
                        if (e = e.toLowerCase(),
                        t = t.toLowerCase(),
                        i > n)
                            return !1;
                        if (i === n)
                            return e === t;
                        e: for (var r = 0, o = 0; r < i; r++) {
                            for (var a = e.charCodeAt(r); o < n; )
                                if (t.charCodeAt(o++) === a)
                                    continue e;
                            return !1
                        }
                        return !0
                    },
                    parse: {
                        response: function(e, t) {
                            var n = p.generateResults(e);
                            p.verbose("Parsing server response", e),
                            e !== i && t !== i && e[E.results] !== i && (p.addResults(n),
                            p.inject.id(e[E.results]),
                            p.write.cache(t, {
                                html: n,
                                results: e[E.results]
                            }),
                            p.save.results(e[E.results]))
                        }
                    },
                    cancel: {
                        query: function() {
                            p.can.useAPI() && w.api("abort")
                        }
                    },
                    has: {
                        minimumCharacters: function() {
                            var e = p.get.value()
                              , t = e.length;
                            return t >= f.minCharacters
                        }
                    },
                    clear: {
                        cache: function(e) {
                            var t = w.data(g.cache);
                            e ? e && t && t[e] && (p.debug("Removing value from cache", e),
                            delete t[e],
                            w.data(g.cache, t)) : (p.debug("Clearing cache", e),
                            w.removeData(g.cache))
                        }
                    },
                    read: {
                        cache: function(e) {
                            var t = w.data(g.cache);
                            return !!f.cache && (p.verbose("Checking cache for generated html for query", e),
                            "object" == typeof t && t[e] !== i && t[e])
                        }
                    },
                    create: {
                        id: function(e, t) {
                            var n, r, o = e + 1;
                            return t !== i ? (n = String.fromCharCode(97 + t),
                            r = n + o,
                            p.verbose("Creating category result id", r)) : (r = o,
                            p.verbose("Creating result id", r)),
                            r
                        },
                        results: function() {
                            0 === S.length && (S = e("<div />").addClass(m.results).appendTo(w))
                        }
                    },
                    inject: {
                        result: function(e, t, n) {
                            p.verbose("Injecting result into results");
                            var r = n !== i ? S.children().eq(n).children(y.result).eq(t) : S.children(y.result).eq(t);
                            p.verbose("Injecting results metadata", r),
                            r.data(g.result, e)
                        },
                        id: function(t) {
                            p.debug("Injecting unique ids into results");
                            var n = 0
                              , r = 0;
                            return "category" === f.type ? e.each(t, function(t, o) {
                                r = 0,
                                e.each(o.results, function(e, t) {
                                    var a = o.results[e];
                                    a.id === i && (a.id = p.create.id(r, n)),
                                    p.inject.result(a, r, n),
                                    r++
                                }),
                                n++
                            }) : e.each(t, function(e, n) {
                                var o = t[e];
                                o.id === i && (o.id = p.create.id(r)),
                                p.inject.result(o, r),
                                r++
                            }),
                            t
                        }
                    },
                    save: {
                        results: function(e) {
                            p.verbose("Saving current search results to metadata", e),
                            w.data(g.results, e)
                        }
                    },
                    write: {
                        cache: function(e, t) {
                            var n = w.data(g.cache) !== i ? w.data(g.cache) : {};
                            f.cache && (p.verbose("Writing generated html to cache", e, t),
                            n[e] = t,
                            w.data(g.cache, n))
                        }
                    },
                    addResults: function(t) {
                        return e.isFunction(f.onResultsAdd) && f.onResultsAdd.call(S, t) === !1 ? (p.debug("onResultsAdd callback cancelled default action"),
                        !1) : (S.html(t),
                        void (p.can.show() && p.showResults()))
                    },
                    showResults: function() {
                        p.is.visible() || (p.can.transition() ? (p.debug("Showing results with css animations"),
                        S.transition({
                            animation: f.transition + " in",
                            debug: f.debug,
                            verbose: f.verbose,
                            duration: f.duration,
                            queue: !0
                        })) : (p.debug("Showing results with javascript"),
                        S.stop().fadeIn(f.duration, f.easing)),
                        f.onResultsOpen.call(S))
                    },
                    hideResults: function() {
                        p.is.visible() && (p.can.transition() ? (p.debug("Hiding results with css animations"),
                        S.transition({
                            animation: f.transition + " out",
                            debug: f.debug,
                            verbose: f.verbose,
                            duration: f.duration,
                            queue: !0
                        })) : (p.debug("Hiding results with javascript"),
                        S.stop().fadeOut(f.duration, f.easing)),
                        f.onResultsClose.call(S))
                    },
                    generateResults: function(t) {
                        p.debug("Generating html from response", t);
                        var n = f.templates[f.type]
                          , i = e.isPlainObject(t[E.results]) && !e.isEmptyObject(t[E.results])
                          , r = e.isArray(t[E.results]) && t[E.results].length > 0
                          , o = "";
                        return i || r ? (f.maxResults > 0 && (i ? "standard" == f.type && p.error(b.maxResults) : t[E.results] = t[E.results].slice(0, f.maxResults)),
                        e.isFunction(n) ? o = n(t, E) : p.error(b.noTemplate, !1)) : o = p.displayMessage(b.noResults, "empty"),
                        f.onResults.call(_, t),
                        o
                    },
                    displayMessage: function(e, t) {
                        return t = t || "standard",
                        p.debug("Displaying message", e, t),
                        p.addResults(f.templates.message(e, t)),
                        f.templates.message(e, t)
                    },
                    setting: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    debug: function() {
                        f.debug && (f.performance ? p.performance.log(arguments) : (p.debug = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        f.verbose && f.debug && (f.performance ? p.performance.log(arguments) : (p.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"),
                        p.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        p.error = Function.prototype.bind.call(console.error, console, f.name + ":"),
                        p.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            f.performance && (t = (new Date).getTime(),
                            i = c || t,
                            n = t - i,
                            c = t,
                            l.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: _,
                                "Execution Time": n
                            })),
                            clearTimeout(p.performance.timer),
                            p.performance.timer = setTimeout(p.performance.display, 500)
                        },
                        display: function() {
                            var t = f.name + ":"
                              , n = 0;
                            c = !1,
                            clearTimeout(p.performance.timer),
                            e.each(l, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            s && (t += " '" + s + "'"),
                            a.length > 1 && (t += " (" + a.length + ")"),
                            (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(l) : e.each(l, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            l = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = C;
                        return n = n || d,
                        r = _ || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                h ? (C === i && p.initialize(),
                p.invoke(u)) : (C !== i && C.invoke("destroy"),
                p.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.search.settings = {
            name: "Search",
            namespace: "search",
            debug: !1,
            verbose: !1,
            performance: !0,
            type: "standard",
            minCharacters: 1,
            apiSettings: !1,
            source: !1,
            searchFields: ["title", "description"],
            displayField: "",
            searchFullText: !0,
            automatic: !0,
            hideDelay: 0,
            searchDelay: 200,
            maxResults: 7,
            cache: !0,
            transition: "scale",
            duration: 200,
            easing: "easeOutExpo",
            onSelect: !1,
            onResultsAdd: !1,
            onSearchQuery: function(e) {},
            onResults: function(e) {},
            onResultsOpen: function() {},
            onResultsClose: function() {},
            className: {
                animating: "animating",
                active: "active",
                empty: "empty",
                focus: "focus",
                hidden: "hidden",
                loading: "loading",
                results: "results",
                pressed: "down"
            },
            error: {
                source: "Cannot search. No source used, and Semantic API module was not included",
                noResults: "Your search returned no results",
                logging: "Error in debug logging, exiting.",
                noEndpoint: "No search endpoint was specified",
                noTemplate: "A valid template name was not specified.",
                serverError: "There was an issue querying the server.",
                maxResults: "Results must be an array to use maxResults setting",
                method: "The method you called is not defined."
            },
            metadata: {
                cache: "cache",
                results: "results",
                result: "result"
            },
            regExp: {
                escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
                beginsWith: "(?:s|^)"
            },
            fields: {
                categories: "results",
                categoryName: "name",
                categoryResults: "results",
                description: "description",
                image: "image",
                price: "price",
                results: "results",
                title: "title",
                url: "url",
                action: "action",
                actionText: "text",
                actionURL: "url"
            },
            selector: {
                prompt: ".prompt",
                searchButton: ".search.button",
                results: ".results",
                category: ".category",
                result: ".result",
                title: ".title, .name"
            },
            templates: {
                escape: function(e) {
                    var t = /[&<>"'`]/g
                      , n = /[&<>"'`]/
                      , i = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    }
                      , r = function(e) {
                        return i[e]
                    };
                    return n.test(e) ? e.replace(t, r) : e
                },
                message: function(e, t) {
                    var n = "";
                    return e !== i && t !== i && (n += '<div class="message ' + t + '">',
                    n += "empty" == t ? '<div class="header">No Results</div class="header"><div class="description">' + e + '</div class="description">' : ' <div class="description">' + e + "</div>",
                    n += "</div>"),
                    n
                },
                category: function(t, n) {
                    var r = "";
                    e.fn.search.settings.templates.escape;
                    return t[n.categoryResults] !== i && (e.each(t[n.categoryResults], function(t, o) {
                        o[n.results] !== i && o.results.length > 0 && (r += '<div class="category">',
                        o[n.categoryName] !== i && (r += '<div class="name">' + o[n.categoryName] + "</div>"),
                        e.each(o.results, function(e, t) {
                            r += t[n.url] ? '<a class="result" href="' + t[n.url] + '">' : '<a class="result">',
                            t[n.image] !== i && (r += '<div class="image"> <img src="' + t[n.image] + '"></div>'),
                            r += '<div class="content">',
                            t[n.price] !== i && (r += '<div class="price">' + t[n.price] + "</div>"),
                            t[n.title] !== i && (r += '<div class="title">' + t[n.title] + "</div>"),
                            t[n.description] !== i && (r += '<div class="description">' + t[n.description] + "</div>"),
                            r += "</div>",
                            r += "</a>"
                        }),
                        r += "</div>")
                    }),
                    t[n.action] && (r += '<a href="' + t[n.action][n.actionURL] + '" class="action">' + t[n.action][n.actionText] + "</a>"),
                    r)
                },
                standard: function(t, n) {
                    var r = "";
                    return t[n.results] !== i && (e.each(t[n.results], function(e, t) {
                        r += t[n.url] ? '<a class="result" href="' + t[n.url] + '">' : '<a class="result">',
                        t[n.image] !== i && (r += '<div class="image"> <img src="' + t[n.image] + '"></div>'),
                        r += '<div class="content">',
                        t[n.price] !== i && (r += '<div class="price">' + t[n.price] + "</div>"),
                        t[n.title] !== i && (r += '<div class="title">' + t[n.title] + "</div>"),
                        t[n.description] !== i && (r += '<div class="description">' + t[n.description] + "</div>"),
                        r += "</div>",
                        r += "</a>"
                    }),
                    t[n.action] && (r += '<a href="' + t[n.action][n.actionURL] + '" class="action">' + t[n.action][n.actionText] + "</a>"),
                    r)
                }
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.shape = function(r) {
            var o, a = e(this), s = (e("body"),
            (new Date).getTime()), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1), d = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                setTimeout(e, 0)
            }
            ;
            return a.each(function() {
                var t, p, f, m = a.selector || "", g = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.shape.settings, r) : e.extend({}, e.fn.shape.settings), v = g.namespace, E = g.selector, y = g.error, b = g.className, T = "." + v, x = "module-" + v, R = e(this), w = R.find(E.sides), H = R.find(E.side), M = !1, S = this, _ = R.data(x);
                f = {
                    initialize: function() {
                        f.verbose("Initializing module for", S),
                        f.set.defaultSide(),
                        f.instantiate()
                    },
                    instantiate: function() {
                        f.verbose("Storing instance of module", f),
                        _ = f,
                        R.data(x, _)
                    },
                    destroy: function() {
                        f.verbose("Destroying previous module for", S),
                        R.removeData(x).off(T)
                    },
                    refresh: function() {
                        f.verbose("Refreshing selector cache for", S),
                        R = e(S),
                        w = e(this).find(E.shape),
                        H = e(this).find(E.side)
                    },
                    repaint: function() {
                        f.verbose("Forcing repaint event");
                        var e = w[0] || n.createElement("div");
                        e.offsetWidth
                    },
                    animate: function(e, n) {
                        f.verbose("Animating box with properties", e),
                        n = n || function(e) {
                            f.verbose("Executing animation callback"),
                            e !== i && e.stopPropagation(),
                            f.reset(),
                            f.set.active()
                        }
                        ,
                        g.beforeChange.call(p[0]),
                        f.get.transitionEvent() ? (f.verbose("Starting CSS animation"),
                        R.addClass(b.animating),
                        w.css(e).one(f.get.transitionEvent(), n),
                        f.set.duration(g.duration),
                        d(function() {
                            R.addClass(b.animating),
                            t.addClass(b.hidden)
                        })) : n()
                    },
                    queue: function(e) {
                        f.debug("Queueing animation of", e),
                        w.one(f.get.transitionEvent(), function() {
                            f.debug("Executing queued animation"),
                            setTimeout(function() {
                                R.shape(e)
                            }, 0)
                        })
                    },
                    reset: function() {
                        f.verbose("Animating states reset"),
                        R.removeClass(b.animating).attr("style", "").removeAttr("style"),
                        w.attr("style", "").removeAttr("style"),
                        H.attr("style", "").removeAttr("style").removeClass(b.hidden),
                        p.removeClass(b.animating).attr("style", "").removeAttr("style")
                    },
                    is: {
                        complete: function() {
                            return H.filter("." + b.active)[0] == p[0]
                        },
                        animating: function() {
                            return R.hasClass(b.animating)
                        }
                    },
                    set: {
                        defaultSide: function() {
                            t = R.find("." + g.className.active),
                            p = t.next(E.side).length > 0 ? t.next(E.side) : R.find(E.side).first(),
                            M = !1,
                            f.verbose("Active side set to", t),
                            f.verbose("Next side set to", p)
                        },
                        duration: function(e) {
                            e = e || g.duration,
                            e = "number" == typeof e ? e + "ms" : e,
                            f.verbose("Setting animation duration", e),
                            (g.duration || 0 === g.duration) && w.add(H).css({
                                "-webkit-transition-duration": e,
                                "-moz-transition-duration": e,
                                "-ms-transition-duration": e,
                                "-o-transition-duration": e,
                                "transition-duration": e
                            })
                        },
                        currentStageSize: function() {
                            var e = R.find("." + g.className.active)
                              , t = e.outerWidth(!0)
                              , n = e.outerHeight(!0);
                            R.css({
                                width: t,
                                height: n
                            })
                        },
                        stageSize: function() {
                            var e = R.clone().addClass(b.loading)
                              , t = e.find("." + g.className.active)
                              , n = M ? e.find(E.side).eq(M) : t.next(E.side).length > 0 ? t.next(E.side) : e.find(E.side).first()
                              , i = {};
                            f.set.currentStageSize(),
                            t.removeClass(b.active),
                            n.addClass(b.active),
                            e.insertAfter(R),
                            i = {
                                width: n.outerWidth(!0),
                                height: n.outerHeight(!0)
                            },
                            e.remove(),
                            R.css(i),
                            f.verbose("Resizing stage to fit new content", i)
                        },
                        nextSide: function(e) {
                            M = e,
                            p = H.filter(e),
                            M = H.index(p),
                            0 === p.length && (f.set.defaultSide(),
                            f.error(y.side)),
                            f.verbose("Next side manually set to", p)
                        },
                        active: function() {
                            f.verbose("Setting new side to active", p),
                            H.removeClass(b.active),
                            p.addClass(b.active),
                            g.onChange.call(p[0]),
                            f.set.defaultSide()
                        }
                    },
                    flip: {
                        up: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip up") : (f.debug("Flipping up", p),
                            f.set.stageSize(),
                            f.stage.above(),
                            f.animate(f.get.transform.up()))) : void f.debug("Side already visible", p)
                        },
                        down: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip down") : (f.debug("Flipping down", p),
                            f.set.stageSize(),
                            f.stage.below(),
                            f.animate(f.get.transform.down()))) : void f.debug("Side already visible", p)
                        },
                        left: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip left") : (f.debug("Flipping left", p),
                            f.set.stageSize(),
                            f.stage.left(),
                            f.animate(f.get.transform.left()))) : void f.debug("Side already visible", p)
                        },
                        right: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip right") : (f.debug("Flipping right", p),
                            f.set.stageSize(),
                            f.stage.right(),
                            f.animate(f.get.transform.right()))) : void f.debug("Side already visible", p)
                        },
                        over: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip over") : (f.debug("Flipping over", p),
                            f.set.stageSize(),
                            f.stage.behind(),
                            f.animate(f.get.transform.over()))) : void f.debug("Side already visible", p)
                        },
                        back: function() {
                            return !f.is.complete() || f.is.animating() || g.allowRepeats ? void (f.is.animating() ? f.queue("flip back") : (f.debug("Flipping back", p),
                            f.set.stageSize(),
                            f.stage.behind(),
                            f.animate(f.get.transform.back()))) : void f.debug("Side already visible", p)
                        }
                    },
                    get: {
                        transform: {
                            up: function() {
                                var e = {
                                    y: -((t.outerHeight(!0) - p.outerHeight(!0)) / 2),
                                    z: -(t.outerHeight(!0) / 2)
                                };
                                return {
                                    transform: "translateY(" + e.y + "px) translateZ(" + e.z + "px) rotateX(-90deg)"
                                }
                            },
                            down: function() {
                                var e = {
                                    y: -((t.outerHeight(!0) - p.outerHeight(!0)) / 2),
                                    z: -(t.outerHeight(!0) / 2)
                                };
                                return {
                                    transform: "translateY(" + e.y + "px) translateZ(" + e.z + "px) rotateX(90deg)"
                                }
                            },
                            left: function() {
                                var e = {
                                    x: -((t.outerWidth(!0) - p.outerWidth(!0)) / 2),
                                    z: -(t.outerWidth(!0) / 2)
                                };
                                return {
                                    transform: "translateX(" + e.x + "px) translateZ(" + e.z + "px) rotateY(90deg)"
                                }
                            },
                            right: function() {
                                var e = {
                                    x: -((t.outerWidth(!0) - p.outerWidth(!0)) / 2),
                                    z: -(t.outerWidth(!0) / 2)
                                };
                                return {
                                    transform: "translateX(" + e.x + "px) translateZ(" + e.z + "px) rotateY(-90deg)"
                                }
                            },
                            over: function() {
                                var e = {
                                    x: -((t.outerWidth(!0) - p.outerWidth(!0)) / 2)
                                };
                                return {
                                    transform: "translateX(" + e.x + "px) rotateY(180deg)"
                                }
                            },
                            back: function() {
                                var e = {
                                    x: -((t.outerWidth(!0) - p.outerWidth(!0)) / 2)
                                };
                                return {
                                    transform: "translateX(" + e.x + "px) rotateY(-180deg)"
                                }
                            }
                        },
                        transitionEvent: function() {
                            var e, t = n.createElement("element"), r = {
                                transition: "transitionend",
                                OTransition: "oTransitionEnd",
                                MozTransition: "transitionend",
                                WebkitTransition: "webkitTransitionEnd"
                            };
                            for (e in r)
                                if (t.style[e] !== i)
                                    return r[e]
                        },
                        nextSide: function() {
                            return t.next(E.side).length > 0 ? t.next(E.side) : R.find(E.side).first()
                        }
                    },
                    stage: {
                        above: function() {
                            var e = {
                                origin: (t.outerHeight(!0) - p.outerHeight(!0)) / 2,
                                depth: {
                                    active: p.outerHeight(!0) / 2,
                                    next: t.outerHeight(!0) / 2
                                }
                            };
                            f.verbose("Setting the initial animation position as above", p, e),
                            w.css({
                                transform: "translateZ(-" + e.depth.active + "px)"
                            }),
                            t.css({
                                transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)"
                            }),
                            p.addClass(b.animating).css({
                                top: e.origin + "px",
                                transform: "rotateX(90deg) translateZ(" + e.depth.next + "px)"
                            })
                        },
                        below: function() {
                            var e = {
                                origin: (t.outerHeight(!0) - p.outerHeight(!0)) / 2,
                                depth: {
                                    active: p.outerHeight(!0) / 2,
                                    next: t.outerHeight(!0) / 2
                                }
                            };
                            f.verbose("Setting the initial animation position as below", p, e),
                            w.css({
                                transform: "translateZ(-" + e.depth.active + "px)"
                            }),
                            t.css({
                                transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)"
                            }),
                            p.addClass(b.animating).css({
                                top: e.origin + "px",
                                transform: "rotateX(-90deg) translateZ(" + e.depth.next + "px)"
                            })
                        },
                        left: function() {
                            var e = {
                                active: t.outerWidth(!0),
                                next: p.outerWidth(!0)
                            }
                              , n = {
                                origin: (e.active - e.next) / 2,
                                depth: {
                                    active: e.next / 2,
                                    next: e.active / 2
                                }
                            };
                            f.verbose("Setting the initial animation position as left", p, n),
                            w.css({
                                transform: "translateZ(-" + n.depth.active + "px)"
                            }),
                            t.css({
                                transform: "rotateY(0deg) translateZ(" + n.depth.active + "px)"
                            }),
                            p.addClass(b.animating).css({
                                left: n.origin + "px",
                                transform: "rotateY(-90deg) translateZ(" + n.depth.next + "px)"
                            })
                        },
                        right: function() {
                            var e = {
                                active: t.outerWidth(!0),
                                next: p.outerWidth(!0)
                            }
                              , n = {
                                origin: (e.active - e.next) / 2,
                                depth: {
                                    active: e.next / 2,
                                    next: e.active / 2
                                }
                            };
                            f.verbose("Setting the initial animation position as left", p, n),
                            w.css({
                                transform: "translateZ(-" + n.depth.active + "px)"
                            }),
                            t.css({
                                transform: "rotateY(0deg) translateZ(" + n.depth.active + "px)"
                            }),
                            p.addClass(b.animating).css({
                                left: n.origin + "px",
                                transform: "rotateY(90deg) translateZ(" + n.depth.next + "px)"
                            })
                        },
                        behind: function() {
                            var e = {
                                active: t.outerWidth(!0),
                                next: p.outerWidth(!0)
                            }
                              , n = {
                                origin: (e.active - e.next) / 2,
                                depth: {
                                    active: e.next / 2,
                                    next: e.active / 2
                                }
                            };
                            f.verbose("Setting the initial animation position as behind", p, n),
                            t.css({
                                transform: "rotateY(0deg)"
                            }),
                            p.addClass(b.animating).css({
                                left: n.origin + "px",
                                transform: "rotateY(-180deg)"
                            })
                        }
                    },
                    setting: function(t, n) {
                        if (f.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, g, t);
                        else {
                            if (n === i)
                                return g[t];
                            g[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    debug: function() {
                        g.debug && (g.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, g.name + ":"),
                        f.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        g.verbose && g.debug && (g.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, g.name + ":"),
                        f.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        f.error = Function.prototype.bind.call(console.error, console, g.name + ":"),
                        f.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            g.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: S,
                                "Execution Time": n
                            })),
                            clearTimeout(f.performance.timer),
                            f.performance.timer = setTimeout(f.performance.display, 500)
                        },
                        display: function() {
                            var t = g.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(f.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            m && (t += " '" + m + "'"),
                            a.length > 1 && (t += " (" + a.length + ")"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = _;
                        return n = n || h,
                        r = S || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                u ? (_ === i && f.initialize(),
                f.invoke(l)) : (_ !== i && _.invoke("destroy"),
                f.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.shape.settings = {
            name: "Shape",
            debug: !1,
            verbose: !1,
            performance: !0,
            namespace: "shape",
            beforeChange: function() {},
            onChange: function() {},
            allowRepeats: !1,
            duration: !1,
            error: {
                side: "You tried to switch to a side that does not exist.",
                method: "The method you called is not defined"
            },
            className: {
                animating: "animating",
                hidden: "hidden",
                loading: "loading",
                active: "active"
            },
            selector: {
                sides: ".sides",
                side: ".side"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.sidebar = function(r) {
            var o, a = e(this), s = e(t), c = e(n), l = e("html"), u = e("head"), h = a.selector || "", d = (new Date).getTime(), p = [], f = arguments[0], m = "string" == typeof f, g = [].slice.call(arguments, 1), v = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                setTimeout(e, 0)
            }
            ;
            return a.each(function() {
                var a, E, y, b, T, x, R = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.sidebar.settings, r) : e.extend({}, e.fn.sidebar.settings), w = R.selector, H = R.className, M = R.namespace, S = R.regExp, _ = R.error, C = "." + M, A = "module-" + M, P = e(this), L = e(R.context), k = P.children(w.sidebar), D = L.children(w.fixed), I = L.children(w.pusher), O = this, B = P.data(A);
                x = {
                    initialize: function() {
                        x.debug("Initializing sidebar", r),
                        x.create.id(),
                        T = x.get.transitionEvent(),
                        x.is.ios() && x.set.ios(),
                        R.delaySetup ? v(x.setup.layout) : x.setup.layout(),
                        v(function() {
                            x.setup.cache()
                        }),
                        x.instantiate()
                    },
                    instantiate: function() {
                        x.verbose("Storing instance of module", x),
                        B = x,
                        P.data(A, x)
                    },
                    create: {
                        id: function() {
                            y = (Math.random().toString(16) + "000000000").substr(2, 8),
                            E = "." + y,
                            x.verbose("Creating unique id for element", y)
                        }
                    },
                    destroy: function() {
                        x.verbose("Destroying previous module for", P),
                        P.off(C).removeData(A),
                        x.is.ios() && x.remove.ios(),
                        L.off(E),
                        s.off(E),
                        c.off(E)
                    },
                    event: {
                        clickaway: function(e) {
                            var t = I.find(e.target).length > 0 || I.is(e.target)
                              , n = L.is(e.target);
                            t && (x.verbose("User clicked on dimmed page"),
                            x.hide()),
                            n && (x.verbose("User clicked on dimmable context (scaled out page)"),
                            x.hide())
                        },
                        touch: function(e) {},
                        containScroll: function(e) {
                            O.scrollTop <= 0 && (O.scrollTop = 1),
                            O.scrollTop + O.offsetHeight >= O.scrollHeight && (O.scrollTop = O.scrollHeight - O.offsetHeight - 1)
                        },
                        scroll: function(t) {
                            0 === e(t.target).closest(w.sidebar).length && t.preventDefault()
                        }
                    },
                    bind: {
                        clickaway: function() {
                            x.verbose("Adding clickaway events to context", L),
                            R.closable && L.on("click" + E, x.event.clickaway).on("touchend" + E, x.event.clickaway)
                        },
                        scrollLock: function() {
                            R.scrollLock && (x.debug("Disabling page scroll"),
                            s.on("DOMMouseScroll" + E, x.event.scroll)),
                            x.verbose("Adding events to contain sidebar scroll"),
                            c.on("touchmove" + E, x.event.touch),
                            P.on("scroll" + C, x.event.containScroll)
                        }
                    },
                    unbind: {
                        clickaway: function() {
                            x.verbose("Removing clickaway events from context", L),
                            L.off(E)
                        },
                        scrollLock: function() {
                            x.verbose("Removing scroll lock from page"),
                            c.off(E),
                            s.off(E),
                            P.off("scroll" + C)
                        }
                    },
                    add: {
                        inlineCSS: function() {
                            var t, n = x.cache.width || P.outerWidth(), i = x.cache.height || P.outerHeight(), r = x.is.rtl(), o = x.get.direction(), s = {
                                left: n,
                                right: -n,
                                top: i,
                                bottom: -i
                            };
                            r && (x.verbose("RTL detected, flipping widths"),
                            s.left = -n,
                            s.right = n),
                            t = "<style>",
                            "left" === o || "right" === o ? (x.debug("Adding CSS rules for animation distance", n),
                            t += " .ui.visible." + o + ".sidebar ~ .fixed, .ui.visible." + o + ".sidebar ~ .pusher {   -webkit-transform: translate3d(" + s[o] + "px, 0, 0);           transform: translate3d(" + s[o] + "px, 0, 0); }") : "top" !== o && "bottom" != o || (t += " .ui.visible." + o + ".sidebar ~ .fixed, .ui.visible." + o + ".sidebar ~ .pusher {   -webkit-transform: translate3d(0, " + s[o] + "px, 0);           transform: translate3d(0, " + s[o] + "px, 0); }"),
                            x.is.ie() && ("left" === o || "right" === o ? (x.debug("Adding CSS rules for animation distance", n),
                            t += " body.pushable > .ui.visible." + o + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(" + s[o] + "px, 0, 0);           transform: translate3d(" + s[o] + "px, 0, 0); }") : "top" !== o && "bottom" != o || (t += " body.pushable > .ui.visible." + o + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(0, " + s[o] + "px, 0);           transform: translate3d(0, " + s[o] + "px, 0); }"),
                            t += " body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after, body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {   -webkit-transform: translate3d(0px, 0, 0);           transform: translate3d(0px, 0, 0); }"),
                            t += "</style>",
                            a = e(t).appendTo(u),
                            x.debug("Adding sizing css to head", a)
                        }
                    },
                    refresh: function() {
                        x.verbose("Refreshing selector cache"),
                        L = e(R.context),
                        k = L.children(w.sidebar),
                        I = L.children(w.pusher),
                        D = L.children(w.fixed),
                        x.clear.cache()
                    },
                    refreshSidebars: function() {
                        x.verbose("Refreshing other sidebars"),
                        k = L.children(w.sidebar)
                    },
                    repaint: function() {
                        x.verbose("Forcing repaint event"),
                        O.style.display = "none";
                        O.offsetHeight;
                        O.scrollTop = O.scrollTop,
                        O.style.display = ""
                    },
                    setup: {
                        cache: function() {
                            x.cache = {
                                width: P.outerWidth(),
                                height: P.outerHeight(),
                                rtl: "rtl" == P.css("direction")
                            }
                        },
                        layout: function() {
                            0 === L.children(w.pusher).length && (x.debug("Adding wrapper element for sidebar"),
                            x.error(_.pusher),
                            I = e('<div class="pusher" />'),
                            L.children().not(w.omitted).not(k).wrapAll(I),
                            x.refresh()),
                            0 !== P.nextAll(w.pusher).length && P.nextAll(w.pusher)[0] === I[0] || (x.debug("Moved sidebar to correct parent element"),
                            x.error(_.movedSidebar, O),
                            P.detach().prependTo(L),
                            x.refresh()),
                            x.clear.cache(),
                            x.set.pushable(),
                            x.set.direction()
                        }
                    },
                    attachEvents: function(t, n) {
                        var i = e(t);
                        n = e.isFunction(x[n]) ? x[n] : x.toggle,
                        i.length > 0 ? (x.debug("Attaching sidebar events to element", t, n),
                        i.on("click" + C, n)) : x.error(_.notFound, t)
                    },
                    show: function(t) {
                        if (t = e.isFunction(t) ? t : function() {}
                        ,
                        x.is.hidden()) {
                            if (x.refreshSidebars(),
                            R.overlay && (x.error(_.overlay),
                            R.transition = "overlay"),
                            x.refresh(),
                            x.othersActive())
                                if (x.debug("Other sidebars currently visible"),
                                R.exclusive) {
                                    if ("overlay" != R.transition)
                                        return void x.hideOthers(x.show);
                                    x.hideOthers()
                                } else
                                    R.transition = "overlay";
                            x.pushPage(function() {
                                t.call(O),
                                R.onShow.call(O)
                            }),
                            R.onChange.call(O),
                            R.onVisible.call(O)
                        } else
                            x.debug("Sidebar is already visible")
                    },
                    hide: function(t) {
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        (x.is.visible() || x.is.animating()) && (x.debug("Hiding sidebar", t),
                        x.refreshSidebars(),
                        x.pullPage(function() {
                            t.call(O),
                            R.onHidden.call(O)
                        }),
                        R.onChange.call(O),
                        R.onHide.call(O))
                    },
                    othersAnimating: function() {
                        return k.not(P).filter("." + H.animating).length > 0
                    },
                    othersVisible: function() {
                        return k.not(P).filter("." + H.visible).length > 0
                    },
                    othersActive: function() {
                        return x.othersVisible() || x.othersAnimating()
                    },
                    hideOthers: function(e) {
                        var t = k.not(P).filter("." + H.visible)
                          , n = t.length
                          , i = 0;
                        e = e || function() {}
                        ,
                        t.sidebar("hide", function() {
                            i++,
                            i == n && e()
                        })
                    },
                    toggle: function() {
                        x.verbose("Determining toggled direction"),
                        x.is.hidden() ? x.show() : x.hide()
                    },
                    pushPage: function(t) {
                        var n, i, r, o = x.get.transition(), a = "overlay" === o || x.othersActive() ? P : I;
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        "scale down" == R.transition && x.scrollToTop(),
                        x.set.transition(o),
                        x.repaint(),
                        n = function() {
                            x.bind.clickaway(),
                            x.add.inlineCSS(),
                            x.set.animating(),
                            x.set.visible()
                        }
                        ,
                        i = function() {
                            x.set.dimmed()
                        }
                        ,
                        r = function(e) {
                            e.target == a[0] && (a.off(T + E, r),
                            x.remove.animating(),
                            x.bind.scrollLock(),
                            t.call(O))
                        }
                        ,
                        a.off(T + E),
                        a.on(T + E, r),
                        v(n),
                        R.dimPage && !x.othersVisible() && v(i)
                    },
                    pullPage: function(t) {
                        var n, i, r = x.get.transition(), o = "overlay" == r || x.othersActive() ? P : I;
                        t = e.isFunction(t) ? t : function() {}
                        ,
                        x.verbose("Removing context push state", x.get.direction()),
                        x.unbind.clickaway(),
                        x.unbind.scrollLock(),
                        n = function() {
                            x.set.transition(r),
                            x.set.animating(),
                            x.remove.visible(),
                            R.dimPage && !x.othersVisible() && I.removeClass(H.dimmed)
                        }
                        ,
                        i = function(e) {
                            e.target == o[0] && (o.off(T + E, i),
                            x.remove.animating(),
                            x.remove.transition(),
                            x.remove.inlineCSS(),
                            ("scale down" == r || R.returnScroll && x.is.mobile()) && x.scrollBack(),
                            t.call(O))
                        }
                        ,
                        o.off(T + E),
                        o.on(T + E, i),
                        v(n)
                    },
                    scrollToTop: function() {
                        x.verbose("Scrolling to top of page to avoid animation issues"),
                        b = e(t).scrollTop(),
                        P.scrollTop(0),
                        t.scrollTo(0, 0)
                    },
                    scrollBack: function() {
                        x.verbose("Scrolling back to original page position"),
                        t.scrollTo(0, b)
                    },
                    clear: {
                        cache: function() {
                            x.verbose("Clearing cached dimensions"),
                            x.cache = {}
                        }
                    },
                    set: {
                        ios: function() {
                            l.addClass(H.ios)
                        },
                        pushed: function() {
                            L.addClass(H.pushed)
                        },
                        pushable: function() {
                            L.addClass(H.pushable)
                        },
                        dimmed: function() {
                            I.addClass(H.dimmed)
                        },
                        active: function() {
                            P.addClass(H.active)
                        },
                        animating: function() {
                            P.addClass(H.animating)
                        },
                        transition: function(e) {
                            e = e || x.get.transition(),
                            P.addClass(e)
                        },
                        direction: function(e) {
                            e = e || x.get.direction(),
                            P.addClass(H[e])
                        },
                        visible: function() {
                            P.addClass(H.visible)
                        },
                        overlay: function() {
                            P.addClass(H.overlay)
                        }
                    },
                    remove: {
                        inlineCSS: function() {
                            x.debug("Removing inline css styles", a),
                            a && a.length > 0 && a.remove()
                        },
                        ios: function() {
                            l.removeClass(H.ios)
                        },
                        pushed: function() {
                            L.removeClass(H.pushed)
                        },
                        pushable: function() {
                            L.removeClass(H.pushable)
                        },
                        active: function() {
                            P.removeClass(H.active)
                        },
                        animating: function() {
                            P.removeClass(H.animating)
                        },
                        transition: function(e) {
                            e = e || x.get.transition(),
                            P.removeClass(e)
                        },
                        direction: function(e) {
                            e = e || x.get.direction(),
                            P.removeClass(H[e])
                        },
                        visible: function() {
                            P.removeClass(H.visible)
                        },
                        overlay: function() {
                            P.removeClass(H.overlay)
                        }
                    },
                    get: {
                        direction: function() {
                            return P.hasClass(H.top) ? H.top : P.hasClass(H.right) ? H.right : P.hasClass(H.bottom) ? H.bottom : H.left
                        },
                        transition: function() {
                            var e, t = x.get.direction();
                            return e = x.is.mobile() ? "auto" == R.mobileTransition ? R.defaultTransition.mobile[t] : R.mobileTransition : "auto" == R.transition ? R.defaultTransition.computer[t] : R.transition,
                            x.verbose("Determined transition", e),
                            e
                        },
                        transitionEvent: function() {
                            var e, t = n.createElement("element"), r = {
                                transition: "transitionend",
                                OTransition: "oTransitionEnd",
                                MozTransition: "transitionend",
                                WebkitTransition: "webkitTransitionEnd"
                            };
                            for (e in r)
                                if (t.style[e] !== i)
                                    return r[e]
                        }
                    },
                    is: {
                        ie: function() {
                            var e = !t.ActiveXObject && "ActiveXObject"in t
                              , n = "ActiveXObject"in t;
                            return e || n
                        },
                        ios: function() {
                            var e = navigator.userAgent
                              , t = e.match(S.ios)
                              , n = e.match(S.mobileChrome);
                            return !(!t || n) && (x.verbose("Browser was found to be iOS", e),
                            !0)
                        },
                        mobile: function() {
                            var e = navigator.userAgent
                              , t = e.match(S.mobile);
                            return t ? (x.verbose("Browser was found to be mobile", e),
                            !0) : (x.verbose("Browser is not mobile, using regular transition", e),
                            !1)
                        },
                        hidden: function() {
                            return !x.is.visible()
                        },
                        visible: function() {
                            return P.hasClass(H.visible)
                        },
                        open: function() {
                            return x.is.visible()
                        },
                        closed: function() {
                            return x.is.hidden()
                        },
                        vertical: function() {
                            return P.hasClass(H.top)
                        },
                        animating: function() {
                            return L.hasClass(H.animating)
                        },
                        rtl: function() {
                            return x.cache.rtl === i && (x.cache.rtl = "rtl" == P.css("direction")),
                            x.cache.rtl
                        }
                    },
                    setting: function(t, n) {
                        if (x.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, R, t);
                        else {
                            if (n === i)
                                return R[t];
                            R[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, x, t);
                        else {
                            if (n === i)
                                return x[t];
                            x[t] = n
                        }
                    },
                    debug: function() {
                        R.debug && (R.performance ? x.performance.log(arguments) : (x.debug = Function.prototype.bind.call(console.info, console, R.name + ":"),
                        x.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        R.verbose && R.debug && (R.performance ? x.performance.log(arguments) : (x.verbose = Function.prototype.bind.call(console.info, console, R.name + ":"),
                        x.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        x.error = Function.prototype.bind.call(console.error, console, R.name + ":"),
                        x.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            R.performance && (t = (new Date).getTime(),
                            i = d || t,
                            n = t - i,
                            d = t,
                            p.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: O,
                                "Execution Time": n
                            })),
                            clearTimeout(x.performance.timer),
                            x.performance.timer = setTimeout(x.performance.display, 500)
                        },
                        display: function() {
                            var t = R.name + ":"
                              , n = 0;
                            d = !1,
                            clearTimeout(x.performance.timer),
                            e.each(p, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            h && (t += " '" + h + "'"),
                            (console.group !== i || console.table !== i) && p.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(p) : e.each(p, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            p = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = B;
                        return n = n || g,
                        r = O || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (x.error(_.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                m ? (B === i && x.initialize(),
                x.invoke(f)) : (B !== i && x.invoke("destroy"),
                x.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.sidebar.settings = {
            name: "Sidebar",
            namespace: "sidebar",
            debug: !1,
            verbose: !1,
            performance: !0,
            transition: "auto",
            mobileTransition: "auto",
            defaultTransition: {
                computer: {
                    left: "uncover",
                    right: "uncover",
                    top: "overlay",
                    bottom: "overlay"
                },
                mobile: {
                    left: "uncover",
                    right: "uncover",
                    top: "overlay",
                    bottom: "overlay"
                }
            },
            context: "body",
            exclusive: !1,
            closable: !0,
            dimPage: !0,
            scrollLock: !1,
            returnScroll: !1,
            delaySetup: !1,
            duration: 500,
            onChange: function() {},
            onShow: function() {},
            onHide: function() {},
            onHidden: function() {},
            onVisible: function() {},
            className: {
                active: "active",
                animating: "animating",
                dimmed: "dimmed",
                ios: "ios",
                pushable: "pushable",
                pushed: "pushed",
                right: "right",
                top: "top",
                left: "left",
                bottom: "bottom",
                visible: "visible"
            },
            selector: {
                fixed: ".fixed",
                omitted: "script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed",
                pusher: ".pusher",
                sidebar: ".ui.sidebar"
            },
            regExp: {
                ios: /(iPad|iPhone|iPod)/g,
                mobileChrome: /(CriOS)/g,
                mobile: /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g
            },
            error: {
                method: "The method you called is not defined.",
                pusher: "Had to add pusher element. For optimal performance make sure body content is inside a pusher element",
                movedSidebar: "Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag",
                overlay: "The overlay setting is no longer supported, use animation: overlay",
                notFound: "There were no elements that matched the specified selector"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.sticky = function(n) {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var o, d, p, f, m = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.sticky.settings, n) : e.extend({}, e.fn.sticky.settings), g = m.className, v = m.namespace, E = m.error, y = "." + v, b = "module-" + v, T = e(this), x = e(t), R = e(m.scrollContext), w = (T.selector || "",
                T.data(b)), H = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                    setTimeout(e, 0)
                }
                , M = this;
                f = {
                    initialize: function() {
                        f.determineContainer(),
                        f.determineContext(),
                        f.verbose("Initializing sticky", m, o),
                        f.save.positions(),
                        f.checkErrors(),
                        f.bind.events(),
                        m.observeChanges && f.observeChanges(),
                        f.instantiate()
                    },
                    instantiate: function() {
                        f.verbose("Storing instance of module", f),
                        w = f,
                        T.data(b, f)
                    },
                    destroy: function() {
                        f.verbose("Destroying previous instance"),
                        f.reset(),
                        p && p.disconnect(),
                        x.off("load" + y, f.event.load).off("resize" + y, f.event.resize),
                        R.off("scrollchange" + y, f.event.scrollchange),
                        T.removeData(b)
                    },
                    observeChanges: function() {
                        var e = d[0];
                        "MutationObserver"in t && (p = new MutationObserver(function(e) {
                            clearTimeout(f.timer),
                            f.timer = setTimeout(function() {
                                f.verbose("DOM tree modified, updating sticky menu", e),
                                f.refresh()
                            }, 100)
                        }
                        ),
                        p.observe(M, {
                            childList: !0,
                            subtree: !0
                        }),
                        p.observe(e, {
                            childList: !0,
                            subtree: !0
                        }),
                        f.debug("Setting up mutation observer", p))
                    },
                    determineContainer: function() {
                        o = T.offsetParent()
                    },
                    determineContext: function() {
                        if (d = m.context ? e(m.context) : o,
                        0 === d.length)
                            return void f.error(E.invalidContext, m.context, T)
                    },
                    checkErrors: function() {
                        if (f.is.hidden() && f.error(E.visible, T),
                        f.cache.element.height > f.cache.context.height)
                            return f.reset(),
                            void f.error(E.elementSize, T)
                    },
                    bind: {
                        events: function() {
                            x.on("load" + y, f.event.load).on("resize" + y, f.event.resize),
                            R.off("scroll" + y).on("scroll" + y, f.event.scroll).on("scrollchange" + y, f.event.scrollchange)
                        }
                    },
                    event: {
                        load: function() {
                            f.verbose("Page contents finished loading"),
                            H(f.refresh)
                        },
                        resize: function() {
                            f.verbose("Window resized"),
                            H(f.refresh)
                        },
                        scroll: function() {
                            H(function() {
                                R.triggerHandler("scrollchange" + y, R.scrollTop())
                            })
                        },
                        scrollchange: function(e, t) {
                            f.stick(t),
                            m.onScroll.call(M)
                        }
                    },
                    refresh: function(e) {
                        f.reset(),
                        m.context || f.determineContext(),
                        e && f.determineContainer(),
                        f.save.positions(),
                        f.stick(),
                        m.onReposition.call(M)
                    },
                    supports: {
                        sticky: function() {
                            var t = e("<div/>");
                            t[0];
                            return t.addClass(g.supported),
                            t.css("position").match("sticky")
                        }
                    },
                    save: {
                        lastScroll: function(e) {
                            f.lastScroll = e
                        },
                        elementScroll: function(e) {
                            f.elementScroll = e
                        },
                        positions: function() {
                            var e = {
                                height: R.height()
                            }
                              , t = {
                                margin: {
                                    top: parseInt(T.css("margin-top"), 10),
                                    bottom: parseInt(T.css("margin-bottom"), 10)
                                },
                                offset: T.offset(),
                                width: T.outerWidth(),
                                height: T.outerHeight()
                            }
                              , n = {
                                offset: d.offset(),
                                height: d.outerHeight()
                            };
                            ({
                                height: o.outerHeight()
                            });
                            f.is.standardScroll() || (f.debug("Non-standard scroll. Removing scroll offset from element offset"),
                            e.top = R.scrollTop(),
                            e.left = R.scrollLeft(),
                            t.offset.top += e.top,
                            n.offset.top += e.top,
                            t.offset.left += e.left,
                            n.offset.left += e.left),
                            f.cache = {
                                fits: t.height < e.height,
                                scrollContext: {
                                    height: e.height
                                },
                                element: {
                                    margin: t.margin,
                                    top: t.offset.top - t.margin.top,
                                    left: t.offset.left,
                                    width: t.width,
                                    height: t.height,
                                    bottom: t.offset.top + t.height
                                },
                                context: {
                                    top: n.offset.top,
                                    height: n.height,
                                    bottom: n.offset.top + n.height
                                }
                            },
                            f.set.containerSize(),
                            f.set.size(),
                            f.stick(),
                            f.debug("Caching element positions", f.cache)
                        }
                    },
                    get: {
                        direction: function(e) {
                            var t = "down";
                            return e = e || R.scrollTop(),
                            f.lastScroll !== i && (f.lastScroll < e ? t = "down" : f.lastScroll > e && (t = "up")),
                            t
                        },
                        scrollChange: function(e) {
                            return e = e || R.scrollTop(),
                            f.lastScroll ? e - f.lastScroll : 0
                        },
                        currentElementScroll: function() {
                            return f.elementScroll ? f.elementScroll : f.is.top() ? Math.abs(parseInt(T.css("top"), 10)) || 0 : Math.abs(parseInt(T.css("bottom"), 10)) || 0
                        },
                        elementScroll: function(e) {
                            e = e || R.scrollTop();
                            var t = f.cache.element
                              , n = f.cache.scrollContext
                              , i = f.get.scrollChange(e)
                              , r = t.height - n.height + m.offset
                              , o = f.get.currentElementScroll()
                              , a = o + i;
                            return o = f.cache.fits || a < 0 ? 0 : a > r ? r : a
                        }
                    },
                    remove: {
                        lastScroll: function() {
                            delete f.lastScroll
                        },
                        elementScroll: function(e) {
                            delete f.elementScroll
                        },
                        offset: function() {
                            T.css("margin-top", "")
                        }
                    },
                    set: {
                        offset: function() {
                            f.verbose("Setting offset on element", m.offset),
                            T.css("margin-top", m.offset)
                        },
                        containerSize: function() {
                            var e = o.get(0).tagName;
                            "HTML" === e || "body" == e ? f.determineContainer() : Math.abs(o.outerHeight() - f.cache.context.height) > m.jitter && (f.debug("Context has padding, specifying exact height for container", f.cache.context.height),
                            o.css({
                                height: f.cache.context.height
                            }))
                        },
                        minimumSize: function() {
                            var e = f.cache.element;
                            o.css("min-height", e.height)
                        },
                        scroll: function(e) {
                            f.debug("Setting scroll on element", e),
                            f.elementScroll != e && (f.is.top() && T.css("bottom", "").css("top", -e),
                            f.is.bottom() && T.css("top", "").css("bottom", e))
                        },
                        size: function() {
                            0 !== f.cache.element.height && 0 !== f.cache.element.width && (M.style.setProperty("width", f.cache.element.width + "px", "important"),
                            M.style.setProperty("height", f.cache.element.height + "px", "important"))
                        }
                    },
                    is: {
                        standardScroll: function() {
                            return R[0] == t
                        },
                        top: function() {
                            return T.hasClass(g.top)
                        },
                        bottom: function() {
                            return T.hasClass(g.bottom)
                        },
                        initialPosition: function() {
                            return !f.is.fixed() && !f.is.bound()
                        },
                        hidden: function() {
                            return !T.is(":visible")
                        },
                        bound: function() {
                            return T.hasClass(g.bound)
                        },
                        fixed: function() {
                            return T.hasClass(g.fixed)
                        }
                    },
                    stick: function(e) {
                        var t = e || R.scrollTop()
                          , n = f.cache
                          , i = n.fits
                          , r = n.element
                          , o = n.scrollContext
                          , a = n.context
                          , s = f.is.bottom() && m.pushing ? m.bottomOffset : m.offset
                          , e = {
                            top: t + s,
                            bottom: t + s + o.height
                        }
                          , c = (f.get.direction(e.top),
                        i ? 0 : f.get.elementScroll(e.top))
                          , l = !i
                          , u = 0 !== r.height;
                        u && (f.is.initialPosition() ? e.top >= a.bottom ? (f.debug("Initial element position is bottom of container"),
                        f.bindBottom()) : e.top > r.top && (r.height + e.top - c >= a.bottom ? (f.debug("Initial element position is bottom of container"),
                        f.bindBottom()) : (f.debug("Initial element position is fixed"),
                        f.fixTop())) : f.is.fixed() ? f.is.top() ? e.top <= r.top ? (f.debug("Fixed element reached top of container"),
                        f.setInitialPosition()) : r.height + e.top - c >= a.bottom ? (f.debug("Fixed element reached bottom of container"),
                        f.bindBottom()) : l && (f.set.scroll(c),
                        f.save.lastScroll(e.top),
                        f.save.elementScroll(c)) : f.is.bottom() && (e.bottom - r.height <= r.top ? (f.debug("Bottom fixed rail has reached top of container"),
                        f.setInitialPosition()) : e.bottom >= a.bottom ? (f.debug("Bottom fixed rail has reached bottom of container"),
                        f.bindBottom()) : l && (f.set.scroll(c),
                        f.save.lastScroll(e.top),
                        f.save.elementScroll(c))) : f.is.bottom() && (e.top <= r.top ? (f.debug("Jumped from bottom fixed to top fixed, most likely used home/end button"),
                        f.setInitialPosition()) : m.pushing ? f.is.bound() && e.bottom <= a.bottom && (f.debug("Fixing bottom attached element to bottom of browser."),
                        f.fixBottom()) : f.is.bound() && e.top <= a.bottom - r.height && (f.debug("Fixing bottom attached element to top of browser."),
                        f.fixTop())))
                    },
                    bindTop: function() {
                        f.debug("Binding element to top of parent container"),
                        f.remove.offset(),
                        T.css({
                            left: "",
                            top: "",
                            marginBottom: ""
                        }).removeClass(g.fixed).removeClass(g.bottom).addClass(g.bound).addClass(g.top),
                        m.onTop.call(M),
                        m.onUnstick.call(M)
                    },
                    bindBottom: function() {
                        f.debug("Binding element to bottom of parent container"),
                        f.remove.offset(),
                        T.css({
                            left: "",
                            top: ""
                        }).removeClass(g.fixed).removeClass(g.top).addClass(g.bound).addClass(g.bottom),
                        m.onBottom.call(M),
                        m.onUnstick.call(M)
                    },
                    setInitialPosition: function() {
                        f.debug("Returning to initial position"),
                        f.unfix(),
                        f.unbind()
                    },
                    fixTop: function() {
                        f.debug("Fixing element to top of page"),
                        f.set.minimumSize(),
                        f.set.offset(),
                        T.css({
                            left: f.cache.element.left,
                            bottom: "",
                            marginBottom: ""
                        }).removeClass(g.bound).removeClass(g.bottom).addClass(g.fixed).addClass(g.top),
                        m.onStick.call(M)
                    },
                    fixBottom: function() {
                        f.debug("Sticking element to bottom of page"),
                        f.set.minimumSize(),
                        f.set.offset(),
                        T.css({
                            left: f.cache.element.left,
                            bottom: "",
                            marginBottom: ""
                        }).removeClass(g.bound).removeClass(g.top).addClass(g.fixed).addClass(g.bottom),
                        m.onStick.call(M)
                    },
                    unbind: function() {
                        f.is.bound() && (f.debug("Removing container bound position on element"),
                        f.remove.offset(),
                        T.removeClass(g.bound).removeClass(g.top).removeClass(g.bottom))
                    },
                    unfix: function() {
                        f.is.fixed() && (f.debug("Removing fixed position on element"),
                        f.remove.offset(),
                        T.removeClass(g.fixed).removeClass(g.top).removeClass(g.bottom),
                        m.onUnstick.call(M))
                    },
                    reset: function() {
                        f.debug("Reseting elements position"),
                        f.unbind(),
                        f.unfix(),
                        f.resetCSS(),
                        f.remove.offset(),
                        f.remove.lastScroll()
                    },
                    resetCSS: function() {
                        T.css({
                            width: "",
                            height: ""
                        }),
                        o.css({
                            height: ""
                        })
                    },
                    setting: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, m, t);
                        else {
                            if (n === i)
                                return m[t];
                            m[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    debug: function() {
                        m.debug && (m.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, m.name + ":"),
                        f.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        m.verbose && m.debug && (m.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"),
                        f.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        f.error = Function.prototype.bind.call(console.error, console, m.name + ":"),
                        f.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            m.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: M,
                                "Execution Time": n
                            })),
                            clearTimeout(f.performance.timer),
                            f.performance.timer = setTimeout(f.performance.display, 0)
                        },
                        display: function() {
                            var t = m.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(f.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = w;
                        return n = n || h,
                        o = M || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                u ? (w === i && f.initialize(),
                f.invoke(l)) : (w !== i && w.invoke("destroy"),
                f.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.sticky.settings = {
            name: "Sticky",
            namespace: "sticky",
            debug: !1,
            verbose: !0,
            performance: !0,
            pushing: !1,
            context: !1,
            scrollContext: t,
            offset: 0,
            bottomOffset: 0,
            jitter: 5,
            observeChanges: !1,
            onReposition: function() {},
            onScroll: function() {},
            onStick: function() {},
            onUnstick: function() {},
            onTop: function() {},
            onBottom: function() {},
            error: {
                container: "Sticky element must be inside a relative container",
                visible: "Element is hidden, you must call refresh after element becomes visible",
                method: "The method you called is not defined.",
                invalidContext: "Context specified does not exist",
                elementSize: "Sticky element is larger than its container, cannot create sticky."
            },
            className: {
                bound: "bound",
                fixed: "fixed",
                supported: "native",
                top: "top",
                bottom: "bottom"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.tab = function(r) {
            var o, a = e(e.isFunction(this) ? t : this), s = a.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], h = "string" == typeof u, d = [].slice.call(arguments, 1), p = !1;
            return a.each(function() {
                var f, m, g, v, E, y, b = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.tab.settings, r) : e.extend({}, e.fn.tab.settings), T = b.className, x = b.metadata, R = b.selector, w = b.error, H = "." + b.namespace, M = "module-" + b.namespace, S = e(this), _ = {}, C = !0, A = 0, P = this, L = S.data(M);
                E = {
                    initialize: function() {
                        E.debug("Initializing tab menu item", S),
                        E.fix.callbacks(),
                        E.determineTabs(),
                        E.debug("Determining tabs", b.context, m),
                        b.auto && E.set.auto(),
                        E.bind.events(),
                        b.history && !p && (E.initializeHistory(),
                        p = !0),
                        E.instantiate()
                    },
                    instantiate: function() {
                        E.verbose("Storing instance of module", E),
                        L = E,
                        S.data(M, E)
                    },
                    destroy: function() {
                        E.debug("Destroying tabs", S),
                        S.removeData(M).off(H)
                    },
                    bind: {
                        events: function() {
                            e.isWindow(P) || (E.debug("Attaching tab activation events to element", S),
                            S.on("click" + H, E.event.click))
                        }
                    },
                    determineTabs: function() {
                        var t;
                        "parent" === b.context ? (S.closest(R.ui).length > 0 ? (t = S.closest(R.ui),
                        E.verbose("Using closest UI element as parent", t)) : t = S,
                        f = t.parent(),
                        E.verbose("Determined parent element for creating context", f)) : b.context ? (f = e(b.context),
                        E.verbose("Using selector for tab context", b.context, f)) : f = e("body"),
                        b.childrenOnly ? (m = f.children(R.tabs),
                        E.debug("Searching tab context children for tabs", f, m)) : (m = f.find(R.tabs),
                        E.debug("Searching tab context for tabs", f, m))
                    },
                    fix: {
                        callbacks: function() {
                            e.isPlainObject(r) && (r.onTabLoad || r.onTabInit) && (r.onTabLoad && (r.onLoad = r.onTabLoad,
                            delete r.onTabLoad,
                            E.error(w.legacyLoad, r.onLoad)),
                            r.onTabInit && (r.onFirstLoad = r.onTabInit,
                            delete r.onTabInit,
                            E.error(w.legacyInit, r.onFirstLoad)),
                            b = e.extend(!0, {}, e.fn.tab.settings, r))
                        }
                    },
                    initializeHistory: function() {
                        if (E.debug("Initializing page state"),
                        e.address === i)
                            return E.error(w.state),
                            !1;
                        if ("state" == b.historyType) {
                            if (E.debug("Using HTML5 to manage state"),
                            b.path === !1)
                                return E.error(w.path),
                                !1;
                            e.address.history(!0).state(b.path)
                        }
                        e.address.bind("change", E.event.history.change)
                    },
                    event: {
                        click: function(t) {
                            var n = e(this).data(x.tab);
                            n !== i ? (b.history ? (E.verbose("Updating page state", t),
                            e.address.value(n)) : (E.verbose("Changing tab", t),
                            E.changeTab(n)),
                            t.preventDefault()) : E.debug("No tab specified")
                        },
                        history: {
                            change: function(t) {
                                var n = t.pathNames.join("/") || E.get.initialPath()
                                  , r = b.templates.determineTitle(n) || !1;
                                E.performance.display(),
                                E.debug("History change event", n, t),
                                y = t,
                                n !== i && E.changeTab(n),
                                r && e.address.title(r)
                            }
                        }
                    },
                    refresh: function() {
                        g && (E.debug("Refreshing tab", g),
                        E.changeTab(g))
                    },
                    cache: {
                        read: function(e) {
                            return e !== i && _[e]
                        },
                        add: function(e, t) {
                            e = e || g,
                            E.debug("Adding cached content for", e),
                            _[e] = t
                        },
                        remove: function(e) {
                            e = e || g,
                            E.debug("Removing cached content for", e),
                            delete _[e]
                        }
                    },
                    set: {
                        auto: function() {
                            var t = "string" == typeof b.path ? b.path.replace(/\/$/, "") + "/{$tab}" : "/{$tab}";
                            E.verbose("Setting up automatic tab retrieval from server", t),
                            e.isPlainObject(b.apiSettings) ? b.apiSettings.url = t : b.apiSettings = {
                                url: t
                            }
                        },
                        loading: function(e) {
                            var t = E.get.tabElement(e)
                              , n = t.hasClass(T.loading);
                            n || (E.verbose("Setting loading state for", t),
                            t.addClass(T.loading).siblings(m).removeClass(T.active + " " + T.loading),
                            t.length > 0 && b.onRequest.call(t[0], e))
                        },
                        state: function(t) {
                            e.address.value(t)
                        }
                    },
                    changeTab: function(n) {
                        var i = t.history && t.history.pushState
                          , r = i && b.ignoreFirstLoad && C
                          , o = b.auto || e.isPlainObject(b.apiSettings)
                          , a = o && !r ? E.utilities.pathToArray(n) : E.get.defaultPathArray(n);
                        n = E.utilities.arrayToPath(a),
                        e.each(a, function(t, i) {
                            var s, c, l, u, h = a.slice(0, t + 1), d = E.utilities.arrayToPath(h), p = E.is.tab(d), m = t + 1 == a.length, R = E.get.tabElement(d);
                            if (E.verbose("Looking for tab", i),
                            p) {
                                if (E.verbose("Tab was found", i),
                                g = d,
                                v = E.utilities.filterArray(a, h),
                                m ? u = !0 : (c = a.slice(0, t + 2),
                                l = E.utilities.arrayToPath(c),
                                u = !E.is.tab(l),
                                u && E.verbose("Tab parameters found", c)),
                                u && o)
                                    return r ? (E.debug("Ignoring remote content on first tab load", d),
                                    C = !1,
                                    E.cache.add(n, R.html()),
                                    E.activate.all(d),
                                    b.onFirstLoad.call(R[0], d, v, y),
                                    b.onLoad.call(R[0], d, v, y)) : (E.activate.navigation(d),
                                    E.fetch.content(d, n)),
                                    !1;
                                E.debug("Opened local tab", d),
                                E.activate.all(d),
                                E.cache.read(d) || (E.cache.add(d, !0),
                                E.debug("First time tab loaded calling tab init"),
                                b.onFirstLoad.call(R[0], d, v, y)),
                                b.onLoad.call(R[0], d, v, y)
                            } else {
                                if (n.search("/") != -1 || "" === n)
                                    return E.error(w.missingTab, S, f, d),
                                    !1;
                                if (s = e("#" + n + ', a[name="' + n + '"]'),
                                d = s.closest("[data-tab]").data(x.tab),
                                R = E.get.tabElement(d),
                                s && s.length > 0 && d)
                                    return E.debug("Anchor link used, opening parent tab", R, s),
                                    R.hasClass(T.active) || setTimeout(function() {
                                        E.scrollTo(s)
                                    }, 0),
                                    E.activate.all(d),
                                    E.cache.read(d) || (E.cache.add(d, !0),
                                    E.debug("First time tab loaded calling tab init"),
                                    b.onFirstLoad.call(R[0], d, v, y)),
                                    b.onLoad.call(R[0], d, v, y),
                                    !1
                            }
                        })
                    },
                    scrollTo: function(t) {
                        var i = !!(t && t.length > 0) && t.offset().top;
                        i !== !1 && (E.debug("Forcing scroll to an in-page link in a hidden tab", i, t),
                        e(n).scrollTop(i))
                    },
                    update: {
                        content: function(e, t, n) {
                            var r = E.get.tabElement(e)
                              , o = r[0];
                            n = n !== i ? n : b.evaluateScripts,
                            n ? (E.debug("Updating HTML and evaluating inline scripts", e, t),
                            r.html(t)) : (E.debug("Updating HTML", e, t),
                            o.innerHTML = t)
                        }
                    },
                    fetch: {
                        content: function(t, n) {
                            var r, o, a = E.get.tabElement(t), s = {
                                dataType: "html",
                                encodeParameters: !1,
                                on: "now",
                                cache: b.alwaysRefresh,
                                headers: {
                                    "X-Remote": !0
                                },
                                onSuccess: function(e) {
                                    E.cache.add(n, e),
                                    E.update.content(t, e),
                                    t == g ? (E.debug("Content loaded", t),
                                    E.activate.tab(t)) : E.debug("Content loaded in background", t),
                                    b.onFirstLoad.call(a[0], t, v, y),
                                    b.onLoad.call(a[0], t, v, y)
                                },
                                urlData: {
                                    tab: n
                                }
                            }, c = a.api("get request") || !1, l = c && "pending" === c.state();
                            n = n || t,
                            o = E.cache.read(n),
                            b.cache && o ? (E.activate.tab(t),
                            E.debug("Adding cached content", n),
                            "once" == b.evaluateScripts ? E.update.content(t, o, !1) : E.update.content(t, o),
                            b.onLoad.call(a[0], t, v, y)) : l ? (E.set.loading(t),
                            E.debug("Content is already loading", n)) : e.api !== i ? (r = e.extend(!0, {}, b.apiSettings, s),
                            E.debug("Retrieving remote content", n, r),
                            E.set.loading(t),
                            a.api(r)) : E.error(w.api)
                        }
                    },
                    activate: {
                        all: function(e) {
                            E.activate.tab(e),
                            E.activate.navigation(e)
                        },
                        tab: function(e) {
                            var t = E.get.tabElement(e)
                              , n = t.hasClass(T.active);
                            E.verbose("Showing tab content for", t),
                            n || (t.addClass(T.active).siblings(m).removeClass(T.active + " " + T.loading),
                            t.length > 0 && b.onVisible.call(t[0], e))
                        },
                        navigation: function(e) {
                            var t = E.get.navElement(e)
                              , n = t.hasClass(T.active);
                            E.verbose("Activating tab navigation for", t, e),
                            n || t.addClass(T.active).siblings(a).removeClass(T.active + " " + T.loading)
                        }
                    },
                    deactivate: {
                        all: function() {
                            E.deactivate.navigation(),
                            E.deactivate.tabs()
                        },
                        navigation: function() {
                            a.removeClass(T.active)
                        },
                        tabs: function() {
                            m.removeClass(T.active + " " + T.loading)
                        }
                    },
                    is: {
                        tab: function(e) {
                            return e !== i && E.get.tabElement(e).length > 0
                        }
                    },
                    get: {
                        initialPath: function() {
                            return a.eq(0).data(x.tab) || m.eq(0).data(x.tab)
                        },
                        path: function() {
                            return e.address.value()
                        },
                        defaultPathArray: function(e) {
                            return E.utilities.pathToArray(E.get.defaultPath(e))
                        },
                        defaultPath: function(e) {
                            var t = a.filter("[data-" + x.tab + '^="' + e + '/"]').eq(0)
                              , n = t.data(x.tab) || !1;
                            if (n) {
                                if (E.debug("Found default tab", n),
                                A < b.maxDepth)
                                    return A++,
                                    E.get.defaultPath(n);
                                E.error(w.recursion)
                            } else
                                E.debug("No default tabs found for", e, m);
                            return A = 0,
                            e
                        },
                        navElement: function(e) {
                            return e = e || g,
                            a.filter("[data-" + x.tab + '="' + e + '"]')
                        },
                        tabElement: function(e) {
                            var t, n, i, r;
                            return e = e || g,
                            i = E.utilities.pathToArray(e),
                            r = E.utilities.last(i),
                            t = m.filter("[data-" + x.tab + '="' + e + '"]'),
                            n = m.filter("[data-" + x.tab + '="' + r + '"]'),
                            t.length > 0 ? t : n
                        },
                        tab: function() {
                            return g
                        }
                    },
                    utilities: {
                        filterArray: function(t, n) {
                            return e.grep(t, function(t) {
                                return e.inArray(t, n) == -1
                            })
                        },
                        last: function(t) {
                            return !!e.isArray(t) && t[t.length - 1]
                        },
                        pathToArray: function(e) {
                            return e === i && (e = g),
                            "string" == typeof e ? e.split("/") : [e]
                        },
                        arrayToPath: function(t) {
                            return !!e.isArray(t) && t.join("/")
                        }
                    },
                    setting: function(t, n) {
                        if (E.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, b, t);
                        else {
                            if (n === i)
                                return b[t];
                            b[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, E, t);
                        else {
                            if (n === i)
                                return E[t];
                            E[t] = n
                        }
                    },
                    debug: function() {
                        b.debug && (b.performance ? E.performance.log(arguments) : (E.debug = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        E.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        b.verbose && b.debug && (b.performance ? E.performance.log(arguments) : (E.verbose = Function.prototype.bind.call(console.info, console, b.name + ":"),
                        E.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        E.error = Function.prototype.bind.call(console.error, console, b.name + ":"),
                        E.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            b.performance && (t = (new Date).getTime(),
                            i = c || t,
                            n = t - i,
                            c = t,
                            l.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: P,
                                "Execution Time": n
                            })),
                            clearTimeout(E.performance.timer),
                            E.performance.timer = setTimeout(E.performance.display, 500)
                        },
                        display: function() {
                            var t = b.name + ":"
                              , n = 0;
                            c = !1,
                            clearTimeout(E.performance.timer),
                            e.each(l, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            s && (t += " '" + s + "'"),
                            (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(l) : e.each(l, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            l = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = L;
                        return n = n || d,
                        r = P || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (E.error(w.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                h ? (L === i && E.initialize(),
                E.invoke(u)) : (L !== i && L.invoke("destroy"),
                E.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.tab = function() {
            e(t).tab.apply(this, arguments)
        }
        ,
        e.fn.tab.settings = {
            name: "Tab",
            namespace: "tab",
            debug: !1,
            verbose: !1,
            performance: !0,
            auto: !1,
            history: !1,
            historyType: "hash",
            path: !1,
            context: !1,
            childrenOnly: !1,
            maxDepth: 25,
            alwaysRefresh: !1,
            cache: !0,
            ignoreFirstLoad: !1,
            apiSettings: !1,
            evaluateScripts: "once",
            onFirstLoad: function(e, t, n) {},
            onLoad: function(e, t, n) {},
            onVisible: function(e, t, n) {},
            onRequest: function(e, t, n) {},
            templates: {
                determineTitle: function(e) {}
            },
            error: {
                api: "You attempted to load content without API module",
                method: "The method you called is not defined",
                missingTab: "Activated tab cannot be found. Tabs are case-sensitive.",
                noContent: "The tab you specified is missing a content url.",
                path: "History enabled, but no path was specified",
                recursion: "Max recursive depth reached",
                legacyInit: "onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.",
                legacyLoad: "onTabLoad has been renamed to onLoad in 2.0. Please adjust your code",
                state: "History requires Asual's Address library <https://github.com/asual/jquery-address>"
            },
            metadata: {
                tab: "tab",
                loaded: "loaded",
                promise: "promise"
            },
            className: {
                loading: "loading",
                active: "active"
            },
            selector: {
                tabs: ".ui.tab",
                ui: ".ui"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.transition = function() {
            var r, o = e(this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments, u = l[0], h = [].slice.call(arguments, 1), d = "string" == typeof u;
            t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                setTimeout(e, 0)
            }
            ;
            return o.each(function(t) {
                var p, f, m, g, v, E, y, b, T, x = e(this), R = this;
                T = {
                    initialize: function() {
                        p = T.get.settings.apply(R, l),
                        g = p.className,
                        m = p.error,
                        v = p.metadata,
                        b = "." + p.namespace,
                        y = "module-" + p.namespace,
                        f = x.data(y) || T,
                        E = T.get.animationEndEvent(),
                        d && (d = T.invoke(u)),
                        d === !1 && (T.verbose("Converted arguments into settings object", p),
                        p.interval ? T.delay(p.animate) : T.animate(),
                        T.instantiate())
                    },
                    instantiate: function() {
                        T.verbose("Storing instance of module", T),
                        f = T,
                        x.data(y, f)
                    },
                    destroy: function() {
                        T.verbose("Destroying previous module for", R),
                        x.removeData(y)
                    },
                    refresh: function() {
                        T.verbose("Refreshing display type on next animation"),
                        delete T.displayType
                    },
                    forceRepaint: function() {
                        T.verbose("Forcing element repaint");
                        var e = x.parent()
                          , t = x.next();
                        0 === t.length ? x.detach().appendTo(e) : x.detach().insertBefore(t)
                    },
                    repaint: function() {
                        T.verbose("Repainting element");
                        R.offsetWidth
                    },
                    delay: function(e) {
                        var n, r, a = T.get.animationDirection();
                        a || (a = T.can.transition() ? T.get.direction() : "static"),
                        e = e !== i ? e : p.interval,
                        n = "auto" == p.reverse && a == g.outward,
                        r = n || 1 == p.reverse ? (o.length - t) * p.interval : t * p.interval,
                        T.debug("Delaying animation by", r),
                        setTimeout(T.animate, r)
                    },
                    animate: function(e) {
                        if (p = e || p,
                        !T.is.supported())
                            return T.error(m.support),
                            !1;
                        if (T.debug("Preparing animation", p.animation),
                        T.is.animating()) {
                            if (p.queue)
                                return !p.allowRepeats && T.has.direction() && T.is.occurring() && T.queuing !== !0 ? T.debug("Animation is currently occurring, preventing queueing same animation", p.animation) : T.queue(p.animation),
                                !1;
                            if (!p.allowRepeats && T.is.occurring())
                                return T.debug("Animation is already occurring, will not execute repeated animation", p.animation),
                                !1;
                            T.debug("New animation started, completing previous early", p.animation),
                            f.complete()
                        }
                        T.can.animate() ? T.set.animating(p.animation) : T.error(m.noAnimation, p.animation, R)
                    },
                    reset: function() {
                        T.debug("Resetting animation to beginning conditions"),
                        T.remove.animationCallbacks(),
                        T.restore.conditions(),
                        T.remove.animating()
                    },
                    queue: function(e) {
                        T.debug("Queueing animation of", e),
                        T.queuing = !0,
                        x.one(E + ".queue" + b, function() {
                            T.queuing = !1,
                            T.repaint(),
                            T.animate.apply(this, p)
                        })
                    },
                    complete: function(e) {
                        T.debug("Animation complete", p.animation),
                        T.remove.completeCallback(),
                        T.remove.failSafe(),
                        T.is.looping() || (T.is.outward() ? (T.verbose("Animation is outward, hiding element"),
                        T.restore.conditions(),
                        T.hide()) : T.is.inward() ? (T.verbose("Animation is outward, showing element"),
                        T.restore.conditions(),
                        T.show()) : (T.verbose("Static animation completed"),
                        T.restore.conditions(),
                        p.onComplete.call(R)))
                    },
                    force: {
                        visible: function() {
                            var e = x.attr("style")
                              , t = T.get.userStyle()
                              , n = T.get.displayType()
                              , r = t + "display: " + n + " !important;"
                              , o = x.css("display")
                              , a = e === i || "" === e;
                            o !== n ? (T.verbose("Overriding default display to show element", n),
                            x.attr("style", r)) : a && x.removeAttr("style")
                        },
                        hidden: function() {
                            var e = x.attr("style")
                              , t = x.css("display")
                              , n = e === i || "" === e;
                            "none" === t || T.is.hidden() ? n && x.removeAttr("style") : (T.verbose("Overriding default display to hide element"),
                            x.css("display", "none"))
                        }
                    },
                    has: {
                        direction: function(t) {
                            var n = !1;
                            return t = t || p.animation,
                            "string" == typeof t && (t = t.split(" "),
                            e.each(t, function(e, t) {
                                t !== g.inward && t !== g.outward || (n = !0)
                            })),
                            n
                        },
                        inlineDisplay: function() {
                            var t = x.attr("style") || "";
                            return e.isArray(t.match(/display.*?;/, ""))
                        }
                    },
                    set: {
                        animating: function(e) {
                            var t;
                            T.remove.completeCallback(),
                            e = e || p.animation,
                            t = T.get.animationClass(e),
                            T.save.animation(t),
                            T.force.visible(),
                            T.remove.hidden(),
                            T.remove.direction(),
                            T.start.animation(t)
                        },
                        duration: function(e, t) {
                            t = t || p.duration,
                            t = "number" == typeof t ? t + "ms" : t,
                            (t || 0 === t) && (T.verbose("Setting animation duration", t),
                            x.css({
                                "animation-duration": t
                            }))
                        },
                        direction: function(e) {
                            e = e || T.get.direction(),
                            e == g.inward ? T.set.inward() : T.set.outward()
                        },
                        looping: function() {
                            T.debug("Transition set to loop"),
                            x.addClass(g.looping)
                        },
                        hidden: function() {
                            x.addClass(g.transition).addClass(g.hidden)
                        },
                        inward: function() {
                            T.debug("Setting direction to inward"),
                            x.removeClass(g.outward).addClass(g.inward)
                        },
                        outward: function() {
                            T.debug("Setting direction to outward"),
                            x.removeClass(g.inward).addClass(g.outward)
                        },
                        visible: function() {
                            x.addClass(g.transition).addClass(g.visible)
                        }
                    },
                    start: {
                        animation: function(e) {
                            e = e || T.get.animationClass(),
                            T.debug("Starting tween", e),
                            x.addClass(e).one(E + ".complete" + b, T.complete),
                            p.useFailSafe && T.add.failSafe(),
                            T.set.duration(p.duration),
                            p.onStart.call(R)
                        }
                    },
                    save: {
                        animation: function(e) {
                            T.cache || (T.cache = {}),
                            T.cache.animation = e
                        },
                        displayType: function(e) {
                            "none" !== e && x.data(v.displayType, e)
                        },
                        transitionExists: function(t, n) {
                            e.fn.transition.exists[t] = n,
                            T.verbose("Saving existence of transition", t, n)
                        }
                    },
                    restore: {
                        conditions: function() {
                            var e = T.get.currentAnimation();
                            e && (x.removeClass(e),
                            T.verbose("Removing animation class", T.cache)),
                            T.remove.duration()
                        }
                    },
                    add: {
                        failSafe: function() {
                            var e = T.get.duration();
                            T.timer = setTimeout(function() {
                                x.triggerHandler(E)
                            }, e + p.failSafeDelay),
                            T.verbose("Adding fail safe timer", T.timer)
                        }
                    },
                    remove: {
                        animating: function() {
                            x.removeClass(g.animating)
                        },
                        animationCallbacks: function() {
                            T.remove.queueCallback(),
                            T.remove.completeCallback()
                        },
                        queueCallback: function() {
                            x.off(".queue" + b)
                        },
                        completeCallback: function() {
                            x.off(".complete" + b)
                        },
                        display: function() {
                            x.css("display", "")
                        },
                        direction: function() {
                            x.removeClass(g.inward).removeClass(g.outward)
                        },
                        duration: function() {
                            x.css("animation-duration", "")
                        },
                        failSafe: function() {
                            T.verbose("Removing fail safe timer", T.timer),
                            T.timer && clearTimeout(T.timer)
                        },
                        hidden: function() {
                            x.removeClass(g.hidden)
                        },
                        visible: function() {
                            x.removeClass(g.visible)
                        },
                        looping: function() {
                            T.debug("Transitions are no longer looping"),
                            T.is.looping() && (T.reset(),
                            x.removeClass(g.looping))
                        },
                        transition: function() {
                            x.removeClass(g.visible).removeClass(g.hidden)
                        }
                    },
                    get: {
                        settings: function(t, n, i) {
                            return "object" == typeof t ? e.extend(!0, {}, e.fn.transition.settings, t) : "function" == typeof i ? e.extend({}, e.fn.transition.settings, {
                                animation: t,
                                onComplete: i,
                                duration: n
                            }) : "string" == typeof n || "number" == typeof n ? e.extend({}, e.fn.transition.settings, {
                                animation: t,
                                duration: n
                            }) : "object" == typeof n ? e.extend({}, e.fn.transition.settings, n, {
                                animation: t
                            }) : "function" == typeof n ? e.extend({}, e.fn.transition.settings, {
                                animation: t,
                                onComplete: n
                            }) : e.extend({}, e.fn.transition.settings, {
                                animation: t
                            })
                        },
                        animationClass: function(e) {
                            var t = e || p.animation
                              , n = T.can.transition() && !T.has.direction() ? T.get.direction() + " " : "";
                            return g.animating + " " + g.transition + " " + n + t
                        },
                        currentAnimation: function() {
                            return !(!T.cache || T.cache.animation === i) && T.cache.animation
                        },
                        currentDirection: function() {
                            return T.is.inward() ? g.inward : g.outward
                        },
                        direction: function() {
                            return T.is.hidden() || !T.is.visible() ? g.inward : g.outward
                        },
                        animationDirection: function(t) {
                            var n;
                            return t = t || p.animation,
                            "string" == typeof t && (t = t.split(" "),
                            e.each(t, function(e, t) {
                                t === g.inward ? n = g.inward : t === g.outward && (n = g.outward)
                            })),
                            !!n && n
                        },
                        duration: function(e) {
                            return e = e || p.duration,
                            e === !1 && (e = x.css("animation-duration") || 0),
                            "string" == typeof e ? e.indexOf("ms") > -1 ? parseFloat(e) : 1e3 * parseFloat(e) : e
                        },
                        displayType: function() {
                            return p.displayType ? p.displayType : (x.data(v.displayType) === i && T.can.transition(!0),
                            x.data(v.displayType))
                        },
                        userStyle: function(e) {
                            return e = e || x.attr("style") || "",
                            e.replace(/display.*?;/, "")
                        },
                        transitionExists: function(t) {
                            return e.fn.transition.exists[t]
                        },
                        animationStartEvent: function() {
                            var e, t = n.createElement("div"), r = {
                                animation: "animationstart",
                                OAnimation: "oAnimationStart",
                                MozAnimation: "mozAnimationStart",
                                WebkitAnimation: "webkitAnimationStart"
                            };
                            for (e in r)
                                if (t.style[e] !== i)
                                    return r[e];
                            return !1
                        },
                        animationEndEvent: function() {
                            var e, t = n.createElement("div"), r = {
                                animation: "animationend",
                                OAnimation: "oAnimationEnd",
                                MozAnimation: "mozAnimationEnd",
                                WebkitAnimation: "webkitAnimationEnd"
                            };
                            for (e in r)
                                if (t.style[e] !== i)
                                    return r[e];
                            return !1
                        }
                    },
                    can: {
                        transition: function(t) {
                            var n, r, o, a, s, c, l, u = p.animation, h = T.get.transitionExists(u);
                            if (h === i || t) {
                                if (T.verbose("Determining whether animation exists"),
                                n = x.attr("class"),
                                r = x.prop("tagName"),
                                o = e("<" + r + " />").addClass(n).insertAfter(x),
                                a = o.addClass(u).removeClass(g.inward).removeClass(g.outward).addClass(g.animating).addClass(g.transition).css("animationName"),
                                s = o.addClass(g.inward).css("animationName"),
                                l = o.attr("class", n).removeAttr("style").removeClass(g.hidden).removeClass(g.visible).show().css("display"),
                                T.verbose("Determining final display state", l),
                                T.save.displayType(l),
                                o.remove(),
                                a != s)
                                    T.debug("Direction exists for animation", u),
                                    c = !0;
                                else {
                                    if ("none" == a || !a)
                                        return void T.debug("No animation defined in css", u);
                                    T.debug("Static animation found", u, l),
                                    c = !1
                                }
                                T.save.transitionExists(u, c)
                            }
                            return h !== i ? h : c
                        },
                        animate: function() {
                            return T.can.transition() !== i
                        }
                    },
                    is: {
                        animating: function() {
                            return x.hasClass(g.animating)
                        },
                        inward: function() {
                            return x.hasClass(g.inward)
                        },
                        outward: function() {
                            return x.hasClass(g.outward)
                        },
                        looping: function() {
                            return x.hasClass(g.looping)
                        },
                        occurring: function(e) {
                            return e = e || p.animation,
                            e = "." + e.replace(" ", "."),
                            x.filter(e).length > 0
                        },
                        visible: function() {
                            return x.is(":visible")
                        },
                        hidden: function() {
                            return "hidden" === x.css("visibility")
                        },
                        supported: function() {
                            return E !== !1
                        }
                    },
                    hide: function() {
                        T.verbose("Hiding element"),
                        T.is.animating() && T.reset(),
                        R.blur(),
                        T.remove.display(),
                        T.remove.visible(),
                        T.set.hidden(),
                        T.force.hidden(),
                        p.onHide.call(R),
                        p.onComplete.call(R)
                    },
                    show: function(e) {
                        T.verbose("Showing element", e),
                        T.remove.hidden(),
                        T.set.visible(),
                        T.force.visible(),
                        p.onShow.call(R),
                        p.onComplete.call(R)
                    },
                    toggle: function() {
                        T.is.visible() ? T.hide() : T.show()
                    },
                    stop: function() {
                        T.debug("Stopping current animation"),
                        x.triggerHandler(E)
                    },
                    stopAll: function() {
                        T.debug("Stopping all animation"),
                        T.remove.queueCallback(),
                        x.triggerHandler(E)
                    },
                    clear: {
                        queue: function() {
                            T.debug("Clearing animation queue"),
                            T.remove.queueCallback()
                        }
                    },
                    enable: function() {
                        T.verbose("Starting animation"),
                        x.removeClass(g.disabled)
                    },
                    disable: function() {
                        T.debug("Stopping animation"),
                        x.addClass(g.disabled)
                    },
                    setting: function(t, n) {
                        if (T.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, p, t);
                        else {
                            if (n === i)
                                return p[t];
                            p[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, T, t);
                        else {
                            if (n === i)
                                return T[t];
                            T[t] = n
                        }
                    },
                    debug: function() {
                        p.debug && (p.performance ? T.performance.log(arguments) : (T.debug = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        T.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        p.verbose && p.debug && (p.performance ? T.performance.log(arguments) : (T.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"),
                        T.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        T.error = Function.prototype.bind.call(console.error, console, p.name + ":"),
                        T.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            p.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: R,
                                "Execution Time": n
                            })),
                            clearTimeout(T.performance.timer),
                            T.performance.timer = setTimeout(T.performance.display, 500)
                        },
                        display: function() {
                            var t = p.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(T.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            o.length > 1 && (t += " (" + o.length + ")"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = f;
                        return n = n || h,
                        o = R || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i && (s = l[r],
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s !== i && s
                    }
                },
                T.initialize()
            }),
            r !== i ? r : this
        }
        ,
        e.fn.transition.exists = {},
        e.fn.transition.settings = {
            name: "Transition",
            debug: !1,
            verbose: !1,
            performance: !0,
            namespace: "transition",
            interval: 0,
            reverse: "auto",
            onStart: function() {},
            onComplete: function() {},
            onShow: function() {},
            onHide: function() {},
            useFailSafe: !0,
            failSafeDelay: 100,
            allowRepeats: !1,
            displayType: !1,
            animation: "fade",
            duration: !1,
            queue: !0,
            metadata: {
                displayType: "display"
            },
            className: {
                animating: "animating",
                disabled: "disabled",
                hidden: "hidden",
                inward: "in",
                loading: "loading",
                looping: "looping",
                outward: "out",
                transition: "transition",
                visible: "visible"
            },
            error: {
                noAnimation: "Element is no longer attached to DOM. Unable to animate.",
                repeated: "That animation is already occurring, cancelling repeated animation",
                method: "The method you called is not defined",
                support: "This browser does not support CSS animations"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.api = e.fn.api = function(n) {
            var r, o = e(e.isFunction(this) ? t : this), a = o.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var o, d, p, f, m, g, v = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.api.settings, n) : e.extend({}, e.fn.api.settings), E = v.namespace, y = v.metadata, b = v.selector, T = v.error, x = v.className, R = "." + E, w = "module-" + E, H = e(this), M = H.closest(b.form), S = v.stateContext ? e(v.stateContext) : H, _ = this, C = S[0], A = H.data(w);
                g = {
                    initialize: function() {
                        u || g.bind.events(),
                        g.instantiate()
                    },
                    instantiate: function() {
                        g.verbose("Storing instance of module", g),
                        A = g,
                        H.data(w, A)
                    },
                    destroy: function() {
                        g.verbose("Destroying previous module for", _),
                        H.removeData(w).off(R)
                    },
                    bind: {
                        events: function() {
                            var e = g.get.event();
                            e ? (g.verbose("Attaching API events to element", e),
                            H.on(e + R, g.event.trigger)) : "now" == v.on && (g.debug("Querying API endpoint immediately"),
                            g.query())
                        }
                    },
                    decode: {
                        json: function(e) {
                            if (e !== i && "string" == typeof e)
                                try {
                                    e = JSON.parse(e)
                                } catch (e) {}
                            return e
                        }
                    },
                    read: {
                        cachedResponse: function(e) {
                            var n;
                            return t.Storage === i ? void g.error(T.noStorage) : (n = sessionStorage.getItem(e),
                            g.debug("Using cached response", e, n),
                            n = g.decode.json(n),
                            !1)
                        }
                    },
                    write: {
                        cachedResponse: function(n, r) {
                            return r && "" === r ? void g.debug("Response empty, not caching", r) : t.Storage === i ? void g.error(T.noStorage) : (e.isPlainObject(r) && (r = JSON.stringify(r)),
                            sessionStorage.setItem(n, r),
                            void g.verbose("Storing cached response for url", n, r))
                        }
                    },
                    query: function() {
                        if (g.is.disabled())
                            return void g.debug("Element is disabled API request aborted");
                        if (g.is.loading()) {
                            if (!v.interruptRequests)
                                return void g.debug("Cancelling request, previous request is still pending");
                            g.debug("Interrupting previous request"),
                            g.abort()
                        }
                        return v.defaultData && e.extend(!0, v.urlData, g.get.defaultData()),
                        v.serializeForm && (v.data = g.add.formData(v.data)),
                        d = g.get.settings(),
                        d === !1 ? (g.cancelled = !0,
                        void g.error(T.beforeSend)) : (g.cancelled = !1,
                        p = g.get.templatedURL(),
                        p || g.is.mocked() ? (p = g.add.urlData(p),
                        p || g.is.mocked() ? (d.url = v.base + p,
                        o = e.extend(!0, {}, v, {
                            type: v.method || v.type,
                            data: f,
                            url: v.base + p,
                            beforeSend: v.beforeXHR,
                            success: function() {},
                            failure: function() {},
                            complete: function() {}
                        }),
                        g.debug("Querying URL", o.url),
                        g.verbose("Using AJAX settings", o),
                        "local" === v.cache && g.read.cachedResponse(p) ? (g.debug("Response returned from local cache"),
                        g.request = g.create.request(),
                        void g.request.resolveWith(C, [g.read.cachedResponse(p)])) : void (v.throttle ? v.throttleFirstRequest || g.timer ? (g.debug("Throttling request", v.throttle),
                        clearTimeout(g.timer),
                        g.timer = setTimeout(function() {
                            g.timer && delete g.timer,
                            g.debug("Sending throttled request", f, o.method),
                            g.send.request()
                        }, v.throttle)) : (g.debug("Sending request", f, o.method),
                        g.send.request(),
                        g.timer = setTimeout(function() {}, v.throttle)) : (g.debug("Sending request", f, o.method),
                        g.send.request()))) : void 0) : void g.error(T.missingURL))
                    },
                    should: {
                        removeError: function() {
                            return v.hideError === !0 || "auto" === v.hideError && !g.is.form()
                        }
                    },
                    is: {
                        disabled: function() {
                            return H.filter(b.disabled).length > 0
                        },
                        form: function() {
                            return H.is("form") || S.is("form")
                        },
                        mocked: function() {
                            return v.mockResponse || v.mockResponseAsync || v.response || v.responseAsync
                        },
                        input: function() {
                            return H.is("input")
                        },
                        loading: function() {
                            return g.request && "pending" == g.request.state()
                        },
                        abortedRequest: function(e) {
                            return e && e.readyState !== i && 0 === e.readyState ? (g.verbose("XHR request determined to be aborted"),
                            !0) : (g.verbose("XHR request was not aborted"),
                            !1)
                        },
                        validResponse: function(t) {
                            return "json" !== v.dataType && "jsonp" !== v.dataType || !e.isFunction(v.successTest) ? (g.verbose("Response is not JSON, skipping validation", v.successTest, t),
                            !0) : (g.debug("Checking JSON returned success", v.successTest, t),
                            v.successTest(t) ? (g.debug("Response passed success test", t),
                            !0) : (g.debug("Response failed success test", t),
                            !1))
                        }
                    },
                    was: {
                        cancelled: function() {
                            return g.cancelled || !1
                        },
                        succesful: function() {
                            return g.request && "resolved" == g.request.state()
                        },
                        failure: function() {
                            return g.request && "rejected" == g.request.state()
                        },
                        complete: function() {
                            return g.request && ("resolved" == g.request.state() || "rejected" == g.request.state())
                        }
                    },
                    add: {
                        urlData: function(t, n) {
                            var r, o;
                            return t && (r = t.match(v.regExp.required),
                            o = t.match(v.regExp.optional),
                            n = n || v.urlData,
                            r && (g.debug("Looking for required URL variables", r),
                            e.each(r, function(r, o) {
                                var a = o.indexOf("$") !== -1 ? o.substr(2, o.length - 3) : o.substr(1, o.length - 2)
                                  , s = e.isPlainObject(n) && n[a] !== i ? n[a] : H.data(a) !== i ? H.data(a) : S.data(a) !== i ? S.data(a) : n[a];
                                return s === i ? (g.error(T.requiredParameter, a, t),
                                t = !1,
                                !1) : (g.verbose("Found required variable", a, s),
                                s = v.encodeParameters ? g.get.urlEncodedValue(s) : s,
                                t = t.replace(o, s),
                                void 0)
                            })),
                            o && (g.debug("Looking for optional URL variables", r),
                            e.each(o, function(r, o) {
                                var a = o.indexOf("$") !== -1 ? o.substr(3, o.length - 4) : o.substr(2, o.length - 3)
                                  , s = e.isPlainObject(n) && n[a] !== i ? n[a] : H.data(a) !== i ? H.data(a) : S.data(a) !== i ? S.data(a) : n[a];
                                s !== i ? (g.verbose("Optional variable Found", a, s),
                                t = t.replace(o, s)) : (g.verbose("Optional variable not found", a),
                                t = t.indexOf("/" + o) !== -1 ? t.replace("/" + o, "") : t.replace(o, ""))
                            }))),
                            t
                        },
                        formData: function(t) {
                            var n, r = e.fn.serializeObject !== i, o = r ? M.serializeObject() : M.serialize();
                            return t = t || v.data,
                            n = e.isPlainObject(t),
                            n ? r ? (g.debug("Extending existing data with form data", t, o),
                            t = e.extend(!0, {}, t, o)) : (g.error(T.missingSerialize),
                            g.debug("Cant extend data. Replacing data with form data", t, o),
                            t = o) : (g.debug("Adding form data", o),
                            t = o),
                            t
                        }
                    },
                    send: {
                        request: function() {
                            g.set.loading(),
                            g.request = g.create.request(),
                            g.is.mocked() ? g.mockedXHR = g.create.mockedXHR() : g.xhr = g.create.xhr(),
                            v.onRequest.call(C, g.request, g.xhr)
                        }
                    },
                    event: {
                        trigger: function(e) {
                            g.query(),
                            "submit" != e.type && "click" != e.type || e.preventDefault()
                        },
                        xhr: {
                            always: function() {},
                            done: function(t, n, i) {
                                var r = this
                                  , o = (new Date).getTime() - m
                                  , a = v.loadingDuration - o
                                  , s = !!e.isFunction(v.onResponse) && v.onResponse.call(r, e.extend(!0, {}, t));
                                a = a > 0 ? a : 0,
                                s && (g.debug("Modified API response in onResponse callback", v.onResponse, s, t),
                                t = s),
                                a > 0 && g.debug("Response completed early delaying state change by", a),
                                setTimeout(function() {
                                    g.is.validResponse(t) ? g.request.resolveWith(r, [t, i]) : g.request.rejectWith(r, [i, "invalid"])
                                }, a)
                            },
                            fail: function(e, t, n) {
                                var i = this
                                  , r = (new Date).getTime() - m
                                  , o = v.loadingDuration - r;
                                o = o > 0 ? o : 0,
                                o > 0 && g.debug("Response completed early delaying state change by", o),
                                setTimeout(function() {
                                    g.is.abortedRequest(e) ? g.request.rejectWith(i, [e, "aborted", n]) : g.request.rejectWith(i, [e, "error", t, n])
                                }, o)
                            }
                        },
                        request: {
                            done: function(e, t) {
                                g.debug("Successful API Response", e),
                                "local" === v.cache && p && (g.write.cachedResponse(p, e),
                                g.debug("Saving server response locally", g.cache)),
                                v.onSuccess.call(C, e, H, t)
                            },
                            complete: function(e, t) {
                                var n, i;
                                g.was.succesful() ? (i = e,
                                n = t) : (n = e,
                                i = g.get.responseFromXHR(n)),
                                g.remove.loading(),
                                v.onComplete.call(C, i, H, n)
                            },
                            fail: function(e, t, n) {
                                var r = g.get.responseFromXHR(e)
                                  , a = g.get.errorFromRequest(r, t, n);
                                "aborted" == t ? (g.debug("XHR Aborted (Most likely caused by page navigation or CORS Policy)", t, n),
                                v.onAbort.call(C, t, H, e)) : "invalid" == t ? g.debug("JSON did not pass success test. A server-side error has most likely occurred", r) : "error" == t && e !== i && (g.debug("XHR produced a server error", t, n),
                                200 != e.status && n !== i && "" !== n && g.error(T.statusMessage + n, o.url),
                                v.onError.call(C, a, H, e)),
                                v.errorDuration && "aborted" !== t && (g.debug("Adding error state"),
                                g.set.error(),
                                g.should.removeError() && setTimeout(g.remove.error, v.errorDuration)),
                                g.debug("API Request failed", a, e),
                                v.onFailure.call(C, r, H, e)
                            }
                        }
                    },
                    create: {
                        request: function() {
                            return e.Deferred().always(g.event.request.complete).done(g.event.request.done).fail(g.event.request.fail)
                        },
                        mockedXHR: function() {
                            var t, n, i, r = !1, o = !1, a = !1, s = v.mockResponse || v.response, c = v.mockResponseAsync || v.responseAsync;
                            return i = e.Deferred().always(g.event.xhr.complete).done(g.event.xhr.done).fail(g.event.xhr.fail),
                            s ? (e.isFunction(s) ? (g.debug("Using specified synchronous callback", s),
                            n = s.call(C, d)) : (g.debug("Using settings specified response", s),
                            n = s),
                            i.resolveWith(C, [n, r, {
                                responseText: n
                            }])) : e.isFunction(c) && (t = function(e) {
                                g.debug("Async callback returned response", e),
                                e ? i.resolveWith(C, [e, r, {
                                    responseText: e
                                }]) : i.rejectWith(C, [{
                                    responseText: e
                                }, o, a])
                            }
                            ,
                            g.debug("Using specified async response callback", c),
                            c.call(C, d, t)),
                            i
                        },
                        xhr: function() {
                            var t;
                            return t = e.ajax(o).always(g.event.xhr.always).done(g.event.xhr.done).fail(g.event.xhr.fail),
                            g.verbose("Created server request", t),
                            t
                        }
                    },
                    set: {
                        error: function() {
                            g.verbose("Adding error state to element", S),
                            S.addClass(x.error)
                        },
                        loading: function() {
                            g.verbose("Adding loading state to element", S),
                            S.addClass(x.loading),
                            m = (new Date).getTime()
                        }
                    },
                    remove: {
                        error: function() {
                            g.verbose("Removing error state from element", S),
                            S.removeClass(x.error)
                        },
                        loading: function() {
                            g.verbose("Removing loading state from element", S),
                            S.removeClass(x.loading)
                        }
                    },
                    get: {
                        responseFromXHR: function(t) {
                            return !!e.isPlainObject(t) && ("json" == v.dataType || "jsonp" == v.dataType ? g.decode.json(t.responseText) : t.responseText)
                        },
                        errorFromRequest: function(t, n, r) {
                            return e.isPlainObject(t) && t.error !== i ? t.error : v.error[n] !== i ? v.error[n] : r
                        },
                        request: function() {
                            return g.request || !1
                        },
                        xhr: function() {
                            return g.xhr || !1
                        },
                        settings: function() {
                            var t;
                            return t = v.beforeSend.call(C, v),
                            t && (t.success !== i && (g.debug("Legacy success callback detected", t),
                            g.error(T.legacyParameters, t.success),
                            t.onSuccess = t.success),
                            t.failure !== i && (g.debug("Legacy failure callback detected", t),
                            g.error(T.legacyParameters, t.failure),
                            t.onFailure = t.failure),
                            t.complete !== i && (g.debug("Legacy complete callback detected", t),
                            g.error(T.legacyParameters, t.complete),
                            t.onComplete = t.complete)),
                            t === i && g.error(T.noReturnedValue),
                            t !== i ? e.extend(!0, {}, t) : e.extend(!0, {}, v)
                        },
                        urlEncodedValue: function(e) {
                            var n = t.decodeURIComponent(e)
                              , i = t.encodeURIComponent(e)
                              , r = n !== e;
                            return r ? (g.debug("URL value is already encoded, avoiding double encoding", e),
                            e) : (g.verbose("Encoding value using encodeURIComponent", e, i),
                            i)
                        },
                        defaultData: function() {
                            var t = {};
                            return e.isWindow(_) || (g.is.input() ? t.value = H.val() : g.is.form() && (t.text = H.text())),
                            t
                        },
                        event: function() {
                            return e.isWindow(_) || "now" == v.on ? (g.debug("API called without element, no events attached"),
                            !1) : "auto" == v.on ? H.is("input") ? _.oninput !== i ? "input" : _.onpropertychange !== i ? "propertychange" : "keyup" : H.is("form") ? "submit" : "click" : v.on
                        },
                        templatedURL: function(e) {
                            if (e = e || H.data(y.action) || v.action || !1,
                            p = H.data(y.url) || v.url || !1)
                                return g.debug("Using specified url", p),
                                p;
                            if (e) {
                                if (g.debug("Looking up url for action", e, v.api),
                                v.api[e] === i && !g.is.mocked())
                                    return void g.error(T.missingAction, v.action, v.api);
                                p = v.api[e]
                            } else
                                g.is.form() && (p = H.attr("action") || S.attr("action") || !1,
                                g.debug("No url or action specified, defaulting to form action", p));
                            return p
                        }
                    },
                    abort: function() {
                        var e = g.get.xhr();
                        e && "resolved" !== e.state() && (g.debug("Cancelling API request"),
                        e.abort())
                    },
                    reset: function() {
                        g.remove.error(),
                        g.remove.loading()
                    },
                    setting: function(t, n) {
                        if (g.debug("Changing setting", t, n),
                        e.isPlainObject(t))
                            e.extend(!0, v, t);
                        else {
                            if (n === i)
                                return v[t];
                            v[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, g, t);
                        else {
                            if (n === i)
                                return g[t];
                            g[t] = n
                        }
                    },
                    debug: function() {
                        v.debug && (v.performance ? g.performance.log(arguments) : (g.debug = Function.prototype.bind.call(console.info, console, v.name + ":"),
                        g.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        v.verbose && v.debug && (v.performance ? g.performance.log(arguments) : (g.verbose = Function.prototype.bind.call(console.info, console, v.name + ":"),
                        g.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        g.error = Function.prototype.bind.call(console.error, console, v.name + ":"),
                        g.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            v.performance && (t = (new Date).getTime(),
                            i = s || t,
                            n = t - i,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                "Execution Time": n
                            })),
                            clearTimeout(g.performance.timer),
                            g.performance.timer = setTimeout(g.performance.display, 500)
                        },
                        display: function() {
                            var t = v.name + ":"
                              , n = 0;
                            s = !1,
                            clearTimeout(g.performance.timer),
                            e.each(c, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            a && (t += " '" + a + "'"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, n, o) {
                        var a, s, c, l = A;
                        return n = n || h,
                        o = _ || o,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (g.error(T.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s),
                        e.isArray(r) ? r.push(c) : r !== i ? r = [r, c] : c !== i && (r = c),
                        s
                    }
                },
                u ? (A === i && g.initialize(),
                g.invoke(l)) : (A !== i && A.invoke("destroy"),
                g.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.api.settings = {
            name: "API",
            namespace: "api",
            debug: !1,
            verbose: !1,
            performance: !0,
            api: {},
            cache: !0,
            interruptRequests: !0,
            on: "auto",
            stateContext: !1,
            loadingDuration: 0,
            hideError: "auto",
            errorDuration: 2e3,
            encodeParameters: !0,
            action: !1,
            url: !1,
            base: "",
            urlData: {},
            defaultData: !0,
            serializeForm: !1,
            throttle: 0,
            throttleFirstRequest: !0,
            method: "get",
            data: {},
            dataType: "json",
            mockResponse: !1,
            mockResponseAsync: !1,
            response: !1,
            responseAsync: !1,
            beforeSend: function(e) {
                return e
            },
            beforeXHR: function(e) {},
            onRequest: function(e, t) {},
            onResponse: !1,
            onSuccess: function(e, t) {},
            onComplete: function(e, t) {},
            onFailure: function(e, t) {},
            onError: function(e, t) {},
            onAbort: function(e, t) {},
            successTest: !1,
            error: {
                beforeSend: "The before send function has aborted the request",
                error: "There was an error with your request",
                exitConditions: "API Request Aborted. Exit conditions met",
                JSONParse: "JSON could not be parsed during error handling",
                legacyParameters: "You are using legacy API success callback names",
                method: "The method you called is not defined",
                missingAction: "API action used but no url was defined",
                missingSerialize: "jquery-serialize-object is required to add form data to an existing data object",
                missingURL: "No URL specified for api event",
                noReturnedValue: "The beforeSend callback must return a settings object, beforeSend ignored.",
                noStorage: "Caching responses locally requires session storage",
                parseError: "There was an error parsing your request",
                requiredParameter: "Missing a required URL parameter: ",
                statusMessage: "Server gave an error: ",
                timeout: "Your request timed out"
            },
            regExp: {
                required: /\{\$*[A-z0-9]+\}/g,
                optional: /\{\/\$*[A-z0-9]+\}/g
            },
            className: {
                loading: "loading",
                error: "error"
            },
            selector: {
                disabled: ".disabled",
                form: "form"
            },
            metadata: {
                action: "action",
                url: "url"
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.state = function(t) {
            var r, o = e(this), a = o.selector || "", s = ("ontouchstart"in n.documentElement,
            (new Date).getTime()), c = [], l = arguments[0], u = "string" == typeof l, h = [].slice.call(arguments, 1);
            return o.each(function() {
                var n, d = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.state.settings, t) : e.extend({}, e.fn.state.settings), p = d.error, f = d.metadata, m = d.className, g = d.namespace, v = d.states, E = d.text, y = "." + g, b = g + "-module", T = e(this), x = this, R = T.data(b);
                n = {
                    initialize: function() {
                        n.verbose("Initializing module"),
                        d.automatic && n.add.defaults(),
                        d.context && "" !== a ? e(d.context).on(a, "mouseenter" + y, n.change.text).on(a, "mouseleave" + y, n.reset.text).on(a, "click" + y, n.toggle.state) : T.on("mouseenter" + y, n.change.text).on("mouseleave" + y, n.reset.text).on("click" + y, n.toggle.state),
                        n.instantiate()
                    },
                    instantiate: function() {
                        n.verbose("Storing instance of module", n),
                        R = n,
                        T.data(b, n)
                    },
                    destroy: function() {
                        n.verbose("Destroying previous module", R),
                        T.off(y).removeData(b)
                    },
                    refresh: function() {
                        n.verbose("Refreshing selector cache"),
                        T = e(x)
                    },
                    add: {
                        defaults: function() {
                            var r = t && e.isPlainObject(t.states) ? t.states : {};
                            e.each(d.defaults, function(t, o) {
                                n.is[t] !== i && n.is[t]() && (n.verbose("Adding default states", t, x),
                                e.extend(d.states, o, r))
                            })
                        }
                    },
                    is: {
                        active: function() {
                            return T.hasClass(m.active)
                        },
                        loading: function() {
                            return T.hasClass(m.loading)
                        },
                        inactive: function() {
                            return !T.hasClass(m.active)
                        },
                        state: function(e) {
                            return m[e] !== i && T.hasClass(m[e])
                        },
                        enabled: function() {
                            return !T.is(d.filter.active)
                        },
                        disabled: function() {
                            return T.is(d.filter.active)
                        },
                        textEnabled: function() {
                            return !T.is(d.filter.text)
                        },
                        button: function() {
                            return T.is(".button:not(a, .submit)")
                        },
                        input: function() {
                            return T.is("input")
                        },
                        progress: function() {
                            return T.is(".ui.progress")
                        }
                    },
                    allow: function(e) {
                        n.debug("Now allowing state", e),
                        v[e] = !0
                    },
                    disallow: function(e) {
                        n.debug("No longer allowing", e),
                        v[e] = !1
                    },
                    allows: function(e) {
                        return v[e] || !1
                    },
                    enable: function() {
                        T.removeClass(m.disabled)
                    },
                    disable: function() {
                        T.addClass(m.disabled)
                    },
                    setState: function(e) {
                        n.allows(e) && T.addClass(m[e])
                    },
                    removeState: function(e) {
                        n.allows(e) && T.removeClass(m[e])
                    },
                    toggle: {
                        state: function() {
                            var t, r;
                            if (n.allows("active") && n.is.enabled()) {
                                if (n.refresh(),
                                e.fn.api !== i)
                                    if (t = T.api("get request"),
                                    r = T.api("was cancelled"))
                                        n.debug("API Request cancelled by beforesend"),
                                        d.activateTest = function() {
                                            return !1
                                        }
                                        ,
                                        d.deactivateTest = function() {
                                            return !1
                                        }
                                        ;
                                    else if (t)
                                        return void n.listenTo(t);
                                n.change.state()
                            }
                        }
                    },
                    listenTo: function(t) {
                        n.debug("API request detected, waiting for state signal", t),
                        t && (E.loading && n.update.text(E.loading),
                        e.when(t).then(function() {
                            "resolved" == t.state() ? (n.debug("API request succeeded"),
                            d.activateTest = function() {
                                return !0
                            }
                            ,
                            d.deactivateTest = function() {
                                return !0
                            }
                            ) : (n.debug("API request failed"),
                            d.activateTest = function() {
                                return !1
                            }
                            ,
                            d.deactivateTest = function() {
                                return !1
                            }
                            ),
                            n.change.state()
                        }))
                    },
                    change: {
                        state: function() {
                            n.debug("Determining state change direction"),
                            n.is.inactive() ? n.activate() : n.deactivate(),
                            d.sync && n.sync(),
                            d.onChange.call(x)
                        },
                        text: function() {
                            n.is.textEnabled() && (n.is.disabled() ? (n.verbose("Changing text to disabled text", E.hover),
                            n.update.text(E.disabled)) : n.is.active() ? E.hover ? (n.verbose("Changing text to hover text", E.hover),
                            n.update.text(E.hover)) : E.deactivate && (n.verbose("Changing text to deactivating text", E.deactivate),
                            n.update.text(E.deactivate)) : E.hover ? (n.verbose("Changing text to hover text", E.hover),
                            n.update.text(E.hover)) : E.activate && (n.verbose("Changing text to activating text", E.activate),
                            n.update.text(E.activate)))
                        }
                    },
                    activate: function() {
                        d.activateTest.call(x) && (n.debug("Setting state to active"),
                        T.addClass(m.active),
                        n.update.text(E.active),
                        d.onActivate.call(x))
                    },
                    deactivate: function() {
                        d.deactivateTest.call(x) && (n.debug("Setting state to inactive"),
                        T.removeClass(m.active),
                        n.update.text(E.inactive),
                        d.onDeactivate.call(x))
                    },
                    sync: function() {
                        n.verbose("Syncing other buttons to current state"),
                        n.is.active() ? o.not(T).state("activate") : o.not(T).state("deactivate")
                    },
                    get: {
                        text: function() {
                            return d.selector.text ? T.find(d.selector.text).text() : T.html()
                        },
                        textFor: function(e) {
                            return E[e] || !1
                        }
                    },
                    flash: {
                        text: function(e, t, i) {
                            var r = n.get.text();
                            n.debug("Flashing text message", e, t),
                            e = e || d.text.flash,
                            t = t || d.flashDuration,
                            i = i || function() {}
                            ,
                            n.update.text(e),
                            setTimeout(function() {
                                n.update.text(r),
                                i.call(x)
                            }, t)
                        }
                    },
                    reset: {
                        text: function() {
                            var e = E.active || T.data(f.storedText)
                              , t = E.inactive || T.data(f.storedText);
                            n.is.textEnabled() && (n.is.active() && e ? (n.verbose("Resetting active text", e),
                            n.update.text(e)) : t && (n.verbose("Resetting inactive text", e),
                            n.update.text(t)))
                        }
                    },
                    update: {
                        text: function(e) {
                            var t = n.get.text();
                            e && e !== t ? (n.debug("Updating text", e),
                            d.selector.text ? T.data(f.storedText, e).find(d.selector.text).text(e) : T.data(f.storedText, e).html(e)) : n.debug("Text is already set, ignoring update", e)
                        }
                    },
                    setting: function(t, r) {
                        if (n.debug("Changing setting", t, r),
                        e.isPlainObject(t))
                            e.extend(!0, d, t);
                        else {
                            if (r === i)
                                return d[t];
                            d[t] = r
                        }
                    },
                    internal: function(t, r) {
                        if (e.isPlainObject(t))
                            e.extend(!0, n, t);
                        else {
                            if (r === i)
                                return n[t];
                            n[t] = r
                        }
                    },
                    debug: function() {
                        d.debug && (d.performance ? n.performance.log(arguments) : (n.debug = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        n.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        d.verbose && d.debug && (d.performance ? n.performance.log(arguments) : (n.verbose = Function.prototype.bind.call(console.info, console, d.name + ":"),
                        n.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        n.error = Function.prototype.bind.call(console.error, console, d.name + ":"),
                        n.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, i, r;
                            d.performance && (t = (new Date).getTime(),
                            r = s || t,
                            i = t - r,
                            s = t,
                            c.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: x,
                                "Execution Time": i
                            })),
                            clearTimeout(n.performance.timer),
                            n.performance.timer = setTimeout(n.performance.display, 500)
                        },
                        display: function() {
                            var t = d.name + ":"
                              , r = 0;
                            s = !1,
                            clearTimeout(n.performance.timer),
                            e.each(c, function(e, t) {
                                r += t["Execution Time"]
                            }),
                            t += " " + r + "ms",
                            a && (t += " '" + a + "'"),
                            (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(c) : e.each(c, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            c = []
                        }
                    },
                    invoke: function(t, o, a) {
                        var s, c, l, u = R;
                        return o = o || h,
                        a = x || a,
                        "string" == typeof t && u !== i && (t = t.split(/[\. ]/),
                        s = t.length - 1,
                        e.each(t, function(r, o) {
                            var a = r != s ? o + t[r + 1].charAt(0).toUpperCase() + t[r + 1].slice(1) : t;
                            if (e.isPlainObject(u[a]) && r != s)
                                u = u[a];
                            else {
                                if (u[a] !== i)
                                    return c = u[a],
                                    !1;
                                if (!e.isPlainObject(u[o]) || r == s)
                                    return u[o] !== i ? (c = u[o],
                                    !1) : (n.error(p.method, t),
                                    !1);
                                u = u[o]
                            }
                        })),
                        e.isFunction(c) ? l = c.apply(a, o) : c !== i && (l = c),
                        e.isArray(r) ? r.push(l) : r !== i ? r = [r, l] : l !== i && (r = l),
                        c
                    }
                },
                u ? (R === i && n.initialize(),
                n.invoke(l)) : (R !== i && R.invoke("destroy"),
                n.initialize())
            }),
            r !== i ? r : this
        }
        ,
        e.fn.state.settings = {
            name: "State",
            debug: !1,
            verbose: !1,
            namespace: "state",
            performance: !0,
            onActivate: function() {},
            onDeactivate: function() {},
            onChange: function() {},
            activateTest: function() {
                return !0
            },
            deactivateTest: function() {
                return !0
            },
            automatic: !0,
            sync: !1,
            flashDuration: 1e3,
            filter: {
                text: ".loading, .disabled",
                active: ".disabled"
            },
            context: !1,
            error: {
                beforeSend: "The before send function has cancelled state change",
                method: "The method you called is not defined."
            },
            metadata: {
                promise: "promise",
                storedText: "stored-text"
            },
            className: {
                active: "active",
                disabled: "disabled",
                error: "error",
                loading: "loading",
                success: "success",
                warning: "warning"
            },
            selector: {
                text: !1
            },
            defaults: {
                input: {
                    disabled: !0,
                    loading: !0,
                    active: !0
                },
                button: {
                    disabled: !0,
                    loading: !0,
                    active: !0
                },
                progress: {
                    active: !0,
                    success: !0,
                    warning: !0,
                    error: !0
                }
            },
            states: {
                active: !0,
                disabled: !0,
                error: !0,
                loading: !0,
                success: !0,
                warning: !0
            },
            text: {
                disabled: !1,
                flash: !1,
                hover: !1,
                active: !1,
                inactive: !1,
                activate: !1,
                deactivate: !1
            }
        }
    }(de, e, J),
    function(e, t, n, i) {
        e.fn.visibility = function(r) {
            var o, a = e(this), s = a.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], h = "string" == typeof u, d = [].slice.call(arguments, 1);
            return a.each(function() {
                var a, p, f, m = e.isPlainObject(r) ? e.extend(!0, {}, e.fn.visibility.settings, r) : e.extend({}, e.fn.visibility.settings), g = m.className, v = m.namespace, E = m.error, y = m.metadata, b = "." + v, T = "module-" + v, x = e(t), R = e(this), w = e(m.context), H = (R.selector || "",
                R.data(T)), M = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
                    setTimeout(e, 0)
                }
                , S = this, _ = !1;
                f = {
                    initialize: function() {
                        f.debug("Initializing", m),
                        f.setup.cache(),
                        f.should.trackChanges() && ("image" == m.type && f.setup.image(),
                        "fixed" == m.type && f.setup.fixed(),
                        m.observeChanges && f.observeChanges(),
                        f.bind.events()),
                        f.save.position(),
                        f.is.visible() || f.error(E.visible, R),
                        m.initialCheck && f.checkVisibility(),
                        f.instantiate()
                    },
                    instantiate: function() {
                        f.debug("Storing instance", f),
                        R.data(T, f),
                        H = f
                    },
                    destroy: function() {
                        f.verbose("Destroying previous module"),
                        p && p.disconnect(),
                        x.off("load" + b, f.event.load).off("resize" + b, f.event.resize),
                        w.off("scrollchange" + b, f.event.scrollchange),
                        R.off(b).removeData(T)
                    },
                    observeChanges: function() {
                        "MutationObserver"in t && (p = new MutationObserver(function(e) {
                            f.verbose("DOM tree modified, updating visibility calculations"),
                            f.timer = setTimeout(function() {
                                f.verbose("DOM tree modified, updating sticky menu"),
                                f.refresh()
                            }, 100)
                        }
                        ),
                        p.observe(S, {
                            childList: !0,
                            subtree: !0
                        }),
                        f.debug("Setting up mutation observer", p))
                    },
                    bind: {
                        events: function() {
                            f.verbose("Binding visibility events to scroll and resize"),
                            m.refreshOnLoad && x.on("load" + b, f.event.load),
                            x.on("resize" + b, f.event.resize),
                            w.off("scroll" + b).on("scroll" + b, f.event.scroll).on("scrollchange" + b, f.event.scrollchange)
                        }
                    },
                    event: {
                        resize: function() {
                            f.debug("Window resized"),
                            m.refreshOnResize && M(f.refresh)
                        },
                        load: function() {
                            f.debug("Page finished loading"),
                            M(f.refresh)
                        },
                        scroll: function() {
                            m.throttle ? (clearTimeout(f.timer),
                            f.timer = setTimeout(function() {
                                w.triggerHandler("scrollchange" + b, [w.scrollTop()])
                            }, m.throttle)) : M(function() {
                                w.triggerHandler("scrollchange" + b, [w.scrollTop()])
                            })
                        },
                        scrollchange: function(e, t) {
                            f.checkVisibility(t)
                        }
                    },
                    precache: function(t, i) {
                        t instanceof Array || (t = [t]);
                        for (var r = t.length, o = 0, a = [], s = n.createElement("img"), c = function() {
                            o++,
                            o >= t.length && e.isFunction(i) && i()
                        }; r--; )
                            s = n.createElement("img"),
                            s.onload = c,
                            s.onerror = c,
                            s.src = t[r],
                            a.push(s)
                    },
                    enableCallbacks: function() {
                        f.debug("Allowing callbacks to occur"),
                        _ = !1
                    },
                    disableCallbacks: function() {
                        f.debug("Disabling all callbacks temporarily"),
                        _ = !0
                    },
                    should: {
                        trackChanges: function() {
                            return h ? (f.debug("One time query, no need to bind events"),
                            !1) : (f.debug("Callbacks being attached"),
                            !0)
                        }
                    },
                    setup: {
                        cache: function() {
                            f.cache = {
                                occurred: {},
                                screen: {},
                                element: {}
                            }
                        },
                        image: function() {
                            var e = R.data(y.src);
                            e && (f.verbose("Lazy loading image", e),
                            m.once = !0,
                            m.observeChanges = !1,
                            m.onOnScreen = function() {
                                f.debug("Image on screen", S),
                                f.precache(e, function() {
                                    f.set.image(e)
                                })
                            }
                            )
                        },
                        fixed: function() {
                            f.debug("Setting up fixed"),
                            m.once = !1,
                            m.observeChanges = !1,
                            m.initialCheck = !0,
                            m.refreshOnLoad = !0,
                            r.transition || (m.transition = !1),
                            f.create.placeholder(),
                            f.debug("Added placeholder", a),
                            m.onTopPassed = function() {
                                f.debug("Element passed, adding fixed position", R),
                                f.show.placeholder(),
                                f.set.fixed(),
                                m.transition && e.fn.transition !== i && R.transition(m.transition, m.duration)
                            }
                            ,
                            m.onTopPassedReverse = function() {
                                f.debug("Element returned to position, removing fixed", R),
                                f.hide.placeholder(),
                                f.remove.fixed()
                            }
                        }
                    },
                    create: {
                        placeholder: function() {
                            f.verbose("Creating fixed position placeholder"),
                            a = R.clone(!1).css("display", "none").addClass(g.placeholder).insertAfter(R)
                        }
                    },
                    show: {
                        placeholder: function() {
                            f.verbose("Showing placeholder"),
                            a.css("display", "block").css("visibility", "hidden")
                        }
                    },
                    hide: {
                        placeholder: function() {
                            f.verbose("Hiding placeholder"),
                            a.css("display", "none").css("visibility", "")
                        }
                    },
                    set: {
                        fixed: function() {
                            f.verbose("Setting element to fixed position"),
                            R.addClass(g.fixed).css({
                                position: "fixed",
                                top: m.offset + "px",
                                left: "auto",
                                zIndex: "1"
                            })
                        },
                        image: function(t) {
                            R.attr("src", t),
                            m.transition ? e.fn.transition !== i ? R.transition(m.transition, m.duration) : R.fadeIn(m.duration) : R.show()
                        }
                    },
                    is: {
                        onScreen: function() {
                            var e = f.get.elementCalculations();
                            return e.onScreen
                        },
                        offScreen: function() {
                            var e = f.get.elementCalculations();
                            return e.offScreen
                        },
                        visible: function() {
                            return !(!f.cache || !f.cache.element) && !(0 === f.cache.element.width && 0 === f.cache.element.offset.top)
                        }
                    },
                    refresh: function() {
                        f.debug("Refreshing constants (width/height)"),
                        "fixed" == m.type && (f.remove.fixed(),
                        f.remove.occurred()),
                        f.reset(),
                        f.save.position(),
                        m.checkOnRefresh && f.checkVisibility(),
                        m.onRefresh.call(S)
                    },
                    reset: function() {
                        f.verbose("Reseting all cached values"),
                        e.isPlainObject(f.cache) && (f.cache.screen = {},
                        f.cache.element = {})
                    },
                    checkVisibility: function(e) {
                        f.verbose("Checking visibility of element", f.cache.element),
                        !_ && f.is.visible() && (f.save.scroll(e),
                        f.save.calculations(),
                        f.passed(),
                        f.passingReverse(),
                        f.topVisibleReverse(),
                        f.bottomVisibleReverse(),
                        f.topPassedReverse(),
                        f.bottomPassedReverse(),
                        f.onScreen(),
                        f.offScreen(),
                        f.passing(),
                        f.topVisible(),
                        f.bottomVisible(),
                        f.topPassed(),
                        f.bottomPassed(),
                        m.onUpdate && m.onUpdate.call(S, f.get.elementCalculations()))
                    },
                    passed: function(t, n) {
                        var r = f.get.elementCalculations();
                        if (t && n)
                            m.onPassed[t] = n;
                        else {
                            if (t !== i)
                                return f.get.pixelsPassed(t) > r.pixelsPassed;
                            r.passing && e.each(m.onPassed, function(e, t) {
                                r.bottomVisible || r.pixelsPassed > f.get.pixelsPassed(e) ? f.execute(t, e) : m.once || f.remove.occurred(t)
                            })
                        }
                    },
                    onScreen: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onOnScreen
                          , r = "onScreen";
                        if (e && (f.debug("Adding callback for onScreen", e),
                        m.onOnScreen = e),
                        t.onScreen ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e !== i)
                            return t.onOnScreen
                    },
                    offScreen: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onOffScreen
                          , r = "offScreen";
                        if (e && (f.debug("Adding callback for offScreen", e),
                        m.onOffScreen = e),
                        t.offScreen ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e !== i)
                            return t.onOffScreen
                    },
                    passing: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onPassing
                          , r = "passing";
                        if (e && (f.debug("Adding callback for passing", e),
                        m.onPassing = e),
                        t.passing ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e !== i)
                            return t.passing
                    },
                    topVisible: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onTopVisible
                          , r = "topVisible";
                        if (e && (f.debug("Adding callback for top visible", e),
                        m.onTopVisible = e),
                        t.topVisible ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e === i)
                            return t.topVisible
                    },
                    bottomVisible: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onBottomVisible
                          , r = "bottomVisible";
                        if (e && (f.debug("Adding callback for bottom visible", e),
                        m.onBottomVisible = e),
                        t.bottomVisible ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e === i)
                            return t.bottomVisible
                    },
                    topPassed: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onTopPassed
                          , r = "topPassed";
                        if (e && (f.debug("Adding callback for top passed", e),
                        m.onTopPassed = e),
                        t.topPassed ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e === i)
                            return t.topPassed
                    },
                    bottomPassed: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onBottomPassed
                          , r = "bottomPassed";
                        if (e && (f.debug("Adding callback for bottom passed", e),
                        m.onBottomPassed = e),
                        t.bottomPassed ? f.execute(n, r) : m.once || f.remove.occurred(r),
                        e === i)
                            return t.bottomPassed
                    },
                    passingReverse: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onPassingReverse
                          , r = "passingReverse";
                        if (e && (f.debug("Adding callback for passing reverse", e),
                        m.onPassingReverse = e),
                        t.passing ? m.once || f.remove.occurred(r) : f.get.occurred("passing") && f.execute(n, r),
                        e !== i)
                            return !t.passing
                    },
                    topVisibleReverse: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onTopVisibleReverse
                          , r = "topVisibleReverse";
                        if (e && (f.debug("Adding callback for top visible reverse", e),
                        m.onTopVisibleReverse = e),
                        t.topVisible ? m.once || f.remove.occurred(r) : f.get.occurred("topVisible") && f.execute(n, r),
                        e === i)
                            return !t.topVisible
                    },
                    bottomVisibleReverse: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onBottomVisibleReverse
                          , r = "bottomVisibleReverse";
                        if (e && (f.debug("Adding callback for bottom visible reverse", e),
                        m.onBottomVisibleReverse = e),
                        t.bottomVisible ? m.once || f.remove.occurred(r) : f.get.occurred("bottomVisible") && f.execute(n, r),
                        e === i)
                            return !t.bottomVisible
                    },
                    topPassedReverse: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onTopPassedReverse
                          , r = "topPassedReverse";
                        if (e && (f.debug("Adding callback for top passed reverse", e),
                        m.onTopPassedReverse = e),
                        t.topPassed ? m.once || f.remove.occurred(r) : f.get.occurred("topPassed") && f.execute(n, r),
                        e === i)
                            return !t.onTopPassed
                    },
                    bottomPassedReverse: function(e) {
                        var t = f.get.elementCalculations()
                          , n = e || m.onBottomPassedReverse
                          , r = "bottomPassedReverse";
                        if (e && (f.debug("Adding callback for bottom passed reverse", e),
                        m.onBottomPassedReverse = e),
                        t.bottomPassed ? m.once || f.remove.occurred(r) : f.get.occurred("bottomPassed") && f.execute(n, r),
                        e === i)
                            return !t.bottomPassed
                    },
                    execute: function(e, t) {
                        var n = f.get.elementCalculations()
                          , i = f.get.screenCalculations();
                        e = e || !1,
                        e && (m.continuous ? (f.debug("Callback being called continuously", t, n),
                        e.call(S, n, i)) : f.get.occurred(t) || (f.debug("Conditions met", t, n),
                        e.call(S, n, i))),
                        f.save.occurred(t)
                    },
                    remove: {
                        fixed: function() {
                            f.debug("Removing fixed position"),
                            R.removeClass(g.fixed).css({
                                position: "",
                                top: "",
                                left: "",
                                zIndex: ""
                            })
                        },
                        occurred: function(e) {
                            if (e) {
                                var t = f.cache.occurred;
                                t[e] !== i && t[e] === !0 && (f.debug("Callback can now be called again", e),
                                f.cache.occurred[e] = !1)
                            } else
                                f.cache.occurred = {}
                        }
                    },
                    save: {
                        calculations: function() {
                            f.verbose("Saving all calculations necessary to determine positioning"),
                            f.save.direction(),
                            f.save.screenCalculations(),
                            f.save.elementCalculations()
                        },
                        occurred: function(e) {
                            e && (f.cache.occurred[e] !== i && f.cache.occurred[e] === !0 || (f.verbose("Saving callback occurred", e),
                            f.cache.occurred[e] = !0))
                        },
                        scroll: function(e) {
                            e = e + m.offset || w.scrollTop() + m.offset,
                            f.cache.scroll = e
                        },
                        direction: function() {
                            var e, t = f.get.scroll(), n = f.get.lastScroll();
                            return e = t > n && n ? "down" : t < n && n ? "up" : "static",
                            f.cache.direction = e,
                            f.cache.direction
                        },
                        elementPosition: function() {
                            var e = f.cache.element
                              , t = f.get.screenSize();
                            return f.verbose("Saving element position"),
                            e.fits = e.height < t.height,
                            e.offset = R.offset(),
                            e.width = R.outerWidth(),
                            e.height = R.outerHeight(),
                            f.cache.element = e,
                            e
                        },
                        elementCalculations: function() {
                            var e = f.get.screenCalculations()
                              , t = f.get.elementPosition();
                            return m.includeMargin ? (t.margin = {},
                            t.margin.top = parseInt(R.css("margin-top"), 10),
                            t.margin.bottom = parseInt(R.css("margin-bottom"), 10),
                            t.top = t.offset.top - t.margin.top,
                            t.bottom = t.offset.top + t.height + t.margin.bottom) : (t.top = t.offset.top,
                            t.bottom = t.offset.top + t.height),
                            t.topVisible = e.bottom >= t.top,
                            t.topPassed = e.top >= t.top,
                            t.bottomVisible = e.bottom >= t.bottom,
                            t.bottomPassed = e.top >= t.bottom,
                            t.pixelsPassed = 0,
                            t.percentagePassed = 0,
                            t.onScreen = t.topVisible && !t.bottomPassed,
                            t.passing = t.topPassed && !t.bottomPassed,
                            t.offScreen = !t.onScreen,
                            t.passing && (t.pixelsPassed = e.top - t.top,
                            t.percentagePassed = (e.top - t.top) / t.height),
                            f.cache.element = t,
                            f.verbose("Updated element calculations", t),
                            t
                        },
                        screenCalculations: function() {
                            var e = f.get.scroll();
                            return f.save.direction(),
                            f.cache.screen.top = e,
                            f.cache.screen.bottom = e + f.cache.screen.height,
                            f.cache.screen
                        },
                        screenSize: function() {
                            f.verbose("Saving window position"),
                            f.cache.screen = {
                                height: w.height()
                            }
                        },
                        position: function() {
                            f.save.screenSize(),
                            f.save.elementPosition()
                        }
                    },
                    get: {
                        pixelsPassed: function(e) {
                            var t = f.get.elementCalculations();
                            return e.search("%") > -1 ? t.height * (parseInt(e, 10) / 100) : parseInt(e, 10)
                        },
                        occurred: function(e) {
                            return f.cache.occurred !== i && (f.cache.occurred[e] || !1)
                        },
                        direction: function() {
                            return f.cache.direction === i && f.save.direction(),
                            f.cache.direction
                        },
                        elementPosition: function() {
                            return f.cache.element === i && f.save.elementPosition(),
                            f.cache.element
                        },
                        elementCalculations: function() {
                            return f.cache.element === i && f.save.elementCalculations(),
                            f.cache.element
                        },
                        screenCalculations: function() {
                            return f.cache.screen === i && f.save.screenCalculations(),
                            f.cache.screen
                        },
                        screenSize: function() {
                            return f.cache.screen === i && f.save.screenSize(),
                            f.cache.screen
                        },
                        scroll: function() {
                            return f.cache.scroll === i && f.save.scroll(),
                            f.cache.scroll
                        },
                        lastScroll: function() {
                            return f.cache.screen === i ? (f.debug("First scroll event, no last scroll could be found"),
                            !1) : f.cache.screen.top
                        }
                    },
                    setting: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, m, t);
                        else {
                            if (n === i)
                                return m[t];
                            m[t] = n
                        }
                    },
                    internal: function(t, n) {
                        if (e.isPlainObject(t))
                            e.extend(!0, f, t);
                        else {
                            if (n === i)
                                return f[t];
                            f[t] = n
                        }
                    },
                    debug: function() {
                        m.debug && (m.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, m.name + ":"),
                        f.debug.apply(console, arguments)))
                    },
                    verbose: function() {
                        m.verbose && m.debug && (m.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"),
                        f.verbose.apply(console, arguments)))
                    },
                    error: function() {
                        f.error = Function.prototype.bind.call(console.error, console, m.name + ":"),
                        f.error.apply(console, arguments)
                    },
                    performance: {
                        log: function(e) {
                            var t, n, i;
                            m.performance && (t = (new Date).getTime(),
                            i = c || t,
                            n = t - i,
                            c = t,
                            l.push({
                                Name: e[0],
                                Arguments: [].slice.call(e, 1) || "",
                                Element: S,
                                "Execution Time": n
                            })),
                            clearTimeout(f.performance.timer),
                            f.performance.timer = setTimeout(f.performance.display, 500)
                        },
                        display: function() {
                            var t = m.name + ":"
                              , n = 0;
                            c = !1,
                            clearTimeout(f.performance.timer),
                            e.each(l, function(e, t) {
                                n += t["Execution Time"]
                            }),
                            t += " " + n + "ms",
                            s && (t += " '" + s + "'"),
                            (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t),
                            console.table ? console.table(l) : e.each(l, function(e, t) {
                                console.log(t.Name + ": " + t["Execution Time"] + "ms")
                            }),
                            console.groupEnd()),
                            l = []
                        }
                    },
                    invoke: function(t, n, r) {
                        var a, s, c, l = H;
                        return n = n || d,
                        r = S || r,
                        "string" == typeof t && l !== i && (t = t.split(/[\. ]/),
                        a = t.length - 1,
                        e.each(t, function(n, r) {
                            var o = n != a ? r + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t;
                            if (e.isPlainObject(l[o]) && n != a)
                                l = l[o];
                            else {
                                if (l[o] !== i)
                                    return s = l[o],
                                    !1;
                                if (!e.isPlainObject(l[r]) || n == a)
                                    return l[r] !== i ? (s = l[r],
                                    !1) : (f.error(E.method, t),
                                    !1);
                                l = l[r]
                            }
                        })),
                        e.isFunction(s) ? c = s.apply(r, n) : s !== i && (c = s),
                        e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c),
                        s
                    }
                },
                h ? (H === i && f.initialize(),
                H.save.scroll(),
                H.save.calculations(),
                f.invoke(u)) : (H !== i && H.invoke("destroy"),
                f.initialize())
            }),
            o !== i ? o : this
        }
        ,
        e.fn.visibility.settings = {
            name: "Visibility",
            namespace: "visibility",
            debug: !1,
            verbose: !1,
            performance: !0,
            observeChanges: !0,
            initialCheck: !0,
            refreshOnLoad: !0,
            refreshOnResize: !0,
            checkOnRefresh: !0,
            once: !0,
            continuous: !1,
            offset: 0,
            includeMargin: !1,
            context: t,
            throttle: !1,
            type: !1,
            transition: "fade in",
            duration: 1e3,
            onPassed: {},
            onOnScreen: !1,
            onOffScreen: !1,
            onPassing: !1,
            onTopVisible: !1,
            onBottomVisible: !1,
            onTopPassed: !1,
            onBottomPassed: !1,
            onPassingReverse: !1,
            onTopVisibleReverse: !1,
            onBottomVisibleReverse: !1,
            onTopPassedReverse: !1,
            onBottomPassedReverse: !1,
            onUpdate: !1,
            onRefresh: function() {},
            metadata: {
                src: "src"
            },
            className: {
                fixed: "fixed",
                placeholder: "placeholder"
            },
            error: {
                method: "The method you called is not defined.",
                visible: "Element is hidden, you must call refresh after element becomes visible"
            }
        },
        function(e, t) {
            "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("jquery", t) : e.PointerEventsPolyfill = t()
        }(this, function() {
            "use strict";
            function e(e, t) {
                t = t || Object.create(null);
                var i = n.createEvent("Event");
                i.initEvent(e, t.bubbles || !1, t.cancelable || !1);
                for (var r, o = 2; o < p.length; o++)
                    r = p[o],
                    i[r] = t[r] || f[o];
                i.buttons = t.buttons || 0;
                var a = 0;
                return a = t.pressure ? t.pressure : i.buttons ? .5 : 0,
                i.x = i.clientX,
                i.y = i.clientY,
                i.pointerId = t.pointerId || 0,
                i.width = t.width || 0,
                i.height = t.height || 0,
                i.pressure = a,
                i.tiltX = t.tiltX || 0,
                i.tiltY = t.tiltY || 0,
                i.pointerType = t.pointerType || "",
                i.hwTimestamp = t.hwTimestamp || 0,
                i.isPrimary = t.isPrimary || !1,
                i
            }
            function r() {
                this.array = [],
                this.size = 0
            }
            function o(e, t, n, i) {
                this.addCallback = e.bind(i),
                this.removeCallback = t.bind(i),
                this.changedCallback = n.bind(i),
                A && (this.observer = new A(this.mutationWatcher.bind(this)))
            }
            function a(e) {
                return "body /shadow-deep/ " + s(e)
            }
            function s(e) {
                return '[touch-action="' + e + '"]'
            }
            function c(e) {
                return "{ -ms-touch-action: " + e + "; touch-action: " + e + "; touch-action-delay: none; }"
            }
            function l() {
                if (O) {
                    D.forEach(function(e) {
                        String(e) === e ? (I += s(e) + c(e) + "\n",
                        B && (I += a(e) + c(e) + "\n")) : (I += e.selectors.map(s) + c(e.rule) + "\n",
                        B && (I += e.selectors.map(a) + c(e.rule) + "\n"))
                    });
                    var e = n.createElement("style");
                    e.textContent = I,
                    n.head.appendChild(e)
                }
            }
            function u() {
                if (!t.PointerEvent) {
                    if (t.PointerEvent = m,
                    t.navigator.msPointerEnabled) {
                        var e = t.navigator.msMaxTouchPoints;
                        Object.defineProperty(t.navigator, "maxTouchPoints", {
                            value: e,
                            enumerable: !0
                        }),
                        w.registerSource("ms", ae)
                    } else
                        w.registerSource("mouse", G),
                        t.ontouchstart !== i && w.registerSource("touch", ne);
                    w.register(n)
                }
            }
            function h(e) {
                if (!w.pointermap.has(e))
                    throw new Error("InvalidPointerId")
            }
            function d() {
                t.Element && !Element.prototype.setPointerCapture && Object.defineProperties(Element.prototype, {
                    setPointerCapture: {
                        value: ee
                    },
                    releasePointerCapture: {
                        value: te
                    }
                })
            }
            var p = ["bubbles", "cancelable", "view", "detail", "screenX", "screenY", "clientX", "clientY", "ctrlKey", "altKey", "shiftKey", "metaKey", "button", "relatedTarget", "pageX", "pageY"]
              , f = [!1, !1, null, null, 0, 0, 0, 0, !1, !1, !1, !1, 0, null, 0, 0]
              , m = e
              , g = t.Map && t.Map.prototype.forEach
              , v = g ? Map : r;
            r.prototype = {
                set: function(e, t) {
                    return t === i ? this.delete(e) : (this.has(e) || this.size++,
                    void (this.array[e] = t))
                },
                has: function(e) {
                    return this.array[e] !== i
                },
                delete: function(e) {
                    this.has(e) && (delete this.array[e],
                    this.size--)
                },
                get: function(e) {
                    return this.array[e]
                },
                clear: function() {
                    this.array.length = 0,
                    this.size = 0
                },
                forEach: function(e, t) {
                    return this.array.forEach(function(n, i) {
                        e.call(t, n, i, this)
                    }, this)
                }
            };
            var E = v
              , y = ["bubbles", "cancelable", "view", "detail", "screenX", "screenY", "clientX", "clientY", "ctrlKey", "altKey", "shiftKey", "metaKey", "button", "relatedTarget", "buttons", "pointerId", "width", "height", "pressure", "tiltX", "tiltY", "pointerType", "hwTimestamp", "isPrimary", "type", "target", "currentTarget", "which", "pageX", "pageY", "timeStamp"]
              , b = [!1, !1, null, null, 0, 0, 0, 0, !1, !1, !1, !1, 0, null, 0, 0, 0, 0, 0, 0, 0, "", 0, !1, "", null, null, 0, 0, 0, 0]
              , T = {
                pointerover: 1,
                pointerout: 1,
                pointerenter: 1,
                pointerleave: 1
            }
              , x = "undefined" != typeof SVGElementInstance
              , R = {
                pointermap: new E,
                eventMap: Object.create(null),
                captureInfo: Object.create(null),
                eventSources: Object.create(null),
                eventSourceList: [],
                registerSource: function(e, t) {
                    var n = t
                      , i = n.events;
                    i && (i.forEach(function(e) {
                        n[e] && (this.eventMap[e] = n[e].bind(n))
                    }, this),
                    this.eventSources[e] = n,
                    this.eventSourceList.push(n))
                },
                register: function(e) {
                    for (var t, n = this.eventSourceList.length, i = 0; i < n && (t = this.eventSourceList[i]); i++)
                        t.register.call(t, e)
                },
                unregister: function(e) {
                    for (var t, n = this.eventSourceList.length, i = 0; i < n && (t = this.eventSourceList[i]); i++)
                        t.unregister.call(t, e)
                },
                contains: function(e, t) {
                    try {
                        return e.contains(t)
                    } catch (e) {
                        return !1
                    }
                },
                down: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointerdown", e)
                },
                move: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointermove", e)
                },
                up: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointerup", e)
                },
                enter: function(e) {
                    e.bubbles = !1,
                    this.fireEvent("pointerenter", e)
                },
                leave: function(e) {
                    e.bubbles = !1,
                    this.fireEvent("pointerleave", e)
                },
                over: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointerover", e)
                },
                out: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointerout", e)
                },
                cancel: function(e) {
                    e.bubbles = !0,
                    this.fireEvent("pointercancel", e)
                },
                leaveOut: function(e) {
                    this.out(e),
                    this.contains(e.target, e.relatedTarget) || this.leave(e)
                },
                enterOver: function(e) {
                    this.over(e),
                    this.contains(e.target, e.relatedTarget) || this.enter(e)
                },
                eventHandler: function(e) {
                    if (!e._handledByPE) {
                        var t = e.type
                          , n = this.eventMap && this.eventMap[t];
                        n && n(e),
                        e._handledByPE = !0
                    }
                },
                listen: function(e, t) {
                    t.forEach(function(t) {
                        this.addEvent(e, t)
                    }, this)
                },
                unlisten: function(e, t) {
                    t.forEach(function(t) {
                        this.removeEvent(e, t)
                    }, this)
                },
                addEvent: function(e, t) {
                    e.addEventListener(t, this.boundHandler)
                },
                removeEvent: function(e, t) {
                    e.removeEventListener(t, this.boundHandler)
                },
                makeEvent: function(e, t) {
                    this.captureInfo[t.pointerId] && (t.relatedTarget = null);
                    var n = new m(e,t);
                    return t.preventDefault && (n.preventDefault = t.preventDefault),
                    n._target = n._target || t.target,
                    n
                },
                fireEvent: function(e, t) {
                    var n = this.makeEvent(e, t);
                    return this.dispatchEvent(n)
                },
                cloneEvent: function(e) {
                    for (var t, n = Object.create(null), i = 0; i < y.length; i++)
                        t = y[i],
                        n[t] = e[t] || b[i],
                        !x || "target" !== t && "relatedTarget" !== t || n[t]instanceof SVGElementInstance && (n[t] = n[t].correspondingUseElement);
                    return e.preventDefault && (n.preventDefault = function() {
                        e.preventDefault()
                    }
                    ),
                    n
                },
                getTarget: function(e) {
                    var t = this.captureInfo[e.pointerId];
                    return t ? e._target !== t && e.type in T ? void 0 : t : e._target
                },
                setCapture: function(e, t) {
                    this.captureInfo[e] && this.releaseCapture(e),
                    this.captureInfo[e] = t;
                    var i = n.createEvent("Event");
                    i.initEvent("gotpointercapture", !0, !1),
                    i.pointerId = e,
                    this.implicitRelease = this.releaseCapture.bind(this, e),
                    n.addEventListener("pointerup", this.implicitRelease),
                    n.addEventListener("pointercancel", this.implicitRelease),
                    i._target = t,
                    this.asyncDispatchEvent(i)
                },
                releaseCapture: function(e) {
                    var t = this.captureInfo[e];
                    if (t) {
                        var r = n.createEvent("Event");
                        r.initEvent("lostpointercapture", !0, !1),
                        r.pointerId = e,
                        this.captureInfo[e] = i,
                        n.removeEventListener("pointerup", this.implicitRelease),
                        n.removeEventListener("pointercancel", this.implicitRelease),
                        r._target = t,
                        this.asyncDispatchEvent(r)
                    }
                },
                dispatchEvent: function(e) {
                    var t = this.getTarget(e);
                    if (t)
                        return t.dispatchEvent(e)
                },
                asyncDispatchEvent: function(e) {
                    requestAnimationFrame(this.dispatchEvent.bind(this, e))
                }
            };
            R.boundHandler = R.eventHandler.bind(R);
            var w = R
              , H = {
                shadow: function(e) {
                    if (e)
                        return e.shadowRoot || e.webkitShadowRoot
                },
                canTarget: function(e) {
                    return e && Boolean(e.elementFromPoint)
                },
                targetingShadow: function(e) {
                    var t = this.shadow(e);
                    if (this.canTarget(t))
                        return t
                },
                olderShadow: function(e) {
                    var t = e.olderShadowRoot;
                    if (!t) {
                        var n = e.querySelector("shadow");
                        n && (t = n.olderShadowRoot)
                    }
                    return t
                },
                allShadows: function(e) {
                    for (var t = [], n = this.shadow(e); n; )
                        t.push(n),
                        n = this.olderShadow(n);
                    return t
                },
                searchRoot: function(e, t, n) {
                    if (e) {
                        var i, r, o = e.elementFromPoint(t, n);
                        for (r = this.targetingShadow(o); r; ) {
                            if (i = r.elementFromPoint(t, n)) {
                                var a = this.targetingShadow(i);
                                return this.searchRoot(a, t, n) || i
                            }
                            r = this.olderShadow(r)
                        }
                        return o
                    }
                },
                owner: function(e) {
                    for (var t = e; t.parentNode; )
                        t = t.parentNode;
                    return t.nodeType !== Node.DOCUMENT_NODE && t.nodeType !== Node.DOCUMENT_FRAGMENT_NODE && (t = n),
                    t
                },
                findTarget: function(e) {
                    var t = e.clientX
                      , i = e.clientY
                      , r = this.owner(e.target);
                    return r.elementFromPoint(t, i) || (r = n),
                    this.searchRoot(r, t, i)
                }
            }
              , M = Array.prototype.forEach.call.bind(Array.prototype.forEach)
              , S = Array.prototype.map.call.bind(Array.prototype.map)
              , _ = Array.prototype.slice.call.bind(Array.prototype.slice)
              , C = Array.prototype.filter.call.bind(Array.prototype.filter)
              , A = t.MutationObserver || t.WebKitMutationObserver
              , P = "[touch-action]"
              , L = {
                subtree: !0,
                childList: !0,
                attributes: !0,
                attributeOldValue: !0,
                attributeFilter: ["touch-action"]
            };
            o.prototype = {
                watchSubtree: function(e) {
                    this.observer && H.canTarget(e) && this.observer.observe(e, L)
                },
                enableOnSubtree: function(e) {
                    this.watchSubtree(e),
                    e === n && "complete" !== n.readyState ? this.installOnLoad() : this.installNewSubtree(e)
                },
                installNewSubtree: function(e) {
                    M(this.findElements(e), this.addElement, this)
                },
                findElements: function(e) {
                    return e.querySelectorAll ? e.querySelectorAll(P) : []
                },
                removeElement: function(e) {
                    this.removeCallback(e)
                },
                addElement: function(e) {
                    this.addCallback(e)
                },
                elementChanged: function(e, t) {
                    this.changedCallback(e, t)
                },
                concatLists: function(e, t) {
                    return e.concat(_(t))
                },
                installOnLoad: function() {
                    n.addEventListener("readystatechange", function() {
                        "complete" === n.readyState && this.installNewSubtree(n)
                    }
                    .bind(this))
                },
                isElement: function(e) {
                    return e.nodeType === Node.ELEMENT_NODE
                },
                flattenMutationTree: function(e) {
                    var t = S(e, this.findElements, this);
                    return t.push(C(e, this.isElement)),
                    t.reduce(this.concatLists, [])
                },
                mutationWatcher: function(e) {
                    e.forEach(this.mutationHandler, this)
                },
                mutationHandler: function(e) {
                    if ("childList" === e.type) {
                        var t = this.flattenMutationTree(e.addedNodes);
                        t.forEach(this.addElement, this);
                        var n = this.flattenMutationTree(e.removedNodes);
                        n.forEach(this.removeElement, this)
                    } else
                        "attributes" === e.type && this.elementChanged(e.target, e.oldValue)
                }
            };
            var k = o
              , D = ["none", "auto", "pan-x", "pan-y", {
                rule: "pan-x pan-y",
                selectors: ["pan-x pan-y", "pan-y pan-x"]
            }]
              , I = ""
              , O = t.PointerEvent || t.MSPointerEvent
              , B = !t.ShadowDOMPolyfill && n.head.createShadowRoot
              , F = w.pointermap
              , N = 25
              , U = [1, 4, 2, 8, 16]
              , z = !1;
            try {
                z = 1 === new MouseEvent("test",{
                    buttons: 1
                }).buttons
            } catch (e) {}
            var j, V = {
                POINTER_ID: 1,
                POINTER_TYPE: "mouse",
                events: ["mousedown", "mousemove", "mouseup", "mouseover", "mouseout"],
                register: function(e) {
                    w.listen(e, this.events)
                },
                unregister: function(e) {
                    w.unlisten(e, this.events)
                },
                lastTouches: [],
                isEventSimulatedFromTouch: function(e) {
                    for (var t, n = this.lastTouches, i = e.clientX, r = e.clientY, o = 0, a = n.length; o < a && (t = n[o]); o++) {
                        var s = Math.abs(i - t.x)
                          , c = Math.abs(r - t.y);
                        if (s <= N && c <= N)
                            return !0
                    }
                },
                prepareEvent: function(e) {
                    var t = w.cloneEvent(e)
                      , n = t.preventDefault;
                    return t.preventDefault = function() {
                        e.preventDefault(),
                        n()
                    }
                    ,
                    t.pointerId = this.POINTER_ID,
                    t.isPrimary = !0,
                    t.pointerType = this.POINTER_TYPE,
                    t
                },
                prepareButtonsForMove: function(e, t) {
                    var n = F.get(this.POINTER_ID);
                    e.buttons = n ? n.buttons : 0,
                    t.buttons = e.buttons
                },
                mousedown: function(e) {
                    if (!this.isEventSimulatedFromTouch(e)) {
                        var t = F.get(this.POINTER_ID)
                          , n = this.prepareEvent(e);
                        z || (n.buttons = U[n.button],
                        t && (n.buttons |= t.buttons),
                        e.buttons = n.buttons),
                        F.set(this.POINTER_ID, e),
                        t ? w.move(n) : w.down(n)
                    }
                },
                mousemove: function(e) {
                    if (!this.isEventSimulatedFromTouch(e)) {
                        var t = this.prepareEvent(e);
                        z || this.prepareButtonsForMove(t, e),
                        w.move(t)
                    }
                },
                mouseup: function(e) {
                    if (!this.isEventSimulatedFromTouch(e)) {
                        var t = F.get(this.POINTER_ID)
                          , n = this.prepareEvent(e);
                        if (!z) {
                            var i = U[n.button];
                            n.buttons = t ? t.buttons & ~i : 0,
                            e.buttons = n.buttons
                        }
                        F.set(this.POINTER_ID, e),
                        0 === n.buttons || n.buttons === U[n.button] ? (this.cleanupMouse(),
                        w.up(n)) : w.move(n)
                    }
                },
                mouseover: function(e) {
                    if (!this.isEventSimulatedFromTouch(e)) {
                        var t = this.prepareEvent(e);
                        z || this.prepareButtonsForMove(t, e),
                        w.enterOver(t)
                    }
                },
                mouseout: function(e) {
                    if (!this.isEventSimulatedFromTouch(e)) {
                        var t = this.prepareEvent(e);
                        z || this.prepareButtonsForMove(t, e),
                        w.leaveOut(t)
                    }
                },
                cancel: function(e) {
                    var t = this.prepareEvent(e);
                    w.cancel(t),
                    this.cleanupMouse()
                },
                cleanupMouse: function() {
                    F.delete(this.POINTER_ID)
                }
            }, G = V, W = w.captureInfo, q = H.findTarget.bind(H), X = H.allShadows.bind(H), Y = w.pointermap, K = 2500, Z = 200, $ = "touch-action", Q = !1, J = {
                events: ["touchstart", "touchmove", "touchend", "touchcancel"],
                register: function(e) {
                    Q ? w.listen(e, this.events) : j.enableOnSubtree(e)
                },
                unregister: function(e) {
                    Q && w.unlisten(e, this.events)
                },
                elementAdded: function(e) {
                    var t = e.getAttribute($)
                      , n = this.touchActionToScrollType(t);
                    n && (e._scrollType = n,
                    w.listen(e, this.events),
                    X(e).forEach(function(e) {
                        e._scrollType = n,
                        w.listen(e, this.events)
                    }, this))
                },
                elementRemoved: function(e) {
                    e._scrollType = i,
                    w.unlisten(e, this.events),
                    X(e).forEach(function(e) {
                        e._scrollType = i,
                        w.unlisten(e, this.events)
                    }, this)
                },
                elementChanged: function(e, t) {
                    var n = e.getAttribute($)
                      , i = this.touchActionToScrollType(n)
                      , r = this.touchActionToScrollType(t);
                    i && r ? (e._scrollType = i,
                    X(e).forEach(function(e) {
                        e._scrollType = i
                    }, this)) : r ? this.elementRemoved(e) : i && this.elementAdded(e)
                },
                scrollTypes: {
                    EMITTER: "none",
                    XSCROLLER: "pan-x",
                    YSCROLLER: "pan-y",
                    SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/
                },
                touchActionToScrollType: function(e) {
                    var t = e
                      , n = this.scrollTypes;
                    return "none" === t ? "none" : t === n.XSCROLLER ? "X" : t === n.YSCROLLER ? "Y" : n.SCROLLER.exec(t) ? "XY" : void 0;
                },
                POINTER_TYPE: "touch",
                firstTouch: null,
                isPrimaryTouch: function(e) {
                    return this.firstTouch === e.identifier
                },
                setPrimaryTouch: function(e) {
                    (0 === Y.size || 1 === Y.size && Y.has(1)) && (this.firstTouch = e.identifier,
                    this.firstXY = {
                        X: e.clientX,
                        Y: e.clientY
                    },
                    this.scrolling = !1,
                    this.cancelResetClickCount())
                },
                removePrimaryPointer: function(e) {
                    e.isPrimary && (this.firstTouch = null,
                    this.firstXY = null,
                    this.resetClickCount())
                },
                clickCount: 0,
                resetId: null,
                resetClickCount: function() {
                    var e = function() {
                        this.clickCount = 0,
                        this.resetId = null
                    }
                    .bind(this);
                    this.resetId = setTimeout(e, Z)
                },
                cancelResetClickCount: function() {
                    this.resetId && clearTimeout(this.resetId)
                },
                typeToButtons: function(e) {
                    var t = 0;
                    return "touchstart" !== e && "touchmove" !== e || (t = 1),
                    t
                },
                touchToPointer: function(e) {
                    var t = this.currentTouchEvent
                      , n = w.cloneEvent(e)
                      , i = n.pointerId = e.identifier + 2;
                    n.target = W[i] || q(n),
                    n.bubbles = !0,
                    n.cancelable = !0,
                    n.detail = this.clickCount,
                    n.button = 0,
                    n.buttons = this.typeToButtons(t.type),
                    n.width = e.radiusX || e.webkitRadiusX || 0,
                    n.height = e.radiusY || e.webkitRadiusY || 0,
                    n.pressure = e.force || e.webkitForce || .5,
                    n.isPrimary = this.isPrimaryTouch(e),
                    n.pointerType = this.POINTER_TYPE;
                    var r = this;
                    return n.preventDefault = function() {
                        r.scrolling = !1,
                        r.firstXY = null,
                        t.preventDefault()
                    }
                    ,
                    n
                },
                processTouches: function(e, t) {
                    var n = e.changedTouches;
                    this.currentTouchEvent = e;
                    for (var i, r = 0; r < n.length; r++)
                        i = n[r],
                        t.call(this, this.touchToPointer(i))
                },
                shouldScroll: function(e) {
                    if (this.firstXY) {
                        var t, n = e.currentTarget._scrollType;
                        if ("none" === n)
                            t = !1;
                        else if ("XY" === n)
                            t = !0;
                        else {
                            var i = e.changedTouches[0]
                              , r = n
                              , o = "Y" === n ? "X" : "Y"
                              , a = Math.abs(i["client" + r] - this.firstXY[r])
                              , s = Math.abs(i["client" + o] - this.firstXY[o]);
                            t = a >= s
                        }
                        return this.firstXY = null,
                        t
                    }
                },
                findTouch: function(e, t) {
                    for (var n, i = 0, r = e.length; i < r && (n = e[i]); i++)
                        if (n.identifier === t)
                            return !0
                },
                vacuumTouches: function(e) {
                    var t = e.touches;
                    if (Y.size >= t.length) {
                        var n = [];
                        Y.forEach(function(e, i) {
                            if (1 !== i && !this.findTouch(t, i - 2)) {
                                var r = e.out;
                                n.push(r)
                            }
                        }, this),
                        n.forEach(this.cancelOut, this)
                    }
                },
                touchstart: function(e) {
                    this.vacuumTouches(e),
                    this.setPrimaryTouch(e.changedTouches[0]),
                    this.dedupSynthMouse(e),
                    this.scrolling || (this.clickCount++,
                    this.processTouches(e, this.overDown))
                },
                overDown: function(e) {
                    Y.set(e.pointerId, {
                        target: e.target,
                        out: e,
                        outTarget: e.target
                    }),
                    w.over(e),
                    w.enter(e),
                    w.down(e)
                },
                touchmove: function(e) {
                    this.scrolling || (this.shouldScroll(e) ? (this.scrolling = !0,
                    this.touchcancel(e)) : (e.preventDefault(),
                    this.processTouches(e, this.moveOverOut)))
                },
                moveOverOut: function(e) {
                    var t = e
                      , n = Y.get(t.pointerId);
                    if (n) {
                        var i = n.out
                          , r = n.outTarget;
                        w.move(t),
                        i && r !== t.target && (i.relatedTarget = t.target,
                        t.relatedTarget = r,
                        i.target = r,
                        t.target ? (w.leaveOut(i),
                        w.enterOver(t)) : (t.target = r,
                        t.relatedTarget = null,
                        this.cancelOut(t))),
                        n.out = t,
                        n.outTarget = t.target
                    }
                },
                touchend: function(e) {
                    this.dedupSynthMouse(e),
                    this.processTouches(e, this.upOut)
                },
                upOut: function(e) {
                    this.scrolling || (w.up(e),
                    w.out(e),
                    w.leave(e)),
                    this.cleanUpPointer(e)
                },
                touchcancel: function(e) {
                    this.processTouches(e, this.cancelOut)
                },
                cancelOut: function(e) {
                    w.cancel(e),
                    w.out(e),
                    w.leave(e),
                    this.cleanUpPointer(e)
                },
                cleanUpPointer: function(e) {
                    Y.delete(e.pointerId),
                    this.removePrimaryPointer(e)
                },
                dedupSynthMouse: function(e) {
                    var t = G.lastTouches
                      , n = e.changedTouches[0];
                    if (this.isPrimaryTouch(n)) {
                        var i = {
                            x: n.clientX,
                            y: n.clientY
                        };
                        t.push(i);
                        var r = function(e, t) {
                            var n = e.indexOf(t);
                            n > -1 && e.splice(n, 1)
                        }
                        .bind(null, t, i);
                        setTimeout(r, K)
                    }
                }
            };
            Q || (j = new k(J.elementAdded,J.elementRemoved,J.elementChanged,J));
            var ee, te, ne = J, ie = w.pointermap, re = t.MSPointerEvent && "number" == typeof t.MSPointerEvent.MSPOINTER_TYPE_MOUSE, oe = {
                events: ["MSPointerDown", "MSPointerMove", "MSPointerUp", "MSPointerOut", "MSPointerOver", "MSPointerCancel", "MSGotPointerCapture", "MSLostPointerCapture"],
                register: function(e) {
                    w.listen(e, this.events)
                },
                unregister: function(e) {
                    w.unlisten(e, this.events)
                },
                POINTER_TYPES: ["", "unavailable", "touch", "pen", "mouse"],
                prepareEvent: function(e) {
                    var t = e;
                    return re && (t = w.cloneEvent(e),
                    t.pointerType = this.POINTER_TYPES[e.pointerType]),
                    t
                },
                cleanup: function(e) {
                    ie.delete(e)
                },
                MSPointerDown: function(e) {
                    ie.set(e.pointerId, e);
                    var t = this.prepareEvent(e);
                    w.down(t)
                },
                MSPointerMove: function(e) {
                    var t = this.prepareEvent(e);
                    w.move(t)
                },
                MSPointerUp: function(e) {
                    var t = this.prepareEvent(e);
                    w.up(t),
                    this.cleanup(e.pointerId)
                },
                MSPointerOut: function(e) {
                    var t = this.prepareEvent(e);
                    w.leaveOut(t)
                },
                MSPointerOver: function(e) {
                    var t = this.prepareEvent(e);
                    w.enterOver(t)
                },
                MSPointerCancel: function(e) {
                    var t = this.prepareEvent(e);
                    w.cancel(t),
                    this.cleanup(e.pointerId)
                },
                MSLostPointerCapture: function(e) {
                    var t = w.makeEvent("lostpointercapture", e);
                    w.dispatchEvent(t)
                },
                MSGotPointerCapture: function(e) {
                    var t = w.makeEvent("gotpointercapture", e);
                    w.dispatchEvent(t)
                }
            }, ae = oe, se = t.navigator;
            se.msPointerEnabled ? (ee = function(e) {
                h(e),
                this.msSetPointerCapture(e)
            }
            ,
            te = function(e) {
                h(e),
                this.msReleasePointerCapture(e)
            }
            ) : (ee = function(e) {
                h(e),
                w.setCapture(e, this)
            }
            ,
            te = function(e) {
                h(e),
                w.releaseCapture(e, this)
            }
            ),
            l(),
            u(),
            d();
            var ce = {
                dispatcher: w,
                Installer: k,
                PointerEvent: m,
                PointerMap: E,
                targetFinding: H
            };
            return ce
        })
    }(de, e, J),
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return de
    });
    var Wt = e.jQuery
      , qt = e.$;
    return de.noConflict = function(t) {
        return e.$ === de && (e.$ = qt),
        t && e.jQuery === de && (e.jQuery = Wt),
        de
    }
    ,
    t || (e.jQuery = e.$ = de),
    de
}),
define("app/socket", ["socket.io", "jquery"], function(e) {
    var t = []
      , n = e("server.opka.io:2095")
      , i = function(e) {
        n ? e(n) : t.push(e)
    };
    return i
}),
function(e) {
    var t, n = {}, i = [];
    n.init = function(e) {
        t = e,
        t.on("ntp:server_sync", r),
        o()
    }
    ;
    var r = function(e) {
        var t = Date.now() - e.t1 - (Date.now() - e.t0) / 2
          , n = Date.now() - e.t0;
        i.unshift([n, t]),
        i.length > 20 && i.pop()
    };
    n.offset = function() {
        var e = 0
          , t = i.slice(0);
        if (t.sort(a),
        t.length > 4)
            for (var n = 0; n < i.length - 3; n++)
                t.pop();
        for (var n = 0; n < t.length; n++)
            e += t[n][1];
        return e /= t.length
    }
    ,
    n.serverTime = function() {
        return Math.round(Date.now() - n.offset())
    }
    ;
    var o = function() {
        t.emit("ntp:client_sync", {
            t0: Date.now()
        }),
        i.length < 19 ? setTimeout(function() {
            o()
        }, 1e3) : setTimeout(function() {
            o()
        }, 5e3)
    }
      , a = function(e, t) {
        return e[0] === t[0] ? 0 : e[0] < t[0] ? -1 : 1
    };
    "function" == typeof define && define.amd ? define("ntp", [], function() {
        return n
    }) : e.ntp = n
}(window);
var numHist = 10
  , numOutliers = 0
  , outliersToReset = 3
  , globalThreshold = 1e4
  , changeThreshold = 50
  , getRealLatency = function(e, t, n) {
    if (isNaN(e) || Math.abs(e) > globalThreshold)
        return n;
    if (null == n)
        return t.push(e),
        e;
    if (Math.abs(n - e) > changeThreshold) {
        if (!(++t.numOutliers >= outliersToReset))
            return n;
        t.splice(0, t.length),
        numOutliers = 0
    } else
        t.numOutliers = 0;
    t.push(e),
    t.length > numHist && t.splice(0, 1);
    for (var i = 0, r = 0; r < t.length; r++)
        i += t[r];
    return i / t.length
};
define("app/lag", ["ntp", "app/socket"], function(e, t) {
    var n = {
        c2s: null,
        s2c: null,
        buffer: 0
    };
    return t(function(t) {
        e.init(t),
        c2sReal = 0,
        s2cReal = 0;
        var i = []
          , r = [];
        i.numOutliers = 0,
        r.numOutliers = 0;
        var o = null;
        setInterval(function() {
            o = e.serverTime(),
            t.emit("plink", o)
        }, 1e3),
        t.on("pong", function(a) {
            var s = e.serverTime()
              , c = a - o
              , l = s - a;
            c2sReal = getRealLatency(c, i, c2sReal),
            s2cReal = getRealLatency(l, r, s2cReal),
            n.c2s = c2sReal + n.buffer,
            n.s2c = s2cReal + n.buffer,
            t.emit("pang", s)
        })
    }),
    n
}),
define("app/resources", ["three", "game/scene"], function(e, t) {
    function n() {
        var e = 1024
          , t = document.createElement("canvas");
        t.width = e,
        t.height = e;
        var n = t.getContext("2d");
        n.rect(0, 0, e, e);
        var i = n.createRadialGradient(e / 2, e / 2, e / 8 * 3, e / 2, e / 2, e / 2);
        return i.addColorStop(0, "#FFFFFF"),
        i.addColorStop(1, "transparent"),
        n.fillStyle = i,
        n.fill(),
        t
    }
    function i() {
        var e = 512
          , t = document.createElement("canvas");
        t.width = e,
        t.height = e;
        var n = t.getContext("2d");
        n.rect(0, 0, e, e);
        var i = n.createRadialGradient(e / 2, e / 2, 0, e / 2, e / 2, e / 2);
        return i.addColorStop(0, "#dddddd"),
        i.addColorStop(1, "transparent"),
        n.fillStyle = i,
        n.fill(),
        t
    }
    var r = {};
    r.palette = [1184274, 14540253, 3421236],
    r.basePlayerColors = 6,
    r.colorModifiers = 4;
    var o = new e.Texture(i())
      , a = new e.Texture(n());
    r.arenaBackgroundMaterial = new e.MeshBasicMaterial({
        alphaMap: a,
        transparent: !0,
        color: r.palette[0]
    }),
    o.needsUpdate = !0,
    a.needsUpdate = !0,
    r.playerColors = [3173595, 14362416, 14671400, 11034065, 1479426, 15686927, 6805231, 15886440, 16772801, 14065862, 3656736, 16549705, 21746, 8984343, 13017403, 8003935, 3762995, 12542511, 8759010, 8542296, 8151579, 8759010, 8893056, 10828288],
    r.fireball = -2,
    r.chill = -3,
    r.clone = -4,
    r.startTime = -1,
    r.cloneIconMaterial = new e.MeshBasicMaterial({
        transparent: !0,
        color: 3061536,
        blending: e.AdditiveBlending
    }),
    r.cloneIconMaterial.opacity = .4,
    r.circleGeometry = new e.CircleGeometry(1,256),
    r.boxGeometry = new e.BoxGeometry(1,1,1);
    var s = !0
      , c = !0
      , l = {}
      , u = {}
      , h = {}
      , d = {}
      , p = {};
    r.setPlayer = function(t, n, i) {
        p[t] = n;
        var a = i
          , s = .4;
        isNaN(a) && (s = 0,
        a = r.playerColors[n.attributes.color]);
        var c = new e.MeshBasicMaterial({
            transparent: !0,
            color: a,
            blending: e.AdditiveBlending
        });
        c.opacity = s,
        h[t] = c;
        var f = new e.MeshBasicMaterial({
            color: a
        });
        l[t] = f;
        var m = new e.MeshBasicMaterial({
            alphaMap: o,
            transparent: !0,
            color: a,
            blending: e.AdditiveBlending
        });
        m.opacity = .4,
        u[t] = m;
        var g = new e.MeshBasicMaterial({
            transparent: !0,
            color: a,
            blending: e.AdditiveBlending
        });
        g.opacity = 1,
        d[t] = g
    }
    ,
    r.setPlayer(-1, null, 14540253),
    r.setPlayer(-2, null, r.playerColors[1]),
    r.setPlayer(-3, null, r.playerColors[0]),
    r.setPlayer(-4, null, r.playerColors[3]),
    r.getPlayer = function(e) {
        return p[e]
    }
    ,
    r.getPlayerMaterial = function(e) {
        return l[e]
    }
    ,
    r.getGlowMaterial = function(e) {
        return u[e]
    }
    ,
    r.getIconMaterial = function(e) {
        return h[e]
    }
    ,
    r.getHealthMaterial = function(e) {
        return d[e]
    }
    ,
    r.glowEnabled = function(e) {
        return null != e && (s = e),
        s
    }
    ,
    r.particlesEnabled = function(e) {
        return null != e && (c = e),
        c
    }
    ;
    var f = 0;
    r.loadInAmount = function(e) {
        return isNaN(e) || (f = Math.min(1, e),
        f = Math.max(0, f)),
        f
    }
    ;
    var m = 0;
    r.unloadAmount = function(e) {
        return isNaN(e) || (m = Math.min(1, e),
        m = Math.max(0, m)),
        m
    }
    ,
    r.playerSlotAngle = 2 * Math.PI / 10,
    r.backgroundMaterial = new e.MeshBasicMaterial({
        color: r.palette[0]
    }),
    r.material = new e.MeshBasicMaterial({
        color: r.palette[1]
    }),
    r.material3 = new e.MeshBasicMaterial({
        color: r.palette[1],
        transparent: !0
    }),
    r.material3.opacity = .5,
    r.material2 = new e.MeshBasicMaterial({
        color: r.palette[2],
        transparent: !0
    }),
    r.material2.opacity = .5;
    var g;
    r.game_scene = function() {
        return g
    }
    ,
    r.new_scene = function() {
        g = new t;
        var n = new e.Mesh(r.circleGeometry,r.arenaBackgroundMaterial);
        n.position.z = -10,
        n.scale.set(500, 500, 1),
        g.threeContainer.add(n);
        for (var i = new e.Object3D, o = [], a = 0; a < 200; a++) {
            var s = new e.Mesh(r.circleGeometry,r.getPlayerMaterial(-1));
            s.scale.set(3, 3, 1),
            s.starAngle = Math.random() * Math.PI * 2,
            s.starDist = 30 * Math.random(),
            s.starSpeed = 2 * Math.random(),
            s.position.set(Math.cos(s.starAngle) * s.starDist, Math.sin(s.starAngle) * s.starDist, -11),
            i.add(s),
            o.push(s)
        }
        g.threeContainer.add(i),
        g.onLocalUpdate.add(function(e, t) {
            i.rotation.z -= t / 100;
            for (var n = 0; n < o.length; n++) {
                var r = o[n];
                0 != m && r.starDist * r.starDist < 400 && (r.starDist = 1e3),
                r.starDist += t * (1 + r.starSpeed),
                r.position.set(Math.cos(r.starAngle) * r.starDist * r.starDist, Math.sin(r.starAngle) * r.starDist * r.starDist, -11),
                r.starDist * r.starDist > 1200 && 0 == m && (r.starAngle = Math.random() * Math.PI * 2,
                r.starDist = 10 * Math.random(),
                r.starSpeed = 2 * Math.random())
            }
        })
    }
    ,
    r.new_scene();
    var v = []
      , E = null;
    r.getFont = function(e) {
        E ? e(E) : r.font_queue.push(e)
    }
    ;
    var y = new e.FontLoader;
    y.load("../assets/typeface2.json", function(e) {
        E = e;
        for (var t = 0; t < v.length; t++)
            console.log("pls", E),
            r.font_queue[t](E)
    }),
    r.shadow = {
        x: 10,
        y: 15
    };
    var b = null;
    return r.playerObjectID = function() {
        return b
    }
    ,
    r.setPlayerObjectID = function(e) {
        b = e
    }
    ,
    r
}),
define("app/objects/ability-icons", ["three", "app/resources"], function(e, t) {
    var n = []
      , i = new e.Shape
      , r = -.6
      , o = .6
      , a = .1
      , s = -.8
      , c = 1
      , l = .6
      , u = .8
      , h = 0
      , d = 1;
    i.moveTo(r, s),
    i.lineTo(o, s),
    i.lineTo(o, a),
    i.bezierCurveTo(l, u, h, d, 0, c),
    i.bezierCurveTo(-h, d, -l, u, r, a),
    i.lineTo(r, s);
    var p = new e.ShapeGeometry(i);
    n.push(function(t, n, i) {
        var r = new e.Mesh(p,t);
        i.push(r),
        r.scale.x = 1.2,
        r.scale.y = 1.2,
        r.rotation.z = -Math.PI / 4,
        n.add(r)
    });
    var f = new e.Shape
      , r = -.6
      , o = .6
      , m = -.8
      , g = .8
      , a = -.5
      , s = -.8
      , c = 1
      , l = .8
      , u = .8
      , h = 0
      , d = 1;
    f.moveTo(0, s),
    f.bezierCurveTo(0, s + .2, g, a + .1, g, a),
    f.bezierCurveTo(l, u, h, d, 0, c),
    f.bezierCurveTo(-h, d, -l, u, m, a),
    f.bezierCurveTo(m, a + .1, 0, s + .2, 0, s);
    var v = new e.ShapeGeometry(f);
    n.push(function(t, n, i) {
        var r = new e.Mesh(v,t);
        r.rotation.z = Math.PI,
        r.scale.set(1.2, 1.2, 1),
        r.position.y = .2,
        i.push(r),
        n.add(r)
    });
    var E = new e.CircleGeometry(1,256,0,Math.PI);
    n.push(function(t, n, i) {
        var r = new e.Mesh(E,t)
          , o = new e.Mesh(E,t);
        i.push(r, o),
        r.position.x = .25,
        o.position.x = -.25,
        o.rotation.z = Math.PI;
        var a = new e.Object3D;
        a.add(r),
        a.add(o),
        a.rotation.z = Math.PI / 3.6,
        n.add(a)
    });
    var y = new e.Geometry
      , b = new e.Vector3(-1,0,0)
      , T = new e.Vector3(1,0,0)
      , x = new e.Vector3(0,1,0);
    y.vertices.push(b),
    y.vertices.push(T),
    y.vertices.push(x),
    y.faces.push(new e.Face3(0,1,2));
    var R = new e.Shape
      , w = 6
      , H = .2;
    R.moveTo(0, 0);
    for (var M = 0, S = 0, _ = function(e, t) {
        M += e,
        S += t,
        R.lineTo(M, S)
    }, C = 0; C < w; C++) {
        var A = C / w * Math.PI * 2;
        _(1 * Math.cos(A) / 2, 1 * Math.sin(A) / 2),
        _(.4 * Math.cos(A - Math.PI / 4), .4 * Math.sin(A - Math.PI / 4)),
        _(.2 * Math.cos(A - Math.PI / 4 + Math.PI / 2), .2 * Math.sin(A - Math.PI / 4 + Math.PI / 2)),
        _(.2 * Math.cos(A - Math.PI / 4 + Math.PI), .2 * Math.sin(A - Math.PI / 4 + Math.PI)),
        _(1 * Math.cos(A) / 3, 1 * Math.sin(A) / 3),
        _(Math.cos(A + Math.PI / 2) * H, Math.sin(A + Math.PI / 2) * H),
        _(1 * -Math.cos(A) / 3, 1 * -Math.sin(A) / 3),
        _(.2 * Math.cos(A + Math.PI / 4), .2 * Math.sin(A + Math.PI / 4)),
        _(.2 * Math.cos(A + Math.PI / 4 + Math.PI / 2), .2 * Math.sin(A + Math.PI / 4 + Math.PI / 2)),
        _(.4 * Math.cos(A + Math.PI / 4 + Math.PI), .4 * Math.sin(A + Math.PI / 4 + Math.PI)),
        C == w - 1 ? R.lineTo(0, 0) : _(1 * -Math.cos(A) / 2, 1 * -Math.sin(A) / 2)
    }
    var P = new e.ShapeGeometry(R);
    n.push(function(t, n, i) {
        var r = new e.Mesh(P,t);
        i.push(r);
        var o = (new e.Box3).setFromObject(r);
        r.position.x = -(o.max.x + o.min.x) / 2,
        r.position.y = -(o.max.y + o.min.y) / 2,
        n.add(r)
    });
    var L = new e.Shape;
    L.moveTo(-1, 0),
    L.bezierCurveTo(-1.05, .3, -.5, .8, -.5, .7),
    L.bezierCurveTo(-.5, .3, 0, 0, -.2, .1),
    L.bezierCurveTo(-.5, 1, .1, 1.3, .1, 1.3),
    L.bezierCurveTo(0, .8, 1.08, .7, 1, 0),
    L.lineTo(-1, 0);
    var k = new e.ShapeGeometry(L);
    n.push(function(t, n, i) {
        var r = new e.Mesh(E,t)
          , o = new e.Mesh(k,t);
        i.push(r, o),
        r.rotation.z = Math.PI,
        r.scale.y = .8,
        r.position.y = -.2,
        r.scale.x = .8,
        o.scale.x = .8,
        o.position.y = -.2,
        n.add(o),
        n.add(r)
    });
    var D = []
      , I = function(e, t) {
        isNaN(t) && (t = 1);
        var n = 0 * t
          , i = t * -1
          , r = .2 * t
          , o = t * -.8
          , a = .8 * t
          , s = t * -.7
          , c = 1 * t
          , l = 0 * t
          , u = 0 * t
          , h = .8 * t
          , d = 1.2 * t
          , p = .5 * t
          , f = .8 * t
          , m = 1.4 * t;
        e.moveTo(n, i),
        e.bezierCurveTo(r, o, a, s, c, l),
        e.bezierCurveTo(d, p, f, m, u, h),
        e.bezierCurveTo(-f, m, -d, p, -c, l),
        e.bezierCurveTo(-a, s, -r, o, n, i)
    }
      , O = new e.Shape;
    I(O, 2);
    var B = new e.Path;
    I(B, 1.8),
    O.holes = [B];
    new e.ShapeGeometry(O);
    D.push(function(n, i, r) {
        for (var o = 0; o < 3; o++) {
            var a = new e.Mesh(t.circleGeometry,n);
            r.push(a),
            a.position.x = 1.8 * Math.cos(o / 3 * Math.PI * 2 - Math.PI / 2),
            a.position.y = 1.8 * Math.sin(o / 3 * Math.PI * 2 - Math.PI / 2),
            a.scale.set(.3, .3, 1),
            i.add(a)
        }
    });
    var F = new e.Geometry
      , b = new e.Vector3(0,0,0)
      , T = new e.Vector3(1,0,0)
      , x = new e.Vector3(0,1,0);
    F.vertices.push(b),
    F.vertices.push(T),
    F.vertices.push(x),
    F.faces.push(new e.Face3(0,1,2)),
    D.push(function(n, i, r) {
        var o = new e.Mesh(t.boxGeometry,n)
          , a = new e.Mesh(F,n)
          , s = new e.Mesh(y,n)
          , c = new e.Mesh(F,n);
        r.push(o, a, s, c);
        var l = new e.Object3D;
        o.scale.y = .3,
        o.position.y = -.15,
        a.scale.y = 1 / 3,
        a.scale.x = 1 / 3,
        a.position.x = -.5,
        c.scale.y = 1 / 3,
        c.scale.x = 1 / 3,
        c.position.x = .5,
        c.rotation.z = Math.PI / 2,
        s.scale.y = 1 / 3,
        s.scale.x = 1 / 3 / 2,
        l.add(o),
        l.add(a),
        l.add(c),
        l.add(s),
        l.position.x = -1.3,
        l.position.y = 1.3,
        l.rotation.z = Math.PI / 3.6,
        l.scale.x = 2,
        l.scale.y = 1.4,
        i.add(l)
    }),
    D.push(function(t, n, i) {
        var r = new e.Mesh(y,t)
          , o = new e.Mesh(y,t);
        i.push(r, o),
        r.scale.y = .5,
        r.scale.x = 1.5,
        r.position.x = -1.8,
        r.rotation.z = Math.PI / 2,
        o.scale.y = .5,
        o.scale.x = 1.5,
        o.position.x = 1.8,
        o.rotation.z = -Math.PI / 2,
        n.add(r),
        n.add(o)
    });
    var N = new e.RingGeometry(1,1.1,40,2);
    D.push(function(n, i, r) {
        var o = new e.Mesh(N,n);
        r.push(o),
        o.scale.x = 2,
        o.scale.y = 2;
        var a = new e.Object3D;
        a.add(o);
        for (var s = 0; s < 4; s++) {
            var c = new e.Mesh(t.boxGeometry,n);
            r.push(c),
            c.scale.x = .3,
            c.scale.y = .2;
            var l = 2 * Math.PI / 4 * s;
            c.position.x = 2.35 * Math.cos(l),
            c.position.y = 2.35 * Math.sin(l),
            c.rotation.z = l,
            a.add(c)
        }
        a.scale.x = .85,
        a.scale.y = .85,
        i.add(a)
    });
    var U = new e.RingGeometry(.8,1.1,20,2);
    D.push(function(t, n, i) {
        var r = new e.Mesh(U,t)
          , o = new e.Mesh(U,t);
        i.push(r, o),
        r.scale.x = .3,
        r.scale.y = 1.5,
        r.position.x = -1.8,
        o.scale.x = .3,
        o.scale.y = 1.5,
        o.position.x = 1.8,
        n.add(r),
        n.add(o)
    });
    var z = function(t, i, r) {
        var o = new e.Object3D
          , a = [];
        return o.passiveContainer = new e.Object3D,
        n[t](r, o, a),
        D[i](r, o.passiveContainer, a),
        o.changeMaterial = function(e) {
            for (var t = 0; t < a.length; t++)
                a[t].material = e
        }
        ,
        o.add(o.passiveContainer),
        o
    };
    return z
}),
define("app/objects/goalpost", ["three", "app/resources"], function(e, t) {
    var n = new e.CircleGeometry(20,10,Math.PI / 2,Math.PI / 2)
      , i = function(i, r) {
        var o = new e.Object3D
          , a = new e.Mesh(n,r);
        a.position.x = 350 * Math.cos(-t.playerSlotAngle / 2) - 350,
        a.position.y = 350 * Math.sin(-t.playerSlotAngle / 2),
        a.rotation.z = -t.playerSlotAngle / 2,
        o.position.z = 5,
        o.rotation.z = i + t.playerSlotAngle / 2,
        o.position.x = 350 * Math.cos(i + t.playerSlotAngle / 2),
        o.position.y = 350 * Math.sin(i + t.playerSlotAngle / 2),
        o.add(a);
        var s = new e.Mesh(n,r);
        return s.position.x = 350 * Math.cos(t.playerSlotAngle / 2) - 350,
        s.position.y = 350 * Math.sin(t.playerSlotAngle / 2),
        s.rotation.z = t.playerSlotAngle / 2 + Math.PI / 2,
        o.add(s),
        o.unloadAmount = function(e) {
            o.visible = !0,
            1 == e && (o.visible = !1),
            o.position.x = Math.cos(i + t.playerSlotAngle / 2) * (350 + e * e * 1e3),
            o.position.y = Math.sin(i + t.playerSlotAngle / 2) * (350 + e * e * 1e3)
        }
        ,
        o.loadInAmount = function(e) {
            o.scale.y = 1 - (e - 1) * (e - 1),
            o.scale.x = e * e
        }
        ,
        o.changeMaterial = function(e) {
            a.material = e,
            s.material = e
        }
        ,
        o
    };
    return i
}),
define("app/objects/medal", ["three", "app/resources"], function(e, t) {
    var n = [new e.MeshBasicMaterial({
        color: 13612293
    }), new e.MeshBasicMaterial({
        color: 12165026
    }), new e.MeshBasicMaterial({
        color: 8071434
    })]
      , i = new e.MeshBasicMaterial({
        transparent: !0,
        color: 5526612,
        blending: e.AdditiveBlending
    });
    i.opacity = .4;
    var r = new e.RingGeometry(.9,1,40,2)
      , o = new e.Shape
      , a = .4
      , s = .8;
    o.moveTo(s, 0);
    for (var c = 5, l = function(e, t) {
        o.lineTo(e, t)
    }, u = 0; u < c; u++) {
        var h = (u + 1) / c * Math.PI * 2
          , d = h - 1 / c * Math.PI;
        l(Math.cos(d) * a, Math.sin(d) * a),
        l(Math.cos(h) * s, Math.sin(h) * s)
    }
    var p = new e.ShapeGeometry(o)
      , f = function(o) {
        var a = new e.Mesh(t.circleGeometry,n[o - 1])
          , s = new e.Mesh(p,i)
          , c = new e.Mesh(r,i);
        return a.add(s),
        a.add(c),
        a
    };
    return f
}),
define("app/objects/player", ["three", "game/object", "app/resources", "app/lag", "app/objects/ability-icons", "app/objects/goalpost", "app/objects/medal"], function(e, t, n, i, r, o, a) {
    var s = 2 * Math.PI / 10
      , c = function(i, c) {
        var l = (i.attributes.color,
        new t);
        l.renderPrediction = !1,
        l.updatePrediction = !1,
        l.autoPositionThree = !1,
        l.shakeAmount = 0,
        l.attributes = i.attributes,
        n.setPlayer(i.attributes.playerID, l),
        n.game_scene().add(l, i.id, "game");
        var u = Math.PI / 30
          , h = 15
          , d = new e.RingGeometry(c.borderRadius,c.borderRadius + h,10,2,-u / 2,u)
          , p = new e.Mesh(d,n.material2);
        p.position.x = n.shadow.x,
        p.position.y = n.shadow.y,
        p.position.z = 1;
        var f = new e.Mesh(d,n.getPlayerMaterial(i.attributes.playerID));
        f.position.z = 2;
        var m = [];
        l.threeContainer.add(f);
        for (var g = 8, v = 0, E = 0; E < g; E++) {
            var y = new e.Mesh(n.circleGeometry,n.getIconMaterial(i.attributes.playerID));
            if (y.visible = !1,
            E < l.attributes.lives) {
                y.visible = !0;
                var b = l.attributes.playerID * n.playerSlotAngle + n.playerSlotAngle / 6 + 2 * n.playerSlotAngle / 3 * (9 - l.attributes.lives) / 16 + 2 * n.playerSlotAngle / 3 * E / 8;
                y.position.x = 385 * Math.cos(b),
                y.position.y = 385 * Math.sin(b),
                y.scale.x = 5,
                y.scale.y = 5
            }
            m.push(y),
            l.threeContainer.add(y)
        }
        var T = o(i.attributes.playerID * n.playerSlotAngle, n.getPlayerMaterial(i.attributes.playerID))
          , x = new t;
        x.threeContainer.add(T),
        n.game_scene().add(x, -1, "game"),
        x.onRender.add(function(e) {
            var t = Math.max(0, Math.min(1, (n.loadInAmount() - .7) / .3));
            t = 1 - (t - 1) * (t - 1),
            T.loadInAmount(t),
            T.unloadAmount(n.unloadAmount());
            var r = n.loadInAmount()
              , o = n.unloadAmount()
              , a = r * r * r * r - o * o * o * o;
            n.getIconMaterial(i.attributes.playerID).opacity = .4 * a
        });
        var R = new t
          , w = i.attributes.playerID * s + s / 2
          , H = r(i.attributes.ability, i.attributes.passive, n.getIconMaterial(i.attributes.playerID));
        H.scale.x = 20,
        H.scale.y = 20,
        H.remove(H.passiveContainer);
        var M = H.passiveContainer.clone(!0)
          , S = (new e.Box3).setFromObject(H);
        H.position.x = 300 * Math.cos(w),
        H.position.y = 300 * Math.sin(w),
        H.position.z = -3,
        H.rotation.z = w + Math.PI / 2,
        R.threeContainer.add(H),
        n.game_scene().add(R, -1, "game"),
        H.passiveContainer.position.z = -1,
        H.passiveContainer.position.x = 300 * Math.cos(w),
        H.passiveContainer.position.y = 300 * Math.sin(w),
        H.passiveContainer.scale.x = 20,
        H.passiveContainer.scale.y = 20,
        H.passiveContainer.rotation.z = w + Math.PI / 2,
        R.threeContainer.add(H.passiveContainer);
        var _ = H.clone(!0);
        _.visible = !1,
        _.position.z = -1,
        _.add(M),
        R.threeContainer.add(_);
        var C = []
          , A = null
          , P = new e.CircleGeometry(c.borderRadius,64,-s / 2,s)
          , L = new e.Mesh(P,n.backgroundMaterial);
        L.rotation.z = w,
        L.position.z = -2,
        R.threeContainer.add(L);
        var k = new e.Object3D;
        if (i.attributes.medals) {
            var D = i.attributes.medals.length;
            k.medalWidth = 10 * D + 10;
            for (var E = 0; E < D; E++) {
                var I = a(i.attributes.medals[E]);
                I.scale.x = 10,
                I.scale.y = 10,
                I.position.x = 10 * E + 10,
                I.position.z = E / 20,
                k.add(I)
            }
        }
        if (n.game_scene().threeContainer.add(k),
        n.getFont(function(t) {
            var r = 20
              , o = 20
              , a = new e.TextGeometry(l.attributes.name || "opka",{
                font: t,
                size: o,
                height: r,
                curveSegments: 4,
                bevelEnabled: !1,
                material: 0
            });
            a.computeBoundingBox(),
            A = new e.Mesh(a,n.getHealthMaterial(l.attributes.playerID)),
            A.material.opacity = Math.min(1, i.attributes.lives / 5),
            n.game_scene().threeContainer.add(A)
        }),
        n.shadowsEnabled) {
            l.threeContainer.add(p);
            var O = o(i.attributes.playerID * n.playerSlotAngle, n.material2)
              , B = new t;
            O.position.z = 1,
            B.threeContainer.add(O),
            B.position.x = n.shadow.x,
            B.position.y = n.shadow.y,
            n.game_scene().add(B, -1, "game")
        }
        var F, N;
        l.onRender.add(function(e) {
            var t = e.position.x;
            if (4 == l.attributes.passive) {
                for (; t > 1; )
                    t -= 2;
                for (; t < -1; )
                    t += 2
            }
            var i = e.attributes.playerID * s + t * (s - Math.PI / 30) / 2 + s / 2;
            e.attributes.dead && (i = e.attributes.playerID * s + s / 2);
            var r = Math.random() * Math.PI * 2
              , o = Math.cos(r) * l.shakeAmount
              , a = Math.sin(r) * l.shakeAmount;
            if (f.rotation.z = i,
            f.position.x = o,
            f.position.y = a,
            p.rotation.z = i,
            p.position.x = o,
            p.position.y = a,
            F && (F.position.x = o,
            F.position.y = a,
            F.rotation.z = i),
            N && (N.position.x = o,
            N.position.y = a,
            N.rotation.z = e.attributes.playerID * s + s / 2),
            f.scale.y = 1,
            p.scale.y = 1,
            F && (F.scale.y = 1),
            !e.attributes.dead && 2 == l.attributes.passive) {
                var c = .9
                  , u = 2.7;
                t > c && (F && (F.rotation.z -= Math.PI / 30 * u / 2,
                F.scale.y = u),
                f.rotation.z -= Math.PI / 30 * u / 2,
                f.scale.y = u,
                p.rotation.z -= Math.PI / 30 * u / 2,
                p.scale.y = u),
                t < -c && (F && (F.rotation.z += Math.PI / 30 * u / 2,
                F.scale.y = u),
                f.rotation.z += Math.PI / 30 * u / 2,
                f.scale.y = u,
                p.rotation.z += Math.PI / 30 * u / 2,
                p.scale.y = u)
            }
            f.scale.x = 1 + 5 * n.unloadAmount(),
            p.scale.x = 1 + 5 * n.unloadAmount();
            var h = Math.max(0, Math.min(1, (n.loadInAmount() - .7) / .3));
            h *= h,
            f.scale.y *= h * h * h * h + 5 * n.unloadAmount(),
            p.scale.y *= h + 5 * n.unloadAmount(),
            F && (F.scale.x = 1 + 5 * n.unloadAmount(),
            F.scale.y *= n.loadInAmount() + 5 * n.unloadAmount()),
            N && (N.scale.x = 1 + 5 * n.unloadAmount(),
            N.scale.y *= n.loadInAmount() + 5 * n.unloadAmount());
            for (var d = e.attributes.playerID - n.game_scene().objectIdHash[n.playerObjectID()].attributes.playerID; d < 0; )
                d += 10;
            var m = -Math.PI / 2 + d * s;
            if (A) {
                var g = n.unloadAmount() * n.unloadAmount() * n.unloadAmount() * n.unloadAmount()
                  , v = 1 - (n.loadInAmount() - 1) * (n.loadInAmount() - 1) * (n.loadInAmount() - 1) * (n.loadInAmount() - 1);
                A.position.x = Math.cos(m) * (360 + 50 * v + 1e3 * g),
                A.position.y = Math.sin(m) * (360 + 50 * v + 1e3 * g),
                k.position.x = A.position.x,
                A.scale.y = v,
                0 == d || 5 == d ? (A.position.x -= (A.geometry.boundingBox.max.x - A.geometry.boundingBox.min.x) / 2,
                k.position.x -= k.medalWidth / 2) : d > 5 && (A.position.x -= A.geometry.boundingBox.max.x - A.geometry.boundingBox.min.x,
                k.position.x -= k.medalWidth);
                var E = A.geometry.boundingBox.max.y - A.geometry.boundingBox.min.y;
                A.position.y -= E / 2,
                k.position.y = A.position.y + E / 2 + 25,
                (d >= 0 && d <= 2 || 8 == d || 9 == d) && (k.position.y = A.position.y - 20)
            }
        }),
        l.onLocalUpdate.add(function(e, t, i) {
            v -= 14 * t,
            v = Math.max(0, v);
            for (var r = Math.random() * Math.PI * 2, o = Math.cos(r) * v, a = Math.sin(r) * v, s = 0; s < m.length; s++)
                m[s].visible = !1;
            for (var s = 0; s < e.attributes.lives; s++) {
                var c = m[s];
                c.visible = !0;
                var l = e.attributes.playerID * n.playerSlotAngle + n.playerSlotAngle / 6 + 2 * n.playerSlotAngle / 3 * (9 - e.attributes.lives) / 16 + 2 * n.playerSlotAngle / 3 * s / 8;
                c.position.x = 385 * Math.cos(l) + o,
                c.position.y = 385 * Math.sin(l) + a
            }
        }),
        l.onUpdateAttrib.add(function(t, i, r, o) {
            if ("charges" == i) {
                for (; r > C.length; ) {
                    var a = new e.Mesh(n.circleGeometry,n.getIconMaterial(t.attributes.playerID));
                    a.scale.set(5, 5, 1),
                    R.threeContainer.add(a),
                    C.push(a)
                }
                if (r < C.length) {
                    for (l = r; l < C.length; l++)
                        R.threeContainer.remove(C[l]);
                    C.splice(r, C.length - r)
                }
                for (var l = 0; l < C.length; l++) {
                    var d = C[l]
                      , m = t.attributes.playerID * n.playerSlotAngle + n.playerSlotAngle / 2
                      , g = m + Math.PI + (l / 12 - (C.length - 1) / 12 / 2) * Math.PI * 2;
                    d.position.x = 55 * Math.cos(g) + 290 * Math.cos(m),
                    d.position.y = 55 * Math.sin(g) + 290 * Math.sin(m)
                }
            }
            if ("charge" == i)
                if (t.attributes.dead) {
                    var E = (300 - S.max.y) / 350;
                    L.scale.x = E,
                    L.scale.y = E,
                    _.visible = !1
                } else {
                    var E = ((1 - r) * (S.max.y - S.min.y) + 300 - S.max.y) / 350;
                    L.scale.x = E,
                    L.scale.y = E,
                    1 == r ? _.visible = !0 : _.visible = !1
                }
            "lives" == i && (A.material.opacity = Math.min(1, t.attributes.lives / 5),
            v = 7 + 2 * (o - r - 1));
            var y = new e.RingGeometry(c.borderRadius - 5,c.borderRadius + h + 5,10,2,-u / 2 - Math.PI / 80 / 2,u + Math.PI / 80)
              , b = function(n) {
                r ? (F || (F = new e.Mesh(y,n),
                F.position.z = 3,
                F.rotation.z = t.attributes.playerID * s + s / 2),
                t.threeContainer.add(F)) : t.threeContainer.remove(F)
            };
            if ("clone" == i && b(n.getIconMaterial(n.clone)),
            "fireball" == i && b(n.getIconMaterial(n.fireball)),
            "chill" == i && b(n.getIconMaterial(n.chill)),
            "shield" == i)
                if (r) {
                    var T = new e.RingGeometry(c.borderRadius,c.borderRadius + h / 2,10,2,-s / 2,s);
                    N || (N = new e.Mesh(T,n.getPlayerMaterial(t.attributes.playerID)),
                    N.position.z = 2,
                    N.rotation.z = t.attributes.playerID * s + s / 2),
                    t.threeContainer.add(N),
                    N || (N = new e.Mesh(T,n.material2),
                    N.position.x = n.shadow.x,
                    N.position.y = n.shadow.y,
                    N.position.z = 1,
                    N.rotation.z = t.attributes.playerID * s + s / 2),
                    n.shadowsEnabled && t.threeContainer.add(N)
                } else
                    t.threeContainer.remove(F),
                    t.threeContainer.remove(N),
                    n.shadowsEnabled && t.threeContainer.add(p);
            if ("dead" == i && r) {
                F && t.threeContainer.remove(F),
                N && t.threeContainer.remove(N),
                t.threeContainer.remove(f),
                t.threeContainer.remove(p);
                var T = new e.RingGeometry(c.borderRadius,c.borderRadius + h,10,2,-s / 2,s);
                f = new e.Mesh(T,n.getPlayerMaterial(t.attributes.playerID)),
                f.position.z = 2,
                f.rotation.z = t.attributes.playerID * s + s / 2,
                t.threeContainer.add(f),
                p = new e.Mesh(T,n.material2),
                p.position.x = n.shadow.x,
                p.position.y = n.shadow.y,
                p.position.z = 1,
                p.rotation.z = t.attributes.playerID * s + s / 2,
                n.shadowsEnabled && t.threeContainer.add(p)
            }
        })
    };
    return c
}),
define("app/objects/particle", ["three", "app/resources", "game/object"], function(e, t, n) {
    var i = function(e, t) {
        var i = new n
          , r = (t.spawnRange || 2 * Math.PI,
        t.spawnStart || 0,
        t.spawnRate || .1)
          , o = t.length || 1
          , a = 0
          , s = Date.now() / 1e3;
        i.onLocalUpdate.add(function(e, t, n) {
            n - s > a && (a += o / r)
        })
    };
    return i
});
var EasingFunctions = {
    linear: function(e) {
        return e
    },
    easeInQuad: function(e) {
        return e * e
    },
    easeOutQuad: function(e) {
        return e * (2 - e)
    },
    easeInOutQuad: function(e) {
        return e < .5 ? 2 * e * e : -1 + (4 - 2 * e) * e
    },
    easeInCubic: function(e) {
        return e * e * e
    },
    easeOutCubic: function(e) {
        return --e * e * e + 1
    },
    easeInOutCubic: function(e) {
        return e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1
    },
    easeInQuart: function(e) {
        return e * e * e * e
    },
    easeOutQuart: function(e) {
        return 1 - --e * e * e * e
    },
    easeInOutQuart: function(e) {
        return e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e
    },
    easeInQuint: function(e) {
        return e * e * e * e * e
    },
    easeOutQuint: function(e) {
        return 1 + --e * e * e * e * e
    },
    easeInOutQuint: function(e) {
        return e < .5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e
    }
};
define("app/objects/particleSpawner", ["three", "app/resources", "game/object", "app/objects/particle"], function(e, t, n, i) {
    var r = function(i, r) {
        r || (r = {});
        var o = new n
          , a = r.spawnRange || 2 * Math.PI
          , s = r.spawnStart || 0
          , c = r.spawnRate || .1
          , l = r.spawnNum || 1
          , u = r.length || 1
          , h = r.material || t.getPlayerMaterial(-1)
          , d = r.particleLife || .3
          , p = r.particleLifeRandom || 0
          , f = r.particleDist || 20
          , m = r.particleDistRandom || 0
          , g = r.particleEase || "linear"
          , v = r.particleStartSize || 10
          , E = r.particleEndSize || 10;
        o.counter = 0;
        var y = Date.now() / 1e3;
        return o.onLocalUpdate.add(function(r, b, T) {
            if (T - y > o.counter) {
                o.counter += c;
                for (var x = 0; x < l; x++) {
                    var R = function() {
                        var o = new n
                          , c = Math.random() * a + s
                          , l = T
                          , u = f + Math.random() * m
                          , y = d + Math.random() * p
                          , b = {
                            x: r.position.x,
                            y: r.position.y
                        }
                          , x = {
                            x: Math.cos(c) * u,
                            y: Math.sin(c) * u
                        }
                          , R = 10 * Math.random();
                        o.onLocalUpdate.add(function(e, t, n) {
                            var r = EasingFunctions[g](Math.min((n - l) / y, 1));
                            e.position.x = b.x + r * x.x,
                            e.position.y = b.y + r * x.y;
                            var o = v + (E - v) * r;
                            e.threeContainer.rotation.z = n * R,
                            e.threeContainer.scale.set(o, o, 1),
                            1 == r && i.remove(e)
                        }),
                        o.onLocalUpdate.dispatch(o, 0, l),
                        o.threeContainer.add(new e.Mesh(t.circleGeometry,h)),
                        o.position.z = 3,
                        i.add(o, -1, "game")
                    };
                    R()
                }
            }
            o.counter >= u && i.remove(r)
        }),
        i.add(o, -1, "game"),
        o
    };
    return r
}),
define("app/objects/ball", ["three", "game/object", "app/objects/particleSpawner", "ntp", "app/resources", "sat", "app/lag"], function(e, t, n, i, r, o, a) {
    var s = {}
      , c = {}
      , l = function(e, t) {
        for (var n = e.path[0], i = 0; i < e.path.length && !(e.path[i].startTime > t); i++)
            n = e.path[i];
        var r = (t - n.startTime) / 1e3 / n.t
          , o = n.previous.x
          , a = n.previous.y
          , s = n.x
          , c = n.y;
        return {
            x: o + (s - o) * r,
            y: a + (c - a) * r
        }
    };
    return c.killAllBalls = function() {
        for (var e in s)
            c.removeBall(e, !0)
    }
    ,
    c.transform = function(e, t) {
        var i = s[e];
        if (i.attributes.state = t,
        i.glowMesh.visible = !0,
        i.abilityGlowMesh.visible = !1,
        i.abilityParticle && r.game_scene().remove(i.abilityParticle),
        i.abilityParticle = null,
        1 == t) {
            i.abilityGlowMesh.visible = !0,
            i.abilityGlowMesh.material = r.getGlowMaterial(r.fireball);
            var o = 2
              , a = .1;
            r.particlesEnabled() || (o = 1,
            a = .3);
            var c = n(r.game_scene(), {
                material: r.getPlayerMaterial(r.fireball),
                particleStartSize: 8,
                particleEndSize: .001,
                particleLifeRandom: 2,
                particleLife: .1,
                particleDist: 4,
                particleDistRandom: 30,
                length: 1e3,
                spawnNum: o,
                spawnRate: a,
                particleEase: "easeOutCubic"
            });
            i.abilityParticle = c,
            i.glowMesh.visible = !1
        }
        if (2 == t) {
            i.glowMesh.visible = !1,
            i.abilityGlowMesh.visible = !0,
            i.abilityGlowMesh.material = r.getGlowMaterial(r.chill);
            var o = 6
              , a = .1;
            r.particlesEnabled() || (o = 1,
            a = .1);
            var c = n(r.game_scene(), {
                material: r.getPlayerMaterial(r.chill),
                particleStartSize: 3,
                particleEndSize: .001,
                particleLifeRandom: .9,
                particleLife: .1,
                particleDist: 4,
                particleDistRandom: 80,
                length: 1e3,
                spawnNum: o,
                spawnRate: a,
                particleEase: "easeOutCubic"
            });
            i.abilityParticle = c
        }
    }
    ,
    c.generator = function(n) {
        var o = new t;
        r.game_scene().add(o, -1, "game"),
        o.renderPrediction = !1,
        s[n.id] = o;
        var c = new e.Mesh(r.circleGeometry,r.material);
        c.position.z = 3,
        c.scale.set(n.attributes.radius, n.attributes.radius, n.attributes.radius);
        var u = new e.Mesh(r.circleGeometry,r.material2);
        u.position.x = r.shadow.x,
        u.position.y = r.shadow.y,
        u.position.z = 1,
        u.scale.set(n.attributes.radius, n.attributes.radius, n.attributes.radius),
        o.threeContainer.add(c);
        var h = new e.Mesh(r.circleGeometry,r.getGlowMaterial(-1));
        h.position.z = 0,
        h.scale.set(3 * n.attributes.radius, 3 * n.attributes.radius, 3 * n.attributes.radius),
        o.glowMesh = h;
        var d = new e.Mesh(r.circleGeometry,r.getGlowMaterial(-1));
        d.position.z = 1,
        d.scale.set(4 * n.attributes.radius, 4 * n.attributes.radius, 3 * n.attributes.radius),
        o.abilityGlowMesh = d,
        o.abilityGlowMesh.visible = !1,
        r.glowEnabled() && o.threeContainer.add(h),
        o.threeContainer.add(d),
        r.shadowsEnabled && o.threeContainer.add(u),
        o.ballMesh = c,
        o.threeContainer.visible = !1,
        o.onRender.add(function(e) {
            if (!e.playerBouncePrediction && e.attributes.hasOwnProperty("nextBounce")) {
                var t = e.attributes.nextBounce
                  , n = i.serverTime()
                  , r = n - a.s2c;
                if (e.threeContainer.scale.set(1, 1, 1),
                t.endsWithPlayerSlot) {
                    var o = n + a.c2s
                      , s = (o - t.path[0].startTime) / t.totalTime / 1e3;
                    r = r * (1 - s) + o * s
                }
                var c = l(t, r);
                if (e.threeContainer.position.x = c.x,
                e.threeContainer.position.y = c.y,
                e.postPlayerBouncePrediction) {
                    var u = e.threeContainer.position.x
                      , h = e.threeContainer.position.y
                      , d = (r - t.path[0].startTime) / t.path[0].t / 1e3;
                    d = Math.min(1, d),
                    d *= d,
                    e.threeContainer.position.x = u * d + e.position.x * (1 - d),
                    e.threeContainer.position.y = h * d + e.position.y * (1 - d)
                }
                e.abilityParticle && (e.abilityParticle.position.x = e.threeContainer.position.x,
                e.abilityParticle.position.y = e.threeContainer.position.y)
            }
        })
    }
    ,
    c.bounce = function(e, t) {
        var i = s[e];
        if (i.threeContainer.visible = !0,
        i.playerBouncePrediction ? i.postPlayerBouncePrediction = !0 : (i.position.x = t.path[0].previous.x,
        i.position.y = t.path[0].previous.y,
        i.velocity.set(0, 0, 0),
        i.postPlayerBouncePrediction = !1),
        i.ballMesh.material = r.getPlayerMaterial(-1),
        i.glowMesh.material = r.getGlowMaterial(-1),
        t.lastPlayerHit >= 0 && (i.ballMesh.material = r.getPlayerMaterial(t.lastPlayerHit),
        i.glowMesh.material = r.getGlowMaterial(t.lastPlayerHit)),
        r.particlesEnabled()) {
            var a = n(r.game_scene(), {
                material: i.ballMesh.material,
                particleStartSize: 8,
                particleEndSize: .001,
                particleLifeRandom: 1,
                particleLife: .5,
                particleDist: 10,
                particleDistRandom: 60,
                length: .1,
                spawnNum: 10,
                spawnRange: Math.PI / 1.3,
                spawnStart: new o.Vector(i.position.x,i.position.y).getAngle() + Math.PI - Math.PI / 2.6,
                particleEase: "easeOutCubic"
            });
            a.position.x = i.position.x,
            a.position.y = i.position.y;
            var c = r.getPlayerMaterial(-1);
            i.attributes.nextBounce && i.attributes.nextBounce.lastPlayerHit >= 0 && (c = r.getPlayerMaterial(i.attributes.nextBounce.lastPlayerHit));
            var a = n(r.game_scene(), {
                material: c,
                particleStartSize: 8,
                particleEndSize: .001,
                particleLifeRandom: 1,
                particleLife: .5,
                particleDist: 10,
                particleDistRandom: 60,
                length: .1,
                spawnNum: 6,
                spawnRange: Math.PI / 1.3,
                spawnStart: new o.Vector(i.position.x,i.position.y).getAngle() + Math.PI - Math.PI / 2.6,
                particleEase: "easeOutCubic"
            });
            a.position.x = i.position.x,
            a.position.y = i.position.y
        }
        i.attributes.nextBounce = t,
        i.playerBouncePrediction = !1;
        var l = t.path[t.path.length - 1];
        if (!l.goalPost) {
            var u = 2 * Math.PI / 10;
            Math.floor(l.angle / u)
        }
    }
    ,
    c.removeBall = function(e, t) {
        s[e].abilityParticle && (s[e].abilityParticle.counter = 1e7),
        r.game_scene().remove(s[e]);
        var i = s[e].attributes.nextBounce;
        delete s[e];
        var a = r.getPlayerMaterial(-1);
        if (i.lastPlayerHit >= 0 && (a = r.getPlayerMaterial(i.lastPlayerHit)),
        r.particlesEnabled())
            if (t)
                ;
            else {
                var c = i.path[i.path.length - 1]
                  , l = n(r.game_scene(), {
                    material: a,
                    particleStartSize: 10,
                    particleEndSize: .001,
                    particleLife: .2,
                    particleLifeRandom: 3,
                    particleDist: 60,
                    particleDistRandom: 40,
                    length: .1,
                    spawnNum: 10,
                    spawnRange: Math.PI / 3,
                    spawnStart: new o.Vector(c.x - c.previous.x,c.y - c.previous.y).getAngle() - Math.PI / 6,
                    particleEase: "easeOutCubic"
                });
                l.position.x = c.x,
                l.position.y = c.y
            }
    }
    ,
    c
}),
define("app/l18n", [], function() {
    var e = {};
    return e.highQuality = ["High Quality", "Calidad Alta"],
    e.mediumQuality = ["Medium Quality", "Calidad Media"],
    e.lowQuality = ["Low Quality", "Calidad Baja"],
    e.tips1 = ["Your paddle follows your mouse!", "¡Tu pala sigue a tu ratón!"],
    e.tips2 = ["Click to use your active! ", "¡Clica para usar tu activa!"],
    e.tips3 = ["Last three survivors get a medal!", "¡Los tres últimos supervivientes consiguen una medalla!"],
    e.nickname = ["Nickname", "Nickname"],
    e.play = ["Play", "Jugar"],
    e.changeActive = ["Change Active", "Cambiar Activa"],
    e.changePassive = ["Change Passive", "Cambiar Pasiva"],
    e.changeColor = ["Change Color", "Cambiar Color"],
    e.changeShade = ["Change Shade", "Cambiar Tono"],
    e.shield = ["Shield", "Escudo"],
    e.shieldDesc = ["Reflects all balls temporarily.", "Refleja todas las bolas temporalmente."],
    e.clone = ["Clone", "Clon"],
    e.cloneDesc = ["For a short time reflected balls split into two.", "Durante un tiempo corto las bolas reflejadas se dividen en dos."],
    e.chill = ["Chill", "Relax"],
    e.chillDesc = ["For a short time reflected balls move slower.", "Durante un tiempo corto las bolas reflejadas se mueven más lentas."],
    e.fireball = ["Fireball", "Bola de Fuego"],
    e.fireballDesc = ["For a short time reflected balls take an extra life.", "Durante un tiempo corto las bolas reflejadas quitan una vida extra."],
    e.cannon = ["Cannon", "Cañón"],
    e.cannonDesc = ["Fires a ball.", "Dispara una bola."],
    e.extraLives = ["Extra Lives", "Vidas Extra"],
    e.extraLivesDesc = ["Start with extra lives.", "Empieza con vidas extra."],
    e.survivor = ["Survivor", "Superviviente"],
    e.survivorDesc = ["Your active recharge rate increases when an opponent loses.", "La velocidad de recarga de tu activa aumenta cuando un rival pierde."],
    e.extender = ["Extender", "Extensor"],
    e.extenderDesc = ["Touching one of your walls extends your paddle.", "Tocar una de tus paredes extiende tu pala."],
    e.sniper = ["Sniper", "Sniper"],
    e.sniperDesc = ["Scoring increases your paddle speed. Resets if you are scored upon.", "Marcar aumenta la velocidad de tu pala. Se resetea si te marcan."],
    e.portal = ["Portal", "Portal"],
    e.portalDesc = ["Your walls are portals.", "Tus paredes son portales."],
    e.preNumberSurvive = ["You survived ", "Has sobrevivido "],
    e.postNumberSurvive = [" seconds.", " segundos."],
    e.restart = ["Click anywhere to restart.", "Clica en cualquier parte para reiniciar."],
    e.privacy = ["privacy", "privacidad"],
    e.terms = ["terms", "términos"],
    e.contact = ["contact", "contacto"],
    function(t) {
        var n = 0
          , i = navigator.languages ? navigator.languages[0] : navigator.language || navigator.userLanguage;
        return "es" != i && "es-419" != i || (n = 1),
        e.hasOwnProperty(t) ? e[t][n] : (console.log("unknown string " + t),
        "")
    }
}),
define("app/objects/scoreboard", ["three", "app/l18n", "app/resources", "game/object", "app/objects/particleSpawner", "app/objects/medal"], function(e, t, n, i, r, o) {
    var a, s = !1, c = [], l = {}, u = !1, h = 0, d = function() {
        h = 0,
        a = null,
        s = !1,
        c = [],
        l = {},
        u = !1
    }, p = function(t, i, r, o, a) {
        var s = new e.TextGeometry(t,{
            font: font,
            size: 20,
            height: 0,
            curveSegments: 10,
            bevelEnabled: !1,
            material: 0
        });
        s.computeBoundingBox();
        var c = s.boundingBox.max.x - s.boundingBox.min.x
          , u = -.5 * c
          , h = new e.Mesh(s,i);
        h.position.x = u,
        h.position.z = 0,
        h.position.y = s.boundingBox.max.y * r + o,
        n.game_scene().threeContainer.add(h),
        a && (l[a] = {
            x: -c / 2 - 20,
            y: h.position.y + s.boundingBox.max.y / 2
        })
    }, f = function(e) {
        if (s = !0,
        e <= 3) {
            var d = new i;
            a = d;
            var f = o(e);
            f.scale.set(0, 0, 1),
            d.threeContainer.add(f),
            n.game_scene().add(d, -1, "medal");
            var m = !1
              , g = 0
              , v = !1;
            n.game_scene().onLocalUpdate.add(function(t, i) {
                if (s) {
                    if (f.position.z = 10,
                    h >= 2)
                        f.position.x += (l[e].x - f.position.x) / 10,
                        f.position.y += (l[e].y - f.position.y) / 10,
                        f.scale.x += (20 - f.scale.x) / 10,
                        f.scale.y += (20 - f.scale.y) / 10;
                    else {
                        var o = Math.min(h, 1)
                          , a = Math.min(1, o * o * o * o * o * o * o * o * o);
                        f.scale.set(300 * a, 300 * a, 1);
                        var c = Math.random() * Math.PI * 2;
                        f.position.x = Math.cos(c) * g,
                        f.position.y = Math.sin(c) * g,
                        g = Math.max(0, g - 40 * i)
                    }
                    if (f.rotation.z = f.scale.x / 70,
                    1 == a && !m) {
                        g = 20,
                        m = !0;
                        r(n.game_scene(), {
                            material: f.material,
                            particleStartSize: 20,
                            particleEndSize: .001,
                            particleLifeRandom: 1,
                            particleLife: .5,
                            particleDist: 380,
                            particleDistRandom: 130,
                            length: .1,
                            spawnNum: 60,
                            particleEase: "easeOutCubic"
                        })
                    }
                }
            })
        } else
            h = 0;
        if (n.game_scene().onLocalUpdate.add(function(t, r) {
            if (s && (h += r,
            !v && u)) {
                v = !0;
                for (var a = 1; a <= 3; a++)
                    if (e != a) {
                        var c = new i
                          , d = o(a);
                        d.scale.set(15, 15, 1),
                        d.position.x = l[a].x,
                        d.position.y = l[a].y,
                        c.threeContainer.add(d),
                        n.game_scene().add(c, -1, "medal")
                    }
            }
        }),
        e > 3) {
            var E = t("preNumberSurvive") + Math.floor(Date.now() / 1e3 - n.startTime) + t("postNumberSurvive");
            p(E, n.material3, 0, 0),
            p(t("restart"), n.material3, -1, -20)
        } else
            p(t("restart"), n.material3, 0, 0);
        for (var y = 0; y < c.length; y++)
            p(c[y].t, c[y].m, c[y].bb, c[y].y, c[y].p)
    }, m = function(e, i) {
        var r = n.getPlayer(e).attributes.name || "opka"
          , o = Date.now() / 1e3 - n.startTime;
        if (e == n.game_scene().objectIdHash[n.playerObjectID()].attributes.playerID && (r = "You",
        ga("set", "metric1", o),
        ga("set", "dimension4", i),
        ga("send", "event", "game", "completion")),
        i <= 3) {
            var a = " survived " + Math.floor(o) + " seconds.";
            1 == i && (u = !0,
            a = " survived until the end!");
            var l = r + a;
            "You" == r && 1 != i && (l = t("preNumberSurvive") + Math.floor(o) + t("postNumberSurvive"));
            var h = {
                t: l,
                m: n.getPlayerMaterial(e),
                bb: 4 - i,
                y: 20 * (4 - i),
                p: i
            };
            s ? p(h.t, h.m, h.bb, h.y, h.p) : c.push(h)
        }
    }, g = function() {
        return h > 2
    };
    return {
        generate: f,
        playerKilled: m,
        reset: d,
        ready: g
    }
}),
define("app/stats", [], function() {
    return function(e, t, n, i, r, o, a) {
        e.GoogleAnalyticsObject = r,
        e[r] = e[r] || function() {
            (e[r].q = e[r].q || []).push(arguments)
        }
        ,
        e[r].l = 1 * new Date,
        o = t.createElement(n),
        a = t.getElementsByTagName(n)[0],
        o.async = 1,
        o.src = i,
        a.parentNode.insertBefore(o, a)
    }(window, document, "script", "https://www.google-analytics.com/analytics.js", "ga"),
    ga("create", "UA-83000404-1", "auto"),
    ga("send", "pageview"),
    ga
}),
define("app/preview", ["three", "app/l18n", "app/resources", "app/objects/goalpost", "app/objects/ability-icons", "app/stats", "jquery"], function(e, t, n, i, r, o) {
    function a(e) {
        $("#tips").animate({
            opacity: 0
        }, 2e3, "linear", function() {
            ++u >= l.length && (u = 0),
            $(this).text(l[u])
        }).animate({
            opacity: 1
        }, 2e3, "linear").delay(300).queue(a),
        e()
    }
    function s(e, t) {
        return e = e.toString(),
        e.length < t ? s("0" + e, t) : e
    }
    var c = {
        ability: 1,
        passive: 0,
        color: Math.floor(Math.random() * n.basePlayerColors),
        shade: 0
    };
    c.getColor = function() {
        return c.color + c.shade * n.basePlayerColors
    }
    ;
    var l = [t("tips1"), t("tips2"), t("tips3")]
      , u = 0;
    $("#tips").text(l[u]),
    $("#abilityButton").text(t("changeActive")),
    $("#passiveButton").text(t("changePassive")),
    $("#colorButton").text(t("changeColor")),
    $("#colorModButton").text(t("changeShade")),
    $("#joinButton").text(t("play")),
    $("#name-input").attr("placeholder", t("nickname")),
    $("#privacy-link").text(t("privacy")),
    $("#terms-link").text(t("terms")),
    $("#contact-link").text(t("contact")),
    a(function() {}),
    o("set", "dimension1", c.ability),
    o("set", "dimension2", c.passive),
    o("set", "dimension3", c.getColor()),
    $("#logo")[0].style.setProperty("color", "#" + n.playerColors[c.getColor()].toString(16), "important");
    for (var h = ["cannon", "shield", "clone", "chill", "fireball"], d = [], p = [], f = 0; f < h.length; f++)
        d.push(t(h[f])),
        p.push(t(h[f] + "Desc"));
    for (var m = ["extraLives", "survivor", "extender", "sniper", "portal"], g = [], v = [], f = 0; f < m.length; f++)
        g.push(t(m[f])),
        v.push(t(m[f] + "Desc"));
    $("#paddle-preview-canvas").height($("#left-column").height());
    var E = new e.WebGLRenderer({
        canvas: $("#paddle-preview-canvas").get(0),
        alpha: !0,
        antialias: !0
    })
      , y = $("#paddlePreview").width() / $("#previewColumn").height()
      , b = 440 / y
      , T = new e.OrthographicCamera(-220,220,b / 2,b / -2,1,1e3);
    T.position.z = 200;
    var x = Math.PI / 20
      , R = 20
      , w = new e.RingGeometry(350,350 + R,20,2,-x / 2,+x)
      , H = new e.MeshBasicMaterial({
        color: n.playerColors[c.getColor()]
    })
      , M = new e.Mesh(w,n.material2)
      , S = new e.Mesh(w,H);
    M.position.x = n.shadow.x,
    S.position.y = 300,
    M.position.y = 300 - n.shadow.y,
    S.rotation.z = 3 * Math.PI / 2,
    M.rotation.z = 3 * Math.PI / 2,
    M.position.z = 1,
    S.position.z = 2;
    var _ = new e.Scene
      , C = i(3 * Math.PI / 2 - n.playerSlotAngle / 2, H);
    C.position.y += 300;
    var A = i(3 * Math.PI / 2 - n.playerSlotAngle / 2, n.material2);
    A.position.x += n.shadow.x,
    A.position.y += 300 - n.shadow.y,
    A.position.z = 1,
    n.shadowsEnabled && _.add(A);
    var P = r(c.ability, c.passive, H);
    P.scale.x = 60,
    P.scale.y = 60,
    P.position.y = -10,
    _.add(P),
    n.shadowsEnabled && _.add(M);
    var L = new e.DirectionalLight(16777215,1);
    L.position.set(0, 1e3, 0),
    _.add(L),
    E.render(_, T),
    E.setSize(1, 1),
    E.render(_, T),
    y = $("#paddlePreview").width() / $("#previewColumn").height(),
    b = 440 / y,
    T = new e.OrthographicCamera(-220,220,b / 2,b / -2,1,1e3),
    T.position.z = 200,
    E.setSize($("#paddlePreview").width(), $("#previewColumn").height()),
    E.render(_, T);
    var k = !0;
    $("#qualityButton").click(function() {
        k = !k,
        n.glowEnabled(k),
        n.particlesEnabled(k),
        k ? $(this).text(t("highQuality")) : $(this).text(t("lowQuality"))
    }).removeClass("disabled"),
    $("#qualityButton").text(t("highQuality")),
    $("#abilityButton").click(function() {
        ++c.ability >= d.length && (c.ability = 0),
        $("#abilityName").text(d[c.ability]),
        $("#abilityDesc").text(p[c.ability]),
        _.remove(P),
        P = r(c.ability, c.passive, H),
        P.scale.x = 60,
        P.scale.y = 60,
        P.position.y = -10,
        _.add(P),
        E.render(_, T),
        o("set", "dimension1", c.ability)
    }).removeClass("disabled"),
    $("#abilityName").text(d[c.ability]),
    $("#abilityDesc").text(p[c.ability]),
    $("#passiveButton").click(function() {
        ++c.passive >= g.length && (c.passive = 0),
        $("#passiveName").text(g[c.passive]),
        $("#passiveDesc").text(v[c.passive]),
        _.remove(P),
        P = r(c.ability, c.passive, H),
        P.scale.x = 60,
        P.scale.y = 60,
        P.position.y = -10,
        _.add(P),
        E.render(_, T),
        o("set", "dimension2", c.passive)
    }).removeClass("disabled"),
    $("#passiveName").text(g[c.passive]),
    $("#passiveDesc").text(v[c.passive]);
    var D = function() {
        H.color.setHex(n.playerColors[c.getColor()]),
        E.render(_, T),
        o("set", "dimension3", c.getColor()),
        $("#logo")[0].style.setProperty("color", "#" + s(n.playerColors[c.getColor()].toString(16), 6), "important"),
        $("#logo").css("color", n.playerColors[c.getColor()])
    };
    $("#colorButton").click(function() {
        ++c.color >= n.basePlayerColors && (c.color = 0),
        c.shade = 0,
        D()
    }).removeClass("disabled"),
    $("#colorModButton").click(function() {
        ++c.shade >= n.colorModifiers && (c.shade = 0),
        D()
    }).removeClass("disabled");
    var I = function() {
        E.setSize(1, 1),
        E.render(_, T),
        y = $("#paddlePreview").width() / $("#previewColumn").height(),
        b = 440 / y,
        T = new e.OrthographicCamera(-220,220,b / 2,b / -2,1,1e3),
        T.position.z = 200,
        E.setSize($("#paddlePreview").width(), $("#previewColumn").height()),
        E.render(_, T)
    };
    return $(window).resize(I),
    I(),
    c.render = function() {
        E.render(_, T)
    }
    ,
    c.render(),
    c
}),
define("app/objects/countdown", ["three", "game/object", "app/objects/particleSpawner", "app/resources", "app/preview"], function(e, t, n, i, r) {
    for (var o = [], a = 0, s = !0, c = !0, l = {}, u = .8, h = 0, d = [], p = 0; p < i.basePlayerColors; p++)
        d.push(new e.MeshBasicMaterial({
            color: i.playerColors[p]
        }));
    return l.spawnBalls = function() {
        s = !1,
        c = !1;
        for (var n = 0; n < 10; n++) {
            var r = new e.Mesh(i.circleGeometry,i.getPlayerMaterial(0));
            r.scale.x = 15,
            r.scale.y = 15,
            r.position.z = 10;
            var a = new t;
            a.mesh = r,
            a.circleDistance = 0,
            a.changeCounter = 0,
            a.threeContainer.add(r),
            i.game_scene().add(a, -1, "game"),
            o.push(a)
        }
    }
    ,
    l.startGame = function() {
        s = !0
    }
    ,
    l.update = function(e) {
        if (s) {
            if (!c) {
                h += e;
                var t = 1 - Math.min(1, i.loadInAmount() / .35);
                t *= t;
                var n = Math.max(0, Math.min(1, (i.loadInAmount() - .35) / .35));
                n = 1 - (n - 1) * (n - 1);
                for (var r = 1 - Math.max(0, Math.min(1, (i.loadInAmount() - .7) / .3)), l = 0; l < 10; l++)
                    n > 0 ? o[l].mesh.material = i.getPlayerMaterial(l) : o[l].changeCounter < h + u * (1 + l / 10) && (o[l].changeCounter += u,
                    o[l].mesh.material = d[Math.floor(Math.random() * (d.length - 1))]),
                    o[l].mesh.position.x = Math.cos((a + 2 * Math.PI / 10 * l + i.playerSlotAngle * (i.game_scene().objectIdHash[i.playerObjectID()].attributes.playerID + .5) - Math.PI / 2) * t + (l * i.playerSlotAngle + i.playerSlotAngle / 2) * (1 - t)) * (o[l].circleDistance * t + 50) + 300 * Math.cos(l * i.playerSlotAngle + i.playerSlotAngle / 2) * n,
                    o[l].mesh.position.y = Math.sin((a + 2 * Math.PI / 10 * l + i.playerSlotAngle * (i.game_scene().objectIdHash[i.playerObjectID()].attributes.playerID + .5) - Math.PI / 2) * t + (l * i.playerSlotAngle + i.playerSlotAngle / 2) * (1 - t)) * (o[l].circleDistance * t + 50) + 300 * Math.sin(l * i.playerSlotAngle + i.playerSlotAngle / 2) * n,
                    o[l].mesh.scale.x = 15 * r,
                    o[l].mesh.scale.y = 15 * r;
                if (0 == r) {
                    for (var l = 0; l < 10; l++)
                        i.game_scene().remove(o[l]);
                    o = [],
                    c = !0
                }
            }
        } else {
            h += e,
            a += e / 2;
            for (var l = 0; l < 10; l++)
                o[l].changeCounter < h + u * (1 + l / 10) && (o[l].changeCounter += u,
                o[l].mesh.material = d[Math.floor(Math.random() * (d.length - 1))]),
                o[l].circleDistance = Math.min(o[l].circleDistance + 200 * e, 100),
                o[l].mesh.position.x = Math.cos(a + 2 * Math.PI / 10 * l) * o[l].circleDistance,
                o[l].mesh.position.y = Math.sin(a + 2 * Math.PI / 10 * l) * o[l].circleDistance
        }
    }
    ,
    l
}),
define("app/ima", ["jquery"], function() {
    var e = -1
      , t = function(t) {
        function n(e) {
            console.log(e.getError()),
            adsManager.destroy()
        }
        function i(e) {
            adsManager = e.getAdsManager(o),
            adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, n),
            adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, t),
            adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, function() {
                $("#adContainer").hide()
            });
            try {
                adsManager.init(window.innerWidth, window.innerHeight, google.ima.ViewMode.FULLSCREEN),
                adsManager.start()
            } catch (e) {}
            window.addEventListener("resize", function() {
                adsManager.resize(window.innerWidth, window.innerHeight, google.ima.ViewMode.FULLSCREEN)
            }, !1)
        }
        function r() {
            var n = Date.now() / 1e3;
            n - e >= 90 ? (e = n,
            $("#adContainer").show(),
            l.requestAds(u)) : t()
        }
        if (e = Date.now() / 1e3,
        $("#adContainer").hide(),
        "undefined" != typeof google) {
            var o = document.getElementById("contentElement")
              , a = new google.ima.AdDisplayContainer(document.getElementById("adContainer"))
              , s = !1
              , c = function() {
                s || (a.initialize(),
                s = !0)
            }
              , l = new google.ima.AdsLoader(a);
            l.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, i, !1),
            l.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, n, !1);
            var u = new google.ima.AdsRequest;
            return u.adTagUrl = "http://googleads.g.doubleclick.net/pagead/ads?ad_type=skippablevideo_text_image&client=ca-games-pub-4574420348590736&description_url=http%3A%2F%2Fopka.io%2F&videoad_start_delay=-1&hl=en",
            u.linearAdSlotWidth = window.innerWidth,
            u.linearAdSlotHeight = window.innerHeight,
            u.nonLinearAdSlotWidth = window.innerWidth,
            u.nonLinearAdSlotHeight = window.innerHeight,
            u.forceNonLinearFullSlot = !0,
            {
                request: r,
                init: c
            }
        }
        return {
            request: t,
            init: function() {}
        }
    };
    return t
}),
require(["three", "keyboard", "game/scene", "game/object", "sat", "app/socket", "ntp", "app/lag", "app/resources", "app/objects/player", "app/objects/ball", "app/objects/scoreboard", "app/objects/goalpost", "app/preview", "app/objects/countdown", "app/stats", "app/ima", "jquery"], function(e, t, n, i, r, o, a, s, c, l, u, h, d, p, f, m, g) {
    var v, E = new e.WebGLRenderer({
        antialias: !0
    });
    E.setClearColor(c.palette[0], 1),
    E.setSize(window.innerWidth, window.innerHeight),
    document.body.appendChild(E.domElement),
    E.domElement.setAttribute("id", "mainCanvas");
    var y = new e.Scene
      , b = new e.OrthographicCamera(-10,10,10,-10,1,1100);
    b.position.z = 200;
    var T = function(e, t) {
        E.setSize(e, t);
        var n = e / t
          , i = 1e3 * n
          , r = 1e3;
        t > e && (i = 1100,
        r = 1100 / n),
        b.left = i / -2,
        b.right = i / 2,
        b.top = r / 2,
        b.bottom = r / -2,
        b.updateProjectionMatrix()
    };
    T(window.innerWidth, window.innerHeight);
    var x = new e.DirectionalLight(16777215,1);
    x.position.set(0, 1e3, 0),
    y.add(x);
    var R = new e.AmbientLight(1048575,526368,1)
      , R = new e.HemisphereLight(1048575,526368,1);
    y.add(R);
    var w = new t;
    y.add(c.game_scene().threeContainer);
    var H = []
      , M = {}
      , S = new e.FontLoader;
    S.load("assets/typeface2.json", function(t) {
        font = t;
        for (var n = 0; n < 5; n++) {
            var i = new e.TextGeometry("" + (n + 1),{
                font: font,
                size: 70,
                height: 30,
                curveSegments: 10,
                bevelEnabled: !1,
                material: 0
            });
            i.computeBoundingBox();
            var r = -.5 * (i.boundingBox.max.x - i.boundingBox.min.x)
              , o = new e.Mesh(i,c.material);
            o.position.x = r,
            H.push(o)
        }
        var i = new e.TextGeometry("waiting for players...",{
            font: font,
            size: 30,
            height: 15,
            curveSegments: 10,
            bevelEnabled: !1,
            material: 0
        });
        i.computeBoundingBox();
        var r = -.5 * (i.boundingBox.max.x - i.boundingBox.min.x)
          , o = new e.Mesh(i,c.material);
        o.position.x = r,
        H.push(o),
        M = H[5]
    });
    var _ = []
      , C = !1;
    _ = C ? [{
        upKey: "right",
        downKey: "left"
    }, {
        upKey: "r",
        downKey: "x"
    }, {
        upKey: "s",
        downKey: "c"
    }, {
        upKey: "t",
        downKey: "v"
    }, {
        upKey: "d",
        downKey: "b"
    }, {
        upKey: "1",
        downKey: "q"
    }, {
        upKey: "2",
        downKey: "w"
    }, {
        upKey: "3",
        downKey: "f"
    }, {
        upKey: "4",
        downKey: "p"
    }, {
        upKey: "5",
        downKey: "g"
    }] : [{
        upKey: "right",
        downKey: "left"
    }, {
        upKey: "s",
        downKey: "x"
    }, {
        upKey: "d",
        downKey: "c"
    }, {
        upKey: "f",
        downKey: "v"
    }, {
        upKey: "g",
        downKey: "b"
    }, {
        upKey: "1",
        downKey: "q"
    }, {
        upKey: "2",
        downKey: "w"
    }, {
        upKey: "3",
        downKey: "e"
    }, {
        upKey: "4",
        downKey: "r"
    }, {
        upKey: "5",
        downKey: "t"
    }],
    o(function(e) {
        e.on("test", function(e) {
            console.log(e)
        }),
        e.on("spawn-ball", u.generator),
        e.on("bounce", u.bounce),
        e.on("ball-transform", u.transform),
        e.on("ball-scored", function(e, t) {}),
        e.on("remove-ball", u.removeBall),
        e.on("update", function(e) {
            for (var n = 0; n < e.new.length; n++) {
                var i = e.new[n];
                "player" == i.attributes.type && l(i, t)
            }
            c.game_scene().serverUpdate(e),
            c.playerObjectID() >= 0 && (c.game_scene().layers.game.rotation.z = -c.playerSlotAngle * (c.game_scene().objectIdHash[c.playerObjectID()].attributes.playerID + .5) - Math.PI / 2)
        });
        var t = {}
          , n = function() {
            v.init();
            var t = $("#name-input").val();
            t.length > 24 && (t = t.substring(0, 24)),
            e.emit("join-room", p.ability, p.passive, p.getColor(), t),
            $("#intro").fadeOut(1e3),
            r || (r = !0,
            f.spawnBalls()),
            $("#joinButton").addClass("disabled")
        };
        $("#joinButton").click(n);
        var i = function() {
            $("#joinButton").removeClass("disabled")
        };
        e.on("not-enough-players", function() {
            null != M && c.game_scene().threeContainer.remove(M),
            M = H[5],
            c.game_scene().threeContainer.add(M)
        }),
        e.on("user-joined", function() {});
        var r = !1;
        e.on("countdown", function(e) {});
        var o = !1;
        e.on("game-started", function() {
            null != M && c.game_scene().threeContainer.remove(M),
            o = !0,
            c.startTime = Date.now() / 1e3,
            f.startGame()
        });
        var a = 0
          , s = 1
          , d = !1
          , E = !1
          , b = function() {
            $("#intro").fadeIn(1e3, function() {
                c.loadInAmount(0),
                c.unloadAmount(0),
                c.new_scene(),
                y.add(c.game_scene().threeContainer),
                M = null,
                i()
            }),
            p.render()
        };
        v = g(b);
        var T = function() {
            m("set", "dimension1", p.ability),
            m("set", "dimension2", p.passive),
            m("set", "dimension3", p.getColor()),
            E = !1,
            o = !1,
            d = !1,
            r = !1,
            h.reset(),
            y.remove(c.game_scene().threeContainer),
            v.request()
        }
          , x = 0
          , R = !1;
        $("#mainCanvas").on("pointermove", function(e) {
            x = (e.pageX - $(this).width() / 2) / 70
        }).on("pointerdown", function(e) {
            x = (e.pageX - $(this).width() / 2) / 70
        }).click(function(t) {
            R = !0,
            h.ready() && (e.emit("leave-room"),
            T())
        }).attr("touch-action", "none"),
        e.on("end-game-stats", function(e) {
            E = {
                stats: e
            }
        }),
        e.on("added-user", function(n, i, l, u) {
            var p = !1;
            t = n,
            c.setPlayerObjectID(i);
            var m = 0;
            c.game_scene().onLocalUpdate.add(function(t, n, i) {
                E && (h.generate(E.stats),
                E = !1),
                d ? c.unloadAmount(c.unloadAmount() + n) : o ? (c.loadInAmount(c.loadInAmount() + n / 1.6),
                f.update(n)) : r && f.update(n);
                var u = w.pressed("left") || w.pressed("a");
                u && (x = -1.1,
                p = !0);
                var g = w.pressed("right") || w.pressed("s") || w.pressed("d");
                if (g && (x = 1.1,
                p = !0),
                u || g || !p || (x = c.game_scene().objectIdHash[c.playerObjectID()].position.x,
                p = !1),
                w.pressed("space") && (R = !0),
                R) {
                    var v = Date.now() / 1e3;
                    v - a > s && (a = v,
                    e.emit("ability", l)),
                    R = !1
                }
                if (h.ready() && w.pressed("escape") && (e.emit("leave-room"),
                T()),
                c.game_scene().objectIdHash.hasOwnProperty(c.playerObjectID())) {
                    c.game_scene().objectIdHash[c.playerObjectID()];
                    x != m && (m = x,
                    e.emit("input", l, x))
                }
            })
        }),
        e.on("player-killed", function(e, t) {
            h.playerKilled(e, t)
        }),
        e.on("game-ended", function(e) {
            h.playerKilled(e, 1),
            d = !0;
            for (var t = 0; t < 10; t++) {
                var n = c.getPlayer(t);
                n.attributes.dead = !0,
                n.attributes.lives = 0,
                n.onUpdateAttrib.dispatch(n, "dead", !0),
                n.onUpdateAttrib.dispatch(n, "lives", 0)
            }
            u.killAllBalls()
        })
    }),
    window.addEventListener("resize", function() {
        T(window.innerWidth, window.innerHeight)
    }, !1);
    var A = null;
    requestAnimationFrame(function e(t) {
        requestAnimationFrame(e),
        c.game_scene().render(s.c2s, s.s2c),
        E.render(y, b)
    }),
    setInterval(function() {
        var e = Date.now();
        A = A || e - 1e3 / 60;
        var t = Math.min(200, e - A);
        A = e;
        var n = t / 1e3
          , i = e / 1e3;
        c.game_scene().localUpdate(n, i)
    }, 1e3 / 30)
}),
define("../app/main", function() {});
